"use strict";const e=require("axios");module.exports=({filter:a,action:s},{services:t,exceptions:_,env:c,getSchema:i})=>{const{ItemsService:r}=t;function o(e,a,s,t){let _={};const c=new r("sd_error_log",{schema:s,accountability:t});_.collection_name=a,_.error=String(e),c.createOne(_)}a("items.update",(async(e,{collection:a})=>{switch(a){case"orders":break;case"order_pos":e.vendor_payment_utr&&"completed"!==e.po_status&&(e.po_status="processed")}return e})),s("items.create",(async({payload:a,key:s,collection:t},{schema:_,accountability:i})=>{let r="",n={action:"create"};switch(t){case"sd_teams":r=c.SD_NEW_TEAM_WEBHOOK;break;case"sd_assignee_details":r=c.SD_NEW_ASSIGNEE_WEBHOOK;break;case"sd_members":r=c.SD_NEW_MEMBER}r&&e.post(r,{key:s,payload:a,update_item:n},{headers:{Authorization:`Basic ${c.SD_TOKEN}`,"x-SD-Env":c.SD_DEPLOYMENT_ENV}}).catch((function(e){o(e,t,_,i)}))})),s("items.update",(async({payload:a,keys:s,collection:t},{schema:_,accountability:i})=>{let n="",E=[],d=[],l=[];const m=new r("sd_assignee_details",{schema:_,accountability:i});switch(new r("sd_teams",{schema:_,accountability:i}),new r("sd_members",{schema:_,accountability:i}),new r("sd_error_log",{schema:_,accountability:i}),t){case"order_pos":n=c.SD_PO_WEBHOOK;break;case"orders":n=c.SD_ORDER_WEBHOOK;break;case"sdm_approval_request":n=c.VEDANTA_ADVANCE_APPROVAL;break;case"approval_request":n=c.SD_APPROVAL_WEBHOOK;break;case"sd_orders":a.order_status&&(n=c.SD_ROUTING_ORDER_WEBHOOK);break;case"sd_payment_advise":a.payment_advice_file?n=c.SD_ROUTING_GET_PAYMENT_ADVISE:a.shakedeal_payment&&(n=c.SD_ROUTING_SHAKEDEAL_PAYMENT);break;case"sd_vendor_invoice_details":a.vendor_invoice?n=c.SD_ROUTING_GET_VENDOR_INVOICE:a.vendor_payment&&(n=c.SD_ROUTING_VENDORS_PAYMENT);break;case"sd_teams":a.team_name&&(n=c.SD_NEW_TEAM_WEBHOOK);break;case"sd_members":a.email&&(n=c.SD_NEW_MEMBER);break;case"sd_assignee_details":if(a.team_name||a.priority||a.user_id)n=c.SD_NEW_ASSIGNEE_WEBHOOK;else if(a.status)try{E=await m.readByQuery({filter:{id:{_eq:parseInt(s[0])}},fields:["team_name.id"]}),d=await m.readByQuery({filter:{team_name:{_eq:E[0].team_name.id}}}),l=d.filter((e=>!0===e.status)),l.length===d.length&&d.forEach((async e=>{await m.updateOne(e.id,{status:!1})}))}catch(e){o(e,t,_,i)}}n&&e.post(n,{keys:s,payload:a},{headers:{Authorization:`Basic ${c.SD_TOKEN}`,"X-SD-Env":c.SD_DEPLOYMENT_ENV}}).catch((function(e){o(e,t,_,i)}))})),s("items.delete",(async({payload:a,keys:s,collection:t},{schema:_,accountability:i})=>{let r="",n={action:"delete"};switch(t){case"sd_teams":r=c.SD_NEW_TEAM_WEBHOOK;break;case"sd_assignee_details":r=c.SD_NEW_ASSIGNEE_WEBHOOK;break;case"sd_members":r=c.SD_NEW_MEMBER}r&&e.post(r,{keys:s,payload:a,update_item:n},{headers:{Authorization:`Basic ${c.SD_TOKEN}`,"x-SD-Env":c.SD_DEPLOYMENT_ENV}}).catch((function(e){o(e,t,_,i)}))}))};
