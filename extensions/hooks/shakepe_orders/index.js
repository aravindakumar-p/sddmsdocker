"use strict";var e=require("process"),t=require("util"),n=require("stream"),a=require("path"),i=require("http"),o=require("https"),r=require("url"),s=require("fs"),l=require("assert"),c=require("tty"),d=require("net"),u=require("zlib"),p=require("events"),m=require("child_process"),h=require("worker_threads"),f=require("os"),y=require("crypto"),v=require("dns"),b=require("tls"),g=require("buffer"),_=require("string_decoder");function x(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var k=x(a),w=x(s),E={GIFT_CARD:"Gift Card",VOUCHERS:"Vouchers",LINKS:"Links",GPR:"General Purpose Reloadable Prepaid Cards",CREDIT:"Credit",SHAKEPEPOINT:"ShakePe Points",SHAKEPECODE:"ShakePe Codes",PREVIOUS:"Previous",APPROVEPENDIND:"Approve is pending",APPROVALPENDING:"Approval Pending",UPFRONT:"Upfront",CASHBACK:"Cashback",PENDING:"Pending",GENERIC:"Generic",CATALOGUE:"Catalogue",APPROVEDMANAGEMENT:"Approved by Management",ORDERPROCESSED:"Order Processed",ORDEROPEN:"Order Open",CORPORATE:"Corporate",OPEN:"Open",PIINCREASECHANGESCREDIT:"Increase Credit Days",PIDECREASECHANGESCREDIT:"Decrease Credit Days",PICREDIT:"Credit",PIINCREASEDISCOUNT:"Increase discount",GSTINMANDATORY:"GSTIN is Mandatory for Corporate",PAYEMENTPENDING:"Payment Pending",DUPLICATEPRODUCT:"Product Type should be Unique",PRIMARYCONTACT:"Primary Contact should be Only one for Each Address",VENDORQTYEXCEDDED:"Vendor Quantity Excedded",ONETIMECOMMERICAL:"One Time Commerical Amount should be greater than 0",FIELDSDATA:{CLIENT_UPDATE:["discount","client_id.client_name","client_id.id","client_id.client_email","client_id.pan_number","product","payment_terms","commerical","changes","client_product_mapping.discount","client_product_mapping.id","client_product_mapping.brand.*","client_product_mapping.status","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id","user_created.email","credit_days","credit_limt","approval_status","user_updated.email","user_updated.id","previous_credit","previous_discount","user_created.id","status","id","client_product_mapping","action"],CLIENT_CREATE:["discount","client_id.client_name","client_id.client_email","client_id.pan_number","client_id.status","client_id.id","client_id.product_type_mapping.approval_status","client_product_mapping.discount","client_product_mapping.id","client_product_mapping.brand","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id","product","payment_terms","commerical","changes","credit_limt","client_product_mapping.discount","client_product_mapping.id","user_created.email","user_created.id","approval_status","previous_credit","previous_discount","product.id","id"],CLIENT:["client_name","client_email","pan_number","status","product_type_mapping.*","product_type_mapping.client_product_mapping.*","product","wallet","credit_wallet","credit_used","id"],PROFOMA_INVOICE:["status","filtering_with_product_type","user_created.*","original_value","client.client_name","approval_status","total_value","total_value_cashback","commerical","discount","order_level_discount","add_or_reduce_discount","service_amount","service_fee","load_amount","payment","payment_terms","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping_voucher.*","catalog_links_orders.*","generic_links_details.*","shakepe_codes_orders.*","link_type"],PROFOMA_INVOICE_ORDER_CREATION:["*","brand_sku_mapping_voucher","catalog_links_orders","generic_links_details","shakepe_codes_orders","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping_voucher.*","shakepe_codes_orders.*","generic_links_details.*","catalog_links_orders.*"],PROFOMA_INVOICE_STATUS:["actual_credit_days","modified_credit_days","credit_days"],PROFOMA_INVOICE_EMAIL:["changes","order_level_discount","discount","total_value","original_value","total_value_cashback","cashback","previous_cashback","filtering_with_product_type","client.client_email","client.client_name","client.pan_number","id","actual_credit_days","modified_credit_days","credit_days","commerical","user_created.email","user_created.id","poc"],CLIENT_DELETE:["client_id.id","client_id.product_type_mapping.*"],CLIENT_BRAND_COMMERICAL:["id","discount","previous_discount","status"],SHAKEPE_ORDERS:["id","status","filtering_with_product_type","user_created.*","original_value","client.client_name","client.wallet","client.id","product_type.product_type.*","approval_status","total_value","total_value_cashback","commerical","discount","order_level_discount","add_or_reduce_discount","service_amount","service_fee","load_amount","payment","payment_terms","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping.*","brand_sku_mapping_voucher.*","catalog_links_orders.*","generic_links_details.*","shakepe_codes_orders.*","link_type"]},COMMERICAL:"commerical",DISCOUNT:"discount",BRANDDISCOUNT:"Brand Discount",PAYMENTTERMS:"payment terms",CREDITDAYS:"credit days",NEW:"New",INCREASE:"increase",DECREASE:"decrease",INACTIVE:"InActive",ADVANCE:"Advance",APPROVED:"Approved",ACTIVE:"Active",DECLINED:"Declined",PRODUCTS:["Gift Card","Vouchers"],BRANDALREADYEXIST:"Brand is already exist",STATUS:{DELIVERED:"Delivered",REJECTED:"Rejected"},shakepe_orders:{shakepe_codes:"ShakePe Codes",virtual:"Virtual"},ERROR:{INSUFFIENT:"Wallet having Insuffient Funds",SUFFIENT:"You have suffient balance to make advance .Change the payment terms to advance",NEGATIVE_VALUE:"It has negative value in Credit Limit",PRODUCT_TYPE:"CHECK THE PRODUCT TYPE IS MAPPED or Check the POC is linked with that Client",IS_NAN:"Please enter the vaild number or Number should be Integer"},logger:{log:"log",success:"success",error:"error"},collection_name:{santa_log:"santa_log"},BRANDS:["client_product_mapping.discount","client_product_mapping.id","client_product_mapping.status","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id"],client_point_of_contact:["client_id","wallet"],poc_fund_transfer:["client","sender_poc.*","receiver_poc.*","amount","status"]};const S=async(e,t,n,a,i)=>{try{const o={};o.error=String(e),await K(i,t,JSON.stringify(o),n,a)}catch(e){}},K=async(e,t,n,a,i)=>{const{ItemsService:o}=e,r=new o(t,{schema:a,accountability:null!=i?i:{admin:!0}});return await r.createOne(n)},R=async(e,t,n,a,i,o)=>{try{const{ItemsService:r}=n,s=new r(t,{schema:i,accountability:null!=o?o:{admin:!0}});await s.updateOne(a,e)}catch(a){S({error:a,payload:e,collection:t},"error_log_zeus",i,o,n)}},I=async(e,t,n,a,i,o)=>{try{const{ItemsService:r}=n,s=new r(t,{schema:i,accountability:null!=o?o:{admin:!0}});return await s.updateOne(a,e,{emitEvents:!1})}catch(a){S({error:a,payload:e,collection:t},"error_log_zeus",i,o,n)}},T=async(e,t,n,a,i,o)=>{try{const{ItemsService:r}=n,s=new r(t,{schema:i,accountability:null!=o?o:{admin:!0}});await s.updateMany(a,e)}catch(a){S({error:a,payload:e,collection:t},"error_log_zeus",i,o,n)}};var j="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function O(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function A(e,t){return function(){return e.apply(t,arguments)}}const{toString:C}=Object.prototype,{getPrototypeOf:P}=Object,N=(D=Object.create(null),e=>{const t=C.call(e);return D[t]||(D[t]=t.slice(8,-1).toLowerCase())});var D;const M=e=>(e=e.toLowerCase(),t=>N(t)===e),L=e=>t=>typeof t===e,{isArray:F}=Array,U=L("undefined");const q=M("ArrayBuffer");const J=L("string"),V=L("function"),G=L("number"),B=e=>null!==e&&"object"==typeof e,z=e=>{if("object"!==N(e))return!1;const t=P(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},Y=M("Date"),$=M("File"),W=M("Blob"),H=M("FileList"),Q=M("URLSearchParams");function Z(e,t,{allOwnKeys:n=!1}={}){if(null==e)return;let a,i;if("object"!=typeof e&&(e=[e]),F(e))for(a=0,i=e.length;a<i;a++)t.call(null,e[a],a,e);else{const i=n?Object.getOwnPropertyNames(e):Object.keys(e),o=i.length;let r;for(a=0;a<o;a++)r=i[a],t.call(null,e[r],r,e)}}function X(e,t){t=t.toLowerCase();const n=Object.keys(e);let a,i=n.length;for(;i-- >0;)if(a=n[i],t===a.toLowerCase())return a;return null}const ee="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,te=e=>!U(e)&&e!==ee;const ne=(ae="undefined"!=typeof Uint8Array&&P(Uint8Array),e=>ae&&e instanceof ae);var ae;const ie=M("HTMLFormElement"),oe=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),re=M("RegExp"),se=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),a={};Z(n,((n,i)=>{!1!==t(n,i,e)&&(a[i]=n)})),Object.defineProperties(e,a)},le="abcdefghijklmnopqrstuvwxyz",ce="0123456789",de={DIGIT:ce,ALPHA:le,ALPHA_DIGIT:le+le.toUpperCase()+ce};var ue={isArray:F,isArrayBuffer:q,isBuffer:function(e){return null!==e&&!U(e)&&null!==e.constructor&&!U(e.constructor)&&V(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{const t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||C.call(e)===t||V(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){let t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&q(e.buffer),t},isString:J,isNumber:G,isBoolean:e=>!0===e||!1===e,isObject:B,isPlainObject:z,isUndefined:U,isDate:Y,isFile:$,isBlob:W,isRegExp:re,isFunction:V,isStream:e=>B(e)&&V(e.pipe),isURLSearchParams:Q,isTypedArray:ne,isFileList:H,forEach:Z,merge:function e(){const{caseless:t}=te(this)&&this||{},n={},a=(a,i)=>{const o=t&&X(n,i)||i;z(n[o])&&z(a)?n[o]=e(n[o],a):z(a)?n[o]=e({},a):F(a)?n[o]=a.slice():n[o]=a};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&Z(arguments[e],a);return n},extend:(e,t,n,{allOwnKeys:a}={})=>(Z(t,((t,a)=>{n&&V(t)?e[a]=A(t,n):e[a]=t}),{allOwnKeys:a}),e),trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,n,a)=>{e.prototype=Object.create(t.prototype,a),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},toFlatObject:(e,t,n,a)=>{let i,o,r;const s={};if(t=t||{},null==e)return t;do{for(i=Object.getOwnPropertyNames(e),o=i.length;o-- >0;)r=i[o],a&&!a(r,e,t)||s[r]||(t[r]=e[r],s[r]=!0);e=!1!==n&&P(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:N,kindOfTest:M,endsWith:(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const a=e.indexOf(t,n);return-1!==a&&a===n},toArray:e=>{if(!e)return null;if(F(e))return e;let t=e.length;if(!G(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},forEachEntry:(e,t)=>{const n=(e&&e[Symbol.iterator]).call(e);let a;for(;(a=n.next())&&!a.done;){const n=a.value;t.call(e,n[0],n[1])}},matchAll:(e,t)=>{let n;const a=[];for(;null!==(n=e.exec(t));)a.push(n);return a},isHTMLForm:ie,hasOwnProperty:oe,hasOwnProp:oe,reduceDescriptors:se,freezeMethods:e=>{se(e,((t,n)=>{if(V(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const a=e[n];V(a)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))}))},toObjectSet:(e,t)=>{const n={},a=e=>{e.forEach((e=>{n[e]=!0}))};return F(e)?a(e):a(String(e).split(t)),n},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(e,t,n){return t.toUpperCase()+n})),noop:()=>{},toFiniteNumber:(e,t)=>(e=+e,Number.isFinite(e)?e:t),findKey:X,global:ee,isContextDefined:te,ALPHABET:de,generateString:(e=16,t=de.ALPHA_DIGIT)=>{let n="";const{length:a}=t;for(;e--;)n+=t[Math.random()*a|0];return n},isSpecCompliantForm:function(e){return!!(e&&V(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),n=(e,a)=>{if(B(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[a]=e;const i=F(e)?[]:{};return Z(e,((e,t)=>{const o=n(e,a+1);!U(o)&&(i[t]=o)})),t[a]=void 0,i}}return e};return n(e,0)}};function pe(e,t,n,a,i){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),a&&(this.request=a),i&&(this.response=i)}ue.inherits(pe,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:ue.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const me=pe.prototype,he={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{he[e]={value:e}})),Object.defineProperties(pe,he),Object.defineProperty(me,"isAxiosError",{value:!0}),pe.from=(e,t,n,a,i,o)=>{const r=Object.create(me);return ue.toFlatObject(e,r,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),pe.call(r,e.message,t,n,a,i),r.cause=e,r.name=e.name,o&&Object.assign(r,o),r};var fe=n.Stream,ye=ve;function ve(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}t.inherits(ve,fe),ve.create=function(e,t){var n=new this;for(var a in t=t||{})n[a]=t[a];n.source=e;var i=e.emit;return e.emit=function(){return n._handleEmit(arguments),i.apply(e,arguments)},e.on("error",(function(){})),n.pauseStream&&e.pause(),n},Object.defineProperty(ve.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),ve.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},ve.prototype.resume=function(){this._released||this.release(),this.source.resume()},ve.prototype.pause=function(){this.source.pause()},ve.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},ve.prototype.pipe=function(){var e=fe.prototype.pipe.apply(this,arguments);return this.resume(),e},ve.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},ve.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}};var be=t,ge=n.Stream,_e=ye,xe=ke;function ke(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}be.inherits(ke,ge),ke.create=function(e){var t=new this;for(var n in e=e||{})t[n]=e[n];return t},ke.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},ke.prototype.append=function(e){if(ke.isStreamLike(e)){if(!(e instanceof _e)){var t=_e.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=t}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},ke.prototype.pipe=function(e,t){return ge.prototype.pipe.call(this,e,t),this.resume(),e},ke.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},ke.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){ke.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},ke.prototype._pipeNext=function(e){if(this._currentStream=e,ke.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var t=e;this.write(t),this._getNext()},ke.prototype._handleErrors=function(e){var t=this;e.on("error",(function(e){t._emitError(e)}))},ke.prototype.write=function(e){this.emit("data",e)},ke.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},ke.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},ke.prototype.end=function(){this._reset(),this.emit("end")},ke.prototype.destroy=function(){this._reset(),this.emit("close")},ke.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},ke.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},ke.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(t){t.dataSize&&(e.dataSize+=t.dataSize)})),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},ke.prototype._emitError=function(e){this._reset(),this.emit("error",e)};var we={},Ee={exports:{}};Ee.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/3gpp-ims+xml":{source:"iana",compressible:!0},"application/3gpphal+json":{source:"iana",compressible:!0},"application/3gpphalforms+json":{source:"iana",compressible:!0},"application/a2l":{source:"iana"},"application/ace+cbor":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:!0},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/alto-updatestreamcontrol+json":{source:"iana",compressible:!0},"application/alto-updatestreamparams+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/at+jwt":{source:"iana"},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:!0,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:!0,extensions:["atomdeleted"]},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:!0,extensions:["atomsvc"]},"application/atsc-dwd+xml":{source:"iana",compressible:!0,extensions:["dwd"]},"application/atsc-dynamic-event-message":{source:"iana"},"application/atsc-held+xml":{source:"iana",compressible:!0,extensions:["held"]},"application/atsc-rdt+json":{source:"iana",compressible:!0},"application/atsc-rsat+xml":{source:"iana",compressible:!0,extensions:["rsat"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:!0},"application/bacnet-xdd+zip":{source:"iana",compressible:!1},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana",compressible:!0,extensions:["xcs"]},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/captive+json":{source:"iana",compressible:!0},"application/cbor":{source:"iana"},"application/cbor-seq":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:!0},"application/ccxml+xml":{source:"iana",compressible:!0,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:!0,extensions:["cdfx"]},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana",compressible:!0},"application/cellml+xml":{source:"iana",compressible:!0},"application/cfw":{source:"iana"},"application/city+json":{source:"iana",compressible:!0},"application/clr":{source:"iana"},"application/clue+xml":{source:"iana",compressible:!0},"application/clue_info+xml":{source:"iana",compressible:!0},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:!0},"application/coap-group+json":{source:"iana",compressible:!0},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:!0},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:!0,extensions:["cpl"]},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:!0},"application/cstadata+xml":{source:"iana",compressible:!0},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",compressible:!0,extensions:["mpd"]},"application/dash-patch+xml":{source:"iana",compressible:!0,extensions:["mpp"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:!0,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:!0},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!0},"application/dicom+xml":{source:"iana",compressible:!0},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:!0},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:!0,extensions:["dbk"]},"application/dots+cbor":{source:"iana"},"application/dskpp+xml":{source:"iana",compressible:!0},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:!0,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["es","ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/efi":{source:"iana"},"application/elm+json":{source:"iana",charset:"UTF-8",compressible:!0},"application/elm+xml":{source:"iana",compressible:!0},"application/emergencycalldata.cap+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/emergencycalldata.comment+xml":{source:"iana",compressible:!0},"application/emergencycalldata.control+xml":{source:"iana",compressible:!0},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.veds+xml":{source:"iana",compressible:!0},"application/emma+xml":{source:"iana",compressible:!0,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:!0,extensions:["emotionml"]},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:!0},"application/epub+zip":{source:"iana",compressible:!1,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/expect-ct-report+json":{source:"iana",compressible:!0},"application/express":{source:"iana",extensions:["exp"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:!0,extensions:["fdt"]},"application/fhir+json":{source:"iana",charset:"UTF-8",compressible:!0},"application/fhir+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/fido.trusted-apps+json":{compressible:!0},"application/fits":{source:"iana"},"application/flexfec":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1},"application/framework-attributes+xml":{source:"iana",compressible:!0},"application/geo+json":{source:"iana",compressible:!0,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite3":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:!0},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:!0,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:!0,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana",compressible:!0},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:!0},"application/ibe-pkg-reply+xml":{source:"iana",compressible:!0},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:!0,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:!0,extensions:["its"]},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:!0},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/jscalendar+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:!0},"application/kpml-response+xml":{source:"iana",compressible:!0},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:!0,extensions:["lgr"]},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:!0},"application/lost+xml":{source:"iana",compressible:!0,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:!0},"application/lpf+zip":{source:"iana",compressible:!1},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:!0,extensions:["mads"]},"application/manifest+json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:!0,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:!0,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:!0},"application/mathml-presentation+xml":{source:"iana",compressible:!0},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:!0},"application/mbms-deregister+xml":{source:"iana",compressible:!0},"application/mbms-envelope+xml":{source:"iana",compressible:!0},"application/mbms-msk+xml":{source:"iana",compressible:!0},"application/mbms-msk-response+xml":{source:"iana",compressible:!0},"application/mbms-protection-description+xml":{source:"iana",compressible:!0},"application/mbms-reception-report+xml":{source:"iana",compressible:!0},"application/mbms-register+xml":{source:"iana",compressible:!0},"application/mbms-register-response+xml":{source:"iana",compressible:!0},"application/mbms-schedule+xml":{source:"iana",compressible:!0},"application/mbms-user-service-description+xml":{source:"iana",compressible:!0},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:!0,extensions:["mpf"]},"application/media_control+xml":{source:"iana",compressible:!0},"application/mediaservercontrol+xml":{source:"iana",compressible:!0,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",compressible:!0,extensions:["metalink"]},"application/metalink4+xml":{source:"iana",compressible:!0,extensions:["meta4"]},"application/mets+xml":{source:"iana",compressible:!0,extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mipc":{source:"iana"},"application/missing-blocks+cbor-seq":{source:"iana"},"application/mmt-aei+xml":{source:"iana",compressible:!0,extensions:["maei"]},"application/mmt-usd+xml":{source:"iana",compressible:!0,extensions:["musd"]},"application/mods+xml":{source:"iana",compressible:!0,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:!0},"application/mrb-publish+xml":{source:"iana",compressible:!0},"application/msc-ivr+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/msc-mixer+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!0},"application/multipart-core":{source:"iana"},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana",extensions:["nq"]},"application/n-triples":{source:"iana",extensions:["nt"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana",charset:"US-ASCII"},"application/news-groupinfo":{source:"iana",charset:"US-ASCII"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:!0},"application/node":{source:"iana",extensions:["cjs"]},"application/nss":{source:"iana"},"application/oauth-authz-req+jwt":{source:"iana"},"application/oblivious-dns-message":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odm+xml":{source:"iana",compressible:!0},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:!0,extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:!0,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{source:"iana",compressible:!0},"application/oscore":{source:"iana"},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p21":{source:"iana"},"application/p21+zip":{source:"iana",compressible:!1},"application/p2p-overlay+xml":{source:"iana",compressible:!0,extensions:["relo"]},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:!0,extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pem-certificate-chain":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana",extensions:["asc"]},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/pidf-diff+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:!0,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!0},"application/problem+json":{source:"iana",compressible:!0},"application/problem+xml":{source:"iana",compressible:!0},"application/provenance+xml":{source:"iana",compressible:!0,extensions:["provx"]},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.cyn":{source:"iana",charset:"7-BIT"},"application/prs.hpub+zip":{source:"iana",compressible:!1},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:!0},"application/pskc+xml":{source:"iana",compressible:!0,extensions:["pskcxml"]},"application/pvd+json":{source:"iana",compressible:!0},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!0,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:!0,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",compressible:!0,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:!0,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:!0},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:!0},"application/rls-services+xml":{source:"iana",compressible:!0,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:!0,extensions:["rapd"]},"application/route-s-tsid+xml":{source:"iana",compressible:!0,extensions:["sls"]},"application/route-usd+xml":{source:"iana",compressible:!0,extensions:["rusd"]},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:!0,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:!0},"application/samlmetadata+xml":{source:"iana",compressible:!0},"application/sarif+json":{source:"iana",compressible:!0},"application/sarif-external-properties+json":{source:"iana",compressible:!0},"application/sbe":{source:"iana"},"application/sbml+xml":{source:"iana",compressible:!0,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:!0},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:!0},"application/senml+xml":{source:"iana",compressible:!0,extensions:["senmlx"]},"application/senml-etch+cbor":{source:"iana"},"application/senml-etch+json":{source:"iana",compressible:!0},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:!0},"application/sensml+xml":{source:"iana",compressible:!0,extensions:["sensmlx"]},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:!0},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:!0,extensions:["shf"]},"application/sieve":{source:"iana",extensions:["siv","sieve"]},"application/simple-filter+xml":{source:"iana",compressible:!0},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/sipc":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:!0,extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:!0,extensions:["srx"]},"application/spdx+json":{source:"iana",compressible:!0},"application/spirits-event+xml":{source:"iana",compressible:!0},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:!0,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:!0,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:!0,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:!0,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:!0},"application/swid+xml":{source:"iana",compressible:!0,extensions:["swidtag"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/taxii+json":{source:"iana",compressible:!0},"application/td+json":{source:"iana",compressible:!0},"application/tei+xml":{source:"iana",compressible:!0,extensions:["tei","teicorpus"]},"application/tetra_isi":{source:"iana"},"application/thraud+xml":{source:"iana",compressible:!0,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:!0},"application/tnauthlist":{source:"iana"},"application/token-introspection+jwt":{source:"iana"},"application/toml":{compressible:!0,extensions:["toml"]},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana",extensions:["trig"]},"application/ttml+xml":{source:"iana",compressible:!0,extensions:["ttml"]},"application/tve-trigger":{source:"iana"},"application/tzif":{source:"iana"},"application/tzif-leap":{source:"iana"},"application/ubjson":{compressible:!1,extensions:["ubj"]},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:!0},"application/urc-ressheet+xml":{source:"iana",compressible:!0,extensions:["rsheet"]},"application/urc-targetdesc+xml":{source:"iana",compressible:!0,extensions:["td"]},"application/urc-uisocketdesc+xml":{source:"iana",compressible:!0},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana",compressible:!0},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana",compressible:!0,extensions:["1km"]},"application/vnd.3gpp-prose+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.5gnas":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.bsf+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gmop+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gtpc":{source:"iana"},"application/vnd.3gpp.interworking-data":{source:"iana"},"application/vnd.3gpp.lpp":{source:"iana"},"application/vnd.3gpp.mc-signalling-ear":{source:"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-payload":{source:"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-signalling":{source:"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-init-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-transmission-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mid-call+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ngap":{source:"iana"},"application/vnd.3gpp.pfcp":{source:"iana"},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.s1ap":{source:"iana"},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ussd+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:!1,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:!0,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.afplinedata-pagedef":{source:"iana"},"application/vnd.afpc.cmoca-cmresource":{source:"iana"},"application/vnd.afpc.foca-charset":{source:"iana"},"application/vnd.afpc.foca-codedfont":{source:"iana"},"application/vnd.afpc.foca-codepage":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.afpc.modca-cmtable":{source:"iana"},"application/vnd.afpc.modca-formdef":{source:"iana"},"application/vnd.afpc.modca-mediummap":{source:"iana"},"application/vnd.afpc.modca-objectcontainer":{source:"iana"},"application/vnd.afpc.modca-overlay":{source:"iana"},"application/vnd.afpc.modca-pagesegment":{source:"iana"},"application/vnd.age":{source:"iana",extensions:["age"]},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!0},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:!0},"application/vnd.android.ota":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.arrow.file":{source:"iana"},"application/vnd.apache.arrow.stream":{source:"iana"},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.aplextor.warrp+json":{source:"iana",compressible:!0},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",compressible:!0,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["key"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:!0},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!0},"application/vnd.avistar+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:!0,extensions:["bmml"]},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.error":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!0},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:!0},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.bpf":{source:"iana"},"application/vnd.bpf3":{source:"iana"},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:!0},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!0},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:!0,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.ciedi":{source:"iana"},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:!0,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.comicbook+zip":{source:"iana",compressible:!1},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!0},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:!0,extensions:["wbs"]},"application/vnd.cryptii.pipe+json":{source:"iana",compressible:!0},"application/vnd.crypto-shade-file":{source:"iana"},"application/vnd.cryptomator.encrypted":{source:"iana"},"application/vnd.cryptomator.vault":{source:"iana"},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:!0},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:!0},"application/vnd.cybank":{source:"iana"},"application/vnd.cyclonedx+json":{source:"iana",compressible:!0},"application/vnd.cyclonedx+xml":{source:"iana",compressible:!0},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana",compressible:!1},"application/vnd.d3m-dataset":{source:"iana"},"application/vnd.d3m-problem":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!0},"application/vnd.dataresource+json":{source:"iana",compressible:!0},"application/vnd.dbf":{source:"iana",extensions:["dbf"]},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:!0,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:!0},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbisl+xml":{source:"iana",compressible:!0},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:!0},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.eclipse.ditto+json":{source:"iana",compressible:!0},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:!0},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:!0},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:!1},"application/vnd.eszigno3+xml":{source:"iana",compressible:!0,extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:!1},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:!1},"application/vnd.etsi.cug+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:!0},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:!0},"application/vnd.etsi.sci+xml":{source:"iana",compressible:!0},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:!0},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:!0},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eu.kasparian.car+json":{source:"iana",compressible:!0},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:!1},"application/vnd.exstream-package":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.familysearch.gedcom+zip":{source:"iana",compressible:!1},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.ficlab.flb+zip":{source:"iana",compressible:!1},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujifilm.fb.docuworks":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.container":{source:"iana"},"application/vnd.fujifilm.fb.jfi+xml":{source:"iana",compressible:!0},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:!0},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.gentics.grd+json":{source:"iana",compressible:!0},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana",compressible:!0},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.slides":{source:"iana"},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:!0},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:!1},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:!0},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",compressible:!0,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:!0,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!0},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hl7cda+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.hl7v2+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:!0},"application/vnd.hyper-item+json":{source:"iana",compressible:!0},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:!1},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:!1},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:!0},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:!0},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.packageitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.planningitem+xml":{source:"iana",compressible:!0},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:!0,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.iso11783-10+zip":{source:"iana",compressible:!1},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las":{source:"iana"},"application/vnd.las.las+json":{source:"iana",compressible:!0},"application/vnd.las.las+xml":{source:"iana",compressible:!0,extensions:["lasxml"]},"application/vnd.laszip":{source:"iana"},"application/vnd.leap+json":{source:"iana",compressible:!0},"application/vnd.liberty-request+xml":{source:"iana",compressible:!0},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:!0,extensions:["lbe"]},"application/vnd.logipipe.circuit+zip":{source:"iana",compressible:!1},"application/vnd.loom":{source:"iana"},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana",extensions:["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxar.archive.3tz+zip":{source:"iana",compressible:!1},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:!0},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-outlook":{compressible:!1,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:!0},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:!0},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:!0},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:!0},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.nacamar.ybrid+json":{source:"iana",compressible:!0},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!0},"application/vnd.nebumind.line":{source:"iana"},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:!0},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:!0},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:!0},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:!0,extensions:["ac"]},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:!0},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oci.image.manifest.v1+json":{source:"iana",compressible:!0},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:!0},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:!0},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:!0},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:!0},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:!0},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:!0},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:!0},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:!0},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",compressible:!0,extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:!0},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+cbor":{source:"iana"},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:!0},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:!0},"application/vnd.omads-email+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omads-file+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omads-folder+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:!0,extensions:["obgx"]},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:!0,extensions:["osm"]},"application/vnd.opentimestamps.ots":{source:"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:!0},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:!0},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.patientecommsdoc":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:!0},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:!0},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:!0},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana",extensions:["rar"]},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:!0,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.resilient.logic":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!0},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",compressible:!0,extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sar":{source:"iana"},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.seis+json":{source:"iana",compressible:!0},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shade-save-file":{source:"iana"},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:!0},"application/vnd.shopkick+json":{source:"iana",compressible:!0},"application/vnd.shp":{source:"iana"},"application/vnd.shx":{source:"iana"},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.snesdev-page-table":{source:"iana"},"application/vnd.software602.filler.form+xml":{source:"iana",compressible:!0,extensions:["fo"]},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:!0,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!0,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.sycle+xml":{source:"iana",compressible:!0},"application/vnd.syft+json":{source:"iana",compressible:!0},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",charset:"UTF-8",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!0},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:!0},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:!0},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:!0,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!0},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.veritone.aion+json":{source:"iana",compressible:!0},"application/vnd.veryant.thin":{source:"iana"},"application/vnd.ves.encrypted":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",charset:"UTF-8",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.dpp":{source:"iana"},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:!0},"application/vnd.wv.ssp+xml":{source:"iana",compressible:!0},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:!0},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:!0,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:!0,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:!0,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!0},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{source:"iana",compressible:!0,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:!0,extensions:["wif"]},"application/webpush-options+json":{source:"iana",compressible:!0},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:!0,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:!0,extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!1,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:!0,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:!0,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:!0,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-iwork-keynote-sffkey":{extensions:["key"]},"application/x-iwork-numbers-sffnumbers":{extensions:["numbers"]},"application/x-iwork-pages-sffpages":{extensions:["pages"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-keepass2":{extensions:["kdbx"]},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-pki-message":{source:"iana"},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!0,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!0,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!0,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!0,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!1,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!0,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!0,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!0,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"iana",extensions:["der","crt","pem"]},"application/x-x509-ca-ra-cert":{source:"iana"},"application/x-x509-next-ca-cert":{source:"iana"},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:!0,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:!0},"application/xaml+xml":{source:"apache",compressible:!0,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:!0,extensions:["xav"]},"application/xcap-caps+xml":{source:"iana",compressible:!0,extensions:["xca"]},"application/xcap-diff+xml":{source:"iana",compressible:!0,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:!0,extensions:["xel"]},"application/xcap-error+xml":{source:"iana",compressible:!0},"application/xcap-ns+xml":{source:"iana",compressible:!0,extensions:["xns"]},"application/xcon-conference-info+xml":{source:"iana",compressible:!0},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:!0},"application/xenc+xml":{source:"iana",compressible:!0,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:!0},"application/xliff+xml":{source:"iana",compressible:!0,extensions:["xlf"]},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:!0},"application/xmpp+xml":{source:"iana",compressible:!0},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:!0,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:!0,extensions:["xsl","xslt"]},"application/xspf+xml":{source:"apache",compressible:!0,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:!0,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!0},"application/yang-data+xml":{source:"iana",compressible:!0},"application/yang-patch+json":{source:"iana",compressible:!0},"application/yang-patch+xml":{source:"iana",compressible:!0},"application/yin+xml":{source:"iana",compressible:!0,extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:!1,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana",extensions:["amr"]},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/flexfec":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/mhas":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana",extensions:["mxmf"]},"audio/mp3":{compressible:!1,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:!1,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx","opus"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/scip":{source:"iana"},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sofa":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tetra_acelp":{source:"iana"},"audio/tetra_acelp_bb":{source:"iana"},"audio/tone":{source:"iana"},"audio/tsvcis":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dts.uhd":{source:"iana"},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!0,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",compressible:!0,extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:!1,extensions:["apng"]},"image/avci":{source:"iana",extensions:["avci"]},"image/avcs":{source:"iana",extensions:["avcs"]},"image/avif":{source:"iana",compressible:!1,extensions:["avif"]},"image/bmp":{source:"iana",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/hej2k":{source:"iana",extensions:["hej2"]},"image/hsj2":{source:"iana",extensions:["hsj2"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp2":{source:"iana",compressible:!1,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jph":{source:"iana",extensions:["jph"]},"image/jphc":{source:"iana",extensions:["jhc"]},"image/jpm":{source:"iana",compressible:!1,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!1,extensions:["jpx","jpf"]},"image/jxr":{source:"iana",extensions:["jxr"]},"image/jxra":{source:"iana",extensions:["jxra"]},"image/jxrs":{source:"iana",extensions:["jxrs"]},"image/jxs":{source:"iana",extensions:["jxs"]},"image/jxsc":{source:"iana",extensions:["jxsc"]},"image/jxsi":{source:"iana",extensions:["jxsi"]},"image/jxss":{source:"iana",extensions:["jxss"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/ktx2":{source:"iana",extensions:["ktx2"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana",extensions:["t38"]},"image/tiff":{source:"iana",compressible:!1,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",compressible:!0,extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-dds":{compressible:!0,extensions:["dds"]},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.pco.b16":{source:"iana",extensions:["b16"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana",extensions:["3mf"]},"model/e57":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!0,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!0,extensions:["glb"]},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/mtl":{source:"iana",extensions:["mtl"]},"model/obj":{source:"iana",extensions:["obj"]},"model/step":{source:"iana"},"model/step+xml":{source:"iana",compressible:!0,extensions:["stpx"]},"model/step+zip":{source:"iana",compressible:!1,extensions:["stpz"]},"model/step-xml+zip":{source:"iana",compressible:!1,extensions:["stpxz"]},"model/stl":{source:"iana",extensions:["stl"]},"model/vnd.collada+xml":{source:"iana",compressible:!0,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:!0},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana",extensions:["ogex"]},"model/vnd.parasolid.transmit.binary":{source:"iana",extensions:["x_b"]},"model/vnd.parasolid.transmit.text":{source:"iana",extensions:["x_t"]},"model/vnd.pytha.pyox":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.sap.vds":{source:"iana",extensions:["vds"]},"model/vnd.usdz+zip":{source:"iana",compressible:!1,extensions:["usdz"]},"model/vnd.valve.source.compiled-map":{source:"iana",extensions:["bsp"]},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana",extensions:["x3db"]},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana",extensions:["x3dv"]},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana"},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/cql":{source:"iana"},"text/cql-expression":{source:"iana"},"text/cql-identifier":{source:"iana"},"text/css":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fhirpath":{source:"iana"},"text/flexfec":{source:"iana"},"text/fwdred":{source:"iana"},"text/gff3":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{compressible:!0,extensions:["less"]},"text/markdown":{source:"iana",compressible:!0,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mdx":{compressible:!0,extensions:["mdx"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana",charset:"UTF-8"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana",charset:"UTF-8"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shaclc":{source:"iana"},"text/shex":{source:"iana",extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/spdx":{source:"iana",extensions:["spdx"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-8",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana",charset:"UTF-8"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana",charset:"UTF-8"},"text/vnd.familysearch.gedcom":{source:"iana",extensions:["ged"]},"text/vnd.ficlab.flt":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hans":{source:"iana"},"text/vnd.hgl":{source:"iana"},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.senx.warpscript":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sosi":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",charset:"UTF-8",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana",charset:"UTF-8"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!0,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{compressible:!0,extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/av1":{source:"iana"},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/ffv1":{source:"iana"},"video/flexfec":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana",extensions:["m4s"]},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/jxsv":{source:"iana"},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!1,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/scip":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vc2":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vnd.youtube.yt":{source:"iana"},"video/vp8":{source:"iana"},"video/vp9":{source:"iana"},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}},
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
function(e){var t=Ee.exports,n=a.extname,i=/^\s*([^;\s]*)(?:;|\s|$)/,o=/^text\//i;function r(e){if(!e||"string"!=typeof e)return!1;var n=i.exec(e),a=n&&t[n[1].toLowerCase()];return a&&a.charset?a.charset:!(!n||!o.test(n[1]))&&"UTF-8"}e.charset=r,e.charsets={lookup:r},e.contentType=function(t){if(!t||"string"!=typeof t)return!1;var n=-1===t.indexOf("/")?e.lookup(t):t;if(!n)return!1;if(-1===n.indexOf("charset")){var a=e.charset(n);a&&(n+="; charset="+a.toLowerCase())}return n},e.extension=function(t){if(!t||"string"!=typeof t)return!1;var n=i.exec(t),a=n&&e.extensions[n[1].toLowerCase()];if(!a||!a.length)return!1;return a[0]},e.extensions=Object.create(null),e.lookup=function(t){if(!t||"string"!=typeof t)return!1;var a=n("x."+t).toLowerCase().substr(1);if(!a)return!1;return e.types[a]||!1},e.types=Object.create(null),function(e,n){var a=["nginx","apache",void 0,"iana"];Object.keys(t).forEach((function(i){var o=t[i],r=o.extensions;if(r&&r.length){e[i]=r;for(var s=0;s<r.length;s++){var l=r[s];if(n[l]){var c=a.indexOf(t[n[l]].source),d=a.indexOf(o.source);if("application/octet-stream"!==n[l]&&(c>d||c===d&&"application/"===n[l].substr(0,12)))continue}n[l]=i}}}))}(e.extensions,e.types)}(we);var Se=function(e){var t="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;t?t(e):setTimeout(e,0)},Ke=function(e){var t=!1;return Se((function(){t=!0})),function(n,a){t?e(n,a):Se((function(){e(n,a)}))}};var Re=function(e){Object.keys(e.jobs).forEach(Ie.bind(e)),e.jobs={}};function Ie(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}var Te=Ke,je=Re,Oe=function(e,t,n,a){var i=n.keyedList?n.keyedList[n.index]:n.index;n.jobs[i]=function(e,t,n,a){var i;i=2==e.length?e(n,Te(a)):e(n,t,Te(a));return i}(t,i,e[i],(function(e,t){i in n.jobs&&(delete n.jobs[i],e?je(n):n.results[i]=t,a(e,n.results))}))};var Ae=function(e,t){var n=!Array.isArray(e),a={index:0,keyedList:n||t?Object.keys(e):null,jobs:{},results:n?{}:[],size:n?Object.keys(e).length:e.length};t&&a.keyedList.sort(n?t:function(n,a){return t(e[n],e[a])});return a};var Ce=Re,Pe=Ke,Ne=function(e){if(!Object.keys(this.jobs).length)return;this.index=this.size,Ce(this),Pe(e)(null,this.results)};var De=Oe,Me=Ae,Le=Ne,Fe=function(e,t,n){var a=Me(e);for(;a.index<(a.keyedList||e).length;)De(e,t,a,(function(e,t){e?n(e,t):0!==Object.keys(a.jobs).length||n(null,a.results)})),a.index++;return Le.bind(a,n)};var Ue={exports:{}},qe=Oe,Je=Ae,Ve=Ne;function Ge(e,t){return e<t?-1:e>t?1:0}Ue.exports=function(e,t,n,a){var i=Je(e,n);return qe(e,t,i,(function n(o,r){o?a(o,r):(i.index++,i.index<(i.keyedList||e).length?qe(e,t,i,n):a(null,i.results))})),Ve.bind(i,a)},Ue.exports.ascending=Ge,Ue.exports.descending=function(e,t){return-1*Ge(e,t)};var Be=Ue.exports;var ze={parallel:Fe,serial:function(e,t,n){return Be(e,t,null,n)},serialOrdered:Ue.exports},Ye=xe,$e=t,We=a,He=i,Qe=o,Ze=r.parse,Xe=s,et=n.Stream,tt=we,nt=ze,at=function(e,t){return Object.keys(t).forEach((function(n){e[n]=e[n]||t[n]})),e},it=ot;function ot(e){if(!(this instanceof ot))return new ot(e);for(var t in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],Ye.call(this),e=e||{})this[t]=e[t]}function rt(e){return ue.isPlainObject(e)||ue.isArray(e)}function st(e){return ue.endsWith(e,"[]")?e.slice(0,-2):e}function lt(e,t,n){return e?e.concat(t).map((function(e,t){return e=st(e),!n&&t?"["+e+"]":e})).join(n?".":""):t}$e.inherits(ot,Ye),ot.LINE_BREAK="\r\n",ot.DEFAULT_CONTENT_TYPE="application/octet-stream",ot.prototype.append=function(e,t,n){"string"==typeof(n=n||{})&&(n={filename:n});var a=Ye.prototype.append.bind(this);if("number"==typeof t&&(t=""+t),$e.isArray(t))this._error(new Error("Arrays are not supported."));else{var i=this._multiPartHeader(e,t,n),o=this._multiPartFooter();a(i),a(t),a(o),this._trackLength(i,t,n)}},ot.prototype._trackLength=function(e,t,n){var a=0;null!=n.knownLength?a+=+n.knownLength:Buffer.isBuffer(t)?a=t.length:"string"==typeof t&&(a=Buffer.byteLength(t)),this._valueLength+=a,this._overheadLength+=Buffer.byteLength(e)+ot.LINE_BREAK.length,t&&(t.path||t.readable&&t.hasOwnProperty("httpVersion")||t instanceof et)&&(n.knownLength||this._valuesToMeasure.push(t))},ot.prototype._lengthRetriever=function(e,t){e.hasOwnProperty("fd")?null!=e.end&&e.end!=1/0&&null!=e.start?t(null,e.end+1-(e.start?e.start:0)):Xe.stat(e.path,(function(n,a){var i;n?t(n):(i=a.size-(e.start?e.start:0),t(null,i))})):e.hasOwnProperty("httpVersion")?t(null,+e.headers["content-length"]):e.hasOwnProperty("httpModule")?(e.on("response",(function(n){e.pause(),t(null,+n.headers["content-length"])})),e.resume()):t("Unknown stream")},ot.prototype._multiPartHeader=function(e,t,n){if("string"==typeof n.header)return n.header;var a,i=this._getContentDisposition(t,n),o=this._getContentType(t,n),r="",s={"Content-Disposition":["form-data",'name="'+e+'"'].concat(i||[]),"Content-Type":[].concat(o||[])};for(var l in"object"==typeof n.header&&at(s,n.header),s)s.hasOwnProperty(l)&&null!=(a=s[l])&&(Array.isArray(a)||(a=[a]),a.length&&(r+=l+": "+a.join("; ")+ot.LINE_BREAK));return"--"+this.getBoundary()+ot.LINE_BREAK+r+ot.LINE_BREAK},ot.prototype._getContentDisposition=function(e,t){var n,a;return"string"==typeof t.filepath?n=We.normalize(t.filepath).replace(/\\/g,"/"):t.filename||e.name||e.path?n=We.basename(t.filename||e.name||e.path):e.readable&&e.hasOwnProperty("httpVersion")&&(n=We.basename(e.client._httpMessage.path||"")),n&&(a='filename="'+n+'"'),a},ot.prototype._getContentType=function(e,t){var n=t.contentType;return!n&&e.name&&(n=tt.lookup(e.name)),!n&&e.path&&(n=tt.lookup(e.path)),!n&&e.readable&&e.hasOwnProperty("httpVersion")&&(n=e.headers["content-type"]),n||!t.filepath&&!t.filename||(n=tt.lookup(t.filepath||t.filename)),n||"object"!=typeof e||(n=ot.DEFAULT_CONTENT_TYPE),n},ot.prototype._multiPartFooter=function(){return function(e){var t=ot.LINE_BREAK;0===this._streams.length&&(t+=this._lastBoundary()),e(t)}.bind(this)},ot.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+ot.LINE_BREAK},ot.prototype.getHeaders=function(e){var t,n={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(t in e)e.hasOwnProperty(t)&&(n[t.toLowerCase()]=e[t]);return n},ot.prototype.setBoundary=function(e){this._boundary=e},ot.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},ot.prototype.getBuffer=function(){for(var e=new Buffer.alloc(0),t=this.getBoundary(),n=0,a=this._streams.length;n<a;n++)"function"!=typeof this._streams[n]&&(e=Buffer.isBuffer(this._streams[n])?Buffer.concat([e,this._streams[n]]):Buffer.concat([e,Buffer.from(this._streams[n])]),"string"==typeof this._streams[n]&&this._streams[n].substring(2,t.length+2)===t||(e=Buffer.concat([e,Buffer.from(ot.LINE_BREAK)])));return Buffer.concat([e,Buffer.from(this._lastBoundary())])},ot.prototype._generateBoundary=function(){for(var e="--------------------------",t=0;t<24;t++)e+=Math.floor(10*Math.random()).toString(16);this._boundary=e},ot.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},ot.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},ot.prototype.getLength=function(e){var t=this._overheadLength+this._valueLength;this._streams.length&&(t+=this._lastBoundary().length),this._valuesToMeasure.length?nt.parallel(this._valuesToMeasure,this._lengthRetriever,(function(n,a){n?e(n):(a.forEach((function(e){t+=e})),e(null,t))})):process.nextTick(e.bind(this,null,t))},ot.prototype.submit=function(e,t){var n,a,i={method:"post"};return"string"==typeof e?(e=Ze(e),a=at({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},i)):(a=at(e,i)).port||(a.port="https:"==a.protocol?443:80),a.headers=this.getHeaders(e.headers),n="https:"==a.protocol?Qe.request(a):He.request(a),this.getLength(function(e,a){if(e&&"Unknown stream"!==e)this._error(e);else if(a&&n.setHeader("Content-Length",a),this.pipe(n),t){var i,o=function(e,a){return n.removeListener("error",o),n.removeListener("response",i),t.call(this,e,a)};i=o.bind(this,null),n.on("error",o),n.on("response",i)}}.bind(this)),n},ot.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},ot.prototype.toString=function(){return"[object FormData]"};const ct=ue.toFlatObject(ue,{},null,(function(e){return/^is[A-Z]/.test(e)}));function dt(e,t,n){if(!ue.isObject(e))throw new TypeError("target must be an object");t=t||new(it||FormData);const a=(n=ue.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!ue.isUndefined(t[e])}))).metaTokens,i=n.visitor||c,o=n.dots,r=n.indexes,s=(n.Blob||"undefined"!=typeof Blob&&Blob)&&ue.isSpecCompliantForm(t);if(!ue.isFunction(i))throw new TypeError("visitor must be a function");function l(e){if(null===e)return"";if(ue.isDate(e))return e.toISOString();if(!s&&ue.isBlob(e))throw new pe("Blob is not supported. Use a Buffer instead.");return ue.isArrayBuffer(e)||ue.isTypedArray(e)?s&&"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}function c(e,n,i){let s=e;if(e&&!i&&"object"==typeof e)if(ue.endsWith(n,"{}"))n=a?n:n.slice(0,-2),e=JSON.stringify(e);else if(ue.isArray(e)&&function(e){return ue.isArray(e)&&!e.some(rt)}(e)||(ue.isFileList(e)||ue.endsWith(n,"[]"))&&(s=ue.toArray(e)))return n=st(n),s.forEach((function(e,a){!ue.isUndefined(e)&&null!==e&&t.append(!0===r?lt([n],a,o):null===r?n:n+"[]",l(e))})),!1;return!!rt(e)||(t.append(lt(i,n,o),l(e)),!1)}const d=[],u=Object.assign(ct,{defaultVisitor:c,convertValue:l,isVisitable:rt});if(!ue.isObject(e))throw new TypeError("data must be an object");return function e(n,a){if(!ue.isUndefined(n)){if(-1!==d.indexOf(n))throw Error("Circular reference detected in "+a.join("."));d.push(n),ue.forEach(n,(function(n,o){!0===(!(ue.isUndefined(n)||null===n)&&i.call(t,n,ue.isString(o)?o.trim():o,a,u))&&e(n,a?a.concat(o):[o])})),d.pop()}}(e),t}function ut(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function pt(e,t){this._pairs=[],e&&dt(e,this,t)}const mt=pt.prototype;function ht(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ft(e,t,n){if(!t)return e;const a=n&&n.encode||ht,i=n&&n.serialize;let o;if(o=i?i(t,n):ue.isURLSearchParams(t)?t.toString():new pt(t,n).toString(a),o){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}mt.append=function(e,t){this._pairs.push([e,t])},mt.toString=function(e){const t=e?function(t){return e.call(this,t,ut)}:ut;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};class yt{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){ue.forEach(this.handlers,(function(t){null!==t&&e(t)}))}}var vt={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},bt={isNode:!0,classes:{URLSearchParams:r.URLSearchParams,FormData:it,Blob:"undefined"!=typeof Blob&&Blob||null},protocols:["http","https","file","data"]};function gt(e){function t(e,n,a,i){let o=e[i++];const r=Number.isFinite(+o),s=i>=e.length;if(o=!o&&ue.isArray(a)?a.length:o,s)return ue.hasOwnProp(a,o)?a[o]=[a[o],n]:a[o]=n,!r;a[o]&&ue.isObject(a[o])||(a[o]=[]);return t(e,n,a[o],i)&&ue.isArray(a[o])&&(a[o]=function(e){const t={},n=Object.keys(e);let a;const i=n.length;let o;for(a=0;a<i;a++)o=n[a],t[o]=e[o];return t}(a[o])),!r}if(ue.isFormData(e)&&ue.isFunction(e.entries)){const n={};return ue.forEachEntry(e,((e,a)=>{t(function(e){return ue.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}(e),a,n,0)})),n}return null}const _t={"Content-Type":void 0};const xt={transitional:vt,adapter:["xhr","http"],transformRequest:[function(e,t){const n=t.getContentType()||"",a=n.indexOf("application/json")>-1,i=ue.isObject(e);i&&ue.isHTMLForm(e)&&(e=new FormData(e));if(ue.isFormData(e))return a&&a?JSON.stringify(gt(e)):e;if(ue.isArrayBuffer(e)||ue.isBuffer(e)||ue.isStream(e)||ue.isFile(e)||ue.isBlob(e))return e;if(ue.isArrayBufferView(e))return e.buffer;if(ue.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(i){if(n.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return dt(e,new bt.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,a){return ue.isBuffer(e)?(this.append(t,e.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((o=ue.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return dt(o?{"files[]":e}:e,t&&new t,this.formSerializer)}}return i||a?(t.setContentType("application/json",!1),function(e,t,n){if(ue.isString(e))try{return(t||JSON.parse)(e),ue.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||xt.transitional,n=t&&t.forcedJSONParsing,a="json"===this.responseType;if(e&&ue.isString(e)&&(n&&!this.responseType||a)){const n=!(t&&t.silentJSONParsing)&&a;try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw pe.from(e,pe.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:bt.classes.FormData,Blob:bt.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};ue.forEach(["delete","get","head"],(function(e){xt.headers[e]={}})),ue.forEach(["post","put","patch"],(function(e){xt.headers[e]=ue.merge(_t)}));const kt=ue.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);const wt=Symbol("internals");function Et(e){return e&&String(e).trim().toLowerCase()}function St(e){return!1===e||null==e?e:ue.isArray(e)?e.map(St):String(e)}function Kt(e,t,n,a,i){return ue.isFunction(a)?a.call(this,t,n):(i&&(t=n),ue.isString(t)?ue.isString(a)?-1!==t.indexOf(a):ue.isRegExp(a)?a.test(t):void 0:void 0)}class Rt{constructor(e){e&&this.set(e)}set(e,t,n){const a=this;function i(e,t,n){const i=Et(t);if(!i)throw new Error("header name must be a non-empty string");const o=ue.findKey(a,i);(!o||void 0===a[o]||!0===n||void 0===n&&!1!==a[o])&&(a[o||t]=St(e))}const o=(e,t)=>ue.forEach(e,((e,n)=>i(e,n,t)));return ue.isPlainObject(e)||e instanceof this.constructor?o(e,t):ue.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z]+$/.test(e.trim())?o((e=>{const t={};let n,a,i;return e&&e.split("\n").forEach((function(e){i=e.indexOf(":"),n=e.substring(0,i).trim().toLowerCase(),a=e.substring(i+1).trim(),!n||t[n]&&kt[n]||("set-cookie"===n?t[n]?t[n].push(a):t[n]=[a]:t[n]=t[n]?t[n]+", "+a:a)})),t})(e),t):null!=e&&i(t,e,n),this}get(e,t){if(e=Et(e)){const n=ue.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let a;for(;a=n.exec(e);)t[a[1]]=a[2];return t}(e);if(ue.isFunction(t))return t.call(this,e,n);if(ue.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=Et(e)){const n=ue.findKey(this,e);return!(!n||void 0===this[n]||t&&!Kt(0,this[n],n,t))}return!1}delete(e,t){const n=this;let a=!1;function i(e){if(e=Et(e)){const i=ue.findKey(n,e);!i||t&&!Kt(0,n[i],i,t)||(delete n[i],a=!0)}}return ue.isArray(e)?e.forEach(i):i(e),a}clear(e){const t=Object.keys(this);let n=t.length,a=!1;for(;n--;){const i=t[n];e&&!Kt(0,this[i],i,e,!0)||(delete this[i],a=!0)}return a}normalize(e){const t=this,n={};return ue.forEach(this,((a,i)=>{const o=ue.findKey(n,i);if(o)return t[o]=St(a),void delete t[i];const r=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,n)=>t.toUpperCase()+n))}(i):String(i).trim();r!==i&&delete t[i],t[r]=St(a),n[r]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return ue.forEach(this,((n,a)=>{null!=n&&!1!==n&&(t[a]=e&&ue.isArray(n)?n.join(", "):n)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+": "+t)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const n=new this(e);return t.forEach((e=>n.set(e))),n}static accessor(e){const t=(this[wt]=this[wt]={accessors:{}}).accessors,n=this.prototype;function a(e){const a=Et(e);t[a]||(!function(e,t){const n=ue.toCamelCase(" "+t);["get","set","has"].forEach((a=>{Object.defineProperty(e,a+n,{value:function(e,n,i){return this[a].call(this,t,e,n,i)},configurable:!0})}))}(n,e),t[a]=!0)}return ue.isArray(e)?e.forEach(a):a(e),this}}function It(e,t){const n=this||xt,a=t||n,i=Rt.from(a.headers);let o=a.data;return ue.forEach(e,(function(e){o=e.call(n,o,i.normalize(),t?t.status:void 0)})),i.normalize(),o}function Tt(e){return!(!e||!e.__CANCEL__)}function jt(e,t,n){pe.call(this,null==e?"canceled":e,pe.ERR_CANCELED,t,n),this.name="CanceledError"}function Ot(e,t,n){const a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new pe("Request failed with status code "+n.status,[pe.ERR_BAD_REQUEST,pe.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}function At(e,t){return e&&!function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}(t)?function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}Rt.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),ue.freezeMethods(Rt.prototype),ue.freezeMethods(Rt),ue.inherits(jt,pe,{__CANCEL__:!0});var Ct=r.parse,Pt={ftp:21,gopher:70,http:80,https:443,ws:80,wss:443},Nt=String.prototype.endsWith||function(e){return e.length<=this.length&&-1!==this.indexOf(e,this.length-e.length)};function Dt(e){return process.env[e.toLowerCase()]||process.env[e.toUpperCase()]||""}var Mt,Lt,Ft,Ut,qt=function(e){var t="string"==typeof e?Ct(e):e||{},n=t.protocol,a=t.host,i=t.port;if("string"!=typeof a||!a||"string"!=typeof n)return"";if(n=n.split(":",1)[0],!function(e,t){var n=(Dt("npm_config_no_proxy")||Dt("no_proxy")).toLowerCase();if(!n)return!0;if("*"===n)return!1;return n.split(/[,\s]/).every((function(n){if(!n)return!0;var a=n.match(/^(.+):(\d+)$/),i=a?a[1]:n,o=a?parseInt(a[2]):0;return!(!o||o===t)||(/^[.*]/.test(i)?("*"===i.charAt(0)&&(i=i.slice(1)),!Nt.call(e,i)):e!==i)}))}(a=a.replace(/:\d*$/,""),i=parseInt(i)||Pt[n]||0))return"";var o=Dt("npm_config_"+n+"_proxy")||Dt(n+"_proxy")||Dt("npm_config_proxy")||Dt("all_proxy");return o&&-1===o.indexOf("://")&&(o=n+"://"+o),o},Jt={exports:{}},Vt={exports:{}},Gt={exports:{}},Bt={exports:{}};function zt(){if(Lt)return Mt;Lt=1;var e=1e3,t=60*e,n=60*t,a=24*n,i=365.25*a;function o(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}return Mt=function(r,s){s=s||{};var l=typeof r;if("string"===l&&r.length>0)return function(o){if((o=String(o)).length>100)return;var r=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(o);if(!r)return;var s=parseFloat(r[1]);switch((r[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*i;case"days":case"day":case"d":return s*a;case"hours":case"hour":case"hrs":case"hr":case"h":return s*n;case"minutes":case"minute":case"mins":case"min":case"m":return s*t;case"seconds":case"second":case"secs":case"sec":case"s":return s*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(r);if("number"===l&&!1===isNaN(r))return s.long?function(i){return o(i,a,"day")||o(i,n,"hour")||o(i,t,"minute")||o(i,e,"second")||i+" ms"}(r):function(i){if(i>=a)return Math.round(i/a)+"d";if(i>=n)return Math.round(i/n)+"h";if(i>=t)return Math.round(i/t)+"m";if(i>=e)return Math.round(i/e)+"s";return i+"ms"}(r);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(r))},Mt}function Yt(){return Ft||(Ft=1,function(e,t){var n;function a(e){function a(){if(a.enabled){var e=a,i=+new Date,o=i-(n||i);e.diff=o,e.prev=n,e.curr=i,n=i;for(var r=new Array(arguments.length),s=0;s<r.length;s++)r[s]=arguments[s];r[0]=t.coerce(r[0]),"string"!=typeof r[0]&&r.unshift("%O");var l=0;r[0]=r[0].replace(/%([a-zA-Z%])/g,(function(n,a){if("%%"===n)return n;l++;var i=t.formatters[a];if("function"==typeof i){var o=r[l];n=i.call(e,o),r.splice(l,1),l--}return n})),t.formatArgs.call(e,r),(a.log||t.log||console.log.bind(console)).apply(e,r)}}return a.namespace=e,a.enabled=t.enabled(e),a.useColors=t.useColors(),a.color=function(e){var n,a=0;for(n in e)a=(a<<5)-a+e.charCodeAt(n),a|=0;return t.colors[Math.abs(a)%t.colors.length]}(e),"function"==typeof t.init&&t.init(a),a}(t=e.exports=a.debug=a.default=a).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),a=n.length,i=0;i<a;i++)n[i]&&("-"===(e=n[i].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=zt(),t.names=[],t.skips=[],t.formatters={}}(Bt,Bt.exports)),Bt.exports}var $t,Wt,Ht,Qt={exports:{}};function Zt(){return Wt||(Wt=1,function(e){"undefined"!=typeof process&&"renderer"===process.type?e.exports=(Ut||(Ut=1,function(e,t){function n(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=e.exports=Yt()).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),n){var a="color: "+this.color;e.splice(1,0,a,"color: inherit");var i=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(i++,"%c"===e&&(o=i))})),e.splice(o,0,a)}},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=n,t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(n())}(Gt,Gt.exports)),Gt.exports):e.exports=($t||($t=1,function(e,n){var a=c,i=t;(n=e.exports=Yt()).init=function(e){e.inspectOpts={};for(var t=Object.keys(n.inspectOpts),a=0;a<t.length;a++)e.inspectOpts[t[a]]=n.inspectOpts[t[a]]},n.log=function(){return r.write(i.format.apply(i,arguments)+"\n")},n.formatArgs=function(e){var t=this.namespace;if(this.useColors){var a=this.color,i="  [3"+a+";1m"+t+" [0m";e[0]=i+e[0].split("\n").join("\n"+i),e.push("[3"+a+"m+"+n.humanize(this.diff)+"[0m")}else e[0]=(new Date).toUTCString()+" "+t+" "+e[0]},n.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},n.load=l,n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):a.isatty(o)},n.colors=[6,2,3,4,5,1],n.inspectOpts=Object.keys(process.env).filter((function(e){return/^debug_/i.test(e)})).reduce((function(e,t){var n=t.substring(6).toLowerCase().replace(/_([a-z])/g,(function(e,t){return t.toUpperCase()})),a=process.env[t];return a=!!/^(yes|on|true|enabled)$/i.test(a)||!/^(no|off|false|disabled)$/i.test(a)&&("null"===a?null:Number(a)),e[n]=a,e}),{});var o=parseInt(process.env.DEBUG_FD,10)||2;1!==o&&2!==o&&i.deprecate((function(){}),"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();var r=1===o?process.stdout:2===o?process.stderr:function(e){var t;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":(t=new a.WriteStream(e))._type="tty",t._handle&&t._handle.unref&&t._handle.unref();break;case"FILE":(t=new s.SyncWriteStream(e,{autoClose:!1}))._type="fs";break;case"PIPE":case"TCP":(t=new d.Socket({fd:e,readable:!1,writable:!0})).readable=!1,t.read=null,t._type="pipe",t._handle&&t._handle.unref&&t._handle.unref();break;default:throw new Error("Implement me. Unknown stream file type!")}return t.fd=e,t._isStdio=!0,t}(o);function l(){return process.env.DEBUG}n.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts).split("\n").map((function(e){return e.trim()})).join(" ")},n.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts)},n.enable(l())}(Qt,Qt.exports)),Qt.exports)}(Vt)),Vt.exports}var Xt=r,en=Xt.URL,tn=i,nn=o,an=n.Writable,on=l,rn=function(){if(!Ht){try{Ht=Zt()("follow-redirects")}catch(e){}"function"!=typeof Ht&&(Ht=function(){})}Ht.apply(null,arguments)},sn=!1;try{on(new en)}catch(e){sn="ERR_INVALID_URL"===e.code}var ln=["auth","host","hostname","href","path","pathname","port","protocol","query","search","hash"],cn=["abort","aborted","connect","error","socket","timeout"],dn=Object.create(null);cn.forEach((function(e){dn[e]=function(t,n,a){this._redirectable.emit(e,t,n,a)}}));var un=En("ERR_INVALID_URL","Invalid URL",TypeError),pn=En("ERR_FR_REDIRECTION_FAILURE","Redirected request failed"),mn=En("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded",pn),hn=En("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit"),fn=En("ERR_STREAM_WRITE_AFTER_END","write after end"),yn=an.prototype.destroy||gn;function vn(e,t){an.call(this),this._sanitizeOptions(e),this._options=e,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],t&&this.on("response",t);var n=this;this._onNativeResponse=function(e){try{n._processResponse(e)}catch(e){n.emit("error",e instanceof pn?e:new pn({cause:e}))}},this._performRequest()}function bn(e){var t={maxRedirects:21,maxBodyLength:10485760},n={};return Object.keys(e).forEach((function(a){var i=a+":",o=n[i]=e[a],r=t[a]=Object.create(o);Object.defineProperties(r,{request:{value:function(e,a,o){var r;return r=e,en&&r instanceof en?e=kn(e):Kn(e)?e=kn(_n(e)):(o=a,a=xn(e),e={protocol:i}),Rn(a)&&(o=a,a=null),(a=Object.assign({maxRedirects:t.maxRedirects,maxBodyLength:t.maxBodyLength},e,a)).nativeProtocols=n,Kn(a.host)||Kn(a.hostname)||(a.hostname="::1"),on.equal(a.protocol,i,"protocol mismatch"),rn("options",a),new vn(a,o)},configurable:!0,enumerable:!0,writable:!0},get:{value:function(e,t,n){var a=r.request(e,t,n);return a.end(),a},configurable:!0,enumerable:!0,writable:!0}})})),t}function gn(){}function _n(e){var t;if(sn)t=new en(e);else if(!Kn((t=xn(Xt.parse(e))).protocol))throw new un({input:e});return t}function xn(e){if(/^\[/.test(e.hostname)&&!/^\[[:0-9a-f]+\]$/i.test(e.hostname))throw new un({input:e.href||e});if(/^\[/.test(e.host)&&!/^\[[:0-9a-f]+\](:\d+)?$/i.test(e.host))throw new un({input:e.href||e});return e}function kn(e,t){var n=t||{};for(var a of ln)n[a]=e[a];return n.hostname.startsWith("[")&&(n.hostname=n.hostname.slice(1,-1)),""!==n.port&&(n.port=Number(n.port)),n.path=n.search?n.pathname+n.search:n.pathname,n}function wn(e,t){var n;for(var a in t)e.test(a)&&(n=t[a],delete t[a]);return null==n?void 0:String(n).trim()}function En(e,t,n){function a(n){Error.captureStackTrace(this,this.constructor),Object.assign(this,n||{}),this.code=e,this.message=this.cause?t+": "+this.cause.message:t}return a.prototype=new(n||Error),Object.defineProperties(a.prototype,{constructor:{value:a,enumerable:!1},name:{value:"Error ["+e+"]",enumerable:!1}}),a}function Sn(e,t){for(var n of cn)e.removeListener(n,dn[n]);e.on("error",gn),e.destroy(t)}function Kn(e){return"string"==typeof e||e instanceof String}function Rn(e){return"function"==typeof e}vn.prototype=Object.create(an.prototype),vn.prototype.abort=function(){Sn(this._currentRequest),this._currentRequest.abort(),this.emit("abort")},vn.prototype.destroy=function(e){return Sn(this._currentRequest,e),yn.call(this,e),this},vn.prototype.write=function(e,t,n){if(this._ending)throw new fn;if(!Kn(e)&&("object"!=typeof(a=e)||!("length"in a)))throw new TypeError("data should be a string, Buffer or Uint8Array");var a;Rn(t)&&(n=t,t=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:t}),this._currentRequest.write(e,t,n)):(this.emit("error",new hn),this.abort()):n&&n()},vn.prototype.end=function(e,t,n){if(Rn(e)?(n=e,e=t=null):Rn(t)&&(n=t,t=null),e){var a=this,i=this._currentRequest;this.write(e,t,(function(){a._ended=!0,i.end(null,null,n)})),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,n)},vn.prototype.setHeader=function(e,t){this._options.headers[e]=t,this._currentRequest.setHeader(e,t)},vn.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},vn.prototype.setTimeout=function(e,t){var n=this;function a(t){t.setTimeout(e),t.removeListener("timeout",t.destroy),t.addListener("timeout",t.destroy)}function i(t){n._timeout&&clearTimeout(n._timeout),n._timeout=setTimeout((function(){n.emit("timeout"),o()}),e),a(t)}function o(){n._timeout&&(clearTimeout(n._timeout),n._timeout=null),n.removeListener("abort",o),n.removeListener("error",o),n.removeListener("response",o),n.removeListener("close",o),t&&n.removeListener("timeout",t),n.socket||n._currentRequest.removeListener("socket",i)}return t&&this.on("timeout",t),this.socket?i(this.socket):this._currentRequest.once("socket",i),this.on("socket",a),this.on("abort",o),this.on("error",o),this.on("response",o),this.on("close",o),this},["flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach((function(e){vn.prototype[e]=function(t,n){return this._currentRequest[e](t,n)}})),["aborted","connection","socket"].forEach((function(e){Object.defineProperty(vn.prototype,e,{get:function(){return this._currentRequest[e]}})})),vn.prototype._sanitizeOptions=function(e){if(e.headers||(e.headers={}),e.host&&(e.hostname||(e.hostname=e.host),delete e.host),!e.pathname&&e.path){var t=e.path.indexOf("?");t<0?e.pathname=e.path:(e.pathname=e.path.substring(0,t),e.search=e.path.substring(t))}},vn.prototype._performRequest=function(){var e=this._options.protocol,t=this._options.nativeProtocols[e];if(!t)throw new TypeError("Unsupported protocol "+e);if(this._options.agents){var n=e.slice(0,-1);this._options.agent=this._options.agents[n]}var a=this._currentRequest=t.request(this._options,this._onNativeResponse);for(var i of(a._redirectable=this,cn))a.on(i,dn[i]);if(this._currentUrl=/^\//.test(this._options.path)?Xt.format(this._options):this._options.path,this._isRedirect){var o=0,r=this,s=this._requestBodyBuffers;!function e(t){if(a===r._currentRequest)if(t)r.emit("error",t);else if(o<s.length){var n=s[o++];a.finished||a.write(n.data,n.encoding,e)}else r._ended&&a.end()}()}},vn.prototype._processResponse=function(e){var t=e.statusCode;this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:t});var n,a=e.headers.location;if(!a||!1===this._options.followRedirects||t<300||t>=400)return e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),void(this._requestBodyBuffers=[]);if(Sn(this._currentRequest),e.destroy(),++this._redirectCount>this._options.maxRedirects)throw new mn;var i=this._options.beforeRedirect;i&&(n=Object.assign({Host:e.req.getHeader("host")},this._options.headers));var o=this._options.method;((301===t||302===t)&&"POST"===this._options.method||303===t&&!/^(?:GET|HEAD)$/.test(this._options.method))&&(this._options.method="GET",this._requestBodyBuffers=[],wn(/^content-/i,this._options.headers));var r,s,l=wn(/^host$/i,this._options.headers),c=_n(this._currentUrl),d=l||c.host,u=/^\w+:/.test(a)?this._currentUrl:Xt.format(Object.assign(c,{host:d})),p=(r=a,s=u,sn?new en(r,s):_n(Xt.resolve(s,r)));if(rn("redirecting to",p.href),this._isRedirect=!0,kn(p,this._options),(p.protocol!==c.protocol&&"https:"!==p.protocol||p.host!==d&&!function(e,t){on(Kn(e)&&Kn(t));var n=e.length-t.length-1;return n>0&&"."===e[n]&&e.endsWith(t)}(p.host,d))&&wn(/^(?:(?:proxy-)?authorization|cookie)$/i,this._options.headers),Rn(i)){var m={headers:e.headers,statusCode:t},h={url:u,method:o,headers:n};i(this._options,m,h),this._sanitizeOptions(this._options)}this._performRequest()},Jt.exports=bn({http:tn,https:nn}),Jt.exports.wrap=bn;const In="1.3.4";function Tn(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}const jn=/^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;function On(e,t){e=e||10;const n=new Array(e),a=new Array(e);let i,o=0,r=0;return t=void 0!==t?t:1e3,function(s){const l=Date.now(),c=a[r];i||(i=l),n[o]=s,a[o]=l;let d=r,u=0;for(;d!==o;)u+=n[d++],d%=e;if(o=(o+1)%e,o===r&&(r=(r+1)%e),l-i<t)return;const p=c&&l-c;return p?Math.round(1e3*u/p):void 0}}const An=Symbol("internals");class Cn extends n.Transform{constructor(e){super({readableHighWaterMark:(e=ue.toFlatObject(e,{maxRate:0,chunkSize:65536,minChunkSize:100,timeWindow:500,ticksRate:2,samplesCount:15},null,((e,t)=>!ue.isUndefined(t[e])))).chunkSize});const t=this,n=this[An]={length:e.length,timeWindow:e.timeWindow,ticksRate:e.ticksRate,chunkSize:e.chunkSize,maxRate:e.maxRate,minChunkSize:e.minChunkSize,bytesSeen:0,isCaptured:!1,notifiedBytesLoaded:0,ts:Date.now(),bytes:0,onReadCallback:null},a=On(n.ticksRate*e.samplesCount,n.timeWindow);this.on("newListener",(e=>{"progress"===e&&(n.isCaptured||(n.isCaptured=!0))}));let i=0;n.updateProgress=function(e,t){let n=0;const a=1e3/t;let i=null;return function(t,o){const r=Date.now();if(t||r-n>a)return i&&(clearTimeout(i),i=null),n=r,e.apply(null,o);i||(i=setTimeout((()=>(i=null,n=Date.now(),e.apply(null,o))),a-(r-n)))}}((function(){const e=n.length,o=n.bytesSeen,r=o-i;if(!r||t.destroyed)return;const s=a(r);i=o,process.nextTick((()=>{t.emit("progress",{loaded:o,total:e,progress:e?o/e:void 0,bytes:r,rate:s||void 0,estimated:s&&e&&o<=e?(e-o)/s:void 0})}))}),n.ticksRate);const o=()=>{n.updateProgress(!0)};this.once("end",o),this.once("error",o)}_read(e){const t=this[An];return t.onReadCallback&&t.onReadCallback(),super._read(e)}_transform(e,t,n){const a=this,i=this[An],o=i.maxRate,r=this.readableHighWaterMark,s=i.timeWindow,l=o/(1e3/s),c=!1!==i.minChunkSize?Math.max(i.minChunkSize,.01*l):0;const d=(e,t)=>{const n=Buffer.byteLength(e);let d,u=null,p=r,m=0;if(o){const e=Date.now();(!i.ts||(m=e-i.ts)>=s)&&(i.ts=e,d=l-i.bytes,i.bytes=d<0?-d:0,m=0),d=l-i.bytes}if(o){if(d<=0)return setTimeout((()=>{t(null,e)}),s-m);d<p&&(p=d)}p&&n>p&&n-p>c&&(u=e.subarray(p),e=e.subarray(0,p)),function(e,t){const n=Buffer.byteLength(e);i.bytesSeen+=n,i.bytes+=n,i.isCaptured&&i.updateProgress(),a.push(e)?process.nextTick(t):i.onReadCallback=()=>{i.onReadCallback=null,process.nextTick(t)}}(e,u?()=>{process.nextTick(t,null,u)}:t)};d(e,(function e(t,a){if(t)return n(t);a?d(a,e):n(null)}))}setLength(e){return this[An].length=+e,this}}const{asyncIterator:Pn}=Symbol,Nn=async function*(e){e.stream?yield*e.stream():e.arrayBuffer?yield await e.arrayBuffer():e[Pn]?yield*e[Pn]():yield e},Dn=ue.ALPHABET.ALPHA_DIGIT+"-_",Mn=new t.TextEncoder,Ln="\r\n",Fn=Mn.encode(Ln);class Un{constructor(e,t){const{escapeName:n}=this.constructor,a=ue.isString(t);let i=`Content-Disposition: form-data; name="${n(e)}"${!a&&t.name?`; filename="${n(t.name)}"`:""}${Ln}`;a?t=Mn.encode(String(t).replace(/\r?\n|\r\n?/g,Ln)):i+=`Content-Type: ${t.type||"application/octet-stream"}${Ln}`,this.headers=Mn.encode(i+Ln),this.contentLength=a?t.byteLength:t.size,this.size=this.headers.byteLength+this.contentLength+2,this.name=e,this.value=t}async*encode(){yield this.headers;const{value:e}=this;ue.isTypedArray(e)?yield e:yield*Nn(e),yield Fn}static escapeName(e){return String(e).replace(/[\r\n"]/g,(e=>({"\r":"%0D","\n":"%0A",'"':"%22"}[e])))}}class qn extends n.Transform{__transform(e,t,n){this.push(e),n()}_transform(e,t,n){if(0!==e.length&&(this._transform=this.__transform,120!==e[0])){const e=Buffer.alloc(2);e[0]=120,e[1]=156,this.push(e,t)}this.__transform(e,t,n)}}const Jn={flush:u.constants.Z_SYNC_FLUSH,finishFlush:u.constants.Z_SYNC_FLUSH},Vn={flush:u.constants.BROTLI_OPERATION_FLUSH,finishFlush:u.constants.BROTLI_OPERATION_FLUSH},Gn=ue.isFunction(u.createBrotliDecompress),{http:Bn,https:zn}=Jt.exports,Yn=/https:?/,$n=bt.protocols.map((e=>e+":"));function Wn(e){e.beforeRedirects.proxy&&e.beforeRedirects.proxy(e),e.beforeRedirects.config&&e.beforeRedirects.config(e)}function Hn(e,t,n){let a=t;if(!a&&!1!==a){const e=qt(n);e&&(a=new URL(e))}if(a){if(a.username&&(a.auth=(a.username||"")+":"+(a.password||"")),a.auth){(a.auth.username||a.auth.password)&&(a.auth=(a.auth.username||"")+":"+(a.auth.password||""));const t=Buffer.from(a.auth,"utf8").toString("base64");e.headers["Proxy-Authorization"]="Basic "+t}e.headers.host=e.hostname+(e.port?":"+e.port:"");const t=a.hostname||a.host;e.hostname=t,e.host=t,e.port=a.port,e.path=n,a.protocol&&(e.protocol=a.protocol.includes(":")?a.protocol:`${a.protocol}:`)}e.beforeRedirects.proxy=function(e){Hn(e,t,e.href)}}const Qn="undefined"!=typeof process&&"process"===ue.kindOf(process);var Zn=Qn&&function(e){return a=async function(a,r,s){let{data:l}=e;const{responseType:c,responseEncoding:d}=e,m=e.method.toUpperCase();let h,f,y=!1;const v=new p,b=()=>{e.cancelToken&&e.cancelToken.unsubscribe(g),e.signal&&e.signal.removeEventListener("abort",g),v.removeAllListeners()};function g(t){v.emit("abort",!t||t.type?new jt(null,e,f):t)}s(((e,t)=>{h=!0,t&&(y=!0,b())})),v.once("abort",r),(e.cancelToken||e.signal)&&(e.cancelToken&&e.cancelToken.subscribe(g),e.signal&&(e.signal.aborted?g():e.signal.addEventListener("abort",g)));const _=At(e.baseURL,e.url),x=new URL(_,"http://localhost"),k=x.protocol||$n[0];if("data:"===k){let t;if("GET"!==m)return Ot(a,r,{status:405,statusText:"method not allowed",headers:{},config:e});try{t=function(e,t,n){const a=n&&n.Blob||bt.classes.Blob,i=Tn(e);if(void 0===t&&a&&(t=!0),"data"===i){e=i.length?e.slice(i.length+1):e;const n=jn.exec(e);if(!n)throw new pe("Invalid URL",pe.ERR_INVALID_URL);const o=n[1],r=n[2],s=n[3],l=Buffer.from(decodeURIComponent(s),r?"base64":"utf8");if(t){if(!a)throw new pe("Blob is not supported",pe.ERR_NOT_SUPPORT);return new a([l],{type:o})}return l}throw new pe("Unsupported protocol "+i,pe.ERR_NOT_SUPPORT)}(e.url,"blob"===c,{Blob:e.env&&e.env.Blob})}catch(t){throw pe.from(t,pe.ERR_BAD_REQUEST,e)}return"text"===c?(t=t.toString(d),d&&"utf8"!==d||(t=ue.stripBOM(t))):"stream"===c&&(t=n.Readable.from(t)),Ot(a,r,{data:t,status:200,statusText:"OK",headers:new Rt,config:e})}if(-1===$n.indexOf(k))return r(new pe("Unsupported protocol "+k,pe.ERR_BAD_REQUEST,e));const w=Rt.from(e.headers).normalize();w.set("User-Agent","axios/"+In,!1);const E=e.onDownloadProgress,S=e.onUploadProgress,K=e.maxRate;let R,I;if(ue.isSpecCompliantForm(l)){const e=w.getContentType(/boundary=([-_\w\d]{10,70})/i);l=((e,t,a)=>{const{tag:i="form-data-boundary",size:o=25,boundary:r=i+"-"+ue.generateString(o,Dn)}=a||{};if(!ue.isFormData(e))throw TypeError("FormData instance required");if(r.length<1||r.length>70)throw Error("boundary must be 10-70 characters long");const s=Mn.encode("--"+r+Ln),l=Mn.encode("--"+r+"--"+Ln+Ln);let c=l.byteLength;const d=Array.from(e.entries()).map((([e,t])=>{const n=new Un(e,t);return c+=n.size,n}));c+=s.byteLength*d.length,c=ue.toFiniteNumber(c);const u={"Content-Type":`multipart/form-data; boundary=${r}`};return Number.isFinite(c)&&(u["Content-Length"]=c),t&&t(u),n.Readable.from(async function*(){for(const e of d)yield s,yield*e.encode();yield l}())})(l,(e=>{w.set(e)}),{tag:`axios-${In}-boundary`,boundary:e&&e[1]||void 0})}else if(ue.isFormData(l)&&ue.isFunction(l.getHeaders)){if(w.set(l.getHeaders()),!w.hasContentLength())try{const e=await t.promisify(l.getLength).call(l);Number.isFinite(e)&&e>=0&&w.setContentLength(e)}catch(e){}}else if(ue.isBlob(l))l.size&&w.setContentType(l.type||"application/octet-stream"),w.setContentLength(l.size||0),l=n.Readable.from(Nn(l));else if(l&&!ue.isStream(l)){if(Buffer.isBuffer(l));else if(ue.isArrayBuffer(l))l=Buffer.from(new Uint8Array(l));else{if(!ue.isString(l))return r(new pe("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",pe.ERR_BAD_REQUEST,e));l=Buffer.from(l,"utf-8")}if(w.setContentLength(l.length,!1),e.maxBodyLength>-1&&l.length>e.maxBodyLength)return r(new pe("Request body larger than maxBodyLength limit",pe.ERR_BAD_REQUEST,e))}const T=ue.toFiniteNumber(w.getContentLength());let j,O;ue.isArray(K)?(R=K[0],I=K[1]):R=I=K,l&&(S||R)&&(ue.isStream(l)||(l=n.Readable.from(l,{objectMode:!1})),l=n.pipeline([l,new Cn({length:T,maxRate:ue.toFiniteNumber(R)})],ue.noop),S&&l.on("progress",(e=>{S(Object.assign(e,{upload:!0}))}))),e.auth&&(j=(e.auth.username||"")+":"+(e.auth.password||"")),!j&&x.username&&(j=x.username+":"+x.password),j&&w.delete("authorization");try{O=ft(x.pathname+x.search,e.params,e.paramsSerializer).replace(/^\?/,"")}catch(t){const n=new Error(t.message);return n.config=e,n.url=e.url,n.exists=!0,r(n)}w.set("Accept-Encoding","gzip, compress, deflate"+(Gn?", br":""),!1);const A={path:O,method:m,headers:w.toJSON(),agents:{http:e.httpAgent,https:e.httpsAgent},auth:j,protocol:k,beforeRedirect:Wn,beforeRedirects:{}};let C;e.socketPath?A.socketPath=e.socketPath:(A.hostname=x.hostname,A.port=x.port,Hn(A,e.proxy,k+"//"+x.hostname+(x.port?":"+x.port:"")+A.path));const P=Yn.test(A.protocol);if(A.agent=P?e.httpsAgent:e.httpAgent,e.transport?C=e.transport:0===e.maxRedirects?C=P?o:i:(e.maxRedirects&&(A.maxRedirects=e.maxRedirects),e.beforeRedirect&&(A.beforeRedirects.config=e.beforeRedirect),C=P?zn:Bn),e.maxBodyLength>-1?A.maxBodyLength=e.maxBodyLength:A.maxBodyLength=1/0,e.insecureHTTPParser&&(A.insecureHTTPParser=e.insecureHTTPParser),f=C.request(A,(function(t){if(f.destroyed)return;const i=[t],o=+t.headers["content-length"];if(E){const e=new Cn({length:ue.toFiniteNumber(o),maxRate:ue.toFiniteNumber(I)});E&&e.on("progress",(e=>{E(Object.assign(e,{download:!0}))})),i.push(e)}let s=t;const l=t.req||f;if(!1!==e.decompress&&t.headers["content-encoding"])switch("HEAD"!==m&&204!==t.statusCode||delete t.headers["content-encoding"],t.headers["content-encoding"]){case"gzip":case"x-gzip":case"compress":case"x-compress":i.push(u.createUnzip(Jn)),delete t.headers["content-encoding"];break;case"deflate":i.push(new qn),i.push(u.createUnzip(Jn)),delete t.headers["content-encoding"];break;case"br":Gn&&(i.push(u.createBrotliDecompress(Vn)),delete t.headers["content-encoding"])}s=i.length>1?n.pipeline(i,ue.noop):i[0];const p=n.finished(s,(()=>{p(),b()})),h={status:t.statusCode,statusText:t.statusMessage,headers:new Rt(t.headers),config:e,request:l};if("stream"===c)h.data=s,Ot(a,r,h);else{const t=[];let n=0;s.on("data",(function(a){t.push(a),n+=a.length,e.maxContentLength>-1&&n>e.maxContentLength&&(y=!0,s.destroy(),r(new pe("maxContentLength size of "+e.maxContentLength+" exceeded",pe.ERR_BAD_RESPONSE,e,l)))})),s.on("aborted",(function(){if(y)return;const t=new pe("maxContentLength size of "+e.maxContentLength+" exceeded",pe.ERR_BAD_RESPONSE,e,l);s.destroy(t),r(t)})),s.on("error",(function(t){f.destroyed||r(pe.from(t,null,e,l))})),s.on("end",(function(){try{let e=1===t.length?t[0]:Buffer.concat(t);"arraybuffer"!==c&&(e=e.toString(d),d&&"utf8"!==d||(e=ue.stripBOM(e))),h.data=e}catch(t){r(pe.from(t,null,e,h.request,h))}Ot(a,r,h)}))}v.once("abort",(e=>{s.destroyed||(s.emit("error",e),s.destroy())}))})),v.once("abort",(e=>{r(e),f.destroy(e)})),f.on("error",(function(t){r(pe.from(t,null,e,f))})),f.on("socket",(function(e){e.setKeepAlive(!0,6e4)})),e.timeout){const t=parseInt(e.timeout,10);if(isNaN(t))return void r(new pe("error trying to parse `config.timeout` to int",pe.ERR_BAD_OPTION_VALUE,e,f));f.setTimeout(t,(function(){if(h)return;let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const n=e.transitional||vt;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),r(new pe(t,n.clarifyTimeoutError?pe.ETIMEDOUT:pe.ECONNABORTED,e,f)),g()}))}if(ue.isStream(l)){let t=!1,n=!1;l.on("end",(()=>{t=!0})),l.once("error",(e=>{n=!0,f.destroy(e)})),l.on("close",(()=>{t||n||g(new jt("Request stream has been aborted",e,f))})),l.pipe(f)}else f.end(l)},new Promise(((e,t)=>{let n,i;const o=(e,t)=>{i||(i=!0,n&&n(e,t))},r=e=>{o(e,!0),t(e)};a((t=>{o(t),e(t)}),r,(e=>n=e)).catch(r)}));var a},Xn=bt.isStandardBrowserEnv?{write:function(e,t,n,a,i,o){const r=[];r.push(e+"="+encodeURIComponent(t)),ue.isNumber(n)&&r.push("expires="+new Date(n).toGMTString()),ue.isString(a)&&r.push("path="+a),ue.isString(i)&&r.push("domain="+i),!0===o&&r.push("secure"),document.cookie=r.join("; ")},read:function(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},ea=bt.isStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function a(n){let a=n;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=a(window.location.href),function(e){const t=ue.isString(e)?a(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0};function ta(e,t){let n=0;const a=On(50,250);return i=>{const o=i.loaded,r=i.lengthComputable?i.total:void 0,s=o-n,l=a(s);n=o;const c={loaded:o,total:r,progress:r?o/r:void 0,bytes:s,rate:l||void 0,estimated:l&&r&&o<=r?(r-o)/l:void 0,event:i};c[t?"download":"upload"]=!0,e(c)}}var na="undefined"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,n){let a=e.data;const i=Rt.from(e.headers).normalize(),o=e.responseType;let r;function s(){e.cancelToken&&e.cancelToken.unsubscribe(r),e.signal&&e.signal.removeEventListener("abort",r)}ue.isFormData(a)&&(bt.isStandardBrowserEnv||bt.isStandardBrowserWebWorkerEnv)&&i.setContentType(!1);let l=new XMLHttpRequest;if(e.auth){const t=e.auth.username||"",n=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";i.set("Authorization","Basic "+btoa(t+":"+n))}const c=At(e.baseURL,e.url);function d(){if(!l)return;const a=Rt.from("getAllResponseHeaders"in l&&l.getAllResponseHeaders());Ot((function(e){t(e),s()}),(function(e){n(e),s()}),{data:o&&"text"!==o&&"json"!==o?l.response:l.responseText,status:l.status,statusText:l.statusText,headers:a,config:e,request:l}),l=null}if(l.open(e.method.toUpperCase(),ft(c,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,"onloadend"in l?l.onloadend=d:l.onreadystatechange=function(){l&&4===l.readyState&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))&&setTimeout(d)},l.onabort=function(){l&&(n(new pe("Request aborted",pe.ECONNABORTED,e,l)),l=null)},l.onerror=function(){n(new pe("Network Error",pe.ERR_NETWORK,e,l)),l=null},l.ontimeout=function(){let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const a=e.transitional||vt;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new pe(t,a.clarifyTimeoutError?pe.ETIMEDOUT:pe.ECONNABORTED,e,l)),l=null},bt.isStandardBrowserEnv){const t=(e.withCredentials||ea(c))&&e.xsrfCookieName&&Xn.read(e.xsrfCookieName);t&&i.set(e.xsrfHeaderName,t)}void 0===a&&i.setContentType(null),"setRequestHeader"in l&&ue.forEach(i.toJSON(),(function(e,t){l.setRequestHeader(t,e)})),ue.isUndefined(e.withCredentials)||(l.withCredentials=!!e.withCredentials),o&&"json"!==o&&(l.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",ta(e.onDownloadProgress,!0)),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",ta(e.onUploadProgress)),(e.cancelToken||e.signal)&&(r=t=>{l&&(n(!t||t.type?new jt(null,e,l):t),l.abort(),l=null)},e.cancelToken&&e.cancelToken.subscribe(r),e.signal&&(e.signal.aborted?r():e.signal.addEventListener("abort",r)));const u=Tn(c);u&&-1===bt.protocols.indexOf(u)?n(new pe("Unsupported protocol "+u+":",pe.ERR_BAD_REQUEST,e)):l.send(a||null)}))};const aa={http:Zn,xhr:na};ue.forEach(aa,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(e){}Object.defineProperty(e,"adapterName",{value:t})}}));var ia=e=>{e=ue.isArray(e)?e:[e];const{length:t}=e;let n,a;for(let i=0;i<t&&(n=e[i],!(a=ue.isString(n)?aa[n.toLowerCase()]:n));i++);if(!a){if(!1===a)throw new pe(`Adapter ${n} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(ue.hasOwnProp(aa,n)?`Adapter '${n}' is not available in the build`:`Unknown adapter '${n}'`)}if(!ue.isFunction(a))throw new TypeError("adapter is not a function");return a};function oa(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new jt(null,e)}function ra(e){oa(e),e.headers=Rt.from(e.headers),e.data=It.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1);return ia(e.adapter||xt.adapter)(e).then((function(t){return oa(e),t.data=It.call(e,e.transformResponse,t),t.headers=Rt.from(t.headers),t}),(function(t){return Tt(t)||(oa(e),t&&t.response&&(t.response.data=It.call(e,e.transformResponse,t.response),t.response.headers=Rt.from(t.response.headers))),Promise.reject(t)}))}const sa=e=>e instanceof Rt?e.toJSON():e;function la(e,t){t=t||{};const n={};function a(e,t,n){return ue.isPlainObject(e)&&ue.isPlainObject(t)?ue.merge.call({caseless:n},e,t):ue.isPlainObject(t)?ue.merge({},t):ue.isArray(t)?t.slice():t}function i(e,t,n){return ue.isUndefined(t)?ue.isUndefined(e)?void 0:a(void 0,e,n):a(e,t,n)}function o(e,t){if(!ue.isUndefined(t))return a(void 0,t)}function r(e,t){return ue.isUndefined(t)?ue.isUndefined(e)?void 0:a(void 0,e):a(void 0,t)}function s(n,i,o){return o in t?a(n,i):o in e?a(void 0,n):void 0}const l={url:o,method:o,data:o,baseURL:r,transformRequest:r,transformResponse:r,paramsSerializer:r,timeout:r,timeoutMessage:r,withCredentials:r,adapter:r,responseType:r,xsrfCookieName:r,xsrfHeaderName:r,onUploadProgress:r,onDownloadProgress:r,decompress:r,maxContentLength:r,maxBodyLength:r,beforeRedirect:r,transport:r,httpAgent:r,httpsAgent:r,cancelToken:r,socketPath:r,responseEncoding:r,validateStatus:s,headers:(e,t)=>i(sa(e),sa(t),!0)};return ue.forEach(Object.keys(e).concat(Object.keys(t)),(function(a){const o=l[a]||i,r=o(e[a],t[a],a);ue.isUndefined(r)&&o!==s||(n[a]=r)})),n}const ca={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{ca[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));const da={};ca.transitional=function(e,t,n){function a(e,t){return"[Axios v1.3.4] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,i,o)=>{if(!1===e)throw new pe(a(i," has been removed"+(t?" in "+t:"")),pe.ERR_DEPRECATED);return t&&!da[i]&&(da[i]=!0,console.warn(a(i," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,i,o)}};var ua={assertOptions:function(e,t,n){if("object"!=typeof e)throw new pe("options must be an object",pe.ERR_BAD_OPTION_VALUE);const a=Object.keys(e);let i=a.length;for(;i-- >0;){const o=a[i],r=t[o];if(r){const t=e[o],n=void 0===t||r(t,o,e);if(!0!==n)throw new pe("option "+o+" must be "+n,pe.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new pe("Unknown option "+o,pe.ERR_BAD_OPTION)}},validators:ca};const pa=ua.validators;class ma{constructor(e){this.defaults=e,this.interceptors={request:new yt,response:new yt}}request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},t=la(this.defaults,t);const{transitional:n,paramsSerializer:a,headers:i}=t;let o;void 0!==n&&ua.assertOptions(n,{silentJSONParsing:pa.transitional(pa.boolean),forcedJSONParsing:pa.transitional(pa.boolean),clarifyTimeoutError:pa.transitional(pa.boolean)},!1),void 0!==a&&ua.assertOptions(a,{encode:pa.function,serialize:pa.function},!0),t.method=(t.method||this.defaults.method||"get").toLowerCase(),o=i&&ue.merge(i.common,i[t.method]),o&&ue.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete i[e]})),t.headers=Rt.concat(o,i);const r=[];let s=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(s=s&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));const l=[];let c;this.interceptors.response.forEach((function(e){l.push(e.fulfilled,e.rejected)}));let d,u=0;if(!s){const e=[ra.bind(this),void 0];for(e.unshift.apply(e,r),e.push.apply(e,l),d=e.length,c=Promise.resolve(t);u<d;)c=c.then(e[u++],e[u++]);return c}d=r.length;let p=t;for(u=0;u<d;){const e=r[u++],t=r[u++];try{p=e(p)}catch(e){t.call(this,e);break}}try{c=ra.call(this,p)}catch(e){return Promise.reject(e)}for(u=0,d=l.length;u<d;)c=c.then(l[u++],l[u++]);return c}getUri(e){return ft(At((e=la(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}ue.forEach(["delete","get","head","options"],(function(e){ma.prototype[e]=function(t,n){return this.request(la(n||{},{method:e,url:t,data:(n||{}).data}))}})),ue.forEach(["post","put","patch"],(function(e){function t(t){return function(n,a,i){return this.request(la(i||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:a}))}}ma.prototype[e]=t(),ma.prototype[e+"Form"]=t(!0)}));class ha{constructor(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const n=this;this.promise.then((e=>{if(!n._listeners)return;let t=n._listeners.length;for(;t-- >0;)n._listeners[t](e);n._listeners=null})),this.promise.then=e=>{let t;const a=new Promise((e=>{n.subscribe(e),t=e})).then(e);return a.cancel=function(){n.unsubscribe(t)},a},e((function(e,a,i){n.reason||(n.reason=new jt(e,a,i),t(n.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new ha((function(t){e=t})),cancel:e}}}const fa={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(fa).forEach((([e,t])=>{fa[t]=e}));const ya=function e(t){const n=new ma(t),a=A(ma.prototype.request,n);return ue.extend(a,ma.prototype,n,{allOwnKeys:!0}),ue.extend(a,n,null,{allOwnKeys:!0}),a.create=function(n){return e(la(t,n))},a}(xt);ya.Axios=ma,ya.CanceledError=jt,ya.CancelToken=ha,ya.isCancel=Tt,ya.VERSION=In,ya.toFormData=dt,ya.AxiosError=pe,ya.Cancel=ya.CanceledError,ya.all=function(e){return Promise.all(e)},ya.spread=function(e){return function(t){return e.apply(null,t)}},ya.isAxiosError=function(e){return ue.isObject(e)&&!0===e.isAxiosError},ya.mergeConfig=la,ya.AxiosHeaders=Rt,ya.formToJSON=e=>gt(ue.isHTMLForm(e)?new FormData(e):e),ya.HttpStatusCode=fa,ya.default=ya;var va=ya;const ba=async(e,t,n,a,i)=>{try{const{ItemsService:o}=e,r=new o(i,{schema:a,accountability:{admin:!0}});return await r.readByQuery({filter:t,fields:n})}catch(e){return e}};class ga{constructor(e){this.value=void 0,this.next=null,this.value=e}}class _a{constructor(){this.length=0,this.head=null,this.tail=null}push(e){const t=new ga(e);return this.length?this.tail.next=t:this.head=t,this.tail=t,this.length+=1,t}shift(){if(this.length){const e=this.head;return this.head=this.head.next,this.length-=1,e}return null}}class xa{constructor(e=!1){this.ignoreErrors=e,this.queue=new _a,this.pending=new Set,this.newPromise()}add(e){this.pending.add(e),e.then((t=>{this.pending.delete(e),0===this.queue.length&&this.resolvePromise(t),this.queue.push(t)})).catch((t=>{this.ignoreErrors&&this.queue.push(void 0),this.pending.delete(e),this.rejectPromise(t)}))}async waitAll(){await Promise.all(this.pending)}numTotal(){return this.pending.size+this.queue.length}numPending(){return this.pending.size}numQueued(){return this.queue.length}resolvePromise(e){this.resolve(e),this.newPromise()}rejectPromise(e){this.reject(e),this.newPromise()}newPromise(){this.nextPromise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}async wait(){return this.nextPromise}async fetch(){var e;if(0!==this.pending.size||0!==this.queue.length){for(;0===this.queue.length;)try{await this.wait()}catch(e){this.ignoreErrors||console.error("Unexpected Error in AsyncFifoQueue",e)}return null===(e=this.queue.shift())||void 0===e?void 0:e.value}}}class ka{static normalize(e){return Number.isFinite(e)?{type:"fixed",delay:e}:e||void 0}static calculate(e,t,n,a,i){if(e){const o=function(e,t){if(e.type in ka.builtinStrategies)return ka.builtinStrategies[e.type](e.delay);if(t)return t;throw new Error(`Unknown backoff strategy ${e.type}.\n      If a custom backoff strategy is used, specify it when the queue is created.`)}(e,i);return o(t,e.type,n,a)}}}var wa,Ea,Sa,Ka;ka.builtinStrategies={fixed:function(e){return function(){return e}},exponential:function(e){return function(t){return Math.round(Math.pow(2,t-1)*e)}}},function(e){e[e.Init=0]="Init",e[e.Start=1]="Start",e[e.Stop=2]="Stop"}(wa||(wa={})),function(e){e[e.JobNotExist=-1]="JobNotExist",e[e.JobLockNotExist=-2]="JobLockNotExist",e[e.JobNotInState=-3]="JobNotInState",e[e.JobPendingDependencies=-4]="JobPendingDependencies",e[e.ParentJobNotExist=-5]="ParentJobNotExist",e[e.JobLockMismatch=-6]="JobLockMismatch",e[e.ParentJobCannotBeReplaced=-7]="ParentJobCannotBeReplaced"}(Ea||(Ea={})),function(e){e[e.Completed=0]="Completed",e[e.Error=1]="Error",e[e.Failed=2]="Failed",e[e.InitFailed=3]="InitFailed",e[e.InitCompleted=4]="InitCompleted",e[e.Log=5]="Log",e[e.MoveToDelayed=6]="MoveToDelayed",e[e.Progress=7]="Progress",e[e.Update=8]="Update"}(Sa||(Sa={})),function(e){e[e.ONE_MINUTE=1]="ONE_MINUTE",e[e.FIVE_MINUTES=5]="FIVE_MINUTES",e[e.FIFTEEN_MINUTES=15]="FIFTEEN_MINUTES",e[e.THIRTY_MINUTES=30]="THIRTY_MINUTES",e[e.ONE_HOUR=60]="ONE_HOUR",e[e.ONE_WEEK=10080]="ONE_WEEK",e[e.TWO_WEEKS=20160]="TWO_WEEKS",e[e.ONE_MONTH=80640]="ONE_MONTH"}(Ka||(Ka={}));const Ra={1:"Uncaught Fatal Exception",2:"Unused",3:"Internal JavaScript Parse Error",4:"Internal JavaScript Evaluation Failure",5:"Fatal Error",6:"Non-function Internal Exception Handler",7:"Internal Exception Handler Run-Time Failure",8:"Unused",9:"Invalid Argument",10:"Internal JavaScript Run-Time Failure",12:"Invalid Debug Argument",13:"Unfinished Top-Level Await"};class Ia extends p.EventEmitter{constructor(e,t,n={useWorkerThreads:!1}){super(),this.mainFile=e,this.processFile=t,this.opts=n,this._exitCode=null,this._signalCode=null,this._killed=!1}get pid(){if(this.childProcess)return this.childProcess.pid;if(this.worker)return this.worker.threadId;throw new Error("No child process or worker thread")}get exitCode(){return this._exitCode}get signalCode(){return this._signalCode}get killed(){return this.childProcess?this.childProcess.killed:this._killed}async init(){const e=await ja(process.execArgv);let t;this.opts.useWorkerThreads?this.worker=t=new h.Worker(this.mainFile,{execArgv:e,stdin:!0,stdout:!0,stderr:!0}):this.childProcess=t=m.fork(this.mainFile,[],{execArgv:e,stdio:"pipe"}),t.on("exit",((e,n)=>{this._exitCode=e,n=void 0===n?null:n,this._signalCode=n,this._killed=!0,this.emit("exit",e,n),t.removeAllListeners(),this.removeAllListeners()})),t.on("error",((...e)=>this.emit("error",...e))),t.on("message",((...e)=>this.emit("message",...e))),t.on("close",((...e)=>this.emit("close",...e))),t.stdout.pipe(process.stdout),t.stderr.pipe(process.stderr),await this.initChild()}async send(e){return new Promise(((t,n)=>{this.childProcess?this.childProcess.send(e,(e=>{e?n(e):t()})):this.worker?t(this.worker.postMessage(e)):t()}))}killProcess(e="SIGKILL"){this.childProcess?this.childProcess.kill(e):this.worker&&this.worker.terminate()}async kill(e="SIGKILL",t){if(this.hasProcessExited())return;const n=(a=this.childProcess||this.worker,new Promise((e=>{a.once("exit",(()=>e()))})));var a;if(this.killProcess(e),void 0!==t&&(0===t||isFinite(t))){const e=setTimeout((()=>{this.hasProcessExited()||this.killProcess("SIGKILL")}),t);await n,clearTimeout(e)}await n}async initChild(){const e=new Promise(((e,t)=>{const n=i=>{if(i.cmd===Sa.InitCompleted)e();else if(i.cmd===Sa.InitFailed){const e=new Error;e.stack=i.err.stack,e.message=i.err.message,t(e)}this.off("message",n),this.off("close",a)},a=(e,i)=>{e>128&&(e-=128);t(new Error(`Error initializing child: ${Ra[e]||`Unknown exit code ${e}`} and signal ${i}`)),this.off("message",n),this.off("close",a)};this.on("message",n),this.on("close",a)}));await this.send({cmd:wa.Init,value:this.processFile}),await e}hasProcessExited(){return!(null===this.exitCode&&!this.signalCode)}}const Ta=async()=>new Promise((e=>{const t=d.createServer();t.listen(0,(()=>{const{port:n}=t.address();t.close((()=>e(n)))}))})),ja=async e=>{const t=[],n=[];for(let a=0;a<e.length;a++){const i=e[a];if(-1===i.indexOf("--inspect"))t.push(i);else{const e=i.split("=")[0],t=await Ta();n.push(`${e}=${t}`)}}return t.concat(n)};class Oa{constructor({mainFile:e=k.join(process.cwd(),"dist/cjs/classes/main.js"),useWorkerThreads:t}){this.retained={},this.free={},this.opts={mainFile:e,useWorkerThreads:t}}async retain(e){let t=this.getFree(e).pop();if(t)return this.retained[t.pid]=t,t;t=new Ia(this.opts.mainFile,e,{useWorkerThreads:this.opts.useWorkerThreads}),t.on("exit",this.remove.bind(this,t));try{return await t.init(),this.retained[t.pid]=t,t}catch(e){throw console.error(e),this.release(t),e}}release(e){delete this.retained[e.pid],this.getFree(e.processFile).push(e)}remove(e){delete this.retained[e.pid];const t=this.getFree(e.processFile),n=t.indexOf(e);n>-1&&t.splice(n,1)}async kill(e,t="SIGKILL"){return this.remove(e),e.kill(t,3e4)}async clean(){const e=Object.values(this.retained).concat(this.getAllFree());this.retained={},this.free={},await Promise.all(e.map((e=>this.kill(e,"SIGTERM"))))}getFree(e){return this.free[e]=this.free[e]||[]}getAllFree(){return Object.values(this.free).reduce(((e,t)=>e.concat(t)),[])}}var Aa={exports:{}},Ca={},Pa={},Na={acl:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},append:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},asking:{arity:1,flags:["fast"],keyStart:0,keyStop:0,step:0},auth:{arity:-2,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},bgrewriteaof:{arity:1,flags:["admin","noscript","no_async_loading"],keyStart:0,keyStop:0,step:0},bgsave:{arity:-1,flags:["admin","noscript","no_async_loading"],keyStart:0,keyStop:0,step:0},bitcount:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},bitfield:{arity:-2,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},bitfield_ro:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},bitop:{arity:-4,flags:["write","denyoom"],keyStart:2,keyStop:-1,step:1},bitpos:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},blmove:{arity:6,flags:["write","denyoom","noscript","blocking"],keyStart:1,keyStop:2,step:1},blmpop:{arity:-5,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},blpop:{arity:-3,flags:["write","noscript","blocking"],keyStart:1,keyStop:-2,step:1},brpop:{arity:-3,flags:["write","noscript","blocking"],keyStart:1,keyStop:-2,step:1},brpoplpush:{arity:4,flags:["write","denyoom","noscript","blocking"],keyStart:1,keyStop:2,step:1},bzmpop:{arity:-5,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},bzpopmax:{arity:-3,flags:["write","noscript","blocking","fast"],keyStart:1,keyStop:-2,step:1},bzpopmin:{arity:-3,flags:["write","noscript","blocking","fast"],keyStart:1,keyStop:-2,step:1},client:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},cluster:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},command:{arity:-1,flags:["loading","stale"],keyStart:0,keyStop:0,step:0},config:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},copy:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},dbsize:{arity:1,flags:["readonly","fast"],keyStart:0,keyStop:0,step:0},debug:{arity:-2,flags:["admin","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},decr:{arity:2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},decrby:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},del:{arity:-2,flags:["write"],keyStart:1,keyStop:-1,step:1},discard:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},dump:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},echo:{arity:2,flags:["fast"],keyStart:0,keyStop:0,step:0},eval:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},eval_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},evalsha:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},evalsha_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},exec:{arity:1,flags:["noscript","loading","stale","skip_slowlog"],keyStart:0,keyStop:0,step:0},exists:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},expire:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},expireat:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},expiretime:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},failover:{arity:-1,flags:["admin","noscript","stale"],keyStart:0,keyStop:0,step:0},fcall:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},fcall_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},flushall:{arity:-1,flags:["write"],keyStart:0,keyStop:0,step:0},flushdb:{arity:-1,flags:["write"],keyStart:0,keyStop:0,step:0},function:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},geoadd:{arity:-5,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},geodist:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},geohash:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},geopos:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},georadius:{arity:-6,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},georadius_ro:{arity:-6,flags:["readonly"],keyStart:1,keyStop:1,step:1},georadiusbymember:{arity:-5,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},georadiusbymember_ro:{arity:-5,flags:["readonly"],keyStart:1,keyStop:1,step:1},geosearch:{arity:-7,flags:["readonly"],keyStart:1,keyStop:1,step:1},geosearchstore:{arity:-8,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},get:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},getbit:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},getdel:{arity:2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},getex:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},getrange:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},getset:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hdel:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},hello:{arity:-1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},hexists:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hget:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hgetall:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hincrby:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hincrbyfloat:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hkeys:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hmget:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hmset:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hrandfield:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},hset:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hsetnx:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hstrlen:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hvals:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},incr:{arity:2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},incrby:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},incrbyfloat:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},info:{arity:-1,flags:["loading","stale"],keyStart:0,keyStop:0,step:0},keys:{arity:2,flags:["readonly"],keyStart:0,keyStop:0,step:0},lastsave:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},latency:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},lcs:{arity:-3,flags:["readonly"],keyStart:1,keyStop:2,step:1},lindex:{arity:3,flags:["readonly"],keyStart:1,keyStop:1,step:1},linsert:{arity:5,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},llen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},lmove:{arity:5,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},lmpop:{arity:-4,flags:["write","movablekeys"],keyStart:0,keyStop:0,step:0},lolwut:{arity:-1,flags:["readonly","fast"],keyStart:0,keyStop:0,step:0},lpop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},lpos:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},lpush:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},lpushx:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},lrange:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},lrem:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},lset:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},ltrim:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},memory:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},mget:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},migrate:{arity:-6,flags:["write","movablekeys"],keyStart:3,keyStop:3,step:1},module:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},monitor:{arity:1,flags:["admin","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},move:{arity:3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},mset:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:2},msetnx:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:2},multi:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},object:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},persist:{arity:2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpire:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpireat:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpiretime:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},pfadd:{arity:-2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},pfcount:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},pfdebug:{arity:3,flags:["write","denyoom","admin"],keyStart:2,keyStop:2,step:1},pfmerge:{arity:-2,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},pfselftest:{arity:1,flags:["admin"],keyStart:0,keyStop:0,step:0},ping:{arity:-1,flags:["fast"],keyStart:0,keyStop:0,step:0},psetex:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},psubscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},psync:{arity:-3,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},pttl:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},publish:{arity:3,flags:["pubsub","loading","stale","fast"],keyStart:0,keyStop:0,step:0},pubsub:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},punsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},quit:{arity:-1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},randomkey:{arity:1,flags:["readonly"],keyStart:0,keyStop:0,step:0},readonly:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},readwrite:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},rename:{arity:3,flags:["write"],keyStart:1,keyStop:2,step:1},renamenx:{arity:3,flags:["write","fast"],keyStart:1,keyStop:2,step:1},replconf:{arity:-1,flags:["admin","noscript","loading","stale","allow_busy"],keyStart:0,keyStop:0,step:0},replicaof:{arity:3,flags:["admin","noscript","stale","no_async_loading"],keyStart:0,keyStop:0,step:0},reset:{arity:1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},restore:{arity:-4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},"restore-asking":{arity:-4,flags:["write","denyoom","asking"],keyStart:1,keyStop:1,step:1},role:{arity:1,flags:["noscript","loading","stale","fast"],keyStart:0,keyStop:0,step:0},rpop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},rpoplpush:{arity:3,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},rpush:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},rpushx:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},sadd:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},save:{arity:1,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},scan:{arity:-2,flags:["readonly"],keyStart:0,keyStop:0,step:0},scard:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},script:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},sdiff:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sdiffstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},select:{arity:2,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},set:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setbit:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setex:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setnx:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},setrange:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},shutdown:{arity:-1,flags:["admin","noscript","loading","stale","no_multi","allow_busy"],keyStart:0,keyStop:0,step:0},sinter:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sintercard:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},sinterstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},sismember:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},slaveof:{arity:3,flags:["admin","noscript","stale","no_async_loading"],keyStart:0,keyStop:0,step:0},slowlog:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},smembers:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},smismember:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},smove:{arity:4,flags:["write","fast"],keyStart:1,keyStop:2,step:1},sort:{arity:-2,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},sort_ro:{arity:-2,flags:["readonly","movablekeys"],keyStart:1,keyStop:1,step:1},spop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},spublish:{arity:3,flags:["pubsub","loading","stale","fast"],keyStart:1,keyStop:1,step:1},srandmember:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},srem:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},sscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},ssubscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:1,keyStop:-1,step:1},strlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},subscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},substr:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},sunion:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sunionstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},sunsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:1,keyStop:-1,step:1},swapdb:{arity:3,flags:["write","fast"],keyStart:0,keyStop:0,step:0},sync:{arity:1,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},time:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},touch:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},ttl:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},type:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},unlink:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:-1,step:1},unsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},unwatch:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},wait:{arity:3,flags:["noscript"],keyStart:0,keyStop:0,step:0},watch:{arity:-2,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:1,keyStop:-1,step:1},xack:{arity:-4,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xadd:{arity:-5,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},xautoclaim:{arity:-6,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xclaim:{arity:-6,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xdel:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xgroup:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},xinfo:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},xlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},xpending:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},xrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},xread:{arity:-4,flags:["readonly","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},xreadgroup:{arity:-7,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},xrevrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},xsetid:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},xtrim:{arity:-4,flags:["write"],keyStart:1,keyStop:1,step:1},zadd:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},zcard:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zcount:{arity:4,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zdiff:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zdiffstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},zincrby:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},zinter:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zintercard:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zinterstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},zlexcount:{arity:4,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zmpop:{arity:-4,flags:["write","movablekeys"],keyStart:0,keyStop:0,step:0},zmscore:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zpopmax:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zpopmin:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zrandmember:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangebylex:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangebyscore:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangestore:{arity:-5,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},zrank:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zrem:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zremrangebylex:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zremrangebyrank:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zremrangebyscore:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zrevrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrangebylex:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrangebyscore:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrank:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},zscore:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zunion:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zunionstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1}};!function(e){var t=j&&j.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e,"__esModule",{value:!0}),e.getKeyIndexes=e.hasFlag=e.exists=e.list=void 0;const n=t(Na);e.list=Object.keys(n.default);const a={};function i(e){"string"!=typeof e&&(e=String(e));const t=e.indexOf("->");return-1===t?e.length:t}e.list.forEach((e=>{a[e]=n.default[e].flags.reduce((function(e,t){return e[t]=!0,e}),{})})),e.exists=function(e){return Boolean(n.default[e])},e.hasFlag=function(e,t){if(!a[e])throw new Error("Unknown command "+e);return Boolean(a[e][t])},e.getKeyIndexes=function(e,t,a){const o=n.default[e];if(!o)throw new Error("Unknown command "+e);if(!Array.isArray(t))throw new Error("Expect args to be an array");const r=[],s=Boolean(a&&a.parseExternalKey),l=(e,t)=>{const n=[],a=Number(e[t]);for(let e=0;e<a;e++)n.push(e+t+1);return n},c=(e,t,n)=>{for(let a=t;a<e.length-1;a+=1)if(String(e[a]).toLowerCase()===n.toLowerCase())return a+1;return null};switch(e){case"zunionstore":case"zinterstore":case"zdiffstore":r.push(0,...l(t,1));break;case"eval":case"evalsha":case"eval_ro":case"evalsha_ro":case"fcall":case"fcall_ro":case"blmpop":case"bzmpop":r.push(...l(t,1));break;case"sintercard":case"lmpop":case"zunion":case"zinter":case"zmpop":case"zintercard":case"zdiff":r.push(...l(t,0));break;case"georadius":{r.push(0);const e=c(t,5,"STORE");e&&r.push(e);const n=c(t,5,"STOREDIST");n&&r.push(n);break}case"georadiusbymember":{r.push(0);const e=c(t,4,"STORE");e&&r.push(e);const n=c(t,4,"STOREDIST");n&&r.push(n);break}case"sort":case"sort_ro":r.push(0);for(let e=1;e<t.length-1;e++){let n=t[e];if("string"!=typeof n)continue;const a=n.toUpperCase();"GET"===a?(e+=1,n=t[e],"#"!==n&&(s?r.push([e,i(n)]):r.push(e))):"BY"===a?(e+=1,s?r.push([e,i(t[e])]):r.push(e)):"STORE"===a&&(e+=1,r.push(e))}break;case"migrate":if(""===t[2])for(let e=5;e<t.length-1;e++){const n=t[e];if("string"==typeof n&&"KEYS"===n.toUpperCase()){for(let n=e+1;n<t.length;n++)r.push(n);break}}else r.push(2);break;case"xreadgroup":case"xread":for(let n="xread"===e?0:3;n<t.length-1;n++)if("STREAMS"===String(t[n]).toUpperCase()){for(let e=n+1;e<=n+(t.length-1-n)/2;e++)r.push(e);break}break;default:if(o.step>0){const e=o.keyStart-1,n=o.keyStop>0?o.keyStop:t.length+o.keyStop+1;for(let t=e;t<n;t+=o.step)r.push(t)}}return r}}(Pa);var Da={},Ma={};!function(e){let t;function n(n,a){try{const e=t;return t=null,e.apply(this,arguments)}catch(t){return e.errorObj.e=t,e.errorObj}}Object.defineProperty(e,"__esModule",{value:!0}),e.tryCatch=e.errorObj=void 0,e.errorObj={e:{}},e.tryCatch=function(e){return t=e,n}}(Ma),Object.defineProperty(Da,"__esModule",{value:!0});const La=Ma;function Fa(e){setTimeout((function(){throw e}),0)}Da.default=function(e,t,n){return"function"==typeof t&&e.then((e=>{let a;a=void 0!==n&&Object(n).spread&&Array.isArray(e)?La.tryCatch(t).apply(void 0,[null].concat(e)):void 0===e?La.tryCatch(t)(null):La.tryCatch(t)(null,e),a===La.errorObj&&Fa(a.e)}),(e=>{if(!e){const t=new Error(e+"");Object.assign(t,{cause:e}),e=t}const n=La.tryCatch(t)(e);n===La.errorObj&&Fa(n.e)})),e};var Ua,qa,Ja,Va,Ga={};const Ba=process.version.charCodeAt(1)<55&&46===process.version.charCodeAt(2)?function(){if(qa)return Ua;qa=1;const e=l,n=t;function a(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function i(t,n,a){e(n),e.strictEqual(typeof a,"number"),Object.defineProperty(this,"message",{value:t||"",configurable:!0,writable:!0});const i=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=i,this.offset=a,this.buffer=n}function o(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0});const t=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=t}function r(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function s(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}return n.inherits(a,Error),Object.defineProperty(a.prototype,"name",{value:"RedisError",configurable:!0,writable:!0}),n.inherits(i,a),Object.defineProperty(i.prototype,"name",{value:"ParserError",configurable:!0,writable:!0}),n.inherits(o,a),Object.defineProperty(o.prototype,"name",{value:"ReplyError",configurable:!0,writable:!0}),n.inherits(r,a),Object.defineProperty(r.prototype,"name",{value:"AbortError",configurable:!0,writable:!0}),n.inherits(s,r),Object.defineProperty(s.prototype,"name",{value:"InterruptError",configurable:!0,writable:!0}),Ua={RedisError:a,ParserError:i,ReplyError:o,AbortError:r,InterruptError:s}}():function(){if(Va)return Ja;Va=1;const e=l;class t extends Error{get name(){return this.constructor.name}}class n extends t{get name(){return this.constructor.name}}return Ja={RedisError:t,ParserError:class extends t{constructor(t,n,a){e(n),e.strictEqual(typeof a,"number");const i=Error.stackTraceLimit;Error.stackTraceLimit=2,super(t),Error.stackTraceLimit=i,this.offset=a,this.buffer=n}get name(){return this.constructor.name}},ReplyError:class extends t{constructor(e){const t=Error.stackTraceLimit;Error.stackTraceLimit=2,super(e),Error.stackTraceLimit=t}get name(){return this.constructor.name}},AbortError:n,InterruptError:class extends n{get name(){return this.constructor.name}}},Ja}();var za=Ba,Ya={},$a={exports:{}},Wa=[0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920],Ha=$a.exports=function(e){for(var t,n=0,a=-1,i=0,o=0,r="string"==typeof e?function(e){for(var t,n=0,a=0,i=[],o=e.length;n<o;n++)(t=e.charCodeAt(n))<128?i[a++]=t:t<2048?(i[a++]=t>>6|192,i[a++]=63&t|128):55296==(64512&t)&&n+1<e.length&&56320==(64512&e.charCodeAt(n+1))?(t=65536+((1023&t)<<10)+(1023&e.charCodeAt(++n)),i[a++]=t>>18|240,i[a++]=t>>12&63|128,i[a++]=t>>6&63|128,i[a++]=63&t|128):(i[a++]=t>>12|224,i[a++]=t>>6&63|128,i[a++]=63&t|128);return i}(e):e,s=r.length;n<s;){if(t=r[n++],-1===a)123===t&&(a=n);else if(125!==t)o=Wa[255&(t^o>>8)]^o<<8;else if(n-1!==a)return 16383&o;i=Wa[255&(t^i>>8)]^i<<8}return 16383&i};$a.exports.generateMulti=function(e){for(var t=1,n=e.length,a=Ha(e[0]);t<n;)if(Ha(e[t++])!==a)return-1;return a};var Qa={},Za={},Xa=9007199254740991,ei="[object Arguments]",ti="[object Function]",ni="[object GeneratorFunction]",ai=/^(?:0|[1-9]\d*)$/;function ii(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}var oi=Object.prototype,ri=oi.hasOwnProperty,si=oi.toString,li=oi.propertyIsEnumerable,ci=Math.max;function di(e,t){var n=vi(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&bi(e)}(e)&&ri.call(e,"callee")&&(!li.call(e,"callee")||si.call(e)==ei)}(e)?function(e,t){for(var n=-1,a=Array(e);++n<e;)a[n]=t(n);return a}(e.length,String):[],a=n.length,i=!!a;for(var o in e)!t&&!ri.call(e,o)||i&&("length"==o||fi(o,a))||n.push(o);return n}function ui(e,t,n,a){return void 0===e||yi(e,oi[n])&&!ri.call(a,n)?t:e}function pi(e,t,n){var a=e[t];ri.call(e,t)&&yi(a,n)&&(void 0!==n||t in e)||(e[t]=n)}function mi(e){if(!gi(e))return function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}(e);var t,n,a,i=(n=(t=e)&&t.constructor,a="function"==typeof n&&n.prototype||oi,t===a),o=[];for(var r in e)("constructor"!=r||!i&&ri.call(e,r))&&o.push(r);return o}function hi(e,t){return t=ci(void 0===t?e.length-1:t,0),function(){for(var n=arguments,a=-1,i=ci(n.length-t,0),o=Array(i);++a<i;)o[a]=n[t+a];a=-1;for(var r=Array(t+1);++a<t;)r[a]=n[a];return r[t]=o,ii(e,this,r)}}function fi(e,t){return!!(t=null==t?Xa:t)&&("number"==typeof e||ai.test(e))&&e>-1&&e%1==0&&e<t}function yi(e,t){return e===t||e!=e&&t!=t}var vi=Array.isArray;function bi(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=Xa}(e.length)&&!function(e){var t=gi(e)?si.call(e):"";return t==ti||t==ni}(e)}function gi(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var _i,xi=(_i=function(e,t,n,a){!function(e,t,n,a){n||(n={});for(var i=-1,o=t.length;++i<o;){var r=t[i],s=a?a(n[r],e[r],r,n,e):void 0;pi(n,r,void 0===s?e[r]:s)}}(t,function(e){return bi(e)?di(e,!0):mi(e)}(t),e,a)},hi((function(e,t){var n=-1,a=t.length,i=a>1?t[a-1]:void 0,o=a>2?t[2]:void 0;for(i=_i.length>3&&"function"==typeof i?(a--,i):void 0,o&&function(e,t,n){if(!gi(n))return!1;var a=typeof t;return!!("number"==a?bi(n)&&fi(t,n.length):"string"==a&&t in n)&&yi(n[t],e)}(t[0],t[1],o)&&(i=a<3?void 0:i,a=1),e=Object(e);++n<a;){var r=t[n];r&&_i(e,r,n,i)}return e})));var ki=hi((function(e){return e.push(void 0,ui),ii(xi,void 0,e)})),wi=9007199254740991,Ei="[object Function]",Si="[object GeneratorFunction]",Ki=Object.prototype,Ri=Ki.hasOwnProperty,Ii=Ki.toString,Ti=Ki.propertyIsEnumerable;var ji=function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=wi}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?Ii.call(e):"";return t==Ei||t==Si}(e)}(e)}(e)&&Ri.call(e,"callee")&&(!Ti.call(e,"callee")||"[object Arguments]"==Ii.call(e))};Object.defineProperty(Za,"__esModule",{value:!0}),Za.isArguments=Za.defaults=Za.noop=void 0;const Oi=ki;Za.defaults=Oi;const Ai=ji;Za.isArguments=Ai,Za.noop=function(){};var Ci,Pi,Ni,Di,Mi,Li={},Fi={exports:{}},Ui={exports:{}};function qi(){if(Pi)return Ci;Pi=1;var e=1e3,t=60*e,n=60*t,a=24*n,i=7*a,o=365.25*a;function r(e,t,n,a){var i=t>=1.5*n;return Math.round(e/n)+" "+a+(i?"s":"")}return Ci=function(s,l){l=l||{};var c=typeof s;if("string"===c&&s.length>0)return function(r){if((r=String(r)).length>100)return;var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!s)return;var l=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return l*o;case"weeks":case"week":case"w":return l*i;case"days":case"day":case"d":return l*a;case"hours":case"hour":case"hrs":case"hr":case"h":return l*n;case"minutes":case"minute":case"mins":case"min":case"m":return l*t;case"seconds":case"second":case"secs":case"sec":case"s":return l*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return}}(s);if("number"===c&&isFinite(s))return l.long?function(i){var o=Math.abs(i);if(o>=a)return r(i,o,a,"day");if(o>=n)return r(i,o,n,"hour");if(o>=t)return r(i,o,t,"minute");if(o>=e)return r(i,o,e,"second");return i+" ms"}(s):function(i){var o=Math.abs(i);if(o>=a)return Math.round(i/a)+"d";if(o>=n)return Math.round(i/n)+"h";if(o>=t)return Math.round(i/t)+"m";if(o>=e)return Math.round(i/e)+"s";return i+"ms"}(s);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(s))},Ci}function Ji(){if(Di)return Ni;return Di=1,Ni=function(e){function t(e){let a,i,o,r=null;function s(...e){if(!s.enabled)return;const n=s,i=Number(new Date),o=i-(a||i);n.diff=o,n.prev=a,n.curr=i,a=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((a,i)=>{if("%%"===a)return"%";r++;const o=t.formatters[i];if("function"==typeof o){const t=e[r];a=o.call(n,t),e.splice(r,1),r--}return a})),t.formatArgs.call(n,e);(n.log||t.log).apply(n,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=n,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(i!==t.namespaces&&(i=t.namespaces,o=t.enabled(e)),o),set:e=>{r=e}}),"function"==typeof t.init&&t.init(s),s}function n(e,n){const a=t(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(a),...t.skips.map(a).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"==typeof e?e:"").split(/[\s,]+/),i=a.length;for(n=0;n<i;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=qi(),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t},Ni}var Vi,Gi,Bi,zi,Yi,$i={exports:{}};function Wi(){return Gi||(Gi=1,Vi=(e,t=process.argv)=>{const n=e.startsWith("-")?"":1===e.length?"-":"--",a=t.indexOf(n+e),i=t.indexOf("--");return-1!==a&&(-1===i||a<i)}),Vi}function Hi(){return Yi||(Yi=1,function(e,n){const a=c,i=t;n.init=function(e){e.inspectOpts={};const t=Object.keys(n.inspectOpts);for(let a=0;a<t.length;a++)e.inspectOpts[t[a]]=n.inspectOpts[t[a]]},n.log=function(...e){return process.stderr.write(i.formatWithOptions(n.inspectOpts,...e)+"\n")},n.formatArgs=function(t){const{namespace:a,useColors:i}=this;if(i){const n=this.color,i="[3"+(n<8?n:"8;5;"+n),o=`  ${i};1m${a} [0m`;t[0]=o+t[0].split("\n").join("\n"+o),t.push(i+"m+"+e.exports.humanize(this.diff)+"[0m")}else t[0]=function(){if(n.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}()+a+" "+t[0]},n.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},n.load=function(){return process.env.DEBUG},n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):a.isatty(process.stderr.fd)},n.destroy=i.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),n.colors=[6,2,3,4,5,1];try{const e=function(){if(zi)return Bi;zi=1;const e=f,t=c,n=Wi(),{env:a}=process;let i;function o(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function r(t,o){if(0===i)return 0;if(n("color=16m")||n("color=full")||n("color=truecolor"))return 3;if(n("color=256"))return 2;if(t&&!o&&void 0===i)return 0;const r=i||0;if("dumb"===a.TERM)return r;if("win32"===process.platform){const t=e.release().split(".");return Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if("CI"in a)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in a))||"codeship"===a.CI_NAME?1:r;if("TEAMCITY_VERSION"in a)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(a.TEAMCITY_VERSION)?1:0;if("truecolor"===a.COLORTERM)return 3;if("TERM_PROGRAM"in a){const e=parseInt((a.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(a.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(a.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(a.TERM)||"COLORTERM"in a?1:r}return n("no-color")||n("no-colors")||n("color=false")||n("color=never")?i=0:(n("color")||n("colors")||n("color=true")||n("color=always"))&&(i=1),"FORCE_COLOR"in a&&(i="true"===a.FORCE_COLOR?1:"false"===a.FORCE_COLOR?0:0===a.FORCE_COLOR.length?1:Math.min(parseInt(a.FORCE_COLOR,10),3)),Bi={supportsColor:function(e){return o(r(e,e&&e.isTTY))},stdout:o(r(!0,t.isatty(1))),stderr:o(r(!0,t.isatty(2)))},Bi}();e&&(e.stderr||e).level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}n.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const n=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let a=process.env[t];return a=!!/^(yes|on|true|enabled)$/i.test(a)||!/^(no|off|false|disabled)$/i.test(a)&&("null"===a?null:Number(a)),e[n]=a,e}),{}),e.exports=Ji()(n);const{formatters:o}=e.exports;o.o=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")},o.O=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts)}}($i,$i.exports)),$i.exports}!function(e){"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=(Mi||(Mi=1,function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(i=a))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=Ji()(t);const{formatters:n}=e.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}(Ui,Ui.exports)),Ui.exports):e.exports=Hi()}(Fi),Object.defineProperty(Li,"__esModule",{value:!0}),Li.genRedactedString=Li.getStringValue=Li.MAX_ARGUMENT_LENGTH=void 0;const Qi=Fi.exports;Li.MAX_ARGUMENT_LENGTH=200;function Zi(e){if(null!==e)switch(typeof e){case"boolean":case"number":return;case"object":if(Buffer.isBuffer(e))return e.toString("hex");if(Array.isArray(e))return e.join(",");try{return JSON.stringify(e)}catch(e){return}case"string":return e}}function Xi(e,t){const{length:n}=e;return n<=t?e:e.slice(0,t)+' ... <REDACTED full-length="'+n+'">'}Li.getStringValue=Zi,Li.genRedactedString=Xi,Li.default=function(e){const t=(0,Qi.default)(`ioredis:${e}`);function n(...e){if(t.enabled){for(let t=1;t<e.length;t++){const n=Zi(e[t]);"string"==typeof n&&n.length>200&&(e[t]=Xi(n,200))}return t.apply(null,e)}}return Object.defineProperties(n,{namespace:{get:()=>t.namespace},enabled:{get:()=>t.enabled},destroy:{get:()=>t.destroy},log:{get:()=>t.log,set(e){t.log=e}}}),n};var eo={};Object.defineProperty(eo,"__esModule",{value:!0});const to="-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIJAKSVpiDswLcwMA0GCSqGSIb3DQEBBQUAMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTAeFw0xMzEwMDExMjE0NTVaFw0yMzA5MjkxMjE0NTVaMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZqkh/DczWP\nJnxnHLQ7QL0T4B4CDKWBKCcisriGbA6ZePWVNo4hfKQC6JrzfR+081NeD6VcWUiz\nrmd+jtPhIY4c+WVQYm5PKaN6DT1imYdxQw7aqO5j2KUCEh/cznpLxeSHoTxlR34E\nQwF28Wl3eg2vc5ct8LjU3eozWVk3gb7alx9mSA2SgmuX5lEQawl++rSjsBStemY2\nBDwOpAMXIrdEyP/cVn8mkvi/BDs5M5G+09j0gfhyCzRWMQ7Hn71u1eolRxwVxgi3\nTMn+/vTaFSqxKjgck6zuAYjBRPaHe7qLxHNr1So/Mc9nPy+3wHebFwbIcnUojwbp\n4nctkWbjb2cCAwEAAaNQME4wHQYDVR0OBBYEFP1whtcrydmW3ZJeuSoKZIKjze3w\nMB8GA1UdIwQYMBaAFP1whtcrydmW3ZJeuSoKZIKjze3wMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAG2erXhwRAa7+ZOBs0B6X57Hwyd1R4kfmXcs0rta\nlbPpvgULSiB+TCbf3EbhJnHGyvdCY1tvlffLjdA7HJ0PCOn+YYLBA0pTU/dyvrN6\nSu8NuS5yubnt9mb13nDGYo1rnt0YRfxN+8DM3fXIVr038A30UlPX2Ou1ExFJT0MZ\nuFKY6ZvLdI6/1cbgmguMlAhM+DhKyV6Sr5699LM3zqeI816pZmlREETYkGr91q7k\nBpXJu/dtHaGxg1ZGu6w/PCsYGUcECWENYD4VQPd8N32JjOfu6vEgoEAwfPP+3oGp\nZ4m3ewACcWOAenqflb+cQYC4PsF7qbXDmRaWrbKntOlZ3n0=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGMTCCBBmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwajELMAkGA1UEBhMCVVMx\nCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJzMS0w\nKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcN\nMTgwMjI1MTUzNzM3WhcNMjgwMjIzMTUzNzM3WjBfMQswCQYDVQQGEwJVUzELMAkG\nA1UECAwCQ0ExEjAQBgNVBAoMCVJlZGlzTGFiczEvMC0GA1UEAwwmUkNQIEludGVy\nbWVkaWF0ZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUA\nA4ICDwAwggIKAoICAQDf9dqbxc8Bq7Ctq9rWcxrGNKKHivqLAFpPq02yLPx6fsOv\nTq7GsDChAYBBc4v7Y2Ap9RD5Vs3dIhEANcnolf27QwrG9RMnnvzk8pCvp1o6zSU4\nVuOE1W66/O1/7e2rVxyrnTcP7UgK43zNIXu7+tiAqWsO92uSnuMoGPGpeaUm1jym\nhjWKtkAwDFSqvHY+XL5qDVBEjeUe+WHkYUg40cAXjusAqgm2hZt29c2wnVrxW25W\nP0meNlzHGFdA2AC5z54iRiqj57dTfBTkHoBczQxcyw6hhzxZQ4e5I5zOKjXXEhZN\nr0tA3YC14CTabKRus/JmZieyZzRgEy2oti64tmLYTqSlAD78pRL40VNoaSYetXLw\nhhNsXCHgWaY6d5bLOc/aIQMAV5oLvZQKvuXAF1IDmhPA+bZbpWipp0zagf1P1H3s\nUzsMdn2KM0ejzgotbtNlj5TcrVwpmvE3ktvUAuA+hi3FkVx1US+2Gsp5x4YOzJ7u\nP1WPk6ShF0JgnJH2ILdj6kttTWwFzH17keSFICWDfH/+kM+k7Y1v3EXMQXE7y0T9\nMjvJskz6d/nv+sQhY04xt64xFMGTnZjlJMzfQNi7zWFLTZnDD0lPowq7l3YiPoTT\nt5Xky83lu0KZsZBo0WlWaDG00gLVdtRgVbcuSWxpi5BdLb1kRab66JptWjxwXQID\nAQABo4HrMIHoMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHBzOi8vcmwtY2Etc2VydmVy\nLnJlZGlzbGFicy5jb20vdjEvY3JsMEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcw\nAYYqaHR0cHM6Ly9ybC1jYS1zZXJ2ZXIucmVkaXNsYWJzLmNvbS92MS9vY3NwMB0G\nA1UdDgQWBBQHar5OKvQUpP2qWt6mckzToeCOHDAfBgNVHSMEGDAWgBQi42wH6hM4\nL2sujEvLM0/u8lRXTzASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIB\nhjANBgkqhkiG9w0BAQsFAAOCAgEAirEn/iTsAKyhd+pu2W3Z5NjCko4NPU0EYUbr\nAP7+POK2rzjIrJO3nFYQ/LLuC7KCXG+2qwan2SAOGmqWst13Y+WHp44Kae0kaChW\nvcYLXXSoGQGC8QuFSNUdaeg3RbMDYFT04dOkqufeWVccoHVxyTSg9eD8LZuHn5jw\n7QDLiEECBmIJHk5Eeo2TAZrx4Yx6ufSUX5HeVjlAzqwtAqdt99uCJ/EL8bgpWbe+\nXoSpvUv0SEC1I1dCAhCKAvRlIOA6VBcmzg5Am12KzkqTul12/VEFIgzqu0Zy2Jbc\nAUPrYVu/+tOGXQaijy7YgwH8P8n3s7ZeUa1VABJHcxrxYduDDJBLZi+MjheUDaZ1\njQRHYevI2tlqeSBqdPKG4zBY5lS0GiAlmuze5oENt0P3XboHoZPHiqcK3VECgTVh\n/BkJcuudETSJcZDmQ8YfoKfBzRQNg2sv/hwvUv73Ss51Sco8GEt2lD8uEdib1Q6z\nzDT5lXJowSzOD5ZA9OGDjnSRL+2riNtKWKEqvtEG3VBJoBzu9GoxbAc7wIZLxmli\niF5a/Zf5X+UXD3s4TMmy6C4QZJpAA2egsSQCnraWO2ULhh7iXMysSkF/nzVfZn43\niqpaB8++9a37hWq14ZmOv0TJIDz//b2+KC4VFXWQ5W5QC6whsjT+OlG4p5ZYG0jo\n616pxqo=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFujCCA6KgAwIBAgIJAJ1aTT1lu2ScMA0GCSqGSIb3DQEBCwUAMGoxCzAJBgNV\nBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCQ0ExEjAQBgNVBAoMCVJlZGlz\nTGFiczEtMCsGA1UEAwwkUmVkaXNMYWJzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9y\naXR5MB4XDTE4MDIyNTE1MjA0MloXDTM4MDIyMDE1MjA0MlowajELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJz\nMS0wKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw\nggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDLEjXy7YrbN5Waau5cd6g1\nG5C2tMmeTpZ0duFAPxNU4oE3RHS5gGiok346fUXuUxbZ6QkuzeN2/2Z+RmRcJhQY\nDm0ZgdG4x59An1TJfnzKKoWj8ISmoHS/TGNBdFzXV7FYNLBuqZouqePI6ReC6Qhl\npp45huV32Q3a6IDrrvx7Wo5ZczEQeFNbCeCOQYNDdTmCyEkHqc2AGo8eoIlSTutT\nULOC7R5gzJVTS0e1hesQ7jmqHjbO+VQS1NAL4/5K6cuTEqUl+XhVhPdLWBXJQ5ag\n54qhX4v+ojLzeU1R/Vc6NjMvVtptWY6JihpgplprN0Yh2556ewcXMeturcKgXfGJ\nxeYzsjzXerEjrVocX5V8BNrg64NlifzTMKNOOv4fVZszq1SIHR8F9ROrqiOdh8iC\nJpUbLpXH9hWCSEO6VRMB2xJoKu3cgl63kF30s77x7wLFMEHiwsQRKxooE1UhgS9K\n2sO4TlQ1eWUvFvHSTVDQDlGQ6zu4qjbOpb3Q8bQwoK+ai2alkXVR4Ltxe9QlgYK3\nStsnPhruzZGA0wbXdpw0bnM+YdlEm5ffSTpNIfgHeaa7Dtb801FtA71ZlH7A6TaI\nSIQuUST9EKmv7xrJyx0W1pGoPOLw5T029aTjnICSLdtV9bLwysrLhIYG5bnPq78B\ncS+jZHFGzD7PUVGQD01nOQIDAQABo2MwYTAdBgNVHQ4EFgQUIuNsB+oTOC9rLoxL\nyzNP7vJUV08wHwYDVR0jBBgwFoAUIuNsB+oTOC9rLoxLyzNP7vJUV08wDwYDVR0T\nAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAHfg\nz5pMNUAKdMzK1aS1EDdK9yKz4qicILz5czSLj1mC7HKDRy8cVADUxEICis++CsCu\nrYOvyCVergHQLREcxPq4rc5Nq1uj6J6649NEeh4WazOOjL4ZfQ1jVznMbGy+fJm3\n3Hoelv6jWRG9iqeJZja7/1s6YC6bWymI/OY1e4wUKeNHAo+Vger7MlHV+RuabaX+\nhSJ8bJAM59NCM7AgMTQpJCncrcdLeceYniGy5Q/qt2b5mJkQVkIdy4TPGGB+AXDJ\nD0q3I/JDRkDUFNFdeW0js7fHdsvCR7O3tJy5zIgEV/o/BCkmJVtuwPYOrw/yOlKj\nTY/U7ATAx9VFF6/vYEOMYSmrZlFX+98L6nJtwDqfLB5VTltqZ4H/KBxGE3IRSt9l\nFXy40U+LnXzhhW+7VBAvyYX8GEXhHkKU8Gqk1xitrqfBXY74xKgyUSTolFSfFVgj\nmcM/X4K45bka+qpkj7Kfv/8D4j6aZekwhN2ly6hhC1SmQ8qjMjpG/mrWOSSHZFmf\nybu9iD2AYHeIOkshIl6xYIa++Q/00/vs46IzAbQyriOi0XxlSMMVtPx0Q3isp+ji\nn8Mq9eOuxYOEQ4of8twUkUDd528iwGtEdwf0Q01UyT84S62N8AySl1ZBKXJz6W4F\nUhWfa/HQYOAPDdEjNgnVwLI23b8t0TozyCWw7q8h\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIEjzCCA3egAwIBAgIQe55B/ALCKJDZtdNT8kD6hTANBgkqhkiG9w0BAQsFADBM\nMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xv\nYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjAeFw0yMjAxMjYxMjAwMDBaFw0y\nNTAxMjYwMDAwMDBaMFgxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWdu\nIG52LXNhMS4wLAYDVQQDEyVHbG9iYWxTaWduIEF0bGFzIFIzIE9WIFRMUyBDQSAy\nMDIyIFEyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmGmg1LW9b7Lf\n8zDD83yBDTEkt+FOxKJZqF4veWc5KZsQj9HfnUS2e5nj/E+JImlGPsQuoiosLuXD\nBVBNAMcUFa11buFMGMeEMwiTmCXoXRrXQmH0qjpOfKgYc5gHG3BsRGaRrf7VR4eg\nofNMG9wUBw4/g/TT7+bQJdA4NfE7Y4d5gEryZiBGB/swaX6Jp/8MF4TgUmOWmalK\ndZCKyb4sPGQFRTtElk67F7vU+wdGcrcOx1tDcIB0ncjLPMnaFicagl+daWGsKqTh\ncounQb6QJtYHa91KvCfKWocMxQ7OIbB5UARLPmC4CJ1/f8YFm35ebfzAeULYdGXu\njE9CLor0OwIDAQABo4IBXzCCAVswDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\nBBSH5Zq7a7B/t95GfJWkDBpA8HHqdjAfBgNVHSMEGDAWgBSP8Et/qC5FJK5NUPpj\nmove4t0bvDB7BggrBgEFBQcBAQRvMG0wLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3Nw\nMi5nbG9iYWxzaWduLmNvbS9yb290cjMwOwYIKwYBBQUHMAKGL2h0dHA6Ly9zZWN1\ncmUuZ2xvYmFsc2lnbi5jb20vY2FjZXJ0L3Jvb3QtcjMuY3J0MDYGA1UdHwQvMC0w\nK6ApoCeGJWh0dHA6Ly9jcmwuZ2xvYmFsc2lnbi5jb20vcm9vdC1yMy5jcmwwIQYD\nVR0gBBowGDAIBgZngQwBAgIwDAYKKwYBBAGgMgoBAjANBgkqhkiG9w0BAQsFAAOC\nAQEAKRic9/f+nmhQU/wz04APZLjgG5OgsuUOyUEZjKVhNGDwxGTvKhyXGGAMW2B/\n3bRi+aElpXwoxu3pL6fkElbX3B0BeS5LoDtxkyiVEBMZ8m+sXbocwlPyxrPbX6mY\n0rVIvnuUeBH8X0L5IwfpNVvKnBIilTbcebfHyXkPezGwz7E1yhUULjJFm2bt0SdX\ny+4X/WeiiYIv+fTVgZZgl+/2MKIsu/qdBJc3f3TvJ8nz+Eax1zgZmww+RSQWeOj3\n15Iw6Z5FX+NwzY/Ab+9PosR5UosSeq+9HhtaxZttXG1nVh+avYPGYddWmiMT90J5\nZgKnO/Fx2hBgTxhOTMYaD312kg==\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\nA1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\nZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\nMTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\nA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\nRgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\ngHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\nKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\nQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\nXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\nDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\nLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\nRUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\njjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\nmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\nMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\nWD9f\n-----END CERTIFICATE-----",no={RedisCloudFixed:{ca:to},RedisCloudFlexible:{ca:to}};eo.default=no,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.noop=e.defaults=e.Debug=e.zipMap=e.CONNECTION_CLOSED_ERROR_MSG=e.shuffle=e.sample=e.resolveTLSProfile=e.parseURL=e.optimizeErrorStack=e.toArg=e.convertMapToArray=e.convertObjectToArray=e.timeout=e.packObject=e.isInt=e.wrapMultiResult=e.convertBufferToString=void 0;const t=r,n=Za;Object.defineProperty(e,"defaults",{enumerable:!0,get:function(){return n.defaults}}),Object.defineProperty(e,"noop",{enumerable:!0,get:function(){return n.noop}});const a=Li;e.Debug=a.default;const i=eo;function o(e){const t=parseFloat(e);return!isNaN(e)&&(0|t)===t}e.convertBufferToString=function e(t,n){if(t instanceof Buffer)return t.toString(n);if(Array.isArray(t)){const a=t.length,i=Array(a);for(let o=0;o<a;++o)i[o]=t[o]instanceof Buffer&&"utf8"===n?t[o].toString():e(t[o],n);return i}return t},e.wrapMultiResult=function(e){if(!e)return null;const t=[],n=e.length;for(let a=0;a<n;++a){const n=e[a];n instanceof Error?t.push([n]):t.push([null,n])}return t},e.isInt=o,e.packObject=function(e){const t={},n=e.length;for(let a=1;a<n;a+=2)t[e[a-1]]=e[a];return t},e.timeout=function(e,t){let n=null;const a=function(){n&&(clearTimeout(n),n=null,e.apply(this,arguments))};return n=setTimeout(a,t,new Error("timeout")),a},e.convertObjectToArray=function(e){const t=[],n=Object.keys(e);for(let a=0,i=n.length;a<i;a++)t.push(n[a],e[n[a]]);return t},e.convertMapToArray=function(e){const t=[];let n=0;return e.forEach((function(e,a){t[n]=a,t[n+1]=e,n+=2})),t},e.toArg=function(e){return null==e?"":String(e)},e.optimizeErrorStack=function(e,t,n){const a=t.split("\n");let i,o="";for(i=1;i<a.length&&-1!==a[i].indexOf(n);++i);for(let e=i;e<a.length;++e)o+="\n"+a[e];if(e.stack){const t=e.stack.indexOf("\n");e.stack=e.stack.slice(0,t)+o}return e},e.parseURL=function(e){if(o(e))return{port:e};let a=(0,t.parse)(e,!0,!0);a.slashes||"/"===e[0]||(e="//"+e,a=(0,t.parse)(e,!0,!0));const i=a.query||{},r={};if(a.auth){const e=a.auth.indexOf(":");r.username=-1===e?a.auth:a.auth.slice(0,e),r.password=-1===e?"":a.auth.slice(e+1)}if(a.pathname&&("redis:"===a.protocol||"rediss:"===a.protocol?a.pathname.length>1&&(r.db=a.pathname.slice(1)):r.path=a.pathname),a.host&&(r.host=a.hostname),a.port&&(r.port=a.port),"string"==typeof i.family){const e=Number.parseInt(i.family,10);Number.isNaN(e)||(r.family=e)}return(0,n.defaults)(r,i),r},e.resolveTLSProfile=function(e){let t=null==e?void 0:e.tls;"string"==typeof t&&(t={profile:t});const n=i.default[null==t?void 0:t.profile];return n&&(t=Object.assign({},n,t),delete t.profile,e=Object.assign({},e,{tls:t})),e},e.sample=function(e,t=0){const n=e.length;return t>=n?null:e[t+Math.floor(Math.random()*(n-t))]},e.shuffle=function(e){let t=e.length;for(;t>0;){const n=Math.floor(Math.random()*t);t--,[e[t],e[n]]=[e[n],e[t]]}return e},e.CONNECTION_CLOSED_ERROR_MSG="Connection is closed.",e.zipMap=function(e,t){const n=new Map;return e.forEach(((e,a)=>{n.set(e,t[a])})),n}}(Qa),Object.defineProperty(Ya,"__esModule",{value:!0});const ao=Pa,io=$a.exports,oo=Da,ro=Qa;class so{constructor(e,t=[],n={},a){if(this.name=e,this.inTransaction=!1,this.isResolved=!1,this.transformed=!1,this.replyEncoding=n.replyEncoding,this.errorStack=n.errorStack,this.args=t.flat(),this.callback=a,this.initPromise(),n.keyPrefix){const e=n.keyPrefix instanceof Buffer;let t=e?n.keyPrefix:null;this._iterateKeys((a=>a instanceof Buffer?(null===t&&(t=Buffer.from(n.keyPrefix)),Buffer.concat([t,a])):e?Buffer.concat([n.keyPrefix,Buffer.from(String(a))]):n.keyPrefix+a))}n.readOnly&&(this.isReadOnly=!0)}static checkFlag(e,t){return!!this.getFlagMap()[e][t]}static setArgumentTransformer(e,t){this._transformer.argument[e]=t}static setReplyTransformer(e,t){this._transformer.reply[e]=t}static getFlagMap(){return this.flagMap||(this.flagMap=Object.keys(so.FLAGS).reduce(((e,t)=>(e[t]={},so.FLAGS[t].forEach((n=>{e[t][n]=!0})),e)),{})),this.flagMap}getSlot(){if(void 0===this.slot){const e=this.getKeys()[0];this.slot=null==e?null:io(e)}return this.slot}getKeys(){return this._iterateKeys()}toWritable(e){let t;const n="*"+(this.args.length+1)+"\r\n$"+Buffer.byteLength(this.name)+"\r\n"+this.name+"\r\n";if(this.bufferMode){const e=new uo;e.push(n);for(let t=0;t<this.args.length;++t){const n=this.args[t];n instanceof Buffer?0===n.length?e.push("$0\r\n\r\n"):(e.push("$"+n.length+"\r\n"),e.push(n),e.push("\r\n")):e.push("$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n")}t=e.toBuffer()}else{t=n;for(let e=0;e<this.args.length;++e){const n=this.args[e];t+="$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n"}}return t}stringifyArguments(){for(let e=0;e<this.args.length;++e){const t=this.args[e];"string"==typeof t||(t instanceof Buffer?this.bufferMode=!0:this.args[e]=(0,ro.toArg)(t))}}transformReply(e){this.replyEncoding&&(e=(0,ro.convertBufferToString)(e,this.replyEncoding));const t=so._transformer.reply[this.name];return t&&(e=t(e)),e}setTimeout(e){this._commandTimeoutTimer||(this._commandTimeoutTimer=setTimeout((()=>{this.isResolved||this.reject(new Error("Command timed out"))}),e))}initPromise(){const e=new Promise(((e,t)=>{if(!this.transformed){this.transformed=!0;const e=so._transformer.argument[this.name];e&&(this.args=e(this.args)),this.stringifyArguments()}this.resolve=this._convertValue(e),this.errorStack?this.reject=e=>{t((0,ro.optimizeErrorStack)(e,this.errorStack.stack,__dirname))}:this.reject=t}));this.promise=(0,oo.default)(e,this.callback)}_iterateKeys(e=(e=>e)){if(void 0===this.keys&&(this.keys=[],(0,ao.exists)(this.name))){const t=(0,ao.getKeyIndexes)(this.name,this.args);for(const n of t)this.args[n]=e(this.args[n]),this.keys.push(this.args[n])}return this.keys}_convertValue(e){return t=>{try{const n=this._commandTimeoutTimer;n&&(clearTimeout(n),delete this._commandTimeoutTimer),e(this.transformReply(t)),this.isResolved=!0}catch(e){this.reject(e)}return this.promise}}}Ya.default=so,so.FLAGS={VALID_IN_SUBSCRIBER_MODE:["subscribe","psubscribe","unsubscribe","punsubscribe","ssubscribe","sunsubscribe","ping","quit"],VALID_IN_MONITOR_MODE:["monitor","auth"],ENTER_SUBSCRIBER_MODE:["subscribe","psubscribe","ssubscribe"],EXIT_SUBSCRIBER_MODE:["unsubscribe","punsubscribe","sunsubscribe"],WILL_DISCONNECT:["quit"]},so._transformer={argument:{},reply:{}};const lo=function(e){if(1===e.length){if(e[0]instanceof Map)return(0,ro.convertMapToArray)(e[0]);if("object"==typeof e[0]&&null!==e[0])return(0,ro.convertObjectToArray)(e[0])}return e},co=function(e){if(2===e.length){if(e[1]instanceof Map)return[e[0]].concat((0,ro.convertMapToArray)(e[1]));if("object"==typeof e[1]&&null!==e[1])return[e[0]].concat((0,ro.convertObjectToArray)(e[1]))}return e};so.setArgumentTransformer("mset",lo),so.setArgumentTransformer("msetnx",lo),so.setArgumentTransformer("hset",co),so.setArgumentTransformer("hmset",co),so.setReplyTransformer("hgetall",(function(e){if(Array.isArray(e)){const t={};for(let n=0;n<e.length;n+=2){const a=e[n],i=e[n+1];a in t?Object.defineProperty(t,a,{value:i,configurable:!0,enumerable:!0,writable:!0}):t[a]=i}return t}return e}));class uo{constructor(){this.length=0,this.items=[]}push(e){this.length+=Buffer.byteLength(e),this.items.push(e)}toBuffer(){const e=Buffer.allocUnsafe(this.length);let t=0;for(const n of this.items){const a=Buffer.byteLength(n);Buffer.isBuffer(n)?n.copy(e,t):e.write(n,t,a),t+=a}return e}}var po={};Object.defineProperty(po,"__esModule",{value:!0});const mo=za;class ho extends mo.RedisError{constructor(e,t){super(e),this.lastNodeError=t,Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}po.default=ho,ho.defaultMessage="Failed to refresh slots cache.";var fo={};Object.defineProperty(fo,"__esModule",{value:!0});const yo=n;class vo extends yo.Readable{constructor(e){super(e),this.opt=e,this._redisCursor="0",this._redisDrained=!1}_read(){if(this._redisDrained)return void this.push(null);const e=[this._redisCursor];this.opt.key&&e.unshift(this.opt.key),this.opt.match&&e.push("MATCH",this.opt.match),this.opt.type&&e.push("TYPE",this.opt.type),this.opt.count&&e.push("COUNT",String(this.opt.count)),this.opt.redis[this.opt.command](e,((e,t)=>{e?this.emit("error",e):(this._redisCursor=t[0]instanceof Buffer?t[0].toString():t[0],"0"===this._redisCursor&&(this._redisDrained=!0),this.push(t[1]))}))}close(){this._redisDrained=!0}}fo.default=vo;var bo={},go={},_o={},xo={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.executeWithAutoPipelining=e.getFirstValueInFlattenedArray=e.shouldUseAutoPipelining=e.notAllowedAutoPipelineCommands=e.kCallbacks=e.kExec=void 0;const t=Za,n=$a.exports,a=Da;function i(t,n){if(t._runningAutoPipelines.has(n))return;if(!t._autoPipelines.has(n))return;t._runningAutoPipelines.add(n);const a=t._autoPipelines.get(n);t._autoPipelines.delete(n);const o=a[e.kCallbacks];a[e.kCallbacks]=null,a.exec((function(e,a){if(t._runningAutoPipelines.delete(n),e)for(let t=0;t<o.length;t++)process.nextTick(o[t],e);else for(let e=0;e<o.length;e++)process.nextTick(o[e],...a[e]);t._autoPipelines.has(n)&&i(t,n)}))}function o(e){for(let n=0;n<e.length;n++){const a=e[n];if("string"==typeof a)return a;if(Array.isArray(a)||(0,t.isArguments)(a)){if(0===a.length)continue;return a[0]}const i=[a].flat();if(i.length>0)return i[0]}}e.kExec=Symbol("exec"),e.kCallbacks=Symbol("callbacks"),e.notAllowedAutoPipelineCommands=["auth","info","script","quit","cluster","pipeline","multi","subscribe","psubscribe","unsubscribe","unpsubscribe","select"],e.shouldUseAutoPipelining=function(t,n,a){return n&&t.options.enableAutoPipelining&&!t.isPipeline&&!e.notAllowedAutoPipelineCommands.includes(a)&&!t.options.autoPipeliningIgnoredCommands.includes(a)},e.getFirstValueInFlattenedArray=o,e.executeWithAutoPipelining=function r(s,l,c,d,u){if(s.isCluster&&!s.slots.length)return"wait"===s.status&&s.connect().catch(t.noop),(0,a.default)(new Promise((function(e,t){s.delayUntilReady((n=>{n?t(n):r(s,l,c,d,null).then(e,t)}))})),u);const p=s.options.keyPrefix||"",m=s.isCluster?s.slots[n(`${p}${o(d)}`)].join(","):"main";if(!s._autoPipelines.has(m)){const t=s.pipeline();t[e.kExec]=!1,t[e.kCallbacks]=[],s._autoPipelines.set(m,t)}const h=s._autoPipelines.get(m);h[e.kExec]||(h[e.kExec]=!0,setImmediate(i,s,m));const f=new Promise((function(t,n){h[e.kCallbacks].push((function(e,a){e?n(e):t(a)})),"call"===l&&d.unshift(c),h[l](...d)}));return(0,a.default)(f,u)}}(xo);var ko={};Object.defineProperty(ko,"__esModule",{value:!0});const wo=y,Eo=Ya,So=Da;ko.default=class{constructor(e,t=null,n="",a=!1){this.lua=e,this.numberOfKeys=t,this.keyPrefix=n,this.readOnly=a,this.sha=(0,wo.createHash)("sha1").update(e).digest("hex");const i=this.sha,o=new WeakSet;this.Command=class extends Eo.default{toWritable(t){const n=this.reject;return this.reject=e=>{-1!==e.message.indexOf("NOSCRIPT")&&o.delete(t),n.call(this,e)},o.has(t)?"eval"===this.name&&(this.name="evalsha",this.args[0]=i):(o.add(t),this.name="eval",this.args[0]=e),super.toWritable(t)}}}execute(e,t,n,a){"number"==typeof this.numberOfKeys&&t.unshift(this.numberOfKeys),this.keyPrefix&&(n.keyPrefix=this.keyPrefix),this.readOnly&&(n.readOnly=!0);const i=new this.Command("evalsha",[this.sha,...t],n);return i.promise=i.promise.catch((a=>{if(-1===a.message.indexOf("NOSCRIPT"))throw a;const i=new this.Command("evalsha",[this.sha,...t],n);return(e.isPipeline?e.redis:e).sendCommand(i)})),(0,So.default)(i.promise,a),e.sendCommand(i)}},Object.defineProperty(_o,"__esModule",{value:!0});const Ko=Pa,Ro=xo,Io=Ya,To=ko;class jo{constructor(){this.options={},this.scriptsSet={},this.addedBuiltinSet=new Set}getBuiltinCommands(){return Oo.slice(0)}createBuiltinCommand(e){return{string:Ao(null,e,"utf8"),buffer:Ao(null,e,null)}}addBuiltinCommand(e){this.addedBuiltinSet.add(e),this[e]=Ao(e,e,"utf8"),this[e+"Buffer"]=Ao(e+"Buffer",e,null)}defineCommand(e,t){const n=new To.default(t.lua,t.numberOfKeys,this.options.keyPrefix,t.readOnly);this.scriptsSet[e]=n,this[e]=Co(e,e,n,"utf8"),this[e+"Buffer"]=Co(e+"Buffer",e,n,null)}sendCommand(e,t,n){throw new Error('"sendCommand" is not implemented')}}const Oo=Ko.list.filter((e=>"monitor"!==e));function Ao(e,t,n){return void 0===n&&(n=t,t=null),function(...a){const i=t||a.shift();let o=a[a.length-1];"function"==typeof o?a.pop():o=void 0;const r={errorStack:this.options.showFriendlyErrorStack?new Error:void 0,keyPrefix:this.options.keyPrefix,replyEncoding:n};return(0,Ro.shouldUseAutoPipelining)(this,e,i)?(0,Ro.executeWithAutoPipelining)(this,e,i,a,o):this.sendCommand(new Io.default(i,a,r,o))}}function Co(e,t,n,a){return function(...i){const o="function"==typeof i[i.length-1]?i.pop():void 0,r={replyEncoding:a};return this.options.showFriendlyErrorStack&&(r.errorStack=new Error),(0,Ro.shouldUseAutoPipelining)(this,e,t)?(0,Ro.executeWithAutoPipelining)(this,e,t,i,o):n.execute(this,i,r,o)}}Oo.push("sentinel"),Oo.forEach((function(e){jo.prototype[e]=Ao(e,e,"utf8"),jo.prototype[e+"Buffer"]=Ao(e+"Buffer",e,null)})),jo.prototype.call=Ao("call","utf8"),jo.prototype.callBuffer=Ao("callBuffer",null),jo.prototype.send_command=jo.prototype.call,_o.default=jo,Object.defineProperty(go,"__esModule",{value:!0});const Po=$a.exports,No=Pa,Do=Da,Mo=t,Lo=Ya,Fo=Qa,Uo=_o;class qo extends Uo.default{constructor(e){super(),this.redis=e,this.isPipeline=!0,this.replyPending=0,this._queue=[],this._result=[],this._transactions=0,this._shaToScript={},this.isCluster="Cluster"===this.redis.constructor.name||this.redis.isCluster,this.options=e.options,Object.keys(e.scriptsSet).forEach((t=>{const n=e.scriptsSet[t];this._shaToScript[n.sha]=n,this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]})),e.addedBuiltinSet.forEach((t=>{this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]})),this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}));const t=this;Object.defineProperty(this,"length",{get:function(){return t._queue.length}})}fillResult(e,t){if("exec"===this._queue[t].name&&Array.isArray(e[1])){const n=e[1].length;for(let a=0;a<n;a++){if(e[1][a]instanceof Error)continue;const i=this._queue[t-(n-a)];try{e[1][a]=i.transformReply(e[1][a])}catch(t){e[1][a]=t}}}if(this._result[t]=e,--this.replyPending)return;if(this.isCluster){let e,t=!0;for(let n=0;n<this._result.length;++n){const a=this._result[n][0],i=this._queue[n];if(a){if("exec"===i.name&&"EXECABORT Transaction discarded because of previous errors."===a.message)continue;if(e){if(e.name!==a.name||e.message!==a.message){t=!1;break}}else e={name:a.name,message:a.message}}else if(!i.inTransaction){if(!((0,No.exists)(i.name)&&(0,No.hasFlag)(i.name,"readonly"))){t=!1;break}}}if(e&&t){const t=this,n=e.message.split(" "),a=this._queue;let i=!1;this._queue=[];for(let e=0;e<a.length;++e){if(!("ASK"!==n[0]||i||"asking"===a[e].name||a[e-1]&&"asking"===a[e-1].name)){const e=new Lo.default("asking");e.ignore=!0,this.sendCommand(e)}a[e].initPromise(),this.sendCommand(a[e]),i=a[e].inTransaction}let o=!0;void 0===this.leftRedirections&&(this.leftRedirections={});const r=function(){t.exec()},s=this.redis;if(s.handleError(e,this.leftRedirections,{moved:function(e,a){t.preferKey=a,s.slots[n[1]]=[a],s._groupsBySlot[n[1]]=s._groupsIds[s.slots[n[1]].join(";")],s.refreshSlotsCache(),t.exec()},ask:function(e,n){t.preferKey=n,t.exec()},tryagain:r,clusterDown:r,connectionClosed:r,maxRedirections:()=>{o=!1},defaults:()=>{o=!1}}),o)return}}let n=0;for(let e=0;e<this._queue.length-n;++e)this._queue[e+n].ignore&&(n+=1),this._result[e]=this._result[e+n];this.resolve(this._result.slice(0,this._result.length-n))}sendCommand(e){this._transactions>0&&(e.inTransaction=!0);const t=this._queue.length;return e.pipelineIndex=t,e.promise.then((e=>{this.fillResult([null,e],t)})).catch((e=>{this.fillResult([e],t)})),this._queue.push(e),this}addBatch(e){let t,n,a;for(let i=0;i<e.length;++i)t=e[i],n=t[0],a=t.slice(1),this[n].apply(this,a);return this}}go.default=qo;const Jo=qo.prototype.multi;qo.prototype.multi=function(){return this._transactions+=1,Jo.apply(this,arguments)};const Vo=qo.prototype.execBuffer;qo.prototype.execBuffer=(0,Mo.deprecate)((function(){return this._transactions>0&&(this._transactions-=1),Vo.apply(this,arguments)}),"Pipeline#execBuffer: Use Pipeline#exec instead"),qo.prototype.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch(Fo.noop),e&&!this.nodeifiedPromise&&(this.nodeifiedPromise=!0,(0,Do.default)(this.promise,e)),this.redis.delayUntilReady((t=>{t?this.reject(t):this.exec(e)})),this.promise;if(this._transactions>0)return this._transactions-=1,Vo.apply(this,arguments);let t;if(this.nodeifiedPromise||(this.nodeifiedPromise=!0,(0,Do.default)(this.promise,e)),this._queue.length||this.resolve([]),this.isCluster){const e=[];for(let t=0;t<this._queue.length;t++){const n=this._queue[t].getKeys();if(n.length&&e.push(n[0]),n.length&&Po.generateMulti(n)<0)return this.reject(new Error("All the keys in a pipeline command should belong to the same slot")),this.promise}if(e.length){if(t=function(e,t){const n=Po(t[0]),a=e._groupsBySlot[n];for(let n=1;n<t.length;n++)if(e._groupsBySlot[Po(t[n])]!==a)return-1;return n}(this.redis,e),t<0)return this.reject(new Error("All keys in the pipeline should belong to the same slots allocation group")),this.promise}else t=16384*Math.random()|0}const n=this;return function(){let e,a=n.replyPending=n._queue.length;n.isCluster&&(e={slot:t,redis:n.redis.connectionPool.nodes.all[n.preferKey]});let i,o="";const r={isPipeline:!0,destination:n.isCluster?e:{redis:n.redis},write(e){"string"!=typeof e?(i||(i=[]),o&&(i.push(Buffer.from(o,"utf8")),o=""),i.push(e)):o+=e,--a||(i?(o&&i.push(Buffer.from(o,"utf8")),r.destination.redis.stream.write(Buffer.concat(i))):r.destination.redis.stream.write(o),a=n._queue.length,o="",i=void 0)}};for(let t=0;t<n._queue.length;++t)n.redis.sendCommand(n._queue[t],r,e);n.promise}(),this.promise},Object.defineProperty(bo,"__esModule",{value:!0}),bo.addTransactionSupport=void 0;const Go=Qa,Bo=Da,zo=go;bo.addTransactionSupport=function(e){e.pipeline=function(e){const t=new zo.default(this);return Array.isArray(e)&&t.addBatch(e),t};const{multi:t}=e;e.multi=function(e,n){if(void 0!==n||Array.isArray(e)||(n=e,e=null),n&&!1===n.pipeline)return t.call(this);const a=new zo.default(this);a.multi(),Array.isArray(e)&&a.addBatch(e);const i=a.exec;a.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch(Go.noop),(0,Bo.default)(new Promise(((e,t)=>{this.redis.delayUntilReady((n=>{n?t(n):this.exec(a).then(e,t)}))})),e);if(this._transactions>0&&i.call(a),this.nodeifiedPromise)return i.call(a);const t=i.call(a);return(0,Bo.default)(t.then((function(e){const t=e[e.length-1];if(void 0===t)throw new Error("Pipeline cannot be used to send any commands when the `exec()` has been called on it.");if(t[0]){t[0].previousErrors=[];for(let n=0;n<e.length-1;++n)e[n][0]&&t[0].previousErrors.push(e[n][0]);throw t[0]}return(0,Go.wrapMultiResult)(t[1])})),e)};const{execBuffer:o}=a;return a.execBuffer=function(e){return this._transactions>0&&o.call(a),a.exec(e)},a};const{exec:n}=e;e.exec=function(e){return(0,Bo.default)(n.call(this).then((function(e){return Array.isArray(e)&&(e=(0,Go.wrapMultiResult)(e)),e})),e)}};var Yo={};Object.defineProperty(Yo,"__esModule",{value:!0}),Yo.default=function(e,t){Object.getOwnPropertyNames(t.prototype).forEach((n=>{Object.defineProperty(e.prototype,n,Object.getOwnPropertyDescriptor(t.prototype,n))}))};var $o={};Object.defineProperty($o,"__esModule",{value:!0}),$o.DEFAULT_CLUSTER_OPTIONS=void 0;const Wo=v;$o.DEFAULT_CLUSTER_OPTIONS={clusterRetryStrategy:e=>Math.min(100+2*e,2e3),enableOfflineQueue:!0,enableReadyCheck:!0,scaleReads:"master",maxRedirections:16,retryDelayOnMoved:0,retryDelayOnFailover:100,retryDelayOnClusterDown:100,retryDelayOnTryAgain:100,slotsRefreshTimeout:1e3,useSRVRecords:!1,resolveSrv:Wo.resolveSrv,dnsLookup:Wo.lookup,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[]};var Ho={},Qo={};Object.defineProperty(Qo,"__esModule",{value:!0}),Qo.getConnectionName=Qo.weightSrvRecords=Qo.groupSrvRecords=Qo.getUniqueHostnamesFromOptions=Qo.normalizeNodeOptions=Qo.nodeKeyToRedisOptions=Qo.getNodeKey=void 0;const Zo=Qa,Xo=d;var er;Qo.getNodeKey=function(e){return e.port=e.port||6379,e.host=e.host||"127.0.0.1",e.host+":"+e.port},Qo.nodeKeyToRedisOptions=function(e){const t=e.lastIndexOf(":");if(-1===t)throw new Error(`Invalid node key ${e}`);return{host:e.slice(0,t),port:Number(e.slice(t+1))}},Qo.normalizeNodeOptions=function(e){return e.map((e=>{const t={};if("object"==typeof e)Object.assign(t,e);else if("string"==typeof e)Object.assign(t,(0,Zo.parseURL)(e));else{if("number"!=typeof e)throw new Error("Invalid argument "+e);t.port=e}return"string"==typeof t.port&&(t.port=parseInt(t.port,10)),delete t.db,t.port||(t.port=6379),t.host||(t.host="127.0.0.1"),(0,Zo.resolveTLSProfile)(t)}))},Qo.getUniqueHostnamesFromOptions=function(e){const t={};return e.forEach((e=>{t[e.host]=!0})),Object.keys(t).filter((e=>!(0,Xo.isIP)(e)))},Qo.groupSrvRecords=function(e){const t={};for(const n of e)t.hasOwnProperty(n.priority)?(t[n.priority].totalWeight+=n.weight,t[n.priority].records.push(n)):t[n.priority]={totalWeight:n.weight,records:[n]};return t},Qo.weightSrvRecords=function(e){if(1===e.records.length)return e.totalWeight=0,e.records.shift();const t=Math.floor(Math.random()*(e.totalWeight+e.records.length));let n=0;for(const[a,i]of e.records.entries())if(n+=1+i.weight,n>t)return e.totalWeight-=i.weight,e.records.splice(a,1),i},Qo.getConnectionName=function(e,t){const n=`ioredis-cluster(${e})`;return t?`${n}:${t}`:n};var tr,nr={};var ar={};function ir(e,t){t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(e)?this._fromArray(e):(this._capacityMask=3,this._list=new Array(4))}ir.prototype.peekAt=function(e){var t=e;if(t===(0|t)){var n=this.size();if(!(t>=n||t<-n))return t<0&&(t+=n),t=this._head+t&this._capacityMask,this._list[t]}},ir.prototype.get=function(e){return this.peekAt(e)},ir.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]},ir.prototype.peekFront=function(){return this.peek()},ir.prototype.peekBack=function(){return this.peekAt(-1)},Object.defineProperty(ir.prototype,"length",{get:function(){return this.size()}}),ir.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},ir.prototype.unshift=function(e){if(0===arguments.length)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},ir.prototype.shift=function(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}},ir.prototype.push=function(e){if(0===arguments.length)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},ir.prototype.pop=function(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var n=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),n}},ir.prototype.removeOne=function(e){var t=e;if(t===(0|t)&&this._head!==this._tail){var n=this.size(),a=this._list.length;if(!(t>=n||t<-n)){t<0&&(t+=n),t=this._head+t&this._capacityMask;var i,o=this._list[t];if(e<n/2){for(i=e;i>0;i--)this._list[t]=this._list[t=t-1+a&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+a&this._capacityMask}else{for(i=n-1-e;i>0;i--)this._list[t]=this._list[t=t+1+a&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+a&this._capacityMask}return o}}},ir.prototype.remove=function(e,t){var n,a=e,i=t;if(a===(0|a)&&this._head!==this._tail){var o=this.size(),r=this._list.length;if(!(a>=o||a<-o||t<1)){if(a<0&&(a+=o),1===t||!t)return(n=new Array(1))[0]=this.removeOne(a),n;if(0===a&&a+t>=o)return n=this.toArray(),this.clear(),n;var s;for(a+t>o&&(t=o-a),n=new Array(t),s=0;s<t;s++)n[s]=this._list[this._head+a+s&this._capacityMask];if(a=this._head+a&this._capacityMask,e+t===o){for(this._tail=this._tail-t+r&this._capacityMask,s=t;s>0;s--)this._list[a=a+1+r&this._capacityMask]=void 0;return n}if(0===e){for(this._head=this._head+t+r&this._capacityMask,s=t-1;s>0;s--)this._list[a=a+1+r&this._capacityMask]=void 0;return n}if(a<o/2){for(this._head=this._head+e+t+r&this._capacityMask,s=e;s>0;s--)this.unshift(this._list[a=a-1+r&this._capacityMask]);for(a=this._head-1+r&this._capacityMask;i>0;)this._list[a=a-1+r&this._capacityMask]=void 0,i--;e<0&&(this._tail=a)}else{for(this._tail=a,a=a+t+r&this._capacityMask,s=o-(t+e);s>0;s--)this.push(this._list[a++]);for(a=this._tail;i>0;)this._list[a=a+1+r&this._capacityMask]=void 0,i--}return this._head<2&&this._tail>1e4&&this._tail<=r>>>2&&this._shrinkArray(),n}}},ir.prototype.splice=function(e,t){var n=e;if(n===(0|n)){var a=this.size();if(n<0&&(n+=a),!(n>a)){if(arguments.length>2){var i,o,r,s=arguments.length,l=this._list.length,c=2;if(!a||n<a/2){for(o=new Array(n),i=0;i<n;i++)o[i]=this._list[this._head+i&this._capacityMask];for(0===t?(r=[],n>0&&(this._head=this._head+n+l&this._capacityMask)):(r=this.remove(n,t),this._head=this._head+n+l&this._capacityMask);s>c;)this.unshift(arguments[--s]);for(i=n;i>0;i--)this.unshift(o[i-1])}else{var d=(o=new Array(a-(n+t))).length;for(i=0;i<d;i++)o[i]=this._list[this._head+n+t+i&this._capacityMask];for(0===t?(r=[],n!=a&&(this._tail=this._head+n+l&this._capacityMask)):(r=this.remove(n,t),this._tail=this._tail-d+l&this._capacityMask);c<s;)this.push(arguments[c++]);for(i=0;i<d;i++)this.push(o[i])}return r}return this.remove(n,t)}}},ir.prototype.clear=function(){this._list=new Array(this._list.length),this._head=0,this._tail=0},ir.prototype.isEmpty=function(){return this._head===this._tail},ir.prototype.toArray=function(){return this._copyArray(!1)},ir.prototype._fromArray=function(e){var t=e.length,n=this._nextPowerOf2(t);this._list=new Array(n),this._capacityMask=n-1,this._tail=t;for(var a=0;a<t;a++)this._list[a]=e[a]},ir.prototype._copyArray=function(e,t){var n=this._list,a=n.length,i=this.length;if((t|=i)==i&&this._head<this._tail)return this._list.slice(this._head,this._tail);var o,r=new Array(t),s=0;if(e||this._head>this._tail){for(o=this._head;o<a;o++)r[s++]=n[o];for(o=0;o<this._tail;o++)r[s++]=n[o]}else for(o=this._head;o<this._tail;o++)r[s++]=n[o];return r},ir.prototype._growArray=function(){if(0!=this._head){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1},ir.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1},ir.prototype._nextPowerOf2=function(e){var t=1<<Math.log(e)/Math.log(2)+1;return Math.max(t,4)};var or=ir;Object.defineProperty(ar,"__esModule",{value:!0});const rr=or,sr=(0,Qa.Debug)("delayqueue");var lr;function cr(){if(lr)return Ga;lr=1,Object.defineProperty(Ga,"__esModule",{value:!0});const e=Pa,t=p,n=za,a=Da,i=Ya,o=po,r=us(),s=fo,l=bo,c=Qa,d=Yo,u=_o,m=$o,h=function(){if(er)return Ho;er=1,Object.defineProperty(Ho,"__esModule",{value:!0});const e=Qo,t=Qa,n=us(),a=(0,t.Debug)("cluster:subscriber");return Ho.default=class{constructor(t,n){this.connectionPool=t,this.emitter=n,this.started=!1,this.subscriber=null,this.onSubscriberEnd=()=>{this.started?(a("subscriber has disconnected, selecting a new one..."),this.selectSubscriber()):a("subscriber has disconnected, but ClusterSubscriber is not started, so not reconnecting.")},this.connectionPool.on("-node",((t,n)=>{this.started&&this.subscriber&&(0,e.getNodeKey)(this.subscriber.options)===n&&(a("subscriber has left, selecting a new one..."),this.selectSubscriber())})),this.connectionPool.on("+node",(()=>{this.started&&!this.subscriber&&(a("a new node is discovered and there is no subscriber, selecting a new one..."),this.selectSubscriber())}))}getInstance(){return this.subscriber}start(){this.started=!0,this.selectSubscriber(),a("started")}stop(){this.started=!1,this.subscriber&&(this.subscriber.disconnect(),this.subscriber=null),a("stopped")}selectSubscriber(){const i=this.lastActiveSubscriber;i&&(i.off("end",this.onSubscriberEnd),i.disconnect()),this.subscriber&&(this.subscriber.off("end",this.onSubscriberEnd),this.subscriber.disconnect());const o=(0,t.sample)(this.connectionPool.getNodes());if(!o)return a("selecting subscriber failed since there is no node discovered in the cluster yet"),void(this.subscriber=null);const{options:r}=o;a("selected a subscriber %s:%s",r.host,r.port),this.subscriber=new n.default({port:r.port,host:r.host,username:r.username,password:r.password,enableReadyCheck:!0,connectionName:(0,e.getConnectionName)("subscriber",r.connectionName),lazyConnect:!0,tls:r.tls,retryStrategy:null}),this.subscriber.on("error",t.noop),this.subscriber.once("end",this.onSubscriberEnd);const s={subscribe:[],psubscribe:[],ssubscribe:[]};if(i){const e=i.condition||i.prevCondition;e&&e.subscriber&&(s.subscribe=e.subscriber.channels("subscribe"),s.psubscribe=e.subscriber.channels("psubscribe"),s.ssubscribe=e.subscriber.channels("ssubscribe"))}if(s.subscribe.length||s.psubscribe.length||s.ssubscribe.length){let e=0;for(const t of["subscribe","psubscribe","ssubscribe"]){const n=s[t];n.length&&(e+=1,a("%s %d channels",t,n.length),this.subscriber[t](n).then((()=>{--e||(this.lastActiveSubscriber=this.subscriber)})).catch((()=>{a("failed to %s %d channels",t,n.length)})))}}else this.lastActiveSubscriber=this.subscriber;for(const e of["message","messageBuffer","smessage","smessageBuffer"])this.subscriber.on(e,((t,n)=>{this.emitter.emit(e,t,n)}));for(const e of["pmessage","pmessageBuffer"])this.subscriber.on(e,((t,n,a)=>{this.emitter.emit(e,t,n,a)}))}},Ho}(),f=function(){if(tr)return nr;tr=1,Object.defineProperty(nr,"__esModule",{value:!0});const e=p,t=Qa,n=Qo,a=us(),i=(0,t.Debug)("cluster:connectionPool");let o=class extends e.EventEmitter{constructor(e){super(),this.redisOptions=e,this.nodes={all:{},master:{},slave:{}},this.specifiedOptions={}}getNodes(e="all"){const t=this.nodes[e];return Object.keys(t).map((e=>t[e]))}getInstanceByKey(e){return this.nodes.all[e]}getSampleInstance(e){const n=Object.keys(this.nodes[e]),a=(0,t.sample)(n);return this.nodes[e][a]}findOrCreate(e,o=!1){const r=(0,n.getNodeKey)(e);let s;return o=Boolean(o),this.specifiedOptions[r]?Object.assign(e,this.specifiedOptions[r]):this.specifiedOptions[r]=e,this.nodes.all[r]?(s=this.nodes.all[r],s.options.readOnly!==o&&(s.options.readOnly=o,i("Change role of %s to %s",r,o?"slave":"master"),s[o?"readonly":"readwrite"]().catch(t.noop),o?(delete this.nodes.master[r],this.nodes.slave[r]=s):(delete this.nodes.slave[r],this.nodes.master[r]=s))):(i("Connecting to %s as %s",r,o?"slave":"master"),s=new a.default((0,t.defaults)({retryStrategy:null,enableOfflineQueue:!0,readOnly:o},e,this.redisOptions,{lazyConnect:!0})),this.nodes.all[r]=s,this.nodes[o?"slave":"master"][r]=s,s.once("end",(()=>{this.removeNode(r),this.emit("-node",s,r),Object.keys(this.nodes.all).length||this.emit("drain")})),this.emit("+node",s,r),s.on("error",(function(e){this.emit("nodeError",e,r)}))),s}reset(e){i("Reset with %O",e);const t={};e.forEach((e=>{const a=(0,n.getNodeKey)(e);e.readOnly&&t[a]||(t[a]=e)})),Object.keys(this.nodes.all).forEach((e=>{t[e]||(i("Disconnect %s because the node does not hold any slot",e),this.nodes.all[e].disconnect(),this.removeNode(e))})),Object.keys(t).forEach((e=>{const n=t[e];this.findOrCreate(n,n.readOnly)}))}removeNode(e){const{nodes:t}=this;t.all[e]&&(i("Remove %s from the pool",e),delete t.all[e]),delete t.master[e],delete t.slave[e]}};return nr.default=o,nr}(),y=ar,v=Qo,b=or,g=(0,c.Debug)("cluster"),_=new WeakSet;class x extends u.default{constructor(e,n={}){if(super(),this.slots=[],this._groupsIds={},this._groupsBySlot=Array(16384),this.isCluster=!0,this.retryAttempts=0,this.delayQueue=new y.default,this.offlineQueue=new b,this.isRefreshing=!1,this._refreshSlotsCacheCallbacks=[],this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this._readyDelayedCallbacks=[],this.connectionEpoch=0,t.EventEmitter.call(this),this.startupNodes=e,this.options=(0,c.defaults)({},n,m.DEFAULT_CLUSTER_OPTIONS,this.options),this.options.redisOptions&&this.options.redisOptions.keyPrefix&&!this.options.keyPrefix&&(this.options.keyPrefix=this.options.redisOptions.keyPrefix),"function"!=typeof this.options.scaleReads&&-1===["all","master","slave"].indexOf(this.options.scaleReads))throw new Error('Invalid option scaleReads "'+this.options.scaleReads+'". Expected "all", "master", "slave" or a custom function');this.connectionPool=new f.default(this.options.redisOptions),this.connectionPool.on("-node",((e,t)=>{this.emit("-node",e)})),this.connectionPool.on("+node",(e=>{this.emit("+node",e)})),this.connectionPool.on("drain",(()=>{this.setStatus("close")})),this.connectionPool.on("nodeError",((e,t)=>{this.emit("node error",e,t)})),this.subscriber=new h.default(this.connectionPool,this),this.options.scripts&&Object.entries(this.options.scripts).forEach((([e,t])=>{this.defineCommand(e,t)})),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch((e=>{g("connecting failed: %s",e)}))}connect(){return new Promise(((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));const a=++this.connectionEpoch;this.setStatus("connecting"),this.resolveStartupNodeHostnames().then((i=>{if(this.connectionEpoch!==a)return g("discard connecting after resolving startup nodes because epoch not match: %d != %d",a,this.connectionEpoch),void t(new n.RedisError("Connection is discarded because a new connection is made"));if("connecting"!==this.status)return g("discard connecting after resolving startup nodes because the status changed to %s",this.status),void t(new n.RedisError("Connection is aborted"));this.connectionPool.reset(i);const s=()=>{this.setStatus("ready"),this.retryAttempts=0,this.executeOfflineCommands(),this.resetNodesRefreshInterval(),e()};let l;const c=()=>{this.invokeReadyDelayedCallbacks(void 0),this.removeListener("close",l),this.manuallyClosing=!1,this.setStatus("connect"),this.options.enableReadyCheck?this.readyCheck(((e,t)=>{e||t?(g("Ready check failed (%s). Reconnecting...",e||t),"connect"===this.status&&this.disconnect(!0)):s()})):s()};l=()=>{const e=new Error("None of startup nodes is available");this.removeListener("refresh",c),this.invokeReadyDelayedCallbacks(e),t(e)},this.once("refresh",c),this.once("close",l),this.once("close",this.handleCloseEvent.bind(this)),this.refreshSlotsCache((e=>{e&&e.message===o.default.defaultMessage&&(r.default.prototype.silentEmit.call(this,"error",e),this.connectionPool.reset([]))})),this.subscriber.start()})).catch((e=>{this.setStatus("close"),this.handleCloseEvent(e),this.invokeReadyDelayedCallbacks(e),t(e)}))}))}disconnect(e=!1){const t=this.status;this.setStatus("disconnecting"),e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null,g("Canceled reconnecting attempts")),this.clearNodesRefreshInterval(),this.subscriber.stop(),"wait"===t?(this.setStatus("close"),this.handleCloseEvent()):this.connectionPool.reset([])}quit(e){const t=this.status;if(this.setStatus("disconnecting"),this.manuallyClosing=!0,this.reconnectTimeout&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),this.clearNodesRefreshInterval(),this.subscriber.stop(),"wait"===t){const t=(0,a.default)(Promise.resolve("OK"),e);return setImmediate(function(){this.setStatus("close"),this.handleCloseEvent()}.bind(this)),t}return(0,a.default)(Promise.all(this.nodes().map((e=>e.quit().catch((e=>{if(e.message===c.CONNECTION_CLOSED_ERROR_MSG)return"OK";throw e}))))).then((()=>"OK")),e)}duplicate(e=[],t={}){const n=e.length>0?e:this.startupNodes.slice(0),a=Object.assign({},this.options,t);return new x(n,a)}nodes(e="all"){if("all"!==e&&"master"!==e&&"slave"!==e)throw new Error('Invalid role "'+e+'". Expected "all", "master" or "slave"');return this.connectionPool.getNodes(e)}delayUntilReady(e){this._readyDelayedCallbacks.push(e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}refreshSlotsCache(e){if(e&&this._refreshSlotsCacheCallbacks.push(e),this.isRefreshing)return;this.isRefreshing=!0;const t=this,n=e=>{this.isRefreshing=!1;for(const t of this._refreshSlotsCacheCallbacks)t(e);this._refreshSlotsCacheCallbacks=[]},a=(0,c.shuffle)(this.connectionPool.getNodes());let i=null;!function e(r){if(r===a.length){const e=new o.default(o.default.defaultMessage,i);return n(e)}const s=a[r],l=`${s.options.host}:${s.options.port}`;g("getting slot cache from %s",l),t.getInfoFromNode(s,(function(a){switch(t.status){case"close":case"end":return n(new Error("Cluster is disconnected."));case"disconnecting":return n(new Error("Cluster is disconnecting."))}a?(t.emit("node error",a,l),i=a,e(r+1)):(t.emit("refresh"),n())}))}(0)}sendCommand(t,a,o){if("wait"===this.status&&this.connect().catch(c.noop),"end"===this.status)return t.reject(new Error(c.CONNECTION_CLOSED_ERROR_MSG)),t.promise;let r=this.options.scaleReads;if("master"!==r){t.isReadOnly||(0,e.exists)(t.name)&&(0,e.hasFlag)(t.name,"readonly")||(r="master")}let s=o?o.slot:t.getSlot();const l={},d=this;if(!o&&!_.has(t)){_.add(t);const e=t.reject;t.reject=function(n){const a=u.bind(null,!0);d.handleError(n,l,{moved:function(e,n){g("command %s is moved to %s",t.name,n),s=Number(e),d.slots[e]?d.slots[e][0]=n:d.slots[e]=[n],d._groupsBySlot[e]=d._groupsIds[d.slots[e].join(";")],d.connectionPool.findOrCreate(d.natMapper(n)),u(),g("refreshing slot caches... (triggered by MOVED error)"),d.refreshSlotsCache()},ask:function(e,n){g("command %s is required to ask %s:%s",t.name,n);const a=d.natMapper(n);d.connectionPool.findOrCreate(a),u(!1,`${a.host}:${a.port}`)},tryagain:a,clusterDown:a,connectionClosed:a,maxRedirections:function(n){e.call(t,n)},defaults:function(){e.call(t,n)}})}}function u(e,l){if("end"===d.status)return void t.reject(new n.AbortError("Cluster is ended."));let u;if("ready"===d.status||"cluster"===t.name){if(o&&o.redis)u=o.redis;else if(i.default.checkFlag("ENTER_SUBSCRIBER_MODE",t.name)||i.default.checkFlag("EXIT_SUBSCRIBER_MODE",t.name)){if(u=d.subscriber.getInstance(),!u)return void t.reject(new n.AbortError("No subscriber for the cluster"))}else{if(!e){if("number"==typeof s&&d.slots[s]){const e=d.slots[s];if("function"==typeof r){const n=e.map((function(e){return d.connectionPool.getInstanceByKey(e)}));u=r(n,t),Array.isArray(u)&&(u=(0,c.sample)(u)),u||(u=n[0])}else{let t;t="all"===r?(0,c.sample)(e):"slave"===r&&e.length>1?(0,c.sample)(e,1):e[0],u=d.connectionPool.getInstanceByKey(t)}}l&&(u=d.connectionPool.getInstanceByKey(l),u.asking())}u||(u=("function"==typeof r?null:d.connectionPool.getSampleInstance(r))||d.connectionPool.getSampleInstance("all"))}o&&!o.redis&&(o.redis=u)}u?u.sendCommand(t,a):d.options.enableOfflineQueue?d.offlineQueue.push({command:t,stream:a,node:o}):t.reject(new Error("Cluster isn't ready and enableOfflineQueue options is false"))}return u(),t.promise}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}handleError(e,t,n){if(void 0===t.value?t.value=this.options.maxRedirections:t.value-=1,t.value<=0)return void n.maxRedirections(new Error("Too many Cluster redirections. Last error: "+e));const a=e.message.split(" ");if("MOVED"===a[0]){const e=this.options.retryDelayOnMoved;e&&"number"==typeof e?this.delayQueue.push("moved",n.moved.bind(null,a[1],a[2]),{timeout:e}):n.moved(a[1],a[2])}else"ASK"===a[0]?n.ask(a[1],a[2]):"TRYAGAIN"===a[0]?this.delayQueue.push("tryagain",n.tryagain,{timeout:this.options.retryDelayOnTryAgain}):"CLUSTERDOWN"===a[0]&&this.options.retryDelayOnClusterDown>0?this.delayQueue.push("clusterdown",n.connectionClosed,{timeout:this.options.retryDelayOnClusterDown,callback:this.refreshSlotsCache.bind(this)}):e.message===c.CONNECTION_CLOSED_ERROR_MSG&&this.options.retryDelayOnFailover>0&&"ready"===this.status?this.delayQueue.push("failover",n.connectionClosed,{timeout:this.options.retryDelayOnFailover,callback:this.refreshSlotsCache.bind(this)}):n.defaults()}resetOfflineQueue(){this.offlineQueue=new b}clearNodesRefreshInterval(){this.slotsTimer&&(clearTimeout(this.slotsTimer),this.slotsTimer=null)}resetNodesRefreshInterval(){if(this.slotsTimer||!this.options.slotsRefreshInterval)return;const e=()=>{this.slotsTimer=setTimeout((()=>{g('refreshing slot caches... (triggered by "slotsRefreshInterval" option)'),this.refreshSlotsCache((()=>{e()}))}),this.options.slotsRefreshInterval)};e()}setStatus(e){g("status: %s -> %s",this.status||"[empty]",e),this.status=e,process.nextTick((()=>{this.emit(e)}))}handleCloseEvent(e){let t;e&&g("closed because %s",e),this.manuallyClosing||"function"!=typeof this.options.clusterRetryStrategy||(t=this.options.clusterRetryStrategy.call(this,++this.retryAttempts,e)),"number"==typeof t?(this.setStatus("reconnecting"),this.reconnectTimeout=setTimeout((()=>{this.reconnectTimeout=null,g("Cluster is disconnected. Retrying after %dms",t),this.connect().catch((function(e){g("Got error %s when reconnecting. Ignoring...",e)}))}),t)):(this.setStatus("end"),this.flushQueue(new Error("None of startup nodes is available")))}flushQueue(e){let t;for(;t=this.offlineQueue.shift();)t.command.reject(e)}executeOfflineCommands(){if(this.offlineQueue.length){g("send %d commands in offline queue",this.offlineQueue.length);const e=this.offlineQueue;let t;for(this.resetOfflineQueue();t=e.shift();)this.sendCommand(t.command,t.stream,t.node)}}natMapper(e){if(this.options.natMap&&"object"==typeof this.options.natMap){const t="string"==typeof e?e:`${e.host}:${e.port}`,n=this.options.natMap[t];if(n)return g("NAT mapping %s -> %O",t,n),Object.assign({},n)}return"string"==typeof e?(0,v.nodeKeyToRedisOptions)(e):e}getInfoFromNode(e,t){if(!e)return t(new Error("Node is disconnected"));const n=e.duplicate({enableOfflineQueue:!0,enableReadyCheck:!1,retryStrategy:null,connectionName:(0,v.getConnectionName)("refresher",this.options.redisOptions&&this.options.redisOptions.connectionName)});n.on("error",c.noop),n.cluster("SLOTS",(0,c.timeout)(((e,a)=>{if(n.disconnect(),e)return t(e);if("disconnecting"===this.status||"close"===this.status||"end"===this.status)return g("ignore CLUSTER.SLOTS results (count: %d) since cluster status is %s",a.length,this.status),void t();const i=[];g("cluster slots result count: %d",a.length);for(let e=0;e<a.length;++e){const t=a[e],n=t[0],o=t[1],r=[];for(let e=2;e<t.length;e++){if(!t[e][0])continue;const n=this.natMapper({host:t[e][0],port:t[e][1]});n.readOnly=2!==e,i.push(n),r.push(n.host+":"+n.port)}g("cluster slots result [%d]: slots %d~%d served by %s",e,n,o,r);for(let e=n;e<=o;e++)this.slots[e]=r}this._groupsIds=Object.create(null);let o=0;for(let e=0;e<16384;e++){const t=(this.slots[e]||[]).join(";");t.length?(this._groupsIds[t]||(this._groupsIds[t]=++o),this._groupsBySlot[e]=this._groupsIds[t]):this._groupsBySlot[e]=void 0}this.connectionPool.reset(i),t()}),this.options.slotsRefreshTimeout))}invokeReadyDelayedCallbacks(e){for(const t of this._readyDelayedCallbacks)process.nextTick(t,e);this._readyDelayedCallbacks=[]}readyCheck(e){this.cluster("INFO",((t,n)=>{if(t)return e(t);if("string"!=typeof n)return e();let a;const i=n.split("\r\n");for(let e=0;e<i.length;++e){const t=i[e].split(":");if("cluster_state"===t[0]){a=t[1];break}}"fail"===a?(g("cluster state not ok (%s)",a),e(null,a)):e()}))}resolveSrv(e){return new Promise(((t,n)=>{this.options.resolveSrv(e,((e,a)=>{if(e)return n(e);const i=this,o=(0,v.groupSrvRecords)(a),r=Object.keys(o).sort(((e,t)=>parseInt(e)-parseInt(t)));!function e(a){if(!r.length)return n(a);const s=r[0],l=o[s],c=(0,v.weightSrvRecords)(l);l.records.length||r.shift(),i.dnsLookup(c.name).then((e=>t({host:e,port:c.port})),e)}()}))}))}dnsLookup(e){return new Promise(((t,n)=>{this.options.dnsLookup(e,((a,i)=>{a?(g("failed to resolve hostname %s to IP: %s",e,a.message),n(a)):(g("resolved hostname %s to IP %s",e,i),t(i))}))}))}async resolveStartupNodeHostnames(){if(!Array.isArray(this.startupNodes)||0===this.startupNodes.length)throw new Error("`startupNodes` should contain at least one node.");const e=(0,v.normalizeNodeOptions)(this.startupNodes),t=(0,v.getUniqueHostnamesFromOptions)(e);if(0===t.length)return e;const n=await Promise.all(t.map((this.options.useSRVRecords?this.resolveSrv:this.dnsLookup).bind(this))),a=(0,c.zipMap)(t,n);return e.map((e=>{const t=a.get(e.host);return t?this.options.useSRVRecords?Object.assign({},e,t):Object.assign({},e,{host:t}):e}))}createScanStream(e,{key:t,options:n={}}){return new s.default({objectMode:!0,key:t,redis:this,command:e,...n})}}return(0,d.default)(x,t.EventEmitter),(0,l.addTransactionSupport)(x.prototype),Ga.default=x,Ga}ar.default=class{constructor(){this.queues={},this.timeouts={}}push(e,t,n){const a=n.callback||process.nextTick;this.queues[e]||(this.queues[e]=new rr);this.queues[e].push(t),this.timeouts[e]||(this.timeouts[e]=setTimeout((()=>{a((()=>{this.timeouts[e]=null,this.execute(e)}))}),n.timeout))}execute(e){const t=this.queues[e];if(!t)return;const{length:n}=t;if(n)for(sr("send %d commands in %s queue",n,e),this.queues[e]=null;t.length>0;)t.shift()()}};var dr={},ur={},pr={};Object.defineProperty(pr,"__esModule",{value:!0});const mr=(0,Qa.Debug)("AbstractConnector");pr.default=class{constructor(e){this.connecting=!1,this.disconnectTimeout=e}check(e){return!0}disconnect(){if(this.connecting=!1,this.stream){const e=this.stream,t=setTimeout((()=>{mr("stream %s:%s still open, destroying it",e.remoteAddress,e.remotePort),e.destroy()}),this.disconnectTimeout);e.on("close",(()=>clearTimeout(t))),e.end()}}},Object.defineProperty(ur,"__esModule",{value:!0});const hr=d,fr=b,yr=Qa,vr=pr;class br extends vr.default{constructor(e){super(e.disconnectTimeout),this.options=e}connect(e){const{options:t}=this;let n;return this.connecting=!0,"path"in t&&t.path?n={path:t.path}:(n={},"port"in t&&null!=t.port&&(n.port=t.port),"host"in t&&null!=t.host&&(n.host=t.host),"family"in t&&null!=t.family&&(n.family=t.family)),t.tls&&Object.assign(n,t.tls),new Promise(((e,a)=>{process.nextTick((()=>{if(this.connecting){try{t.tls?this.stream=(0,fr.connect)(n):this.stream=(0,hr.createConnection)(n)}catch(e){return void a(e)}this.stream.once("error",(e=>{this.firstError=e})),e(this.stream)}else a(new Error(yr.CONNECTION_CLOSED_ERROR_MSG))}))}))}}ur.default=br;var gr={},_r={};Object.defineProperty(_r,"__esModule",{value:!0});_r.default=class{constructor(e){this.cursor=0,this.sentinels=e.slice(0)}next(){const e=this.cursor>=this.sentinels.length;return{done:e,value:e?void 0:this.sentinels[this.cursor++]}}reset(e){e&&this.sentinels.length>1&&1!==this.cursor&&this.sentinels.unshift(...this.sentinels.splice(this.cursor-1)),this.cursor=0}add(e){for(let a=0;a<this.sentinels.length;a++)if(t=e,n=this.sentinels[a],(t.host||"127.0.0.1")===(n.host||"127.0.0.1")&&(t.port||26379)===(n.port||26379))return!1;var t,n;return this.sentinels.push(e),!0}toString(){return`${JSON.stringify(this.sentinels)} @${this.cursor}`}};var xr={};Object.defineProperty(xr,"__esModule",{value:!0}),xr.FailoverDetector=void 0;const kr=(0,Qa.Debug)("FailoverDetector"),wr="+switch-master";var Er,Sr;function Kr(){if(Er)return gr;Er=1,Object.defineProperty(gr,"__esModule",{value:!0}),gr.SentinelIterator=void 0;const e=d,t=Qa,n=b,a=_r;gr.SentinelIterator=a.default;const i=pr,o=us(),r=xr,s=(0,t.Debug)("SentinelConnector");let l=class extends i.default{constructor(e){if(super(e.disconnectTimeout),this.options=e,this.emitter=null,this.failoverDetector=null,!this.options.sentinels.length)throw new Error("Requires at least one sentinel to connect to.");if(!this.options.name)throw new Error("Requires the name of master.");this.sentinelIterator=new a.default(this.options.sentinels)}check(e){const t=!e.role||this.options.role===e.role;return t||(s("role invalid, expected %s, but got %s",this.options.role,e.role),this.sentinelIterator.next(),this.sentinelIterator.next(),this.sentinelIterator.reset(!0)),t}disconnect(){super.disconnect(),this.failoverDetector&&this.failoverDetector.cleanup()}connect(a){let i;this.connecting=!0,this.retryAttempts=0;const o=async()=>{const r=this.sentinelIterator.next();if(r.done){this.sentinelIterator.reset(!1);const e="function"==typeof this.options.sentinelRetryStrategy?this.options.sentinelRetryStrategy(++this.retryAttempts):null;let t="number"!=typeof e?"All sentinels are unreachable and retry is disabled.":`All sentinels are unreachable. Retrying from scratch after ${e}ms.`;i&&(t+=` Last error: ${i.message}`),s(t);const n=new Error(t);if("number"==typeof e)return a("error",n),await new Promise((t=>setTimeout(t,e))),o();throw n}let l=null,c=null;try{l=await this.resolve(r.value)}catch(e){c=e}if(!this.connecting)throw new Error(t.CONNECTION_CLOSED_ERROR_MSG);const d=r.value.host+":"+r.value.port;if(l)return s("resolved: %s:%s from sentinel %s",l.host,l.port,d),this.options.enableTLSForSentinelMode&&this.options.tls?(Object.assign(l,this.options.tls),this.stream=(0,n.connect)(l),this.stream.once("secureConnect",this.initFailoverDetector.bind(this))):(this.stream=(0,e.createConnection)(l),this.stream.once("connect",this.initFailoverDetector.bind(this))),this.stream.once("error",(e=>{this.firstError=e})),this.stream;{const e=c?"failed to connect to sentinel "+d+" because "+c.message:"connected to sentinel "+d+" successfully, but got an invalid reply: "+l;return s(e),a("sentinelError",new Error(e)),c&&(i=c),o()}};return o()}async updateSentinels(e){if(!this.options.updateSentinels)return;const n=await e.sentinel("sentinels",this.options.name);Array.isArray(n)&&(n.map(t.packObject).forEach((e=>{if(-1===(e.flags?e.flags.split(","):[]).indexOf("disconnected")&&e.ip&&e.port){const t=this.sentinelNatResolve(c(e));this.sentinelIterator.add(t)&&s("adding sentinel %s:%s",t.host,t.port)}})),s("Updated internal sentinels: %s",this.sentinelIterator))}async resolveMaster(e){const t=await e.sentinel("get-master-addr-by-name",this.options.name);return await this.updateSentinels(e),this.sentinelNatResolve(Array.isArray(t)?{host:t[0],port:Number(t[1])}:null)}async resolveSlave(e){const n=await e.sentinel("slaves",this.options.name);if(!Array.isArray(n))return null;const a=n.map(t.packObject).filter((e=>e.flags&&!e.flags.match(/(disconnected|s_down|o_down)/)));return this.sentinelNatResolve(function(e,n){if(0===e.length)return null;let a;if("function"==typeof n)a=n(e);else if(null!==n&&"object"==typeof n){const t=Array.isArray(n)?n:[n];t.sort(((e,t)=>(e.prio||(e.prio=1),t.prio||(t.prio=1),e.prio<t.prio?-1:e.prio>t.prio?1:0)));for(let n=0;n<t.length;n++){for(let i=0;i<e.length;i++){const o=e[i];if(o.ip===t[n].ip&&o.port===t[n].port){a=o;break}}if(a)break}}a||(a=(0,t.sample)(e));return c(a)}(a,this.options.preferredSlaves))}sentinelNatResolve(e){return e&&this.options.natMap&&this.options.natMap[`${e.host}:${e.port}`]||e}connectToSentinel(e,t){return new o.default({port:e.port||26379,host:e.host,username:this.options.sentinelUsername||null,password:this.options.sentinelPassword||null,family:e.family||("path"in this.options&&this.options.path?void 0:this.options.family),tls:this.options.sentinelTLS,retryStrategy:null,enableReadyCheck:!1,connectTimeout:this.options.connectTimeout,commandTimeout:this.options.sentinelCommandTimeout,...t})}async resolve(e){const t=this.connectToSentinel(e);t.on("error",u);try{return"slave"===this.options.role?await this.resolveSlave(t):await this.resolveMaster(t)}finally{t.disconnect()}}async initFailoverDetector(){var e;if(!this.options.failoverDetector)return;this.sentinelIterator.reset(!0);const t=[];for(;t.length<this.options.sentinelMaxConnections;){const{done:e,value:n}=this.sentinelIterator.next();if(e)break;const a=this.connectToSentinel(n,{lazyConnect:!0,retryStrategy:this.options.sentinelReconnectStrategy});a.on("reconnecting",(()=>{var e;null===(e=this.emitter)||void 0===e||e.emit("sentinelReconnecting")})),t.push({address:n,client:a})}this.sentinelIterator.reset(!1),this.failoverDetector&&this.failoverDetector.cleanup(),this.failoverDetector=new r.FailoverDetector(this,t),await this.failoverDetector.subscribe(),null===(e=this.emitter)||void 0===e||e.emit("failoverSubscribed")}};function c(e){return{host:e.ip,port:Number(e.port)}}function u(){}return gr.default=l,gr}xr.FailoverDetector=class{constructor(e,t){this.isDisconnected=!1,this.connector=e,this.sentinels=t}cleanup(){this.isDisconnected=!0;for(const e of this.sentinels)e.client.disconnect()}async subscribe(){kr("Starting FailoverDetector");const e=[];for(const t of this.sentinels){const n=t.client.subscribe(wr).catch((e=>{kr("Failed to subscribe to failover messages on sentinel %s:%s (%s)",t.address.host||"127.0.0.1",t.address.port||26739,e.message)}));e.push(n),t.client.on("message",(e=>{this.isDisconnected||e!==wr||this.disconnect()}))}await Promise.all(e)}disconnect(){this.isDisconnected=!0,kr("Failover detected, disconnecting"),this.connector.disconnect()}};var Rr={},Ir={},Tr={};Object.defineProperty(Tr,"__esModule",{value:!0});const jr=za;class Or extends jr.AbortError{constructor(e){super(`Reached the max retries per request limit (which is ${e}). Refer to "maxRetriesPerRequest" option for details.`),Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}Tr.default=Or,Object.defineProperty(Ir,"__esModule",{value:!0}),Ir.MaxRetriesPerRequestError=void 0;const Ar=Tr;Ir.MaxRetriesPerRequestError=Ar.default;var Cr={},Pr={exports:{}};const Nr=g.Buffer,Dr=new(0,_.StringDecoder),Mr=za,Lr=Mr.ReplyError,Fr=Mr.ParserError;var Ur=Nr.allocUnsafe(32768),qr=0,Jr=null,Vr=0,Gr=0;function Br(e){const t=e.offset,n=e.buffer,a=n.length-1;for(var i=t;i<a;)if(13===n[i++])return e.offset=i+1,!0===e.optionReturnBuffers?e.buffer.slice(t,i-1):e.buffer.toString("utf8",t,i-1)}function zr(e){const t=e.buffer.length-1;for(var n=e.offset,a=0;n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,a;a=10*a+(t-48)}}function Yr(e,t,n){e.arrayCache.push(t),e.arrayPos.push(n)}function $r(e){const t=e.arrayCache.pop();var n=e.arrayPos.pop();if(e.arrayCache.length){const a=$r(e);if(void 0===a)return void Yr(e,t,n);t[n++]=a}return Wr(e,t,n)}function Wr(e,t,n){const a=e.buffer.length;for(;n<t.length;){const i=e.offset;if(e.offset>=a)return void Yr(e,t,n);const o=Hr(e,e.buffer[e.offset++]);if(void 0===o)return e.arrayCache.length||e.bufferCache.length||(e.offset=i),void Yr(e,t,n);t[n]=o,n++}return t}function Hr(e,t){switch(t){case 36:return function(e){const t=zr(e);if(void 0===t)return;if(t<0)return null;const n=e.offset+t;if(n+2>e.buffer.length)return e.bigStrSize=n+2,e.totalChunkSize=e.buffer.length,void e.bufferCache.push(e.buffer);const a=e.offset;return e.offset=n+2,!0===e.optionReturnBuffers?e.buffer.slice(a,n):e.buffer.toString("utf8",a,n)}(e);case 43:return Br(e);case 42:return function(e){const t=zr(e);if(void 0===t)return;return t<0?null:Wr(e,new Array(t),0)}(e);case 58:return function(e){return!0===e.optionStringNumbers?function(e){const t=e.buffer.length-1;var n=e.offset,a=0,i="";for(45===e.buffer[n]&&(i+="-",n++);n<t;){var o=e.buffer[n++];if(13===o)return e.offset=n+1,0!==a&&(i+=a),i;a>429496728?(i+=10*a+(o-48),a=0):48===o&&0===a?i+=0:a=10*a+(o-48)}}(e):function(e){const t=e.buffer.length-1;var n=e.offset,a=0,i=1;for(45===e.buffer[n]&&(i=-1,n++);n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,i*a;a=10*a+(t-48)}}(e)}(e);case 45:return function(e){var t=Br(e);if(void 0!==t)return!0===e.optionReturnBuffers&&(t=t.toString()),new Lr(t)}(e);default:return function(e,t){const n=new Fr("Protocol error, got "+JSON.stringify(String.fromCharCode(t))+" as reply type byte",JSON.stringify(e.buffer),e.offset);e.buffer=null,e.returnFatalError(n)}(e,t)}}function Qr(){if(Ur.length>51200)if(1===Vr||Gr>2*Vr){const e=Math.floor(Ur.length/10),t=e<qr?qr:e;qr=0,Ur=Ur.slice(t,Ur.length)}else Gr++,Vr--;else clearInterval(Jr),Vr=0,Gr=0,Jr=null}function Zr(e){const t=e.bufferCache,n=e.offset,a=e.bigStrSize-n-2;var i=t.length,o=e.bigStrSize-e.totalChunkSize;if(e.offset=o,o<=2){if(2===i)return t[0].slice(n,t[0].length+o-2);i--,o=t[t.length-2].length+o}!function(e){if(Ur.length<e+qr){const t=e>78643200?2:3;qr>116391936&&(qr=52428800),Ur=Nr.allocUnsafe(e*t+qr),qr=0,Vr++,null===Jr&&(Jr=setInterval(Qr,50))}}(a);const r=qr;t[0].copy(Ur,r,n,t[0].length),qr+=t[0].length-n;for(var s=1;s<i-1;s++)t[s].copy(Ur,qr),qr+=t[s].length;return t[s].copy(Ur,qr,0,o-2),qr+=o-2,Ur.slice(r,qr)}var Xr=class{constructor(e){if(!e)throw new TypeError("Options are mandatory.");if("function"!=typeof e.returnError||"function"!=typeof e.returnReply)throw new TypeError("The returnReply and returnError options have to be functions.");this.setReturnBuffers(!!e.returnBuffers),this.setStringNumbers(!!e.stringNumbers),this.returnError=e.returnError,this.returnFatalError=e.returnFatalError||e.returnError,this.returnReply=e.returnReply,this.reset()}reset(){this.offset=0,this.buffer=null,this.bigStrSize=0,this.totalChunkSize=0,this.bufferCache=[],this.arrayCache=[],this.arrayPos=[]}setReturnBuffers(e){if("boolean"!=typeof e)throw new TypeError("The returnBuffers argument has to be a boolean");this.optionReturnBuffers=e}setStringNumbers(e){if("boolean"!=typeof e)throw new TypeError("The stringNumbers argument has to be a boolean");this.optionStringNumbers=e}execute(e){if(null===this.buffer)this.buffer=e,this.offset=0;else if(0===this.bigStrSize){const t=this.buffer.length,n=t-this.offset,a=Nr.allocUnsafe(n+e.length);if(this.buffer.copy(a,0,this.offset,t),e.copy(a,n,0,e.length),this.buffer=a,this.offset=0,this.arrayCache.length){const e=$r(this);if(void 0===e)return;this.returnReply(e)}}else{if(!(this.totalChunkSize+e.length>=this.bigStrSize))return this.bufferCache.push(e),void(this.totalChunkSize+=e.length);this.bufferCache.push(e);var t=this.optionReturnBuffers?Zr(this):function(e){const t=e.bufferCache,n=e.offset;var a=t.length,i=e.bigStrSize-e.totalChunkSize;if(e.offset=i,i<=2){if(2===a)return t[0].toString("utf8",n,t[0].length+i-2);a--,i=t[t.length-2].length+i}for(var o=Dr.write(t[0].slice(n)),r=1;r<a-1;r++)o+=Dr.write(t[r]);return o+Dr.end(t[r].slice(0,i-2))}(this);if(this.bigStrSize=0,this.bufferCache=[],this.buffer=e,this.arrayCache.length&&(this.arrayCache[0][this.arrayPos[0]++]=t,void 0===(t=$r(this))))return;this.returnReply(t)}for(;this.offset<this.buffer.length;){const e=this.offset,t=this.buffer[this.offset++],n=Hr(this,t);if(void 0===n)return void(this.arrayCache.length||this.bufferCache.length||(this.offset=e));45===t?this.returnError(n):this.returnReply(n)}this.buffer=null}};Pr.exports=Xr;var es={};Object.defineProperty(es,"__esModule",{value:!0});function ts(e){return"unsubscribe"===e?"subscribe":"punsubscribe"===e?"psubscribe":"sunsubscribe"===e?"ssubscribe":e}es.default=class{constructor(){this.set={subscribe:{},psubscribe:{},ssubscribe:{}}}add(e,t){this.set[ts(e)][t]=!0}del(e,t){delete this.set[ts(e)][t]}channels(e){return Object.keys(this.set[ts(e)])}isEmpty(){return 0===this.channels("subscribe").length&&0===this.channels("psubscribe").length&&0===this.channels("ssubscribe").length}},Object.defineProperty(Cr,"__esModule",{value:!0});const ns=Ya,as=Pr.exports,is=es,os=(0,Qa.Debug)("dataHandler");Cr.default=class{constructor(e,t){this.redis=e;const n=new as({stringNumbers:t.stringNumbers,returnBuffers:!0,returnError:e=>{this.returnError(e)},returnFatalError:e=>{this.returnFatalError(e)},returnReply:e=>{this.returnReply(e)}});e.stream.on("data",(e=>{n.execute(e)}))}returnFatalError(e){e.message+=". Please report this.",this.redis.recoverFromFatalError(e,e,{offlineQueue:!1})}returnError(e){const t=this.shiftCommand(e);t&&(e.command={name:t.command.name,args:t.command.args},this.redis.handleReconnection(e,t))}returnReply(e){if(this.handleMonitorReply(e))return;if(this.handleSubscriberReply(e))return;const t=this.shiftCommand(e);t&&(ns.default.checkFlag("ENTER_SUBSCRIBER_MODE",t.command.name)?(this.redis.condition.subscriber=new is.default,this.redis.condition.subscriber.add(t.command.name,e[1].toString()),ss(t.command,e[2])||this.redis.commandQueue.unshift(t)):ns.default.checkFlag("EXIT_SUBSCRIBER_MODE",t.command.name)?ls(t.command,e[2])||this.redis.commandQueue.unshift(t):t.command.resolve(e))}handleSubscriberReply(e){if(!this.redis.condition.subscriber)return!1;const t=Array.isArray(e)?e[0].toString():null;switch(os('receive reply "%s" in subscriber mode',t),t){case"message":this.redis.listeners("message").length>0&&this.redis.emit("message",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("messageBuffer",e[1],e[2]);break;case"pmessage":{const t=e[1].toString();this.redis.listeners("pmessage").length>0&&this.redis.emit("pmessage",t,e[2].toString(),e[3].toString()),this.redis.emit("pmessageBuffer",t,e[2],e[3]);break}case"smessage":this.redis.listeners("smessage").length>0&&this.redis.emit("smessage",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("smessageBuffer",e[1],e[2]);break;case"ssubscribe":case"subscribe":case"psubscribe":{const n=e[1].toString();this.redis.condition.subscriber.add(t,n);const a=this.shiftCommand(e);if(!a)return;ss(a.command,e[2])||this.redis.commandQueue.unshift(a);break}case"sunsubscribe":case"unsubscribe":case"punsubscribe":{const n=e[1]?e[1].toString():null;n&&this.redis.condition.subscriber.del(t,n);const a=e[2];0===Number(a)&&(this.redis.condition.subscriber=!1);const i=this.shiftCommand(e);if(!i)return;ls(i.command,a)||this.redis.commandQueue.unshift(i);break}default:{const t=this.shiftCommand(e);if(!t)return;t.command.resolve(e)}}return!0}handleMonitorReply(e){if("monitoring"!==this.redis.status)return!1;const t=e.toString();if("OK"===t)return!1;const n=t.indexOf(" "),a=t.slice(0,n),i=t.indexOf('"'),o=t.slice(i+1,-1).split('" "').map((e=>e.replace(/\\"/g,'"'))),r=t.slice(n+2,i-2).split(" ");return this.redis.emit("monitor",a,o,r[1],r[0]),!0}shiftCommand(e){const t=this.redis.commandQueue.shift();if(!t){const t=new Error("Command queue state error. If you can reproduce this, please report it."+(e instanceof Error?` Last error: ${e.message}`:` Last reply: ${e.toString()}`));return this.redis.emit("error",t),null}return t}};const rs=new WeakMap;function ss(e,t){let n=rs.has(e)?rs.get(e):e.args.length;return n-=1,n<=0?(e.resolve(t),rs.delete(e),!0):(rs.set(e,n),!1)}function ls(e,t){let n=rs.has(e)?rs.get(e):e.args.length;return 0===n?0===Number(t)&&(rs.delete(e),e.resolve(t),!0):(n-=1,n<=0?(e.resolve(t),!0):(rs.set(e,n),!1))}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.readyHandler=e.errorHandler=e.closeHandler=e.connectHandler=void 0;const t=za,n=Ya,a=Ir,i=Qa,o=Cr,r=(0,i.Debug)("connection");function s(e){const n=new t.AbortError("Command aborted due to connection close");return n.command={name:e.name,args:e.args},n}e.connectHandler=function(t){return function(){t.setStatus("connect"),t.resetCommandQueue();let n=!1;const{connectionEpoch:a}=t;t.condition.auth&&t.auth(t.condition.auth,(function(e){a===t.connectionEpoch&&e&&(-1!==e.message.indexOf("no password is set")?console.warn("[WARN] Redis server does not require a password, but a password was supplied."):-1!==e.message.indexOf("without any password configured for the default user")?console.warn("[WARN] This Redis server's `default` user does not require a password, but a password was supplied"):-1!==e.message.indexOf("wrong number of arguments for 'auth' command")?console.warn("[ERROR] The server returned \"wrong number of arguments for 'auth' command\". You are probably passing both username and password to Redis version 5 or below. You should only pass the 'password' option for Redis version 5 and under."):(n=!0,t.recoverFromFatalError(e,e)))})),t.condition.select&&t.select(t.condition.select).catch((e=>{t.silentEmit("error",e)})),t.options.enableReadyCheck||e.readyHandler(t)(),new o.default(t,{stringNumbers:t.options.stringNumbers}),t.options.enableReadyCheck&&t._readyCheck((function(i,o){a===t.connectionEpoch&&(i?n||t.recoverFromFatalError(new Error("Ready check failed: "+i.message),i):t.connector.check(o)?e.readyHandler(t)():t.disconnect(!0))}))}},e.closeHandler=function(e){return function(){const n=e.status;if(e.setStatus("close"),e.commandQueue.length&&function(e){var t;let n=0;for(let a=0;a<e.length;){const i=null===(t=e.peekAt(a))||void 0===t?void 0:t.command,o=i.pipelineIndex;void 0!==o&&0!==o||(n=0),void 0===o||o===n++?a++:(e.remove(a,1),i.reject(s(i)))}}(e.commandQueue),e.offlineQueue.length&&function(e){var t;for(let n=0;n<e.length;){const a=null===(t=e.peekAt(n))||void 0===t?void 0:t.command;if("multi"===a.name)break;if("exec"===a.name){e.remove(n,1),a.reject(s(a));break}a.inTransaction?(e.remove(n,1),a.reject(s(a))):n++}}(e.offlineQueue),"ready"===n&&(e.prevCondition||(e.prevCondition=e.condition),e.commandQueue.length&&(e.prevCommandQueue=e.commandQueue)),e.manuallyClosing)return e.manuallyClosing=!1,r("skip reconnecting since the connection is manually closed."),t();if("function"!=typeof e.options.retryStrategy)return r("skip reconnecting because `retryStrategy` is not a function"),t();const o=e.options.retryStrategy(++e.retryAttempts);if("number"!=typeof o)return r("skip reconnecting because `retryStrategy` doesn't return a number"),t();r("reconnect in %sms",o),e.setStatus("reconnecting",o),e.reconnectTimeout=setTimeout((function(){e.reconnectTimeout=null,e.connect().catch(i.noop)}),o);const{maxRetriesPerRequest:l}=e.options;if("number"==typeof l)if(l<0)r("maxRetriesPerRequest is negative, ignoring...");else{0===e.retryAttempts%(l+1)&&(r("reach maxRetriesPerRequest limitation, flushing command queue..."),e.flushQueue(new a.MaxRetriesPerRequestError(l)))}};function t(){e.setStatus("end"),e.flushQueue(new Error(i.CONNECTION_CLOSED_ERROR_MSG))}},e.errorHandler=function(e){return function(t){r("error: %s",t),e.silentEmit("error",t)}},e.readyHandler=function(e){return function(){if(e.setStatus("ready"),e.retryAttempts=0,e.options.monitor){e.call("monitor").then((()=>e.setStatus("monitoring")),(t=>e.emit("error",t)));const{sendCommand:t}=e;return e.sendCommand=function(a){return n.default.checkFlag("VALID_IN_MONITOR_MODE",a.name)?t.call(e,a):(a.reject(new Error("Connection is in monitoring mode, can't process commands.")),a.promise)},void e.once("close",(function(){delete e.sendCommand}))}const t=e.prevCondition?e.prevCondition.select:e.condition.select;if(e.options.connectionName&&(r("set the connection name [%s]",e.options.connectionName),e.client("setname",e.options.connectionName).catch(i.noop)),e.options.readOnly&&(r("set the connection to readonly mode"),e.readonly().catch(i.noop)),e.prevCondition){const n=e.prevCondition;if(e.prevCondition=null,n.subscriber&&e.options.autoResubscribe){e.condition.select!==t&&(r("connect to db [%d]",t),e.select(t));const a=n.subscriber.channels("subscribe");a.length&&(r("subscribe %d channels",a.length),e.subscribe(a));const i=n.subscriber.channels("psubscribe");i.length&&(r("psubscribe %d channels",i.length),e.psubscribe(i));const o=n.subscriber.channels("ssubscribe");o.length&&(r("ssubscribe %d channels",o.length),e.ssubscribe(o))}}if(e.prevCommandQueue)if(e.options.autoResendUnfulfilledCommands)for(r("resend %d unfulfilled commands",e.prevCommandQueue.length);e.prevCommandQueue.length>0;){const t=e.prevCommandQueue.shift();t.select!==e.condition.select&&"select"!==t.command.name&&e.select(t.select),e.sendCommand(t.command,t.stream)}else e.prevCommandQueue=null;if(e.offlineQueue.length){r("send %d commands in offline queue",e.offlineQueue.length);const t=e.offlineQueue;for(e.resetOfflineQueue();t.length>0;){const n=t.shift();n.select!==e.condition.select&&"select"!==n.command.name&&e.select(n.select),e.sendCommand(n.command,n.stream)}}e.condition.select!==t&&(r("connect to db [%d]",t),e.select(t))}}}(Rr);var cs,ds={};function us(){if(cs)return Ca;cs=1,Object.defineProperty(Ca,"__esModule",{value:!0});const e=Pa,t=p,n=Da,a=cr(),i=Ya,o=function(){if(Sr)return dr;Sr=1,Object.defineProperty(dr,"__esModule",{value:!0}),dr.SentinelConnector=dr.StandaloneConnector=void 0;const e=ur;dr.StandaloneConnector=e.default;const t=Kr();return dr.SentinelConnector=t.default,dr}(),r=Kr(),s=Rr,l=ds,c=fo,d=bo,u=Qa,m=Yo,h=_o,f=Za,y=or,v=(0,u.Debug)("redis");let b=class a extends h.default{constructor(e,n,a){if(super(),this.status="wait",this.isCluster=!1,this.reconnectTimeout=null,this.connectionEpoch=0,this.retryAttempts=0,this.manuallyClosing=!1,this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this.parseOptions(e,n,a),t.EventEmitter.call(this),this.resetCommandQueue(),this.resetOfflineQueue(),this.options.Connector)this.connector=new this.options.Connector(this.options);else if(this.options.sentinels){const e=new r.default(this.options);e.emitter=this,this.connector=e}else this.connector=new o.StandaloneConnector(this.options);this.options.scripts&&Object.entries(this.options.scripts).forEach((([e,t])=>{this.defineCommand(e,t)})),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch(f.noop)}static createClient(...e){return new a(...e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}connect(e){const t=new Promise(((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));this.connectionEpoch+=1,this.setStatus("connecting");const{options:a}=this;this.condition={select:a.db,auth:a.username?[a.username,a.password]:a.password,subscriber:!1};const i=this;(0,n.default)(this.connector.connect((function(e,t){i.silentEmit(e,t)})),(function(n,o){if(n)return i.flushQueue(n),i.silentEmit("error",n),t(n),void i.setStatus("end");let r=a.tls?"secureConnect":"connect";if("sentinels"in a&&a.sentinels&&!a.enableTLSForSentinelMode&&(r="connect"),i.stream=o,a.noDelay&&o.setNoDelay(!0),"number"==typeof a.keepAlive&&(o.connecting?o.once(r,(()=>{o.setKeepAlive(!0,a.keepAlive)})):o.setKeepAlive(!0,a.keepAlive)),o.connecting){if(o.once(r,s.connectHandler(i)),a.connectTimeout){let e=!1;o.setTimeout(a.connectTimeout,(function(){if(e)return;o.setTimeout(0),o.destroy();const t=new Error("connect ETIMEDOUT");t.errorno="ETIMEDOUT",t.code="ETIMEDOUT",t.syscall="connect",s.errorHandler(i)(t)})),o.once(r,(function(){e=!0,o.setTimeout(0)}))}}else if(o.destroyed){const e=i.connector.firstError;e&&process.nextTick((()=>{s.errorHandler(i)(e)})),process.nextTick(s.closeHandler(i))}else process.nextTick(s.connectHandler(i));o.destroyed||(o.once("error",s.errorHandler(i)),o.once("close",s.closeHandler(i)));const l=function(){i.removeListener("close",c),e()};var c=function(){i.removeListener("ready",l),t(new Error(u.CONNECTION_CLOSED_ERROR_MSG))};i.once("ready",l),i.once("close",c)}))}));return(0,n.default)(t,e)}disconnect(e=!1){e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),"wait"===this.status?s.closeHandler(this)():this.connector.disconnect()}end(){this.disconnect()}duplicate(e){return new a({...this.options,...e})}get mode(){var e;return this.options.monitor?"monitor":(null===(e=this.condition)||void 0===e?void 0:e.subscriber)?"subscriber":"normal"}monitor(e){const t=this.duplicate({monitor:!0,lazyConnect:!1});return(0,n.default)(new Promise((function(e,n){t.once("error",n),t.once("monitoring",(function(){e(t)}))})),e)}sendCommand(t,n){var a,o;if("wait"===this.status&&this.connect().catch(f.noop),"end"===this.status)return t.reject(new Error(u.CONNECTION_CLOSED_ERROR_MSG)),t.promise;if((null===(a=this.condition)||void 0===a?void 0:a.subscriber)&&!i.default.checkFlag("VALID_IN_SUBSCRIBER_MODE",t.name))return t.reject(new Error("Connection in subscriber mode, only subscriber commands may be used")),t.promise;"number"==typeof this.options.commandTimeout&&t.setTimeout(this.options.commandTimeout);let r="ready"===this.status||!n&&"connect"===this.status&&(0,e.exists)(t.name)&&(0,e.hasFlag)(t.name,"loading");if(this.stream&&this.stream.writable?this.stream._writableState&&this.stream._writableState.ended&&(r=!1):r=!1,r)v.enabled&&v("write command[%s]: %d -> %s(%o)",this._getDescription(),null===(o=this.condition)||void 0===o?void 0:o.select,t.name,t.args),n?"isPipeline"in n&&n.isPipeline?n.write(t.toWritable(n.destination.redis.stream)):n.write(t.toWritable(n)):this.stream.write(t.toWritable(this.stream)),this.commandQueue.push({command:t,stream:n,select:this.condition.select}),i.default.checkFlag("WILL_DISCONNECT",t.name)&&(this.manuallyClosing=!0),void 0!==this.options.socketTimeout&&void 0===this.socketTimeoutTimer&&this.setSocketTimeout();else{if(!this.options.enableOfflineQueue)return t.reject(new Error("Stream isn't writeable and enableOfflineQueue options is false")),t.promise;if("quit"===t.name&&0===this.offlineQueue.length)return this.disconnect(),t.resolve(Buffer.from("OK")),t.promise;v.enabled&&v("queue command[%s]: %d -> %s(%o)",this._getDescription(),this.condition.select,t.name,t.args),this.offlineQueue.push({command:t,stream:n,select:this.condition.select})}if("select"===t.name&&(0,u.isInt)(t.args[0])){const e=parseInt(t.args[0],10);this.condition.select!==e&&(this.condition.select=e,this.emit("select",e),v("switch to db [%d]",this.condition.select))}return t.promise}setSocketTimeout(){this.socketTimeoutTimer=setTimeout((()=>{this.stream.destroy(new Error(`Socket timeout. Expecting data, but didn't receive any in ${this.options.socketTimeout}ms.`)),this.socketTimeoutTimer=void 0}),this.options.socketTimeout),this.stream.once("data",(()=>{clearTimeout(this.socketTimeoutTimer),this.socketTimeoutTimer=void 0,0!==this.commandQueue.length&&this.setSocketTimeout()}))}scanStream(e){return this.createScanStream("scan",{options:e})}scanBufferStream(e){return this.createScanStream("scanBuffer",{options:e})}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}silentEmit(e,t){let n;if("error"===e){if(n=t,"end"===this.status)return;if(this.manuallyClosing&&n instanceof Error&&(n.message===u.CONNECTION_CLOSED_ERROR_MSG||"connect"===n.syscall||"read"===n.syscall))return}return this.listeners(e).length>0?this.emit.apply(this,arguments):(n&&n instanceof Error&&console.error("[ioredis] Unhandled error event:",n.stack),!1)}recoverFromFatalError(e,t,n){this.flushQueue(t,n),this.silentEmit("error",t),this.disconnect(!0)}handleReconnection(e,t){var n;let a=!1;switch(this.options.reconnectOnError&&(a=this.options.reconnectOnError(e)),a){case 1:case!0:"reconnecting"!==this.status&&this.disconnect(!0),t.command.reject(e);break;case 2:"reconnecting"!==this.status&&this.disconnect(!0),(null===(n=this.condition)||void 0===n?void 0:n.select)!==t.select&&"select"!==t.command.name&&this.select(t.select),this.sendCommand(t.command);break;default:t.command.reject(e)}}_getDescription(){let e;return e="path"in this.options&&this.options.path?this.options.path:this.stream&&this.stream.remoteAddress&&this.stream.remotePort?this.stream.remoteAddress+":"+this.stream.remotePort:"host"in this.options&&this.options.host?this.options.host+":"+this.options.port:"",this.options.connectionName&&(e+=` (${this.options.connectionName})`),e}resetCommandQueue(){this.commandQueue=new y}resetOfflineQueue(){this.offlineQueue=new y}parseOptions(...e){const t={};let n=!1;for(let a=0;a<e.length;++a){const i=e[a];if(null!=i)if("object"==typeof i)(0,f.defaults)(t,i);else if("string"==typeof i)(0,f.defaults)(t,(0,u.parseURL)(i)),i.startsWith("rediss://")&&(n=!0);else{if("number"!=typeof i)throw new Error("Invalid argument "+i);t.port=i}}n&&(0,f.defaults)(t,{tls:!0}),(0,f.defaults)(t,a.defaultOptions),"string"==typeof t.port&&(t.port=parseInt(t.port,10)),"string"==typeof t.db&&(t.db=parseInt(t.db,10)),this.options=(0,u.resolveTLSProfile)(t)}setStatus(e,t){v.enabled&&v("status[%s]: %s -> %s",this._getDescription(),this.status||"[empty]",e),this.status=e,process.nextTick(this.emit.bind(this,e,t))}createScanStream(e,{key:t,options:n={}}){return new c.default({objectMode:!0,key:t,redis:this,command:e,...n})}flushQueue(e,t){let n;if((t=(0,f.defaults)({},t,{offlineQueue:!0,commandQueue:!0})).offlineQueue)for(;n=this.offlineQueue.shift();)n.command.reject(e);if(t.commandQueue&&this.commandQueue.length>0)for(this.stream&&this.stream.removeAllListeners("data");n=this.commandQueue.shift();)n.command.reject(e)}_readyCheck(e){const t=this;this.info((function(n,a){if(n)return n.message&&n.message.includes("NOPERM")?(console.warn(`Skipping the ready check because INFO command fails: "${n.message}". You can disable ready check with "enableReadyCheck". More: https://github.com/luin/ioredis/wiki/Disable-ready-check.`),e(null,{})):e(n);if("string"!=typeof a)return e(null,a);const i={},o=a.split("\r\n");for(let e=0;e<o.length;++e){const[t,...n]=o[e].split(":"),a=n.join(":");a&&(i[t]=a)}if(i.loading&&"0"!==i.loading){const n=1e3*(i.loading_eta_seconds||1),a=t.options.maxLoadingRetryTime&&t.options.maxLoadingRetryTime<n?t.options.maxLoadingRetryTime:n;v("Redis server still loading, trying again in "+a+"ms"),setTimeout((function(){t._readyCheck(e)}),a)}else e(null,i)})).catch(f.noop)}};return b.Cluster=a.default,b.Command=i.default,b.defaultOptions=l.DEFAULT_REDIS_OPTIONS,(0,m.default)(b,t.EventEmitter),(0,d.addTransactionSupport)(b.prototype),Ca.default=b,Ca}Object.defineProperty(ds,"__esModule",{value:!0}),ds.DEFAULT_REDIS_OPTIONS=void 0,ds.DEFAULT_REDIS_OPTIONS={port:6379,host:"localhost",family:4,connectTimeout:1e4,disconnectTimeout:2e3,retryStrategy:function(e){return Math.min(50*e,2e3)},keepAlive:0,noDelay:!0,connectionName:null,sentinels:null,name:null,role:"master",sentinelRetryStrategy:function(e){return Math.min(10*e,1e3)},sentinelReconnectStrategy:function(){return 6e4},natMap:null,enableTLSForSentinelMode:!1,updateSentinels:!0,failoverDetector:!1,username:null,password:null,db:0,enableOfflineQueue:!0,enableReadyCheck:!0,autoResubscribe:!0,autoResendUnfulfilledCommands:!0,lazyConnect:!1,keyPrefix:"",reconnectOnError:null,readOnly:!1,stringNumbers:!1,maxRetriesPerRequest:20,maxLoadingRetryTime:1e4,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[],sentinelMaxConnections:10},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.print=t.ReplyError=t.SentinelIterator=t.SentinelConnector=t.AbstractConnector=t.Pipeline=t.ScanStream=t.Command=t.Cluster=t.Redis=t.default=void 0,t=e.exports=us().default;var n=us();Object.defineProperty(t,"default",{enumerable:!0,get:function(){return n.default}});var a=us();Object.defineProperty(t,"Redis",{enumerable:!0,get:function(){return a.default}});var i=cr();Object.defineProperty(t,"Cluster",{enumerable:!0,get:function(){return i.default}});var o=Ya;Object.defineProperty(t,"Command",{enumerable:!0,get:function(){return o.default}});var r=fo;Object.defineProperty(t,"ScanStream",{enumerable:!0,get:function(){return r.default}});var s=go;Object.defineProperty(t,"Pipeline",{enumerable:!0,get:function(){return s.default}});var l=pr;Object.defineProperty(t,"AbstractConnector",{enumerable:!0,get:function(){return l.default}});var c=Kr();Object.defineProperty(t,"SentinelConnector",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(t,"SentinelIterator",{enumerable:!0,get:function(){return c.SentinelIterator}}),t.ReplyError=za.ReplyError,Object.defineProperty(t,"Promise",{get:()=>(console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used."),Promise),set(e){console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used.")}}),t.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)}}(Aa,Aa.exports);var ps=O(Aa.exports),ms={exports:{}};var hs={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2};var fs="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};!function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n,MAX_SAFE_BUILD_LENGTH:a,MAX_LENGTH:i}=hs,o=fs,r=(t=e.exports={}).re=[],s=t.safeRe=[],l=t.src=[],c=t.t={};let d=0;const u="[a-zA-Z0-9-]",p=[["\\s",1],["\\d",i],[u,a]],m=(e,t,n)=>{const a=(e=>{for(const[t,n]of p)e=e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);return e})(t),i=d++;o(e,i,t),c[e]=i,l[i]=t,r[i]=new RegExp(t,n?"g":void 0),s[i]=new RegExp(a,n?"g":void 0)};m("NUMERICIDENTIFIER","0|[1-9]\\d*"),m("NUMERICIDENTIFIERLOOSE","\\d+"),m("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${u}*`),m("MAINVERSION",`(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})\\.(${l[c.NUMERICIDENTIFIER]})`),m("MAINVERSIONLOOSE",`(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})\\.(${l[c.NUMERICIDENTIFIERLOOSE]})`),m("PRERELEASEIDENTIFIER",`(?:${l[c.NUMERICIDENTIFIER]}|${l[c.NONNUMERICIDENTIFIER]})`),m("PRERELEASEIDENTIFIERLOOSE",`(?:${l[c.NUMERICIDENTIFIERLOOSE]}|${l[c.NONNUMERICIDENTIFIER]})`),m("PRERELEASE",`(?:-(${l[c.PRERELEASEIDENTIFIER]}(?:\\.${l[c.PRERELEASEIDENTIFIER]})*))`),m("PRERELEASELOOSE",`(?:-?(${l[c.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[c.PRERELEASEIDENTIFIERLOOSE]})*))`),m("BUILDIDENTIFIER",`${u}+`),m("BUILD",`(?:\\+(${l[c.BUILDIDENTIFIER]}(?:\\.${l[c.BUILDIDENTIFIER]})*))`),m("FULLPLAIN",`v?${l[c.MAINVERSION]}${l[c.PRERELEASE]}?${l[c.BUILD]}?`),m("FULL",`^${l[c.FULLPLAIN]}$`),m("LOOSEPLAIN",`[v=\\s]*${l[c.MAINVERSIONLOOSE]}${l[c.PRERELEASELOOSE]}?${l[c.BUILD]}?`),m("LOOSE",`^${l[c.LOOSEPLAIN]}$`),m("GTLT","((?:<|>)?=?)"),m("XRANGEIDENTIFIERLOOSE",`${l[c.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),m("XRANGEIDENTIFIER",`${l[c.NUMERICIDENTIFIER]}|x|X|\\*`),m("XRANGEPLAIN",`[v=\\s]*(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:\\.(${l[c.XRANGEIDENTIFIER]})(?:${l[c.PRERELEASE]})?${l[c.BUILD]}?)?)?`),m("XRANGEPLAINLOOSE",`[v=\\s]*(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[c.XRANGEIDENTIFIERLOOSE]})(?:${l[c.PRERELEASELOOSE]})?${l[c.BUILD]}?)?)?`),m("XRANGE",`^${l[c.GTLT]}\\s*${l[c.XRANGEPLAIN]}$`),m("XRANGELOOSE",`^${l[c.GTLT]}\\s*${l[c.XRANGEPLAINLOOSE]}$`),m("COERCEPLAIN",`(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?`),m("COERCE",`${l[c.COERCEPLAIN]}(?:$|[^\\d])`),m("COERCEFULL",l[c.COERCEPLAIN]+`(?:${l[c.PRERELEASE]})?`+`(?:${l[c.BUILD]})?(?:$|[^\\d])`),m("COERCERTL",l[c.COERCE],!0),m("COERCERTLFULL",l[c.COERCEFULL],!0),m("LONETILDE","(?:~>?)"),m("TILDETRIM",`(\\s*)${l[c.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",m("TILDE",`^${l[c.LONETILDE]}${l[c.XRANGEPLAIN]}$`),m("TILDELOOSE",`^${l[c.LONETILDE]}${l[c.XRANGEPLAINLOOSE]}$`),m("LONECARET","(?:\\^)"),m("CARETTRIM",`(\\s*)${l[c.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",m("CARET",`^${l[c.LONECARET]}${l[c.XRANGEPLAIN]}$`),m("CARETLOOSE",`^${l[c.LONECARET]}${l[c.XRANGEPLAINLOOSE]}$`),m("COMPARATORLOOSE",`^${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]})$|^$`),m("COMPARATOR",`^${l[c.GTLT]}\\s*(${l[c.FULLPLAIN]})$|^$`),m("COMPARATORTRIM",`(\\s*)${l[c.GTLT]}\\s*(${l[c.LOOSEPLAIN]}|${l[c.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",m("HYPHENRANGE",`^\\s*(${l[c.XRANGEPLAIN]})\\s+-\\s+(${l[c.XRANGEPLAIN]})\\s*$`),m("HYPHENRANGELOOSE",`^\\s*(${l[c.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[c.XRANGEPLAINLOOSE]})\\s*$`),m("STAR","(<|>)?=?\\s*\\*"),m("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),m("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}(ms,ms.exports);const ys=Object.freeze({loose:!0}),vs=Object.freeze({});var bs=e=>e?"object"!=typeof e?ys:e:vs;const gs=/^[0-9]+$/,_s=(e,t)=>{const n=gs.test(e),a=gs.test(t);return n&&a&&(e=+e,t=+t),e===t?0:n&&!a?-1:a&&!n?1:e<t?-1:1};var xs={compareIdentifiers:_s,rcompareIdentifiers:(e,t)=>_s(t,e)};const ks=fs,{MAX_LENGTH:ws,MAX_SAFE_INTEGER:Es}=hs,{safeRe:Ss,t:Ks}=ms.exports,Rs=bs,{compareIdentifiers:Is}=xs;var Ts=class e{constructor(t,n){if(n=Rs(n),t instanceof e){if(t.loose===!!n.loose&&t.includePrerelease===!!n.includePrerelease)return t;t=t.version}else if("string"!=typeof t)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof t}".`);if(t.length>ws)throw new TypeError(`version is longer than ${ws} characters`);ks("SemVer",t,n),this.options=n,this.loose=!!n.loose,this.includePrerelease=!!n.includePrerelease;const a=t.trim().match(n.loose?Ss[Ks.LOOSE]:Ss[Ks.FULL]);if(!a)throw new TypeError(`Invalid Version: ${t}`);if(this.raw=t,this.major=+a[1],this.minor=+a[2],this.patch=+a[3],this.major>Es||this.major<0)throw new TypeError("Invalid major version");if(this.minor>Es||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>Es||this.patch<0)throw new TypeError("Invalid patch version");a[4]?this.prerelease=a[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<Es)return t}return e})):this.prerelease=[],this.build=a[5]?a[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(t){if(ks("SemVer.compare",this.version,this.options,t),!(t instanceof e)){if("string"==typeof t&&t===this.version)return 0;t=new e(t,this.options)}return t.version===this.version?0:this.compareMain(t)||this.comparePre(t)}compareMain(t){return t instanceof e||(t=new e(t,this.options)),Is(this.major,t.major)||Is(this.minor,t.minor)||Is(this.patch,t.patch)}comparePre(t){if(t instanceof e||(t=new e(t,this.options)),this.prerelease.length&&!t.prerelease.length)return-1;if(!this.prerelease.length&&t.prerelease.length)return 1;if(!this.prerelease.length&&!t.prerelease.length)return 0;let n=0;do{const e=this.prerelease[n],a=t.prerelease[n];if(ks("prerelease compare",n,e,a),void 0===e&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===e)return-1;if(e!==a)return Is(e,a)}while(++n)}compareBuild(t){t instanceof e||(t=new e(t,this.options));let n=0;do{const e=this.build[n],a=t.build[n];if(ks("build compare",n,e,a),void 0===e&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===e)return-1;if(e!==a)return Is(e,a)}while(++n)}inc(e,t,n){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,n),this.inc("pre",t,n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t,n),this.inc("pre",t,n);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(n)?1:0;if(!t&&!1===n)throw new Error("invalid increment argument: identifier is empty");if(0===this.prerelease.length)this.prerelease=[e];else{let a=this.prerelease.length;for(;--a>=0;)"number"==typeof this.prerelease[a]&&(this.prerelease[a]++,a=-2);if(-1===a){if(t===this.prerelease.join(".")&&!1===n)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(t){let a=[t,e];!1===n&&(a=[t]),0===Is(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=a):this.prerelease=a}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};const js=Ts;var Os=(e,t,n=!1)=>{if(e instanceof js)return e;try{return new js(e,t)}catch(e){if(!n)return null;throw e}};const As=Os;var Cs=(e,t)=>{const n=As(e,t);return n?n.version:null};const Ps=Os;var Ns=(e,t)=>{const n=Ps(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null};const Ds=Ts;var Ms=(e,t,n,a,i)=>{"string"==typeof n&&(i=a,a=n,n=void 0);try{return new Ds(e instanceof Ds?e.version:e,n).inc(t,a,i).version}catch(e){return null}};const Ls=Os;var Fs=(e,t)=>{const n=Ls(e,null,!0),a=Ls(t,null,!0),i=n.compare(a);if(0===i)return null;const o=i>0,r=o?n:a,s=o?a:n,l=!!r.prerelease.length;if(!!s.prerelease.length&&!l)return s.patch||s.minor?r.patch?"patch":r.minor?"minor":"major":"major";const c=l?"pre":"";return n.major!==a.major?c+"major":n.minor!==a.minor?c+"minor":n.patch!==a.patch?c+"patch":"prerelease"};const Us=Ts;var qs=(e,t)=>new Us(e,t).major;const Js=Ts;var Vs=(e,t)=>new Js(e,t).minor;const Gs=Ts;var Bs=(e,t)=>new Gs(e,t).patch;const zs=Os;var Ys=(e,t)=>{const n=zs(e,t);return n&&n.prerelease.length?n.prerelease:null};const $s=Ts;var Ws=(e,t,n)=>new $s(e,n).compare(new $s(t,n));const Hs=Ws;var Qs=(e,t,n)=>Hs(t,e,n);const Zs=Ws;var Xs=(e,t)=>Zs(e,t,!0);const el=Ts;var tl=(e,t,n)=>{const a=new el(e,n),i=new el(t,n);return a.compare(i)||a.compareBuild(i)};const nl=tl;var al=(e,t)=>e.sort(((e,n)=>nl(e,n,t)));const il=tl;var ol=(e,t)=>e.sort(((e,n)=>il(n,e,t)));const rl=Ws;var sl=(e,t,n)=>rl(e,t,n)>0;const ll=Ws;var cl=(e,t,n)=>ll(e,t,n)<0;const dl=Ws;var ul=(e,t,n)=>0===dl(e,t,n);const pl=Ws;var ml=(e,t,n)=>0!==pl(e,t,n);const hl=Ws;var fl=(e,t,n)=>hl(e,t,n)>=0;const yl=Ws;var vl=(e,t,n)=>yl(e,t,n)<=0;const bl=ul,gl=ml,_l=sl,xl=fl,kl=cl,wl=vl;var El=(e,t,n,a)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return bl(e,n,a);case"!=":return gl(e,n,a);case">":return _l(e,n,a);case">=":return xl(e,n,a);case"<":return kl(e,n,a);case"<=":return wl(e,n,a);default:throw new TypeError(`Invalid operator: ${t}`)}};const Sl=Ts,Kl=Os,{safeRe:Rl,t:Il}=ms.exports;var Tl=(e,t)=>{if(e instanceof Sl)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let n=null;if((t=t||{}).rtl){const a=t.includePrerelease?Rl[Il.COERCERTLFULL]:Rl[Il.COERCERTL];let i;for(;(i=a.exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&i.index+i[0].length===n.index+n[0].length||(n=i),a.lastIndex=i.index+i[1].length+i[2].length;a.lastIndex=-1}else n=e.match(t.includePrerelease?Rl[Il.COERCEFULL]:Rl[Il.COERCE]);if(null===n)return null;const a=n[2],i=n[3]||"0",o=n[4]||"0",r=t.includePrerelease&&n[5]?`-${n[5]}`:"",s=t.includePrerelease&&n[6]?`+${n[6]}`:"";return Kl(`${a}.${i}.${o}${r}${s}`,t)};var jl,Ol,Al,Cl,Pl=class{constructor(){this.max=1e3,this.map=new Map}get(e){const t=this.map.get(e);return void 0===t?void 0:(this.map.delete(e),this.map.set(e,t),t)}delete(e){return this.map.delete(e)}set(e,t){if(!this.delete(e)&&void 0!==t){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,t)}return this}};function Nl(){if(Ol)return jl;Ol=1;const e=/\s+/g;class t{constructor(n,o){if(o=a(o),n instanceof t)return n.loose===!!o.loose&&n.includePrerelease===!!o.includePrerelease?n:new t(n.raw,o);if(n instanceof i)return this.raw=n.value,this.set=[[n]],this.formatted=void 0,this;if(this.options=o,this.loose=!!o.loose,this.includePrerelease=!!o.includePrerelease,this.raw=n.trim().replace(e," "),this.set=this.raw.split("||").map((e=>this.parseRange(e.trim()))).filter((e=>e.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter((e=>!h(e[0]))),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&f(e[0])){this.set=[e];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+="||");const t=this.set[e];for(let e=0;e<t.length;e++)e>0&&(this.formatted+=" "),this.formatted+=t[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const t=((this.options.includePrerelease&&p)|(this.options.loose&&m))+":"+e,a=n.get(t);if(a)return a;const r=this.options.loose,f=r?s[l.HYPHENRANGELOOSE]:s[l.HYPHENRANGE];e=e.replace(f,R(this.options.includePrerelease)),o("hyphen replace",e),e=e.replace(s[l.COMPARATORTRIM],c),o("comparator trim",e),e=e.replace(s[l.TILDETRIM],d),o("tilde trim",e),e=e.replace(s[l.CARETTRIM],u),o("caret trim",e);let y=e.split(" ").map((e=>v(e,this.options))).join(" ").split(/\s+/).map((e=>K(e,this.options)));r&&(y=y.filter((e=>(o("loose invalid filter",e,this.options),!!e.match(s[l.COMPARATORLOOSE]))))),o("range list",y);const b=new Map,g=y.map((e=>new i(e,this.options)));for(const e of g){if(h(e))return[e];b.set(e.value,e)}b.size>1&&b.has("")&&b.delete("");const _=[...b.values()];return n.set(t,_),_}intersects(e,n){if(!(e instanceof t))throw new TypeError("a Range is required");return this.set.some((t=>y(t,n)&&e.set.some((e=>y(e,n)&&t.every((t=>e.every((e=>t.intersects(e,n)))))))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new r(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(I(this.set[t],e,this.options))return!0;return!1}}jl=t;const n=new Pl,a=bs,i=Dl(),o=fs,r=Ts,{safeRe:s,t:l,comparatorTrimReplace:c,tildeTrimReplace:d,caretTrimReplace:u}=ms.exports,{FLAG_INCLUDE_PRERELEASE:p,FLAG_LOOSE:m}=hs,h=e=>"<0.0.0-0"===e.value,f=e=>""===e.value,y=(e,t)=>{let n=!0;const a=e.slice();let i=a.pop();for(;n&&a.length;)n=a.every((e=>i.intersects(e,t))),i=a.pop();return n},v=(e,t)=>(o("comp",e,t),e=x(e,t),o("caret",e),e=g(e,t),o("tildes",e),e=w(e,t),o("xrange",e),e=S(e,t),o("stars",e),e),b=e=>!e||"x"===e.toLowerCase()||"*"===e,g=(e,t)=>e.trim().split(/\s+/).map((e=>_(e,t))).join(" "),_=(e,t)=>{const n=t.loose?s[l.TILDELOOSE]:s[l.TILDE];return e.replace(n,((t,n,a,i,r)=>{let s;return o("tilde",e,t,n,a,i,r),b(n)?s="":b(a)?s=`>=${n}.0.0 <${+n+1}.0.0-0`:b(i)?s=`>=${n}.${a}.0 <${n}.${+a+1}.0-0`:r?(o("replaceTilde pr",r),s=`>=${n}.${a}.${i}-${r} <${n}.${+a+1}.0-0`):s=`>=${n}.${a}.${i} <${n}.${+a+1}.0-0`,o("tilde return",s),s}))},x=(e,t)=>e.trim().split(/\s+/).map((e=>k(e,t))).join(" "),k=(e,t)=>{o("caret",e,t);const n=t.loose?s[l.CARETLOOSE]:s[l.CARET],a=t.includePrerelease?"-0":"";return e.replace(n,((t,n,i,r,s)=>{let l;return o("caret",e,t,n,i,r,s),b(n)?l="":b(i)?l=`>=${n}.0.0${a} <${+n+1}.0.0-0`:b(r)?l="0"===n?`>=${n}.${i}.0${a} <${n}.${+i+1}.0-0`:`>=${n}.${i}.0${a} <${+n+1}.0.0-0`:s?(o("replaceCaret pr",s),l="0"===n?"0"===i?`>=${n}.${i}.${r}-${s} <${n}.${i}.${+r+1}-0`:`>=${n}.${i}.${r}-${s} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${r}-${s} <${+n+1}.0.0-0`):(o("no pr"),l="0"===n?"0"===i?`>=${n}.${i}.${r}${a} <${n}.${i}.${+r+1}-0`:`>=${n}.${i}.${r}${a} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${r} <${+n+1}.0.0-0`),o("caret return",l),l}))},w=(e,t)=>(o("replaceXRanges",e,t),e.split(/\s+/).map((e=>E(e,t))).join(" ")),E=(e,t)=>{e=e.trim();const n=t.loose?s[l.XRANGELOOSE]:s[l.XRANGE];return e.replace(n,((n,a,i,r,s,l)=>{o("xRange",e,n,a,i,r,s,l);const c=b(i),d=c||b(r),u=d||b(s),p=u;return"="===a&&p&&(a=""),l=t.includePrerelease?"-0":"",c?n=">"===a||"<"===a?"<0.0.0-0":"*":a&&p?(d&&(r=0),s=0,">"===a?(a=">=",d?(i=+i+1,r=0,s=0):(r=+r+1,s=0)):"<="===a&&(a="<",d?i=+i+1:r=+r+1),"<"===a&&(l="-0"),n=`${a+i}.${r}.${s}${l}`):d?n=`>=${i}.0.0${l} <${+i+1}.0.0-0`:u&&(n=`>=${i}.${r}.0${l} <${i}.${+r+1}.0-0`),o("xRange return",n),n}))},S=(e,t)=>(o("replaceStars",e,t),e.trim().replace(s[l.STAR],"")),K=(e,t)=>(o("replaceGTE0",e,t),e.trim().replace(s[t.includePrerelease?l.GTE0PRE:l.GTE0],"")),R=e=>(t,n,a,i,o,r,s,l,c,d,u,p)=>`${n=b(a)?"":b(i)?`>=${a}.0.0${e?"-0":""}`:b(o)?`>=${a}.${i}.0${e?"-0":""}`:r?`>=${n}`:`>=${n}${e?"-0":""}`} ${l=b(c)?"":b(d)?`<${+c+1}.0.0-0`:b(u)?`<${c}.${+d+1}.0-0`:p?`<=${c}.${d}.${u}-${p}`:e?`<${c}.${d}.${+u+1}-0`:`<=${l}`}`.trim(),I=(e,t,n)=>{for(let n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length&&!n.includePrerelease){for(let n=0;n<e.length;n++)if(o(e[n].semver),e[n].semver!==i.ANY&&e[n].semver.prerelease.length>0){const a=e[n].semver;if(a.major===t.major&&a.minor===t.minor&&a.patch===t.patch)return!0}return!1}return!0};return jl}function Dl(){if(Cl)return Al;Cl=1;const e=Symbol("SemVer ANY");class t{static get ANY(){return e}constructor(a,i){if(i=n(i),a instanceof t){if(a.loose===!!i.loose)return a;a=a.value}a=a.trim().split(/\s+/).join(" "),r("comparator",a,i),this.options=i,this.loose=!!i.loose,this.parse(a),this.semver===e?this.value="":this.value=this.operator+this.semver.version,r("comp",this)}parse(t){const n=this.options.loose?a[i.COMPARATORLOOSE]:a[i.COMPARATOR],o=t.match(n);if(!o)throw new TypeError(`Invalid comparator: ${t}`);this.operator=void 0!==o[1]?o[1]:"","="===this.operator&&(this.operator=""),o[2]?this.semver=new s(o[2],this.options.loose):this.semver=e}toString(){return this.value}test(t){if(r("Comparator.test",t,this.options.loose),this.semver===e||t===e)return!0;if("string"==typeof t)try{t=new s(t,this.options)}catch(e){return!1}return o(t,this.operator,this.semver,this.options)}intersects(e,a){if(!(e instanceof t))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new l(e.value,a).test(this.value):""===e.operator?""===e.value||new l(this.value,a).test(e.semver):(!(a=n(a)).includePrerelease||"<0.0.0-0"!==this.value&&"<0.0.0-0"!==e.value)&&(!(!a.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0")))&&(!(!this.operator.startsWith(">")||!e.operator.startsWith(">"))||(!(!this.operator.startsWith("<")||!e.operator.startsWith("<"))||(!(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))||(!!(o(this.semver,"<",e.semver,a)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))||!!(o(this.semver,">",e.semver,a)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))))))}}Al=t;const n=bs,{safeRe:a,t:i}=ms.exports,o=El,r=fs,s=Ts,l=Nl();return Al}const Ml=Nl();var Ll=(e,t,n)=>{try{t=new Ml(t,n)}catch(e){return!1}return t.test(e)};const Fl=Nl();var Ul=(e,t)=>new Fl(e,t).set.map((e=>e.map((e=>e.value)).join(" ").trim().split(" ")));const ql=Ts,Jl=Nl();var Vl=(e,t,n)=>{let a=null,i=null,o=null;try{o=new Jl(t,n)}catch(e){return null}return e.forEach((e=>{o.test(e)&&(a&&-1!==i.compare(e)||(a=e,i=new ql(a,n)))})),a};const Gl=Ts,Bl=Nl();var zl=(e,t,n)=>{let a=null,i=null,o=null;try{o=new Bl(t,n)}catch(e){return null}return e.forEach((e=>{o.test(e)&&(a&&1!==i.compare(e)||(a=e,i=new Gl(a,n)))})),a};const Yl=Ts,$l=Nl(),Wl=sl;var Hl=(e,t)=>{e=new $l(e,t);let n=new Yl("0.0.0");if(e.test(n))return n;if(n=new Yl("0.0.0-0"),e.test(n))return n;n=null;for(let t=0;t<e.set.length;++t){const a=e.set[t];let i=null;a.forEach((e=>{const t=new Yl(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":i&&!Wl(t,i)||(i=t);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}})),!i||n&&!Wl(n,i)||(n=i)}return n&&e.test(n)?n:null};const Ql=Nl();var Zl=(e,t)=>{try{return new Ql(e,t).range||"*"}catch(e){return null}};const Xl=Ts,ec=Dl(),{ANY:tc}=ec,nc=Nl(),ac=Ll,ic=sl,oc=cl,rc=vl,sc=fl;var lc=(e,t,n,a)=>{let i,o,r,s,l;switch(e=new Xl(e,a),t=new nc(t,a),n){case">":i=ic,o=rc,r=oc,s=">",l=">=";break;case"<":i=oc,o=sc,r=ic,s="<",l="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(ac(e,t,a))return!1;for(let n=0;n<t.set.length;++n){const c=t.set[n];let d=null,u=null;if(c.forEach((e=>{e.semver===tc&&(e=new ec(">=0.0.0")),d=d||e,u=u||e,i(e.semver,d.semver,a)?d=e:r(e.semver,u.semver,a)&&(u=e)})),d.operator===s||d.operator===l)return!1;if((!u.operator||u.operator===s)&&o(e,u.semver))return!1;if(u.operator===l&&r(e,u.semver))return!1}return!0};const cc=lc;var dc=(e,t,n)=>cc(e,t,">",n);const uc=lc;var pc=(e,t,n)=>uc(e,t,"<",n);const mc=Nl();var hc=(e,t,n)=>(e=new mc(e,n),t=new mc(t,n),e.intersects(t,n));const fc=Ll,yc=Ws;const vc=Nl(),bc=Dl(),{ANY:gc}=bc,_c=Ll,xc=Ws,kc=[new bc(">=0.0.0-0")],wc=[new bc(">=0.0.0")],Ec=(e,t,n)=>{if(e===t)return!0;if(1===e.length&&e[0].semver===gc){if(1===t.length&&t[0].semver===gc)return!0;e=n.includePrerelease?kc:wc}if(1===t.length&&t[0].semver===gc){if(n.includePrerelease)return!0;t=wc}const a=new Set;let i,o,r,s,l,c,d;for(const t of e)">"===t.operator||">="===t.operator?i=Sc(i,t,n):"<"===t.operator||"<="===t.operator?o=Kc(o,t,n):a.add(t.semver);if(a.size>1)return null;if(i&&o){if(r=xc(i.semver,o.semver,n),r>0)return null;if(0===r&&(">="!==i.operator||"<="!==o.operator))return null}for(const e of a){if(i&&!_c(e,String(i),n))return null;if(o&&!_c(e,String(o),n))return null;for(const a of t)if(!_c(e,String(a),n))return!1;return!0}let u=!(!o||n.includePrerelease||!o.semver.prerelease.length)&&o.semver,p=!(!i||n.includePrerelease||!i.semver.prerelease.length)&&i.semver;u&&1===u.prerelease.length&&"<"===o.operator&&0===u.prerelease[0]&&(u=!1);for(const e of t){if(d=d||">"===e.operator||">="===e.operator,c=c||"<"===e.operator||"<="===e.operator,i)if(p&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===p.major&&e.semver.minor===p.minor&&e.semver.patch===p.patch&&(p=!1),">"===e.operator||">="===e.operator){if(s=Sc(i,e,n),s===e&&s!==i)return!1}else if(">="===i.operator&&!_c(i.semver,String(e),n))return!1;if(o)if(u&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===u.major&&e.semver.minor===u.minor&&e.semver.patch===u.patch&&(u=!1),"<"===e.operator||"<="===e.operator){if(l=Kc(o,e,n),l===e&&l!==o)return!1}else if("<="===o.operator&&!_c(o.semver,String(e),n))return!1;if(!e.operator&&(o||i)&&0!==r)return!1}return!(i&&c&&!o&&0!==r)&&(!(o&&d&&!i&&0!==r)&&(!p&&!u))},Sc=(e,t,n)=>{if(!e)return t;const a=xc(e.semver,t.semver,n);return a>0?e:a<0||">"===t.operator&&">="===e.operator?t:e},Kc=(e,t,n)=>{if(!e)return t;const a=xc(e.semver,t.semver,n);return a<0?e:a>0||"<"===t.operator&&"<="===e.operator?t:e};var Rc=(e,t,n={})=>{if(e===t)return!0;e=new vc(e,n),t=new vc(t,n);let a=!1;e:for(const i of e.set){for(const e of t.set){const t=Ec(i,e,n);if(a=a||null!==t,t)continue e}if(a)return!1}return!0};const Ic=ms.exports,Tc=hs,jc=Ts,Oc=xs,Ac=(e,t,n)=>{const a=[];let i=null,o=null;const r=e.sort(((e,t)=>yc(e,t,n)));for(const e of r){fc(e,t,n)?(o=e,i||(i=e)):(o&&a.push([i,o]),o=null,i=null)}i&&a.push([i,null]);const s=[];for(const[e,t]of a)e===t?s.push(e):t||e!==r[0]?t?e===r[0]?s.push(`<=${t}`):s.push(`${e} - ${t}`):s.push(`>=${e}`):s.push("*");const l=s.join(" || "),c="string"==typeof t.raw?t.raw:String(t);return l.length<c.length?l:t};var Cc={parse:Os,valid:Cs,clean:Ns,inc:Ms,diff:Fs,major:qs,minor:Vs,patch:Bs,prerelease:Ys,compare:Ws,rcompare:Qs,compareLoose:Xs,compareBuild:tl,sort:al,rsort:ol,gt:sl,lt:cl,eq:ul,neq:ml,gte:fl,lte:vl,cmp:El,coerce:Tl,Comparator:Dl(),Range:Nl(),satisfies:Ll,toComparators:Ul,maxSatisfying:Vl,minSatisfying:zl,minVersion:Hl,validRange:Zl,outside:lc,gtr:dc,ltr:pc,intersects:hc,simplifyRange:Ac,subset:Rc,SemVer:jc,re:Ic.re,src:Ic.src,tokens:Ic.t,SEMVER_SPEC_VERSION:Tc.SEMVER_SPEC_VERSION,RELEASE_TYPES:Tc.RELEASE_TYPES,compareIdentifiers:Oc.compareIdentifiers,rcompareIdentifiers:Oc.rcompareIdentifiers};const Pc={value:null};function Nc(e,t,n){try{return e.apply(t,n)}catch(e){return Pc.value=e,Pc}}function Dc(e){const t={};for(let n=0;n<e.length;n+=2)t[e[n]]=e[n+1];return t}function Mc(e,t){return new Promise((n=>{let a;const i=()=>{null==t||t.signal.removeEventListener("abort",i),clearTimeout(a),n()};a=setTimeout(i,e),null==t||t.signal.addEventListener("abort",i)}))}function Lc(e,t){const n=e.getMaxListeners();e.setMaxListeners(n+t)}function Fc(e){if(!e)return!1;return["connect","disconnect","duplicate"].every((t=>"function"==typeof e[t]))}function Uc(e,t){Lc(e,-t)}function qc(e){if(e)return`${e.queue}:${e.id}`}const Jc=/ERR unknown command ['`]\s*client\s*['`]/;function Vc(e){const t=`${e.message}`;return t!==Qa.CONNECTION_CLOSED_ERROR_MSG&&!t.includes("ECONNREFUSED")}const Gc=(e,t)=>{const n=Cc.valid(Cc.coerce(e));return Cc.lt(n,t)},Bc=e=>{const t={};for(const n of Object.entries(e))t[n[0]]=JSON.parse(n[1]);return t};var zc;!function(e){e[e.Idle=0]="Idle",e[e.Started=1]="Started",e[e.Terminating=2]="Terminating",e[e.Errored=3]="Errored"}(zc||(zc={}));class Yc extends Error{constructor(e){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class $c extends Error{constructor(e){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}const Wc="bullmq:rateLimitExceeded";class Hc extends Error{constructor(e=Wc){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class Qc extends Error{constructor(e){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}let Zc;const Xc=new Uint8Array(16);function ed(){if(!Zc&&(Zc="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Zc))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Zc(Xc)}const td=[];for(let e=0;e<256;++e)td.push((e+256).toString(16).slice(1));var nd,ad,id,od={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function rd(e,t,n){if(od.randomUUID&&!t&&!e)return od.randomUUID();const a=(e=e||{}).random||(e.rng||ed)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return function(e,t=0){return td[e[t+0]]+td[e[t+1]]+td[e[t+2]]+td[e[t+3]]+"-"+td[e[t+4]]+td[e[t+5]]+"-"+td[e[t+6]]+td[e[t+7]]+"-"+td[e[t+8]]+td[e[t+9]]+"-"+td[e[t+10]]+td[e[t+11]]+td[e[t+12]]+td[e[t+13]]+td[e[t+14]]+td[e[t+15]]}(a)}function sd(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(a=Object.getOwnPropertySymbols(e);i<a.length;i++)t.indexOf(a[i])<0&&Object.prototype.propertyIsEnumerable.call(e,a[i])&&(n[a[i]]=e[a[i]])}return n}"function"==typeof SuppressedError&&SuppressedError;try{nd=new TextDecoder}catch(e){}var ld,cd,dd,ud,pd,md=0,hd={},fd=0,yd=0,vd=[],bd={useRecords:!1,mapsAsObjects:!0};class gd{}const _d=new gd;_d.name="MessagePack 0xC1";var xd=!1,kd=2;try{new Function("")}catch(e){kd=1/0}class wd{constructor(e){e&&(!1===e.useRecords&&void 0===e.mapsAsObjects&&(e.mapsAsObjects=!0),e.sequential&&!1!==e.trusted&&(e.trusted=!0,e.structures||0==e.useRecords||(e.structures=[],e.maxSharedStructures||(e.maxSharedStructures=0))),e.structures?e.structures.sharedLength=e.structures.length:e.getStructures&&((e.structures=[]).uninitialized=!0,e.structures.sharedLength=0),e.int64AsNumber&&(e.int64AsType="number")),Object.assign(this,e)}unpack(e,t){if(ad)return Zd((()=>(Xd(),this?this.unpack(e,t):wd.prototype.unpack.call(bd,e,t))));e.buffer||e.constructor!==ArrayBuffer||(e="undefined"!=typeof Buffer?Buffer.from(e):new Uint8Array(e)),"object"==typeof t?(id=t.end||e.length,md=t.start||0):(md=0,id=t>-1?t:e.length),yd=0,cd=null,dd=null,ad=e;try{pd=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch(t){if(ad=null,e instanceof Uint8Array)throw t;throw new Error("Source must be a Uint8Array or Buffer but was a "+(e&&"object"==typeof e?e.constructor.name:typeof e))}if(this instanceof wd){if(hd=this,this.structures)return ld=this.structures,Ed(t);(!ld||ld.length>0)&&(ld=[])}else hd=bd,(!ld||ld.length>0)&&(ld=[]);return Ed(t)}unpackMultiple(e,t){let n,a=0;try{xd=!0;let i=e.length,o=this?this.unpack(e,i):tu.unpack(e,i);if(!t){for(n=[o];md<i;)a=md,n.push(Ed());return n}if(!1===t(o,a,md))return;for(;md<i;)if(a=md,!1===t(Ed(),a,md))return}catch(e){throw e.lastPosition=a,e.values=n,e}finally{xd=!1,Xd()}}_mergeStructures(e,t){e=e||[],Object.isFrozen(e)&&(e=e.map((e=>e.slice(0))));for(let t=0,n=e.length;t<n;t++){let n=e[t];n&&(n.isShared=!0,t>=32&&(n.highByte=t-32>>5))}e.sharedLength=e.length;for(let n in t||[])if(n>=0){let a=e[n],i=t[n];i&&(a&&((e.restoreStructures||(e.restoreStructures=[]))[n]=a),e[n]=i)}return this.structures=e}decode(e,t){return this.unpack(e,t)}}function Ed(e){try{if(!hd.trusted&&!xd){let e=ld.sharedLength||0;e<ld.length&&(ld.length=e)}let e;if(hd.randomAccessStructure&&ad[md]<64&&ad[md],e=Kd(),dd&&(md=dd.postBundlePosition,dd=null),xd&&(ld.restoreStructures=null),md==id)ld&&ld.restoreStructures&&Sd(),ld=null,ad=null,ud&&(ud=null);else{if(md>id)throw new Error("Unexpected end of MessagePack data");if(!xd){let t;try{t=JSON.stringify(e,((e,t)=>"bigint"==typeof t?`${t}n`:t)).slice(0,100)}catch(e){t="(JSON view not available "+e+")"}throw new Error("Data read, but end of buffer not reached "+t)}}return e}catch(e){throw ld&&ld.restoreStructures&&Sd(),Xd(),(e instanceof RangeError||e.message.startsWith("Unexpected end of buffer")||md>id)&&(e.incomplete=!0),e}}function Sd(){for(let e in ld.restoreStructures)ld[e]=ld.restoreStructures[e];ld.restoreStructures=null}function Kd(){let e=ad[md++];if(e<160){if(e<128){if(e<64)return e;{let t=ld[63&e]||hd.getStructures&&jd()[63&e];return t?(t.read||(t.read=Id(t,63&e)),t.read()):e}}if(e<144){if(e-=128,hd.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=Bd();"__proto__"===e&&(e="__proto_"),t[e]=Kd()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set(Kd(),Kd());return t}}{e-=144;let t=new Array(e);for(let n=0;n<e;n++)t[n]=Kd();return hd.freezeData?Object.freeze(t):t}}if(e<192){let t=e-160;if(yd>=md)return cd.slice(md-fd,(md+=t)-fd);if(0==yd&&id<140){let e=t<16?Ud(t):Fd(t);if(null!=e)return e}return Od(t)}{let t;switch(e){case 192:return null;case 193:return dd?(t=Kd(),t>0?dd[1].slice(dd.position1,dd.position1+=t):dd[0].slice(dd.position0,dd.position0-=t)):_d;case 194:return!1;case 195:return!0;case 196:if(t=ad[md++],void 0===t)throw new Error("Unexpected end of buffer");return Jd(t);case 197:return t=pd.getUint16(md),md+=2,Jd(t);case 198:return t=pd.getUint32(md),md+=4,Jd(t);case 199:return Vd(ad[md++]);case 200:return t=pd.getUint16(md),md+=2,Vd(t);case 201:return t=pd.getUint32(md),md+=4,Vd(t);case 202:if(t=pd.getFloat32(md),hd.useFloat32>2){let e=eu[(127&ad[md])<<1|ad[md+1]>>7];return md+=4,(e*t+(t>0?.5:-.5)|0)/e}return md+=4,t;case 203:return t=pd.getFloat64(md),md+=8,t;case 204:return ad[md++];case 205:return t=pd.getUint16(md),md+=2,t;case 206:return t=pd.getUint32(md),md+=4,t;case 207:return"number"===hd.int64AsType?(t=4294967296*pd.getUint32(md),t+=pd.getUint32(md+4)):"string"===hd.int64AsType?t=pd.getBigUint64(md).toString():"auto"===hd.int64AsType?(t=pd.getBigUint64(md),t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=pd.getBigUint64(md),md+=8,t;case 208:return pd.getInt8(md++);case 209:return t=pd.getInt16(md),md+=2,t;case 210:return t=pd.getInt32(md),md+=4,t;case 211:return"number"===hd.int64AsType?(t=4294967296*pd.getInt32(md),t+=pd.getUint32(md+4)):"string"===hd.int64AsType?t=pd.getBigInt64(md).toString():"auto"===hd.int64AsType?(t=pd.getBigInt64(md),t>=BigInt(-2)<<BigInt(52)&&t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=pd.getBigInt64(md),md+=8,t;case 212:if(t=ad[md++],114==t)return Yd(63&ad[md++]);{let e=vd[t];if(e)return e.read?(md++,e.read(Kd())):e.noBuffer?(md++,e()):e(ad.subarray(md,++md));throw new Error("Unknown extension "+t)}case 213:return t=ad[md],114==t?(md++,Yd(63&ad[md++],ad[md++])):Vd(2);case 214:return Vd(4);case 215:return Vd(8);case 216:return Vd(16);case 217:return t=ad[md++],yd>=md?cd.slice(md-fd,(md+=t)-fd):Ad(t);case 218:return t=pd.getUint16(md),yd>=(md+=2)?cd.slice(md-fd,(md+=t)-fd):Cd(t);case 219:return t=pd.getUint32(md),yd>=(md+=4)?cd.slice(md-fd,(md+=t)-fd):Pd(t);case 220:return t=pd.getUint16(md),md+=2,Dd(t);case 221:return t=pd.getUint32(md),md+=4,Dd(t);case 222:return t=pd.getUint16(md),md+=2,Md(t);case 223:return t=pd.getUint32(md),md+=4,Md(t);default:if(e>=224)return e-256;if(void 0===e){let e=new Error("Unexpected end of MessagePack data");throw e.incomplete=!0,e}throw new Error("Unknown MessagePack token "+e)}}}const Rd=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function Id(e,t){function n(){if(n.count++>kd){let n=e.read=new Function("r","return function(){return "+(hd.freezeData?"Object.freeze":"")+"({"+e.map((e=>"__proto__"===e?"__proto_:r()":Rd.test(e)?e+":r()":"["+JSON.stringify(e)+"]:r()")).join(",")+"})}")(Kd);return 0===e.highByte&&(e.read=Td(t,e.read)),n()}let a={};for(let t=0,n=e.length;t<n;t++){let n=e[t];"__proto__"===n&&(n="__proto_"),a[n]=Kd()}return hd.freezeData?Object.freeze(a):a}return n.count=0,0===e.highByte?Td(t,n):n}const Td=(e,t)=>function(){let n=ad[md++];if(0===n)return t();let a=e<32?-(e+(n<<5)):e+(n<<5),i=ld[a]||jd()[a];if(!i)throw new Error("Record id is not defined for "+a);return i.read||(i.read=Id(i,e)),i.read()};function jd(){let e=Zd((()=>(ad=null,hd.getStructures())));return ld=hd._mergeStructures(e,ld)}var Od=Nd,Ad=Nd,Cd=Nd,Pd=Nd;function Nd(e){let t;if(e<16&&(t=Ud(e)))return t;if(e>64&&nd)return nd.decode(ad.subarray(md,md+=e));const n=md+e,a=[];for(t="";md<n;){const e=ad[md++];if(128&e)if(192==(224&e)){const t=63&ad[md++];a.push((31&e)<<6|t)}else if(224==(240&e)){const t=63&ad[md++],n=63&ad[md++];a.push((31&e)<<12|t<<6|n)}else if(240==(248&e)){let t=(7&e)<<18|(63&ad[md++])<<12|(63&ad[md++])<<6|63&ad[md++];t>65535&&(t-=65536,a.push(t>>>10&1023|55296),t=56320|1023&t),a.push(t)}else a.push(e);else a.push(e);a.length>=4096&&(t+=Ld.apply(String,a),a.length=0)}return a.length>0&&(t+=Ld.apply(String,a)),t}function Dd(e){let t=new Array(e);for(let n=0;n<e;n++)t[n]=Kd();return hd.freezeData?Object.freeze(t):t}function Md(e){if(hd.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=Bd();"__proto__"===e&&(e="__proto_"),t[e]=Kd()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set(Kd(),Kd());return t}}var Ld=String.fromCharCode;function Fd(e){let t=md,n=new Array(e);for(let a=0;a<e;a++){const e=ad[md++];if((128&e)>0)return void(md=t);n[a]=e}return Ld.apply(String,n)}function Ud(e){if(e<4){if(e<2){if(0===e)return"";{let e=ad[md++];return(128&e)>1?void(md-=1):Ld(e)}}{let t=ad[md++],n=ad[md++];if((128&t)>0||(128&n)>0)return void(md-=2);if(e<3)return Ld(t,n);let a=ad[md++];return(128&a)>0?void(md-=3):Ld(t,n,a)}}{let t=ad[md++],n=ad[md++],a=ad[md++],i=ad[md++];if((128&t)>0||(128&n)>0||(128&a)>0||(128&i)>0)return void(md-=4);if(e<6){if(4===e)return Ld(t,n,a,i);{let e=ad[md++];return(128&e)>0?void(md-=5):Ld(t,n,a,i,e)}}if(e<8){let o=ad[md++],r=ad[md++];if((128&o)>0||(128&r)>0)return void(md-=6);if(e<7)return Ld(t,n,a,i,o,r);let s=ad[md++];return(128&s)>0?void(md-=7):Ld(t,n,a,i,o,r,s)}{let o=ad[md++],r=ad[md++],s=ad[md++],l=ad[md++];if((128&o)>0||(128&r)>0||(128&s)>0||(128&l)>0)return void(md-=8);if(e<10){if(8===e)return Ld(t,n,a,i,o,r,s,l);{let e=ad[md++];return(128&e)>0?void(md-=9):Ld(t,n,a,i,o,r,s,l,e)}}if(e<12){let c=ad[md++],d=ad[md++];if((128&c)>0||(128&d)>0)return void(md-=10);if(e<11)return Ld(t,n,a,i,o,r,s,l,c,d);let u=ad[md++];return(128&u)>0?void(md-=11):Ld(t,n,a,i,o,r,s,l,c,d,u)}{let c=ad[md++],d=ad[md++],u=ad[md++],p=ad[md++];if((128&c)>0||(128&d)>0||(128&u)>0||(128&p)>0)return void(md-=12);if(e<14){if(12===e)return Ld(t,n,a,i,o,r,s,l,c,d,u,p);{let e=ad[md++];return(128&e)>0?void(md-=13):Ld(t,n,a,i,o,r,s,l,c,d,u,p,e)}}{let m=ad[md++],h=ad[md++];if((128&m)>0||(128&h)>0)return void(md-=14);if(e<15)return Ld(t,n,a,i,o,r,s,l,c,d,u,p,m,h);let f=ad[md++];return(128&f)>0?void(md-=15):Ld(t,n,a,i,o,r,s,l,c,d,u,p,m,h,f)}}}}}function qd(){let e,t=ad[md++];if(t<192)e=t-160;else switch(t){case 217:e=ad[md++];break;case 218:e=pd.getUint16(md),md+=2;break;case 219:e=pd.getUint32(md),md+=4;break;default:throw new Error("Expected string")}return Nd(e)}function Jd(e){return hd.copyBuffers?Uint8Array.prototype.slice.call(ad,md,md+=e):ad.subarray(md,md+=e)}function Vd(e){let t=ad[md++];if(vd[t]){let n;return vd[t](ad.subarray(md,n=md+=e),(e=>{md=e;try{return Kd()}finally{md=n}}))}throw new Error("Unknown extension type "+t)}var Gd=new Array(4096);function Bd(){let e=ad[md++];if(!(e>=160&&e<192))return md--,zd(Kd());if(e-=160,yd>=md)return cd.slice(md-fd,(md+=e)-fd);if(!(0==yd&&id<180))return Od(e);let t,n=4095&(e<<5^(e>1?pd.getUint16(md):e>0?ad[md]:0)),a=Gd[n],i=md,o=md+e-3,r=0;if(a&&a.bytes==e){for(;i<o;){if(t=pd.getUint32(i),t!=a[r++]){i=1879048192;break}i+=4}for(o+=3;i<o;)if(t=ad[i++],t!=a[r++]){i=1879048192;break}if(i===o)return md=i,a.string;o-=3,i=md}for(a=[],Gd[n]=a,a.bytes=e;i<o;)t=pd.getUint32(i),a.push(t),i+=4;for(o+=3;i<o;)t=ad[i++],a.push(t);let s=e<16?Ud(e):Fd(e);return a.string=null!=s?s:Od(e)}function zd(e){if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e||"bigint"==typeof e)return e.toString();if(null==e)return e+"";throw new Error("Invalid property type for record",typeof e)}const Yd=(e,t)=>{let n=Kd().map(zd),a=e;void 0!==t&&(e=e<32?-((t<<5)+e):(t<<5)+e,n.highByte=t);let i=ld[e];return i&&(i.isShared||xd)&&((ld.restoreStructures||(ld.restoreStructures=[]))[e]=i),ld[e]=n,n.read=Id(n,a),n.read()};vd[0]=()=>{},vd[0].noBuffer=!0,vd[66]=e=>{let t=e.length,n=BigInt(128&e[0]?e[0]-256:e[0]);for(let a=1;a<t;a++)n<<=8n,n+=BigInt(e[a]);return n};let $d={Error:Error,TypeError:TypeError,ReferenceError:ReferenceError};vd[101]=()=>{let e=Kd();return($d[e[0]]||Error)(e[1],{cause:e[2]})},vd[105]=e=>{if(!1===hd.structuredClone)throw new Error("Structured clone extension is disabled");let t=pd.getUint32(md-4);ud||(ud=new Map);let n,a=ad[md];n=a>=144&&a<160||220==a||221==a?[]:{};let i={target:n};ud.set(t,i);let o=Kd();return i.used?Object.assign(n,o):(i.target=o,o)},vd[112]=e=>{if(!1===hd.structuredClone)throw new Error("Structured clone extension is disabled");let t=pd.getUint32(md-4),n=ud.get(t);return n.used=!0,n.target},vd[115]=()=>new Set(Kd());const Wd=["Int8","Uint8","Uint8Clamped","Int16","Uint16","Int32","Uint32","Float32","Float64","BigInt64","BigUint64"].map((e=>e+"Array"));let Hd="object"==typeof globalThis?globalThis:window;vd[116]=e=>{let t=e[0],n=Wd[t];if(!n){if(16===t){let t=new ArrayBuffer(e.length-1);return new Uint8Array(t).set(e.subarray(1)),t}throw new Error("Could not find typed array for code "+t)}return new Hd[n](Uint8Array.prototype.slice.call(e,1).buffer)},vd[120]=()=>{let e=Kd();return new RegExp(e[0],e[1])};const Qd=[];function Zd(e){let t=id,n=md,a=fd,i=yd,o=cd,r=ud,s=dd,l=new Uint8Array(ad.slice(0,id)),c=ld,d=ld.slice(0,ld.length),u=hd,p=xd,m=e();return id=t,md=n,fd=a,yd=i,cd=o,ud=r,dd=s,ad=l,xd=p,(ld=c).splice(0,ld.length,...d),hd=u,pd=new DataView(ad.buffer,ad.byteOffset,ad.byteLength),m}function Xd(){ad=null,ud=null,ld=null}vd[98]=e=>{let t=(e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3],n=md;return md+=t-e.length,dd=Qd,(dd=[qd(),qd()]).position0=0,dd.position1=0,dd.postBundlePosition=md,md=n,Kd()},vd[255]=e=>4==e.length?new Date(1e3*(16777216*e[0]+(e[1]<<16)+(e[2]<<8)+e[3])):8==e.length?new Date(((e[0]<<22)+(e[1]<<14)+(e[2]<<6)+(e[3]>>2))/1e6+1e3*(4294967296*(3&e[3])+16777216*e[4]+(e[5]<<16)+(e[6]<<8)+e[7])):12==e.length?new Date(((e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3])/1e6+1e3*((128&e[4]?-281474976710656:0)+1099511627776*e[6]+4294967296*e[7]+16777216*e[8]+(e[9]<<16)+(e[10]<<8)+e[11])):new Date("invalid");const eu=new Array(147);for(let e=0;e<256;e++)eu[e]=+("1e"+Math.floor(45.15-.30103*e));var tu=new wd({useRecords:!1});tu.unpack,tu.unpackMultiple,tu.unpack;let nu,au,iu,ou=new Float32Array(1);new Uint8Array(ou.buffer,0,4);try{nu=new TextEncoder}catch(e){}const ru="undefined"!=typeof Buffer,su=ru?function(e){return Buffer.allocUnsafeSlow(e)}:Uint8Array,lu=ru?Buffer:Uint8Array,cu=ru?4294967296:2144337920;let du,uu,pu,mu,hu=0,fu=null;const yu=/[\u0080-\uFFFF]/,vu=Symbol("record-id");class bu extends wd{constructor(e){let t,n,a,i;super(e),this.offset=0;let o=lu.prototype.utf8Write?function(e,t){return du.utf8Write(e,t,4294967295)}:!(!nu||!nu.encodeInto)&&function(e,t){return nu.encodeInto(e,du.subarray(t)).written},r=this;e||(e={});let s=e&&e.sequential,l=e.structures||e.saveStructures,c=e.maxSharedStructures;if(null==c&&(c=l?32:0),c>8160)throw new Error("Maximum maxSharedStructure is 8160");e.structuredClone&&null==e.moreTypes&&(this.moreTypes=!0);let d=e.maxOwnStructures;null==d&&(d=l?32:64),this.structures||0==e.useRecords||(this.structures=[]);let u=c>32||d+c>64,p=c+64,m=c+d+64;if(m>8256)throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");let h=[],f=0,y=0;this.pack=this.encode=function(e,o){if(du||(du=new su(8192),pu=du.dataView||(du.dataView=new DataView(du.buffer,0,8192)),hu=0),mu=du.length-10,mu-hu<2048?(du=new su(du.length),pu=du.dataView||(du.dataView=new DataView(du.buffer,0,du.length)),mu=du.length-10,hu=0):hu=hu+7&2147483640,t=hu,o&Ku&&(hu+=255&o),i=r.structuredClone?new Map:null,r.bundleStrings&&"string"!=typeof e?(fu=[],fu.size=1/0):fu=null,a=r.structures,a){a.uninitialized&&(a=r._mergeStructures(r.getStructures()));let e=a.sharedLength||0;if(e>c)throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to "+a.sharedLength);if(!a.transitions){a.transitions=Object.create(null);for(let t=0;t<e;t++){let e=a[t];if(!e)continue;let n,i=a.transitions;for(let t=0,a=e.length;t<a;t++){let a=e[t];n=i[a],n||(n=i[a]=Object.create(null)),i=n}i[vu]=t+64}this.lastNamedStructuresLength=e}s||(a.nextId=e+64)}let l;n&&(n=!1);try{r.randomAccessStructure&&e&&e.constructor&&e.constructor===Object?R(e):g(e);let n=fu;if(fu&&ku(t,g,0),i&&i.idsToInsert){let e=i.idsToInsert.sort(((e,t)=>e.offset>t.offset?1:-1)),a=e.length,o=-1;for(;n&&a>0;){let i=e[--a].offset+t;i<n.stringsPosition+t&&-1===o&&(o=0),i>n.position+t?o>=0&&(o+=6):(o>=0&&(pu.setUint32(n.position+t,pu.getUint32(n.position+t)+o),o=-1),n=n.previous,a++)}o>=0&&n&&pu.setUint32(n.position+t,pu.getUint32(n.position+t)+o),hu+=6*e.length,hu>mu&&E(hu),r.offset=hu;let s=function(e,t){let n,a=6*t.length,i=e.length-a;for(;n=t.pop();){let t=n.offset,o=n.id;e.copyWithin(t+a,t,i),a-=6;let r=t+a;e[r++]=214,e[r++]=105,e[r++]=o>>24,e[r++]=o>>16&255,e[r++]=o>>8&255,e[r++]=255&o,i=t}return e}(du.subarray(t,hu),e);return i=null,s}return r.offset=hu,o&Eu?(du.start=t,du.end=hu,du):du.subarray(t,hu)}catch(e){throw l=e,e}finally{if(a&&(v(),n&&r.saveStructures)){let n=a.sharedLength||0,i=du.subarray(t,hu),s=function(e,t){return e.isCompatible=e=>{let n=!e||(t.lastNamedStructuresLength||0)===e.length;return n||t._mergeStructures(e),n},e}(a,r);if(!l)return!1===r.saveStructures(s,s.isCompatible)?r.pack(e,o):(r.lastNamedStructuresLength=n,du.length>1073741824&&(du=null),i)}du.length>1073741824&&(du=null),o&Su&&(hu=t)}};const v=()=>{y<10&&y++;let e=a.sharedLength||0;if(a.length>e&&!s&&(a.length=e),f>1e4)a.transitions=null,y=0,f=0,h.length>0&&(h=[]);else if(h.length>0&&!s){for(let e=0,t=h.length;e<t;e++)h[e][vu]=0;h=[]}},b=e=>{var t=e.length;t<16?du[hu++]=144|t:t<65536?(du[hu++]=220,du[hu++]=t>>8,du[hu++]=255&t):(du[hu++]=221,pu.setUint32(hu,t),hu+=4);for(let n=0;n<t;n++)g(e[n])},g=e=>{hu>mu&&(du=E(hu));var n,a=typeof e;if("string"===a){let a,i=e.length;if(fu&&i>=4&&i<4096){if((fu.size+=i)>21760){let e,n,a=(fu[0]?3*fu[0].length+fu[1].length:0)+10;hu+a>mu&&(du=E(hu+a)),fu.position?(n=fu,du[hu]=200,hu+=3,du[hu++]=98,e=hu-t,hu+=4,ku(t,g,0),pu.setUint16(e+t-3,hu-t-e)):(du[hu++]=214,du[hu++]=98,e=hu-t,hu+=4),fu=["",""],fu.previous=n,fu.size=0,fu.position=e}let n=yu.test(e);return fu[n?0:1]+=e,du[hu++]=193,void g(n?-i:i)}a=i<32?1:i<256?2:i<65536?3:5;let r=3*i;if(hu+r>mu&&(du=E(hu+r)),i<64||!o){let t,o,r,s=hu+a;for(t=0;t<i;t++)o=e.charCodeAt(t),o<128?du[s++]=o:o<2048?(du[s++]=o>>6|192,du[s++]=63&o|128):55296==(64512&o)&&56320==(64512&(r=e.charCodeAt(t+1)))?(o=65536+((1023&o)<<10)+(1023&r),t++,du[s++]=o>>18|240,du[s++]=o>>12&63|128,du[s++]=o>>6&63|128,du[s++]=63&o|128):(du[s++]=o>>12|224,du[s++]=o>>6&63|128,du[s++]=63&o|128);n=s-hu-a}else n=o(e,hu+a);n<32?du[hu++]=160|n:n<256?(a<2&&du.copyWithin(hu+2,hu+1,hu+1+n),du[hu++]=217,du[hu++]=n):n<65536?(a<3&&du.copyWithin(hu+3,hu+2,hu+2+n),du[hu++]=218,du[hu++]=n>>8,du[hu++]=255&n):(a<5&&du.copyWithin(hu+5,hu+3,hu+3+n),du[hu++]=219,pu.setUint32(hu,n),hu+=4),hu+=n}else if("number"===a)if(e>>>0===e)e<32||e<128&&!1===this.useRecords||e<64&&!this.randomAccessStructure?du[hu++]=e:e<256?(du[hu++]=204,du[hu++]=e):e<65536?(du[hu++]=205,du[hu++]=e>>8,du[hu++]=255&e):(du[hu++]=206,pu.setUint32(hu,e),hu+=4);else if((e|0)===e)e>=-32?du[hu++]=256+e:e>=-128?(du[hu++]=208,du[hu++]=e+256):e>=-32768?(du[hu++]=209,pu.setInt16(hu,e),hu+=2):(du[hu++]=210,pu.setInt32(hu,e),hu+=4);else{let t;if((t=this.useFloat32)>0&&e<4294967296&&e>=-2147483648){let n;if(du[hu++]=202,pu.setFloat32(hu,e),t<4||((n=e*eu[(127&du[hu])<<1|du[hu+1]>>7])|0)===n)return void(hu+=4);hu--}du[hu++]=203,pu.setFloat64(hu,e),hu+=8}else if("object"===a||"function"===a)if(e){if(i){let n=i.get(e);if(n){if(!n.id){let e=i.idsToInsert||(i.idsToInsert=[]);n.id=e.push(n)}return du[hu++]=214,du[hu++]=112,pu.setUint32(hu,n.id),void(hu+=4)}i.set(e,{offset:hu-t})}let o=e.constructor;if(o===Object)w(e);else if(o===Array)b(e);else if(o===Map)if(this.mapAsEmptyObject)du[hu++]=128;else{(n=e.size)<16?du[hu++]=128|n:n<65536?(du[hu++]=222,du[hu++]=n>>8,du[hu++]=255&n):(du[hu++]=223,pu.setUint32(hu,n),hu+=4);for(let[t,n]of e)g(t),g(n)}else{for(let t=0,n=au.length;t<n;t++){if(e instanceof iu[t]){let n=au[t];if(n.write){n.type&&(du[hu++]=212,du[hu++]=n.type,du[hu++]=0);let t=n.write.call(this,e);return void(t===e?Array.isArray(e)?b(e):w(e):g(t))}let a,i=du,o=pu,r=hu;du=null;try{a=n.pack.call(this,e,(e=>(du=i,i=null,hu+=e,hu>mu&&E(hu),{target:du,targetView:pu,position:hu-e})),g)}finally{i&&(du=i,pu=o,hu=r,mu=du.length-10)}return void(a&&(a.length+hu>mu&&E(a.length+hu),hu=xu(a,du,hu,n.type)))}}if(Array.isArray(e))b(e);else{if(e.toJSON){const t=e.toJSON();if(t!==e)return g(t)}if("function"===a)return g(this.writeFunction&&this.writeFunction(e));w(e)}}}else du[hu++]=192;else if("boolean"===a)du[hu++]=e?195:194;else if("bigint"===a){if(e<BigInt(1)<<BigInt(63)&&e>=-(BigInt(1)<<BigInt(63)))du[hu++]=211,pu.setBigInt64(hu,e);else if(e<BigInt(1)<<BigInt(64)&&e>0)du[hu++]=207,pu.setBigUint64(hu,e);else{if(!this.largeBigIntToFloat){if(this.useBigIntExtension&&e<2n**1023n&&e>-(2n**1023n)){du[hu++]=199,hu++,du[hu++]=66;let t,n=[];do{let a=0xffn&e;t=(0x80n&a)===(e<0n?0x80n:0n),n.push(a),e>>=8n}while(0n!==e&&-1n!==e||!t);du[hu-2]=n.length;for(let e=n.length;e>0;)du[hu++]=Number(n[--e]);return}throw new RangeError(e+" was too large to fit in MessagePack 64-bit integer format, use useBigIntExtension or set largeBigIntToFloat to convert to float-64")}du[hu++]=203,pu.setFloat64(hu,Number(e))}hu+=8}else{if("undefined"!==a)throw new Error("Unknown type: "+a);this.encodeUndefinedAsNil?du[hu++]=192:(du[hu++]=212,du[hu++]=0,du[hu++]=0)}},_=this.variableMapSize||this.coercibleKeyAsNumber||this.skipValues?e=>{let t;if(this.skipValues){t=[];for(let n in e)"function"==typeof e.hasOwnProperty&&!e.hasOwnProperty(n)||this.skipValues.includes(e[n])||t.push(n)}else t=Object.keys(e);let n,a=t.length;if(a<16?du[hu++]=128|a:a<65536?(du[hu++]=222,du[hu++]=a>>8,du[hu++]=255&a):(du[hu++]=223,pu.setUint32(hu,a),hu+=4),this.coercibleKeyAsNumber)for(let i=0;i<a;i++){n=t[i];let a=Number(n);g(isNaN(a)?n:a),g(e[n])}else for(let i=0;i<a;i++)g(n=t[i]),g(e[n])}:e=>{du[hu++]=222;let n=hu-t;hu+=2;let a=0;for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&(g(t),g(e[t]),a++);du[n+++t]=a>>8,du[n+t]=255&a},x=!1===this.useRecords?_:e.progressiveRecords&&!u?e=>{let n,i,o=a.transitions||(a.transitions=Object.create(null)),r=hu++-t;for(let s in e)if("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(s)){if(n=o[s],n)o=n;else{let l=Object.keys(e),c=o;o=a.transitions;let d=0;for(let e=0,t=l.length;e<t;e++){let t=l[e];n=o[t],n||(n=o[t]=Object.create(null),d++),o=n}r+t+1==hu?(hu--,S(o,l,d)):K(o,l,r,d),i=!0,o=c[s]}g(e[s])}if(!i){let n=o[vu];n?du[r+t]=n:K(o,Object.keys(e),r,0)}}:e=>{let t,n=a.transitions||(a.transitions=Object.create(null)),i=0;for(let a in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(a))&&(t=n[a],t||(t=n[a]=Object.create(null),i++),n=t);let o=n[vu];o?o>=96&&u?(du[hu++]=96+(31&(o-=96)),du[hu++]=o>>5):du[hu++]=o:S(n,n.__keys__||Object.keys(e),i);for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&g(e[t])},k="function"==typeof this.useRecords&&this.useRecords,w=k?e=>{k(e)?x(e):_(e)}:x,E=e=>{let n;if(e>16777216){if(e-t>cu)throw new Error("Packed buffer would be larger than maximum buffer size");n=Math.min(cu,4096*Math.round(Math.max((e-t)*(e>67108864?1.25:2),4194304)/4096))}else n=1+(Math.max(e-t<<2,du.length-1)>>12)<<12;let a=new su(n);return pu=a.dataView||(a.dataView=new DataView(a.buffer,0,n)),e=Math.min(e,du.length),du.copy?du.copy(a,0,t,e):a.set(du.slice(t,e)),hu-=t,t=0,mu=a.length-10,du=a},S=(e,t,i)=>{let o=a.nextId;o||(o=64),o<p&&this.shouldShareStructure&&!this.shouldShareStructure(t)?(o=a.nextOwnId,o<m||(o=p),a.nextOwnId=o+1):(o>=m&&(o=p),a.nextId=o+1);let r=t.highByte=o>=96&&u?o-96>>5:-1;e[vu]=o,e.__keys__=t,a[o-64]=t,o<p?(t.isShared=!0,a.sharedLength=o-63,n=!0,r>=0?(du[hu++]=96+(31&o),du[hu++]=r):du[hu++]=o):(r>=0?(du[hu++]=213,du[hu++]=114,du[hu++]=96+(31&o),du[hu++]=r):(du[hu++]=212,du[hu++]=114,du[hu++]=o),i&&(f+=y*i),h.length>=d&&(h.shift()[vu]=0),h.push(e),g(t))},K=(e,n,a,i)=>{let o=du,r=hu,s=mu,l=t;du=uu,hu=0,t=0,du||(uu=du=new su(8192)),mu=du.length-10,S(e,n,i),uu=du;let c=hu;if(du=o,hu=r,mu=s,t=l,c>1){let e=hu+c-1;e>mu&&E(e);let n=a+t;du.copyWithin(n+c,n+1,hu),du.set(uu.slice(0,c),n),hu=e}else du[a+t]=uu[0]},R=e=>{let i=undefined(e,du,t,hu,a,E,((e,t,a)=>{if(a)return n=!0;hu=t;let i=du;return g(e),v(),i!==du?{position:hu,targetView:pu,target:du}:hu}),this);if(0===i)return w(e);hu=i}}useBuffer(e){du=e,du.dataView||(du.dataView=new DataView(du.buffer,du.byteOffset,du.byteLength)),hu=0}set position(e){hu=e}get position(){return hu}clearSharedData(){this.structures&&(this.structures=[]),this.typedStructs&&(this.typedStructs=[])}}function gu(e,t,n,a){let i=e.byteLength;if(i+1<256){var{target:o,position:r}=n(4+i);o[r++]=199,o[r++]=i+1}else if(i+1<65536){var{target:o,position:r}=n(5+i);o[r++]=200,o[r++]=i+1>>8,o[r++]=i+1&255}else{var{target:o,position:r,targetView:s}=n(7+i);o[r++]=201,s.setUint32(r,i+1),r+=4}o[r++]=116,o[r++]=t,e.buffer||(e=new Uint8Array(e)),o.set(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),r)}function _u(e,t){let n=e.byteLength;var a,i;if(n<256){var{target:a,position:i}=t(n+2);a[i++]=196,a[i++]=n}else if(n<65536){var{target:a,position:i}=t(n+3);a[i++]=197,a[i++]=n>>8,a[i++]=255&n}else{var{target:a,position:i,targetView:o}=t(n+5);a[i++]=198,o.setUint32(i,n),i+=4}a.set(e,i)}function xu(e,t,n,a){let i=e.length;switch(i){case 1:t[n++]=212;break;case 2:t[n++]=213;break;case 4:t[n++]=214;break;case 8:t[n++]=215;break;case 16:t[n++]=216;break;default:i<256?(t[n++]=199,t[n++]=i):i<65536?(t[n++]=200,t[n++]=i>>8,t[n++]=255&i):(t[n++]=201,t[n++]=i>>24,t[n++]=i>>16&255,t[n++]=i>>8&255,t[n++]=255&i)}return t[n++]=a,t.set(e,n),n+=i}function ku(e,t,n){if(fu.length>0){pu.setUint32(fu.position+e,hu+n-fu.position-e),fu.stringsPosition=hu-e;let a=fu;fu=null,t(a[0]),t(a[1])}}iu=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,gd],au=[{pack(e,t,n){let a=e.getTime()/1e3;if((this.useTimestamp32||0===e.getMilliseconds())&&a>=0&&a<4294967296){let{target:e,targetView:n,position:i}=t(6);e[i++]=214,e[i++]=255,n.setUint32(i,a)}else if(a>0&&a<4294967296){let{target:n,targetView:i,position:o}=t(10);n[o++]=215,n[o++]=255,i.setUint32(o,4e6*e.getMilliseconds()+(a/1e3/4294967296|0)),i.setUint32(o+4,a)}else if(isNaN(a)){if(this.onInvalidDate)return t(0),n(this.onInvalidDate());let{target:e,targetView:a,position:i}=t(3);e[i++]=212,e[i++]=255,e[i++]=255}else{let{target:n,targetView:i,position:o}=t(15);n[o++]=199,n[o++]=12,n[o++]=255,i.setUint32(o,1e6*e.getMilliseconds()),i.setBigInt64(o+4,BigInt(Math.floor(a)))}}},{pack(e,t,n){if(this.setAsEmptyObject)return t(0),n({});let a=Array.from(e),{target:i,position:o}=t(this.moreTypes?3:0);this.moreTypes&&(i[o++]=212,i[o++]=115,i[o++]=0),n(a)}},{pack(e,t,n){let{target:a,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(a[i++]=212,a[i++]=101,a[i++]=0),n([e.name,e.message,e.cause])}},{pack(e,t,n){let{target:a,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(a[i++]=212,a[i++]=120,a[i++]=0),n([e.source,e.flags])}},{pack(e,t){this.moreTypes?gu(e,16,t):_u(ru?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let n=e.constructor;n!==lu&&this.moreTypes?gu(e,Wd.indexOf(n.name),t):_u(e,t)}},{pack(e,t){let{target:n,position:a}=t(1);n[a]=193}}];let wu=new bu({useRecords:!1});wu.pack,wu.pack;const Eu=512,Su=1024,Ku=2048,Ru=new bu({useRecords:!1,encodeUndefinedAsNil:!0}).pack;class Iu{constructor(e){this.queue=e;const t=this.queue.keys;this.moveToFinishedKeys=[t.wait,t.active,t.prioritized,t.events,t.stalled,t.limiter,t.delayed,t.paused,t.meta,t.pc,void 0,void 0,void 0,void 0]}async isJobInList(e,t){const n=await this.queue.client;let a;return a=Gc(this.queue.redisVersion,"6.0.6")?await n.isJobInList([e,t]):await n.lpos(e,t),Number.isInteger(a)}addDelayedJob(e,t,n,a){const i=this.queue.keys,o=[i.marker,i.meta,i.id,i.delayed,i.completed,i.events];return o.push(Ru(a),t.data,n),e.addDelayedJob(o)}addPrioritizedJob(e,t,n,a){const i=this.queue.keys,o=[i.marker,i.meta,i.id,i.prioritized,i.completed,i.active,i.events,i.pc];return o.push(Ru(a),t.data,n),e.addPrioritizedJob(o)}addParentJob(e,t,n,a){const i=this.queue.keys,o=[i.meta,i.id,i.completed,i.events];return o.push(Ru(a),t.data,n),e.addParentJob(o)}addStandardJob(e,t,n,a){const i=this.queue.keys,o=[i.wait,i.paused,i.meta,i.id,i.completed,i.active,i.events,i.marker];return o.push(Ru(a),t.data,n),e.addStandardJob(o)}async addJob(e,t,n,a,i={}){const o=this.queue.keys,r=t.parent?Object.assign(Object.assign({},t.parent),{fpof:n.fpof,rdof:n.rdof,idof:n.idof}):null,s=[o[""],void 0!==a?a:"",t.name,t.timestamp,t.parentKey||null,i.waitChildrenKey||null,i.parentDependenciesKey||null,r,t.repeatJobKey,t.debounceId?`${o.de}:${t.debounceId}`:null];let l,c;if(n.repeat){const e=Object.assign({},n.repeat);e.startDate&&(e.startDate=+new Date(e.startDate)),e.endDate&&(e.endDate=+new Date(e.endDate)),l=Ru(Object.assign(Object.assign({},n),{repeat:e}))}else l=Ru(n);if(c=i.waitChildrenKey?await this.addParentJob(e,t,l,s):n.delay?await this.addDelayedJob(e,t,l,s):n.priority?await this.addPrioritizedJob(e,t,l,s):await this.addStandardJob(e,t,l,s),c<0)throw this.finishedErrors({code:c,parentKey:i.parentKey,command:"addJob"});return c}pauseArgs(e){let t="wait",n="paused";e||(t="paused",n="wait");const a=[t,n,"meta","prioritized"].map((e=>this.queue.toKey(e)));a.push(this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.marker);const i=[e?"paused":"resumed"];return a.concat(i)}async pause(e){const t=await this.queue.client,n=this.pauseArgs(e);return t.pause(n)}addRepeatableJobArgs(e,t,n,a){const i=this.queue.keys,o=[i.repeat,i.delayed],r=[t,Ru(n),a,e,i[""]];return o.concat(r)}async addRepeatableJob(e,t,n,a){const i=await this.queue.client,o=this.addRepeatableJobArgs(e,t,n,a);return i.addRepeatableJob(o)}async updateRepeatableJobMillis(e,t,n,a){const i=[this.queue.keys.repeat,n,t,a];return e.updateRepeatableJobMillis(i)}removeRepeatableArgs(e,t,n){const a=this.queue.keys,i=[a.repeat,a.delayed,a.events],o=[e,this.getRepeatConcatOptions(t,n),n,a[""]];return i.concat(o)}getRepeatConcatOptions(e,t){return t&&t.split(":").length>2?t:e}async removeRepeatable(e,t,n){const a=await this.queue.client,i=this.removeRepeatableArgs(e,t,n);return a.removeRepeatable(i)}async remove(e,t){const n=await this.queue.client,a=["","meta"].map((e=>this.queue.toKey(e)));return n.removeJob(a.concat([e,t?1:0]))}async extendLock(e,t,n,a){a=a||await this.queue.client;const i=[this.queue.toKey(e)+":lock",this.queue.keys.stalled,t,n,e];return a.extendLock(i)}async updateData(e,t){const n=await this.queue.client,a=[this.queue.toKey(e.id)],i=JSON.stringify(t),o=await n.updateData(a.concat([i]));if(o<0)throw this.finishedErrors({code:o,jobId:e.id,command:"updateData"})}async updateProgress(e,t){const n=await this.queue.client,a=[this.queue.toKey(e),this.queue.keys.events,this.queue.keys.meta],i=JSON.stringify(t),o=await n.updateProgress(a.concat([e,i]));if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"updateProgress"})}async addLog(e,t,n){const a=await this.queue.client,i=[this.queue.toKey(e),this.queue.toKey(e)+":logs"],o=await a.addLog(i.concat([e,t,n||""]));if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"addLog"});return o}moveToFinishedArgs(e,t,n,a,i,o,r,s=!0){var l,c,d,u,p,m;const h=this.queue.keys,f=this.queue.opts,y="completed"===i?f.removeOnComplete:f.removeOnFail,v=this.queue.toKey(`metrics:${i}`),b=this.moveToFinishedKeys;b[10]=h[i],b[11]=this.queue.toKey(null!==(l=e.id)&&void 0!==l?l:""),b[12]=v,b[13]=this.queue.keys.marker;const g=this.getKeepJobs(a,y),_=[e.id,r,n,void 0===t?"null":t,i,!s||this.queue.closing?0:1,h[""],Ru({token:o,keepJobs:g,limiter:f.limiter,lockDuration:f.lockDuration,attempts:e.opts.attempts,maxMetricsSize:(null===(c=f.metrics)||void 0===c?void 0:c.maxDataPoints)?null===(d=f.metrics)||void 0===d?void 0:d.maxDataPoints:"",fpof:!!(null===(u=e.opts)||void 0===u?void 0:u.failParentOnFailure),idof:!!(null===(p=e.opts)||void 0===p?void 0:p.ignoreDependencyOnFailure),rdof:!!(null===(m=e.opts)||void 0===m?void 0:m.removeDependencyOnFailure)})];return b.concat(_)}getKeepJobs(e,t){return void 0===e?t||{count:e?0:-1}:"object"==typeof e?e:"number"==typeof e?{count:e}:{count:e?0:-1}}async moveToFinished(e,t){const n=await this.queue.client,a=await n.moveToFinished(t);if(a<0)throw this.finishedErrors({code:a,jobId:e,command:"moveToFinished",state:"active"});if(void 0!==a)return Tu(a)}finishedErrors({code:e,jobId:t,parentKey:n,command:a,state:i}){switch(e){case Ea.JobNotExist:return new Error(`Missing key for job ${t}. ${a}`);case Ea.JobLockNotExist:return new Error(`Missing lock for job ${t}. ${a}`);case Ea.JobNotInState:return new Error(`Job ${t} is not in the ${i} state. ${a}`);case Ea.JobPendingDependencies:return new Error(`Job ${t} has pending dependencies. ${a}`);case Ea.ParentJobNotExist:return new Error(`Missing key for parent job ${n}. ${a}`);case Ea.JobLockMismatch:return new Error(`Lock mismatch for job ${t}. Cmd ${a} from ${i}`);case Ea.ParentJobCannotBeReplaced:return new Error(`The parent job ${n} cannot be replaced. ${a}`);default:return new Error(`Unknown code ${e} error for ${t}. ${a}`)}}drainArgs(e){const t=this.queue.keys,n=[t.wait,t.paused,e?t.delayed:"",t.prioritized],a=[t[""]];return n.concat(a)}async drain(e){const t=await this.queue.client,n=this.drainArgs(e);return t.drain(n)}removeChildDependencyArgs(e,t){const n=[this.queue.keys[""]],a=[this.queue.toKey(e),t];return n.concat(a)}async removeChildDependency(e,t){const n=await this.queue.client,a=this.removeChildDependencyArgs(e,t),i=await n.removeChildDependency(a);switch(i){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:i,jobId:e,parentKey:t,command:"removeChildDependency"})}}getRangesArgs(e,t,n,a){const i=this.queue.keys,o=e.map((e=>"waiting"===e?"wait":e)),r=[t,n,a?"1":"0",...o];return[i[""]].concat(r)}async getRanges(e,t=0,n=1,a=!1){const i=await this.queue.client,o=this.getRangesArgs(e,t,n,a);return i.getRanges(o)}getCountsArgs(e){const t=this.queue.keys,n=e.map((e=>"waiting"===e?"wait":e)),a=[...n];return[t[""]].concat(a)}async getCounts(e){const t=await this.queue.client,n=this.getCountsArgs(e);return t.getCounts(n)}getCountsPerPriorityArgs(e){const t=e;return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized].concat(t)}async getCountsPerPriority(e){const t=await this.queue.client,n=this.getCountsPerPriorityArgs(e);return t.getCountsPerPriority(n)}moveToCompletedArgs(e,t,n,a,i=!1){const o=Date.now();return this.moveToFinishedArgs(e,t,"returnvalue",n,"completed",a,o,i)}moveToFailedArgs(e,t,n,a,i=!1){const o=Date.now();return this.moveToFinishedArgs(e,t,"failedReason",n,"failed",a,o,i)}async isFinished(e,t=!1){const n=await this.queue.client,a=["completed","failed",e].map((e=>this.queue.toKey(e)));return n.isFinished(a.concat([e,t?"1":""]))}async getState(e){const t=await this.queue.client,n=["completed","failed","delayed","active","wait","paused","waiting-children","prioritized"].map((e=>this.queue.toKey(e)));return Gc(this.queue.redisVersion,"6.0.6")?t.getState(n.concat([e])):t.getStateV2(n.concat([e]))}async changeDelay(e,t){const n=await this.queue.client,a=this.changeDelayArgs(e,t),i=await n.changeDelay(a);if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"changeDelay",state:"delayed"})}changeDelayArgs(e,t){const n=Date.now();return[this.queue.keys.delayed,this.queue.keys.meta,this.queue.keys.marker,this.queue.keys.events].concat([t,JSON.stringify(n),e,this.queue.toKey(e)])}async changePriority(e,t=0,n=!1){const a=await this.queue.client,i=this.changePriorityArgs(e,t,n),o=await a.changePriority(i);if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"changePriority"})}changePriorityArgs(e,t=0,n=!1){return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.marker].concat([t,this.queue.toKey(e),e,n?1:0])}moveToDelayedArgs(e,t,n,a,i={}){const o=this.queue.keys;return[o.marker,o.active,o.prioritized,o.delayed,this.queue.toKey(e),o.events,o.meta,o.stalled].concat([this.queue.keys[""],t,e,n,a,i.skipAttempt?"1":"0"])}saveStacktraceArgs(e,t,n){return[this.queue.toKey(e)].concat([t,n])}moveToWaitingChildrenArgs(e,t,n){const a=Date.now(),i=qc(n.child);return[`${e}:lock`,"active","waiting-children",e,"stalled"].map((e=>this.queue.toKey(e))).concat([t,null!=i?i:"",JSON.stringify(a),e])}isMaxedArgs(){const e=this.queue.keys;return[e.meta,e.active]}async isMaxed(){const e=await this.queue.client,t=this.isMaxedArgs();return!!await e.isMaxed(t)}async moveToDelayed(e,t,n,a="0",i={}){const o=await this.queue.client,r=this.moveToDelayedArgs(e,t,a,n,i),s=await o.moveToDelayed(r);if(s<0)throw this.finishedErrors({code:s,jobId:e,command:"moveToDelayed",state:"active"})}async moveToWaitingChildren(e,t,n={}){const a=await this.queue.client,i=this.moveToWaitingChildrenArgs(e,t,n),o=await a.moveToWaitingChildren(i);switch(o){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:o,jobId:e,command:"moveToWaitingChildren",state:"active"})}}getRateLimitTtlArgs(e){return[this.queue.keys.limiter].concat([null!=e?e:"0"])}async getRateLimitTtl(e){const t=await this.queue.client,n=this.getRateLimitTtlArgs(e);return t.getRateLimitTtl(n)}async cleanJobsInSet(e,t,n=0){return(await this.queue.client).cleanJobsInSet([this.queue.toKey(e),this.queue.toKey("events"),this.queue.toKey(""),t,n,e])}retryJobArgs(e,t,n){const a=(t?"R":"L")+"PUSH";return[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.paused,this.queue.toKey(e),this.queue.keys.meta,this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.prioritized,this.queue.keys.pc,this.queue.keys.marker,this.queue.keys.stalled].concat([this.queue.toKey(""),Date.now(),a,e,n])}moveJobsToWaitArgs(e,t,n){const a=[t,n,e];return[this.queue.toKey(""),this.queue.keys.events,this.queue.toKey(e),this.queue.toKey("wait"),this.queue.toKey("paused"),this.queue.keys.meta,this.queue.keys.active,this.queue.keys.marker].concat(a)}async retryJobs(e="failed",t=1e3,n=(new Date).getTime()){const a=await this.queue.client,i=this.moveJobsToWaitArgs(e,t,n);return a.moveJobsToWait(i)}async promoteJobs(e=1e3){const t=await this.queue.client,n=this.moveJobsToWaitArgs("delayed",e,Number.MAX_VALUE);return t.moveJobsToWait(n)}async reprocessJob(e,t){const n=await this.queue.client,a=[this.queue.toKey(e.id),this.queue.keys.events,this.queue.toKey(t),this.queue.keys.wait,this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.active,this.queue.keys.marker],i=[e.id,(e.opts.lifo?"R":"L")+"PUSH","failed"===t?"failedReason":"returnvalue",t],o=await n.reprocessJob(a.concat(i));if(1!==o)throw this.finishedErrors({code:o,jobId:e.id,command:"reprocessJob",state:t})}async moveToActive(e,t,n){const a=this.queue.opts,i=this.queue.keys,o=[i.wait,i.active,i.prioritized,i.events,i.stalled,i.limiter,i.delayed,i.paused,i.meta,i.pc,i.marker],r=[i[""],Date.now(),Ru({token:t,lockDuration:a.lockDuration,limiter:a.limiter,name:n})];return Tu(await e.moveToActive(o.concat(r)))}async promote(e){const t=await this.queue.client,n=[this.queue.keys.delayed,this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.events,this.queue.keys.marker],a=[this.queue.toKey(""),e],i=await t.promote(n.concat(a));if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"promote",state:"delayed"})}moveStalledJobsToWaitArgs(){const e=this.queue.opts,t=[this.queue.keys.stalled,this.queue.keys.wait,this.queue.keys.active,this.queue.keys.failed,this.queue.keys["stalled-check"],this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.marker,this.queue.keys.events],n=[e.maxStalledCount,this.queue.toKey(""),Date.now(),e.stalledInterval];return t.concat(n)}async moveStalledJobsToWait(){const e=await this.queue.client,t=this.moveStalledJobsToWaitArgs();return e.moveStalledJobsToWait(t)}async moveJobFromActiveToWait(e,t){const n=await this.queue.client,a=`${this.queue.toKey(e)}:lock`,i=[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.stalled,a,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.limiter,this.queue.keys.prioritized,this.queue.keys.marker,this.queue.keys.events],o=[e,t,this.queue.toKey(e)],r=await n.moveJobFromActiveToWait(i.concat(o));return r<0?0:r}async obliterate(e){const t=await this.queue.client,n=[this.queue.keys.meta,this.queue.toKey("")],a=[e.count,e.force?"force":null],i=await t.obliterate(n.concat(a));if(i<0)switch(i){case-1:throw new Error("Cannot obliterate non-paused queue");case-2:throw new Error("Cannot obliterate queue with active jobs")}return i}async paginate(e,t){const n=await this.queue.client,a=[e],i=t.end>=0?t.end-t.start+1:1/0;let o,r,s,l="0",c=0,d=[],u=[];do{const e=[t.start+d.length,t.end,l,c,5];t.fetchJobs&&e.push(1),[l,c,o,r,s]=await n.paginate(a.concat(e)),d=d.concat(o),s&&s.length&&(u=u.concat(s.map(Dc)))}while("0"!=l&&d.length<i);if(d.length&&Array.isArray(d[0])){const e=[];for(let t=0;t<d.length;t++){const[n,a]=d[t];try{e.push({id:n,v:JSON.parse(a)})}catch(t){e.push({id:n,err:t.message})}}return{cursor:l,items:e,total:r,jobs:u}}return{cursor:l,items:d.map((e=>({id:e}))),total:r,jobs:u}}}function Tu(e){if(e){const t=[null,e[1],e[2],e[3]];return e[0]&&(t[0]=Dc(e[0])),t}return[]}const ju=t.debuglog("bull"),Ou={de:"debounce",fpof:"failParentOnFailure",idof:"ignoreDependencyOnFailure",kl:"keepLogs",rdof:"removeDependencyOnFailure"},Au=(Cu=Ou,Object.entries(Cu).reduce(((e,[t,n])=>(e[n]=t,e)),{}));var Cu;const Pu=2**21;class Nu{constructor(e,t,n,a={},i){this.queue=e,this.name=t,this.data=n,this.opts=a,this.id=i,this.progress=0,this.returnvalue=null,this.stacktrace=null,this.attemptsStarted=0,this.attemptsMade=0;const o=this.opts,{repeatJobKey:r}=o,s=sd(o,["repeatJobKey"]);this.opts=Object.assign({attempts:0,delay:0},s),this.delay=this.opts.delay,this.repeatJobKey=r,this.timestamp=a.timestamp?a.timestamp:Date.now(),this.opts.backoff=ka.normalize(a.backoff),this.parentKey=qc(a.parent),this.parent=a.parent?{id:a.parent.id,queueKey:a.parent.queue}:void 0,this.debounceId=a.debounce?a.debounce.id:void 0,this.toKey=e.toKey.bind(e),this.setScripts(),this.queueQualifiedName=e.qualifiedName}static async create(e,t,n,a){const i=await e.client,o=new this(e,t,n,a,a&&a.jobId);return o.id=await o.addJob(i,{parentKey:o.parentKey,parentDependenciesKey:o.parentKey?`${o.parentKey}:dependencies`:""}),o}static async createBulk(e,t){const n=await e.client,a=t.map((t=>{var n;return new this(e,t.name,t.data,t.opts,null===(n=t.opts)||void 0===n?void 0:n.jobId)})),i=n.pipeline();for(const e of a)e.addJob(i,{parentKey:e.parentKey,parentDependenciesKey:e.parentKey?`${e.parentKey}:dependencies`:""});const o=await i.exec();for(let e=0;e<o.length;++e){const[t,n]=o[e];if(t)throw t;a[e].id=n}return a}static fromJSON(e,t,n){const a=JSON.parse(t.data||"{}"),i=Nu.optsFromJSON(t.opts),o=new this(e,t.name,a,i,t.id||n);return o.progress=JSON.parse(t.progress||"0"),o.delay=parseInt(t.delay),o.timestamp=parseInt(t.timestamp),t.finishedOn&&(o.finishedOn=parseInt(t.finishedOn)),t.processedOn&&(o.processedOn=parseInt(t.processedOn)),t.rjk&&(o.repeatJobKey=t.rjk),t.deid&&(o.debounceId=t.deid),o.failedReason=t.failedReason,o.attemptsStarted=parseInt(t.ats||"0"),o.attemptsMade=parseInt(t.attemptsMade||t.atm||"0"),o.stacktrace=function(e){const t=Nc(JSON.parse,JSON,[e]);return t!==Pc&&t instanceof Array?t:[]}(t.stacktrace),"string"==typeof t.returnvalue&&(o.returnvalue=Du(t.returnvalue)),t.parentKey&&(o.parentKey=t.parentKey),t.parent&&(o.parent=JSON.parse(t.parent)),t.pb&&(o.processedBy=t.pb),o}setScripts(){this.scripts=new Iu(this.queue)}static optsFromJSON(e){const t=JSON.parse(e||"{}"),n=Object.entries(t),a={};for(const e of n){const[t,n]=e;Ou[t]?a[Ou[t]]=n:a[t]=n}return a}static async fromId(e,t){if(t){const n=await e.client,a=await n.hgetall(e.toKey(t));return function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(a)?void 0:this.fromJSON(e,a,t)}}static addJobLog(e,t,n,a){return e.scripts.addLog(t,n,a)}toJSON(){return sd(this,["queue","scripts"])}asJSON(){return{id:this.id,name:this.name,data:JSON.stringify(void 0===this.data?{}:this.data),opts:this.optsAsJSON(this.opts),parent:this.parent?Object.assign({},this.parent):void 0,parentKey:this.parentKey,progress:this.progress,attemptsMade:this.attemptsMade,attemptsStarted:this.attemptsStarted,finishedOn:this.finishedOn,processedOn:this.processedOn,timestamp:this.timestamp,failedReason:JSON.stringify(this.failedReason),stacktrace:JSON.stringify(this.stacktrace),debounceId:this.debounceId,repeatJobKey:this.repeatJobKey,returnvalue:JSON.stringify(this.returnvalue)}}optsAsJSON(e={}){const t=Object.entries(e),n={};for(const e of t){const[t,a]=e;Au[t]?n[Au[t]]=a:n[t]=a}return n}asJSONSandbox(){return Object.assign(Object.assign({},this.asJSON()),{queueName:this.queueName,prefix:this.prefix})}updateData(e){return this.data=e,this.scripts.updateData(this,e)}async updateProgress(e){this.progress=e,await this.scripts.updateProgress(this.id,e),this.queue.emit("progress",this,e)}async log(e){return Nu.addJobLog(this.queue,this.id,e,this.opts.keepLogs)}async removeChildDependency(){return!!await this.scripts.removeChildDependency(this.id,this.parentKey)&&(this.parent=void 0,this.parentKey=void 0,!0)}async clearLogs(e){const t=await this.queue.client,n=this.toKey(this.id)+":logs";e?await t.ltrim(n,-e,-1):await t.del(n)}async remove({removeChildren:e=!0}={}){await this.queue.waitUntilReady();const t=this.queue,n=this;if(!await this.scripts.remove(n.id,e))throw new Error(`Job ${this.id} could not be removed because it is locked by another worker`);t.emit("removed",n)}extendLock(e,t){return this.scripts.extendLock(this.id,e,t)}async moveToCompleted(e,t,n=!0){await this.queue.waitUntilReady(),this.returnvalue=e||void 0;const a=Nc(JSON.stringify,JSON,[e]);if(a===Pc)throw Pc.value;const i=this.scripts.moveToCompletedArgs(this,a,this.opts.removeOnComplete,t,n),o=await this.scripts.moveToFinished(this.id,i);return this.finishedOn=i[this.scripts.moveToFinishedKeys.length+1],this.attemptsMade+=1,o}async moveToFailed(e,t,n=!1){const a=await this.queue.client,i=null==e?void 0:e.message,o=this.queue;let r;this.failedReason=i;const s=a.multi();this.saveStacktrace(s,e);let l,c,d=!1;if(this.attemptsMade+1<this.opts.attempts&&!this.discarded&&!(e instanceof $c||"UnrecoverableError"==e.name)){const n=o.opts;if(c=await ka.calculate(this.opts.backoff,this.attemptsMade+1,e,this,n.settings&&n.settings.backoffStrategy),-1===c)d=!0;else if(c){const e=this.scripts.moveToDelayedArgs(this.id,Date.now(),t,c);s.moveToDelayed(e),r="moveToDelayed"}else s.retryJob(this.scripts.retryJobArgs(this.id,this.opts.lifo,t)),r="retryJob"}else d=!0;if(d){const e=this.scripts.moveToFailedArgs(this,i,this.opts.removeOnFail,t,n);s.moveToFinished(e),l=e[this.scripts.moveToFinishedKeys.length+1],r="moveToFinished"}const u=await s.exec(),p=u.find((e=>e[0]));if(p)throw new Error(`Error "moveToFailed" with command ${r}: ${p}`);const m=u[u.length-1][1];if(m<0)throw this.scripts.finishedErrors({code:m,jobId:this.id,command:r,state:"active"});if(l&&"number"==typeof l&&(this.finishedOn=l),c&&"number"==typeof c&&(this.delay=c),this.attemptsMade+=1,Array.isArray(m))return Tu(m)}isCompleted(){return this.isInZSet("completed")}isFailed(){return this.isInZSet("failed")}isDelayed(){return this.isInZSet("delayed")}isWaitingChildren(){return this.isInZSet("waiting-children")}isActive(){return this.isInList("active")}async isWaiting(){return await this.isInList("wait")||await this.isInList("paused")}get queueName(){return this.queue.name}get prefix(){return this.queue.opts.prefix}getState(){return this.scripts.getState(this.id)}async changeDelay(e){await this.scripts.changeDelay(this.id,e),this.delay=e}async changePriority(e){await this.scripts.changePriority(this.id,e.priority,e.lifo)}async getChildrenValues(){const e=await this.queue.client,t=await e.hgetall(this.toKey(`${this.id}:processed`));if(t)return Bc(t)}async getFailedChildrenValues(){return(await this.queue.client).hgetall(this.toKey(`${this.id}:failed`))}async getDependencies(e={}){const t=(await this.queue.client).multi();if(e.processed||e.unprocessed){const n={cursor:0,count:20};if(e.processed){const a=Object.assign(Object.assign({},n),e.processed);t.hscan(this.toKey(`${this.id}:processed`),a.cursor,"COUNT",a.count)}if(e.unprocessed){const a=Object.assign(Object.assign({},n),e.unprocessed);t.sscan(this.toKey(`${this.id}:dependencies`),a.cursor,"COUNT",a.count)}const[a,i]=await t.exec(),[o,r=[]]=e.processed?a[1]:[],[s,l=[]]=e.unprocessed?e.processed?i[1]:a[1]:[],c={};for(let e=0;e<r.length;++e)e%2&&(c[r[e-1]]=JSON.parse(r[e]));return Object.assign(Object.assign({},o?{processed:c,nextProcessedCursor:Number(o)}:{}),s?{unprocessed:l,nextUnprocessedCursor:Number(s)}:{})}{t.hgetall(this.toKey(`${this.id}:processed`)),t.smembers(this.toKey(`${this.id}:dependencies`));const[[e,n],[a,i]]=await t.exec();return{processed:Bc(n),unprocessed:i}}}async getDependenciesCount(e={}){const t=(await this.queue.client).multi(),n=e.processed||e.unprocessed?e:{processed:!0,unprocessed:!0};n.processed&&t.hlen(this.toKey(`${this.id}:processed`)),n.unprocessed&&t.scard(this.toKey(`${this.id}:dependencies`));const[[a,i]=[],[o,r]=[]]=await t.exec(),s=n.processed?i:void 0,l=n.unprocessed?n.processed?r:i:void 0;return Object.assign(Object.assign({},n.processed?{processed:s}:{}),n.unprocessed?{unprocessed:l}:{})}async waitUntilFinished(e,t){await this.queue.waitUntilReady();const n=this.id;return new Promise((async(a,i)=>{let o;function r(e){d(),a(e.returnvalue)}function s(e){d(),i(new Error(e.failedReason||e))}t&&(o=setTimeout((()=>s(`Job wait ${this.name} timed out before finishing, no finish notification arrived after ${t}ms (id=${n})`)),t));const l=`completed:${n}`,c=`failed:${n}`;e.on(l,r),e.on(c,s),this.queue.on("closing",s);const d=()=>{clearInterval(o),e.removeListener(l,r),e.removeListener(c,s),this.queue.removeListener("closing",s)};await e.waitUntilReady();const[u,p]=await this.scripts.isFinished(n,!0);0!=u&&(-1==u||2==u?s({failedReason:p}):r({returnvalue:Du(p)}))}))}async moveToDelayed(e,t){const n=Date.now(),a=e-n,i=a>0?a:0,o=await this.scripts.moveToDelayed(this.id,n,i,t,{skipAttempt:!0});return this.delay=i,o}async moveToWaitingChildren(e,t={}){return await this.scripts.moveToWaitingChildren(this.id,e,t)}async promote(){const e=this.id;await this.scripts.promote(e),this.delay=0}retry(e="failed"){return this.failedReason=null,this.finishedOn=null,this.processedOn=null,this.returnvalue=null,this.scripts.reprocessJob(this,e)}discard(){this.discarded=!0}async isInZSet(e){const t=await this.queue.client;return null!==await t.zscore(this.queue.toKey(e),this.id)}async isInList(e){return this.scripts.isJobInList(this.queue.toKey(e),this.id)}addJob(e,t){const n=this.asJSON();return this.validateOptions(n),this.scripts.addJob(e,n,n.opts,this.id,t)}validateOptions(e){var t;var n;if(this.opts.sizeLimit&&(n=e.data,Buffer.byteLength(n,"utf8")>this.opts.sizeLimit))throw new Error(`The size of job ${this.name} exceeds the limit ${this.opts.sizeLimit} bytes`);if(this.opts.delay&&this.opts.repeat&&!(null===(t=this.opts.repeat)||void 0===t?void 0:t.count))throw new Error("Delay and repeat options could not be used together");if(this.opts.removeDependencyOnFailure&&this.opts.failParentOnFailure)throw new Error("RemoveDependencyOnFailure and failParentOnFailure options can not be used together");if(this.opts.removeDependencyOnFailure&&this.opts.ignoreDependencyOnFailure)throw new Error("RemoveDependencyOnFailure and ignoreDependencyOnFailure options can not be used together");if(this.opts.failParentOnFailure&&this.opts.ignoreDependencyOnFailure)throw new Error("FailParentOnFailure and ignoreDependencyOnFailure options can not be used together");if(`${parseInt(this.id,10)}`===this.id)throw new Error("Custom Ids cannot be integers");if(this.opts.priority){if(Math.trunc(this.opts.priority)!==this.opts.priority)throw new Error("Priority should not be float");if(this.opts.priority>Pu)throw new Error("Priority should be between 0 and 2097152")}}saveStacktrace(e,t){this.stacktrace=this.stacktrace||[],(null==t?void 0:t.stack)&&(this.stacktrace.push(t.stack),0===this.opts.stackTraceLimit?this.stacktrace=[]:this.opts.stackTraceLimit&&(this.stacktrace=this.stacktrace.slice(-this.opts.stackTraceLimit)));const n=this.scripts.saveStacktraceArgs(this.id,JSON.stringify(this.stacktrace),null==t?void 0:t.message);e.saveStacktrace(n)}}function Du(e){const t=Nc(JSON.parse,JSON,[e]);if(t!==Pc)return t;ju("corrupted returnvalue: "+e,t)}class Mu{constructor(e="bull"){this.prefix=e}getKeys(e){const t={};return["","active","wait","waiting-children","paused","id","delayed","prioritized","stalled-check","completed","failed","stalled","repeat","limiter","meta","events","pc","marker","de"].forEach((n=>{t[n]=this.toKey(e,n)})),t}toKey(e,t){return`${this.getQueueQualifiedName(e)}:${t}`}getQueueQualifiedName(e){return`${this.prefix}:${e}`}}const Lu={name:"addDelayedJob",content:'--[[\n  Adds a delayed job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - computes timestamp.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'delayed\'\n      KEYS[5] \'completed\'\n      KEYS[6] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (use custom instead of one generated automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n          x [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] debounce key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal delayedKey = KEYS[4]\nlocal completedKey = KEYS[5]\nlocal eventsKey = KEYS[6]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal debounceKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to debounce a job.\n]]\nlocal function debounceJob(prefixKey, debounceOpts, jobId, debounceKey, eventsKey, maxEvents)\n  local debounceId = debounceOpts and debounceOpts[\'id\']\n  if debounceId then\n    local ttl = debounceOpts[\'ttl\']\n    local debounceKeyExists\n    if ttl then\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'PX\', ttl, \'NX\')\n    else\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'NX\')\n    end\n    if debounceKeyExists then\n      local currentDebounceJobId = rcall(\'GET\', debounceKey)\n      rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n        "debounced", "jobId", currentDebounceJobId, "debounceId", debounceId)\n      return currentDebounceJobId\n    end\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) ~= false then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey ~= nil then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal debouncedJobId = debounceJob(args[1], opts[\'de\'],\n  jobId, debounceKey, eventsKey, maxEvents)\nif debouncedJobId then\n  return debouncedJobId\nend\n-- Store the job.\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n                                 opts, timestamp, parentKey, parentData,\n                                 repeatJobKey)\nlocal score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\nrcall("ZADD", delayedKey, score, jobId)\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n      "jobId", jobId, "delay", delayedTimestamp)\n-- mark that a delayed job is available\nlocal markerKey = KEYS[1]\naddDelayMarkerIfNeeded(markerKey, delayedKey)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:6},Fu={name:"addLog",content:'--[[\n  Add job log\n  Input:\n    KEYS[1] job id key\n    KEYS[2] job logs key\n    ARGV[1] id\n    ARGV[2] log\n    ARGV[3] keepLogs\n  Output:\n    -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n  local logCount = rcall("RPUSH", KEYS[2], ARGV[2])\n  if ARGV[3] ~= \'\' then\n    local keepLogs = tonumber(ARGV[3])\n    rcall("LTRIM", KEYS[2], -keepLogs, -1)\n    return math.min(keepLogs, logCount)\n  end\n  return logCount\nelse\n  return -1\nend\n',keys:2},Uu={name:"addParentJob",content:'--[[\n  Adds a parent job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - adds the job to the waiting-children zset\n    Input:\n      KEYS[1] \'meta\'\n      KEYS[2] \'id\'\n      KEYS[3] \'completed\'\n      KEYS[4] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] debounce key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[1]\nlocal idKey = KEYS[2]\nlocal completedKey = KEYS[3]\nlocal eventsKey = KEYS[4]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal debounceKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to debounce a job.\n]]\nlocal function debounceJob(prefixKey, debounceOpts, jobId, debounceKey, eventsKey, maxEvents)\n  local debounceId = debounceOpts and debounceOpts[\'id\']\n  if debounceId then\n    local ttl = debounceOpts[\'ttl\']\n    local debounceKeyExists\n    if ttl then\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'PX\', ttl, \'NX\')\n    else\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'NX\')\n    end\n    if debounceKeyExists then\n      local currentDebounceJobId = rcall(\'GET\', debounceKey)\n      rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n        "debounced", "jobId", currentDebounceJobId, "debounceId", debounceId)\n      return currentDebounceJobId\n    end\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) ~= false then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey ~= nil then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal debouncedJobId = debounceJob(args[1], opts[\'de\'],\n  jobId, debounceKey, eventsKey, maxEvents)\nif debouncedJobId then\n  return debouncedJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal waitChildrenKey = args[6]\nrcall("ZADD", waitChildrenKey, timestamp, jobId)\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n      "waiting-children", "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:4},qu={name:"addPrioritizedJob",content:'--[[\n  Adds a priotitized job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'prioritized\'\n      KEYS[5] \'completed\'\n      KEYS[6] \'active\'\n      KEYS[7] events stream key\n      KEYS[8] \'pc\' priority counter\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] debounce key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]] \nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal priorityKey = KEYS[4]\nlocal completedKey = KEYS[5]\nlocal activeKey = KEYS[6]\nlocal eventsKey = KEYS[7]\nlocal priorityCounterKey = KEYS[8]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal debounceKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\nlocal function debounceJob(prefixKey, debounceOpts, jobId, debounceKey, eventsKey, maxEvents)\n  local debounceId = debounceOpts and debounceOpts[\'id\']\n  if debounceId then\n    local ttl = debounceOpts[\'ttl\']\n    local debounceKeyExists\n    if ttl then\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'PX\', ttl, \'NX\')\n    else\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'NX\')\n    end\n    if debounceKeyExists then\n      local currentDebounceJobId = rcall(\'GET\', debounceKey)\n      rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n        "debounced", "jobId", currentDebounceJobId, "debounceId", debounceId)\n      return currentDebounceJobId\n    end\n  end\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey ~= nil then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) ~= false then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal debouncedJobId = debounceJob(args[1], opts[\'de\'],\n  jobId, debounceKey, eventsKey, maxEvents)\nif debouncedJobId then\n  return debouncedJobId\nend\n-- Store the job.\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n                                 opts, timestamp, parentKey, parentData,\n                                 repeatJobKey)\n-- Add the job to the prioritized set\nlocal isPausedOrMaxed = isQueuePausedOrMaxed(metaKey, activeKey)\naddJobWithPriority( KEYS[1], priorityKey, priority, jobId, priorityCounterKey, isPausedOrMaxed)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:8},Ju={name:"addRepeatableJob",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      KEYS[2] \'delayed\' key\n      ARGV[1] next milliseconds\n      ARGV[2] msgpacked options\n            [1]  name\n            [2]  tz?\n            [3]  patten?\n            [4]  endDate?\n            [5]  every?\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      ARGV[4] custom key\n      ARGV[5] prefix key\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal nextMillis = ARGV[1]\nlocal legacyCustomKey = ARGV[3]\nlocal customKey = ARGV[4]\nlocal prefixKey = ARGV[5]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function storeRepeatableJob(repeatKey, customKey, nextMillis, rawOpts)\n  rcall("ZADD", repeatKey, nextMillis, customKey)\n  local opts = cmsgpack.unpack(rawOpts)\n  local optionalValues = {}\n  if opts[\'tz\'] then\n    table.insert(optionalValues, "tz")\n    table.insert(optionalValues, opts[\'tz\'])\n  end\n  if opts[\'pattern\'] then\n    table.insert(optionalValues, "pattern")\n    table.insert(optionalValues, opts[\'pattern\'])\n  end\n  if opts[\'endDate\'] then\n    table.insert(optionalValues, "endDate")\n    table.insert(optionalValues, opts[\'endDate\'])\n  end\n  if opts[\'every\'] then\n    table.insert(optionalValues, "every")\n    table.insert(optionalValues, opts[\'every\'])\n  end\n  rcall("HMSET", repeatKey .. ":" .. customKey, "name", opts[\'name\'],\n    unpack(optionalValues))\n  return customKey\nend\n-- If we are overriding a repeatable job we must delete the delayed job for\n-- the next iteration.\nlocal prevMillis = rcall("ZSCORE", repeatKey, customKey)\nif prevMillis ~= false then\n  local delayedJobId =  "repeat:" .. customKey .. ":" .. prevMillis\n  if rcall("ZSCORE", delayedKey, delayedJobId) ~= false then\n    removeJob(delayedJobId, true, prefixKey, true --[[remove debounce key]])\n    rcall("ZREM", delayedKey, delayedJobId)\n  end\nend\n-- Keep backwards compatibility with old repeatable jobs (<= 3.0.0)\nif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n  return storeRepeatableJob(repeatKey, legacyCustomKey, nextMillis, ARGV[2])\nend\nreturn storeRepeatableJob(repeatKey, customKey, nextMillis, ARGV[2])\n',keys:2},Vu={name:"addStandardJob",content:'--[[\n  Adds a job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - if delayed:\n      - computes timestamp.\n      - adds to delayed zset.\n      - Emits a global event \'delayed\' if the job is delayed.\n    - if not delayed\n      - Adds the jobId to the wait/paused list in one of three ways:\n         - LIFO\n         - FIFO\n         - prioritized.\n      - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'wait\',\n      KEYS[2] \'paused\'\n      KEYS[3] \'meta\'\n      KEYS[4] \'id\'\n      KEYS[5] \'completed\'\n      KEYS[6] \'active\'\n      KEYS[7] events stream key\n      KEYS[8] marker key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] debounce key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal eventsKey = KEYS[7]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal debounceKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\nlocal function debounceJob(prefixKey, debounceOpts, jobId, debounceKey, eventsKey, maxEvents)\n  local debounceId = debounceOpts and debounceOpts[\'id\']\n  if debounceId then\n    local ttl = debounceOpts[\'ttl\']\n    local debounceKeyExists\n    if ttl then\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'PX\', ttl, \'NX\')\n    else\n      debounceKeyExists = not rcall(\'SET\', debounceKey, jobId, \'NX\')\n    end\n    if debounceKeyExists then\n      local currentDebounceJobId = rcall(\'GET\', debounceKey)\n      rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n        "debounced", "jobId", currentDebounceJobId, "debounceId", debounceId)\n      return currentDebounceJobId\n    end\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) ~= false then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey ~= nil then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", KEYS[4])\nlocal metaKey = KEYS[3]\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, KEYS[5], eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal debouncedJobId = debounceJob(args[1], opts[\'de\'],\n  jobId, debounceKey, eventsKey, maxEvents)\nif debouncedJobId then\n  return debouncedJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[6], KEYS[1], KEYS[2])\n-- LIFO or FIFO\nlocal pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\naddJobInTargetList(target, KEYS[8], pushCmd, isPausedOrMaxed, jobId)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:8},Gu={name:"changeDelay",content:'--[[\n  Change job delay when it is in delayed set.\n  Input:\n    KEYS[1] delayed key\n    KEYS[2] meta key\n    KEYS[3] marker key\n    KEYS[4] events stream\n    ARGV[1] delay\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] job key\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in delayed set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\nif rcall("EXISTS", ARGV[4]) == 1 then\n  local jobId = ARGV[3]\n  local delay = tonumber(ARGV[1])\n  local score, delayedTimestamp = getDelayedScore(KEYS[1], ARGV[2], delay)\n  local numRemovedElements = rcall("ZREM", KEYS[1], jobId)\n  if numRemovedElements < 1 then\n    return -3\n  end\n  rcall("HSET", ARGV[4], "delay", delay)\n  rcall("ZADD", KEYS[1], score, jobId)\n  local maxEvents = getOrSetMaxEvents(KEYS[2])\n  rcall("XADD", KEYS[4], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(KEYS[3], KEYS[1])\n  return 0\nelse\n  return -1\nend',keys:4},Bu={name:"changePriority",content:'--[[\n  Change job priority\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] \'active\'\n    KEYS[6] \'pc\' priority counter\n    KEYS[7] \'marker\'\n    ARGV[1] priority value\n    ARGV[2] job key\n    ARGV[3] job id\n    ARGV[4] lifo\n    Output:\n       0  - OK\n      -1  - Missing job\n]]\nlocal jobKey = ARGV[2]\nlocal jobId = ARGV[3]\nlocal priority = tonumber(ARGV[1])\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\nlocal function reAddJobWithNewPriority( prioritizedKey, markerKey, targetKey,\n    priorityCounter, lifo, priority, jobId, isPausedOrMaxed)\n    if priority == 0 then\n        local pushCmd = lifo and \'RPUSH\' or \'LPUSH\'\n        addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n        if lifo then\n            pushBackJobWithPriority(prioritizedKey, priority, jobId)\n        else\n            addJobWithPriority(markerKey, prioritizedKey, priority, jobId,\n                priorityCounter, isPausedOrMaxed)\n        end\n    end\nend\nif rcall("EXISTS", jobKey) == 1 then\n    local metaKey = KEYS[3]\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[5], KEYS[1], KEYS[2])\n    local prioritizedKey = KEYS[4]\n    local priorityCounterKey = KEYS[6]\n    local markerKey = KEYS[7]\n    -- Re-add with the new priority\n    if rcall("ZREM", KEYS[4], jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    elseif rcall("LREM", target, -1, jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    end\n    rcall("HSET", jobKey, "priority", priority)\n    return 0\nelse\n    return -1\nend\n',keys:7},zu={name:"cleanJobsInSet",content:'--[[\n  Remove jobs from the specific set.\n  Input:\n    KEYS[1]  set key,\n    KEYS[2]  events stream key\n    ARGV[1]  jobKey prefix\n    ARGV[2]  timestamp\n    ARGV[3]  limit the number of jobs to be removed. 0 is unlimited\n    ARGV[4]  set name, can be any of \'wait\', \'active\', \'paused\', \'delayed\', \'completed\', or \'failed\'\n]]\nlocal rcall = redis.call\nlocal rangeStart = 0\nlocal rangeEnd = -1\nlocal limit = tonumber(ARGV[3])\n-- If we\'re only deleting _n_ items, avoid retrieving all items\n-- for faster performance\n--\n-- Start from the tail of the list, since that\'s where oldest elements\n-- are generally added for FIFO lists\nif limit > 0 then\n  rangeStart = -1 - limit + 1\n  rangeEnd = -1\nend\n-- Includes\n--[[\n  Function to clean job list.\n  Returns jobIds and deleted count number.\n]]\n-- Includes\n--[[\n  Function to get the latest saved timestamp.\n]]\nlocal function getTimestamp(jobKey, attributes)\n  if #attributes == 1 then\n    return rcall("HGET", jobKey, attributes[1])\n  end\n  local jobTs\n  for _, ts in ipairs(rcall("HMGET", jobKey, unpack(attributes))) do\n    if (ts) then\n      jobTs = ts\n      break\n    end\n  end\n  return jobTs\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function cleanList(listKey, jobKeyPrefix, rangeStart, rangeEnd,\n  timestamp, isWaiting)\n  local jobs = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  local deleted = {}\n  local deletedCount = 0\n  local jobTS\n  local deletionMarker = \'\'\n  local jobIdsLen = #jobs\n  for i, job in ipairs(jobs) do\n    if limit > 0 and deletedCount >= limit then\n      break\n    end\n    local jobKey = jobKeyPrefix .. job\n    if (isWaiting or rcall("EXISTS", jobKey .. ":lock") == 0) then\n      -- Find the right timestamp of the job to compare to maxTimestamp:\n      -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n      -- * processedOn represents when the job was last attempted, but it doesn\'t get populated until\n      --   the job is first tried\n      -- * timestamp is the original job submission time\n      -- Fetch all three of these (in that order) and use the first one that is set so that we\'ll leave jobs\n      -- that have been active within the grace period:\n      jobTS = getTimestamp(jobKey, {"finishedOn", "processedOn", "timestamp"})\n      if (not jobTS or jobTS <= timestamp) then\n        -- replace the entry with a deletion marker; the actual deletion will\n        -- occur at the end of the script\n        rcall("LSET", listKey, rangeEnd - jobIdsLen + i, deletionMarker)\n        removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]])\n        deletedCount = deletedCount + 1\n        table.insert(deleted, job)\n      end\n    end\n  end\n  rcall("LREM", listKey, 0, deletionMarker)\n  return {deleted, deletedCount}\nend\n--[[\n  Function to clean job set.\n  Returns jobIds and deleted count number.\n]]\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  We use ZRANGEBYSCORE to make the case where we\'re deleting a limited number\n  of items in a sorted set only run a single iteration. If we simply used\n  ZRANGE, we may take a long time traversing through jobs that are within the\n  grace period.\n]]\nlocal function getJobsInZset(zsetKey, rangeEnd, limit)\n  if limit > 0 then\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd, "LIMIT", 0, limit)\n  else\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd)\n  end\nend\nlocal function cleanSet(setKey, jobKeyPrefix, rangeEnd, timestamp, limit, attributes, isFinished)\n  local jobs = getJobsInZset(setKey, rangeEnd, limit)\n  local deleted = {}\n  local deletedCount = 0\n  local jobTS\n  for i, job in ipairs(jobs) do\n    if limit > 0 and deletedCount >= limit then\n      break\n    end\n    local jobKey = jobKeyPrefix .. job\n    if isFinished then\n      removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]])\n      deletedCount = deletedCount + 1\n      table.insert(deleted, job)\n    else\n      -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n      jobTS = getTimestamp(jobKey, attributes)\n      if (not jobTS or jobTS <= timestamp) then\n        removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]])\n        deletedCount = deletedCount + 1\n        table.insert(deleted, job)\n      end\n    end\n  end\n  if(#deleted > 0) then\n    for from, to in batches(#deleted, 7000) do\n      rcall("ZREM", setKey, unpack(deleted, from, to))\n    end\n  end\n  return {deleted, deletedCount}\nend\nlocal result\nif ARGV[4] == "active" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], false)\nelseif ARGV[4] == "delayed" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"processedOn", "timestamp"}, false)\nelseif ARGV[4] == "prioritized" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"timestamp"}, false)\nelseif ARGV[4] == "wait" or ARGV[4] == "paused" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], true)\nelse\n  rangeEnd = ARGV[2]\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"finishedOn"}, true)\nend\nrcall("XADD", KEYS[2], "*", "event", "cleaned", "count", result[2])\nreturn result[1]\n',keys:2},Yu={name:"drain",content:'--[[\n  Drains the queue, removes all jobs that are waiting\n  or delayed, but not active, completed or failed\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'delayed\'\n    KEYS[4] \'prioritized\'\n    ARGV[1]  queue key prefix\n]]\nlocal rcall = redis.call\nlocal queueBaseKey = ARGV[1]\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max)\n  local jobs = getListItems(keyName, max)\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max)\n  local jobs = getZSetItems(keyName, max)\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\nremoveListJobs(KEYS[1], true, queueBaseKey, 0) --wait\nremoveListJobs(KEYS[2], true, queueBaseKey, 0) --paused\nif KEYS[3] ~= "" then\n  removeZSetJobs(KEYS[3], true, queueBaseKey, 0) --delayed\nend\nremoveZSetJobs(KEYS[4], true, queueBaseKey, 0) --prioritized\n',keys:4},$u={name:"extendLock",content:'--[[\n  Extend lock and removes the job from the stalled set.\n  Input:\n    KEYS[1] \'lock\',\n    KEYS[2] \'stalled\'\n    ARGV[1]  token\n    ARGV[2]  lock duration in milliseconds\n    ARGV[3]  jobid\n  Output:\n    "1" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  --   if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2], "XX") then\n  if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2]) then\n    rcall("SREM", KEYS[2], ARGV[3])\n    return 1\n  end\nend\nreturn 0\n',keys:2},Wu={name:"getCounts",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1...] types\n]]\nlocal rcall = redis.call;\nlocal prefix = KEYS[1]\nlocal results = {}\nfor i = 1, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        results[#results+1] = count-1\n      else\n        results[#results+1] = 0\n      end\n    else\n      results[#results+1] = rcall("LLEN", stateKey)\n    end\n  elseif ARGV[i] == "active" then\n    results[#results+1] = rcall("LLEN", stateKey)\n  else\n    results[#results+1] = rcall("ZCARD", stateKey)\n  end\nend\nreturn results\n',keys:1},Hu={name:"getCountsPerPriority",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1] wait key\n      KEYS[2] paused key\n      KEYS[3] meta key\n      KEYS[4] prioritized key\n      ARGV[1...] priorities\n]]\nlocal rcall = redis.call\nlocal results = {}\nlocal waitKey = KEYS[1]\nlocal pausedKey = KEYS[2]\nlocal prioritizedKey = KEYS[4]\n-- Includes\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\nfor i = 1, #ARGV do\n  local priority = tonumber(ARGV[i])\n  if priority == 0 then\n    if isQueuePaused(KEYS[3]) then\n      results[#results+1] = rcall("LLEN", pausedKey)\n    else\n      results[#results+1] = rcall("LLEN", waitKey)\n    end\n  else\n    results[#results+1] = rcall("ZCOUNT", prioritizedKey,\n      priority * 0x100000000, (priority + 1)  * 0x100000000 - 1)\n  end\nend\nreturn results\n',keys:4},Qu={name:"getRanges",content:'--[[\n  Get job ids per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1]    start\n      ARGV[2]    end\n      ARGV[3]    asc\n      ARGV[4...] types\n]]\nlocal rcall = redis.call\nlocal prefix = KEYS[1]\nlocal rangeStart = tonumber(ARGV[1])\nlocal rangeEnd = tonumber(ARGV[2])\nlocal asc = ARGV[3]\nlocal results = {}\nlocal function getRangeInList(listKey, asc, rangeStart, rangeEnd, results)\n  if asc == "1" then\n    local modifiedRangeStart\n    local modifiedRangeEnd\n    if rangeStart == -1 then\n      modifiedRangeStart = 0\n    else\n      modifiedRangeStart = -(rangeStart + 1)\n    end\n    if rangeEnd == -1 then\n      modifiedRangeEnd = 0\n    else\n      modifiedRangeEnd = -(rangeEnd + 1)\n    end\n    results[#results+1] = rcall("LRANGE", listKey,\n      modifiedRangeEnd,\n      modifiedRangeStart)\n  else\n    results[#results+1] = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  end\nend\nfor i = 4, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n      else\n        results[#results+1] = {}\n      end\n    else\n      getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n    end\n  elseif ARGV[i] == "active" then\n    getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n  else\n    if asc == "1" then\n      results[#results+1] = rcall("ZRANGE", stateKey, rangeStart, rangeEnd)\n    else\n      results[#results+1] = rcall("ZREVRANGE", stateKey, rangeStart, rangeEnd)\n    end\n  end\nend\nreturn results\n',keys:1},Zu={name:"getRateLimitTtl",content:'--[[\n  Get rate limit ttl\n    Input:\n      KEYS[1] \'limiter\'\n      ARGV[1] maxJobs\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\nlocal rateLimiterKey = KEYS[1]\nif ARGV[1] ~= "0" then\n  return getRateLimitTTL(tonumber(ARGV[1]), rateLimiterKey)\nelse\n  return rcall("PTTL", rateLimiterKey)\nend\n',keys:1},Xu={name:"getState",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'prioritized\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) ~= false then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) ~= false then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) ~= false then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) ~= false then\n  return "prioritized"\nend\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal active_items = rcall("LRANGE", KEYS[4] , 0, -1)\nif checkItemInList(active_items, ARGV[1]) ~= nil then\n  return "active"\nend\nlocal wait_items = rcall("LRANGE", KEYS[5] , 0, -1)\nif checkItemInList(wait_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nlocal paused_items = rcall("LRANGE", KEYS[6] , 0, -1)\nif checkItemInList(paused_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7], ARGV[1]) ~= false then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8},ep={name:"getStateV2",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) ~= false then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) ~= false then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) ~= false then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) ~= false then\n  return "prioritized"\nend\nif rcall("LPOS", KEYS[4] , ARGV[1]) ~= false then\n  return "active"\nend\nif rcall("LPOS", KEYS[5] , ARGV[1]) ~= false then\n  return "waiting"\nend\nif rcall("LPOS", KEYS[6] , ARGV[1]) ~= false then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7] , ARGV[1]) ~= false then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8},tp={name:"isFinished",content:'--[[\n  Checks if a job is finished (.i.e. is in the completed or failed set)\n  Input: \n    KEYS[1] completed key\n    KEYS[2] failed key\n    KEYS[3] job key\n    ARGV[1] job id\n    ARGV[2] return value?\n  Output:\n    0 - Not finished.\n    1 - Completed.\n    2 - Failed.\n   -1 - Missing job. \n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[3]) ~= 1 then\n  if ARGV[2] == "1" then\n    return {-1,"Missing key for job " .. KEYS[3] .. ". isFinished"}\n  end  \n  return -1\nend\nif rcall("ZSCORE", KEYS[1], ARGV[1]) ~= false then\n  if ARGV[2] == "1" then\n    local returnValue = rcall("HGET", KEYS[3], "returnvalue")\n    return {1,returnValue}\n  end\n  return 1\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) ~= false then\n  if ARGV[2] == "1" then\n    local failedReason = rcall("HGET", KEYS[3], "failedReason")\n    return {2,failedReason}\n  end\n  return 2\nend\nif ARGV[2] == "1" then\n  return {0}\nend\nreturn 0\n',keys:3},np={name:"isJobInList",content:'--[[\n  Checks if job is in a given list.\n  Input:\n    KEYS[1]\n    ARGV[1]\n  Output:\n    1 if element found in the list.\n]]\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal items = redis.call("LRANGE", KEYS[1] , 0, -1)\nreturn checkItemInList(items, ARGV[1])\n',keys:1},ap={name:"isMaxed",content:'--[[\n  Checks if queue is maxed.\n  Input:\n    KEYS[1] meta key\n    KEYS[2] active key\n  Output:\n    1 if element found in the list.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to check if queue is maxed or not.\n]]\nlocal function isQueueMaxed(queueMetaKey, activeKey)\n  local maxConcurrency = rcall("HGET", queueMetaKey, "concurrency")\n  if maxConcurrency then\n    local activeCount = rcall("LLEN", activeKey)\n    if activeCount >= tonumber(maxConcurrency) then\n      return true\n    end\n  end\n  return false\nend\nreturn isQueueMaxed(KEYS[1], KEYS[2])\n',keys:2},ip={name:"moveJobFromActiveToWait",content:'--[[\n  Function to move job from active state to wait.\n  Input:\n    KEYS[1]  active key\n    KEYS[2]  wait key\n    KEYS[3]  stalled key\n    KEYS[4]  job lock key\n    KEYS[5]  paused key\n    KEYS[6]  meta key\n    KEYS[7]  limiter key\n    KEYS[8]  prioritized key\n    KEYS[9]  marker key\n    KEYS[10] event key\n    ARGV[1] job id\n    ARGV[2] lock token\n    ARGV[3] job id key\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal jobId = ARGV[1]\nlocal token = ARGV[2]\nlocal lockKey = KEYS[4]\nlocal lockToken = rcall("GET", lockKey)\nlocal pttl = rcall("PTTL", KEYS[7])\nif lockToken == token then\n  local metaKey = KEYS[6]\n  local removed = rcall("LREM", KEYS[1], 1, jobId)\n  if removed > 0 then\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[1], KEYS[2], KEYS[5])\n    rcall("SREM", KEYS[3], jobId)\n    local priority = tonumber(rcall("HGET", ARGV[3], "priority")) or 0\n    if priority > 0 then\n      pushBackJobWithPriority(KEYS[8], priority, jobId)\n    else\n      addJobInTargetList(target, KEYS[9], "RPUSH", isPausedOrMaxed, jobId)\n    end\n    rcall("DEL", lockKey)\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    -- Emit waiting event\n    rcall("XADD", KEYS[10], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n  end\nend\nreturn pttl\n',keys:10},op={name:"moveJobsToWait",content:'--[[\n  Move completed, failed or delayed jobs to wait.\n  Note: Does not support jobs with priorities.\n  Input:\n    KEYS[1] base key\n    KEYS[2] events stream\n    KEYS[3] state key (failed, completed, delayed)\n    KEYS[4] \'wait\'\n    KEYS[5] \'paused\'\n    KEYS[6] \'meta\'\n    KEYS[7] \'active\'\n    KEYS[8] \'marker\'\n    ARGV[1] count\n    ARGV[2] timestamp\n    ARGV[3] prev state\n  Output:\n    1  means the operation is not completed\n    0  means the operation is completed\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal timestamp = tonumber(ARGV[2])\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal metaKey = KEYS[6]\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[7], KEYS[4], KEYS[5])\nlocal jobs = rcall(\'ZRANGEBYSCORE\', KEYS[3], 0, timestamp, \'LIMIT\', 0, maxCount)\nif (#jobs > 0) then\n    if ARGV[3] == "failed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "failedReason")\n        end\n    elseif ARGV[3] == "completed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "returnvalue")\n        end\n    end\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    for i, key in ipairs(jobs) do\n        -- Emit waiting event\n        rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event",\n              "waiting", "jobId", key, "prev", ARGV[3]);\n    end\n    for from, to in batches(#jobs, 7000) do\n        rcall("ZREM", KEYS[3], unpack(jobs, from, to))\n        rcall("LPUSH", target, unpack(jobs, from, to))\n    end\n    addBaseMarkerIfNeeded(KEYS[8], isPausedOrMaxed)\nend\nmaxCount = maxCount - #jobs\nif (maxCount <= 0) then return 1 end\nreturn 0\n',keys:8},rp={name:"moveStalledJobsToWait",content:'--[[\n  Move stalled jobs to wait.\n    Input:\n      KEYS[1] \'stalled\' (SET)\n      KEYS[2] \'wait\',   (LIST)\n      KEYS[3] \'active\', (LIST)\n      KEYS[4] \'failed\', (ZSET)\n      KEYS[5] \'stalled-check\', (KEY)\n      KEYS[6] \'meta\', (KEY)\n      KEYS[7] \'paused\', (LIST)\n      KEYS[8] \'marker\'\n      KEYS[9] \'event stream\' (STREAM)\n      ARGV[1]  Max stalled job count\n      ARGV[2]  queue.toKey(\'\')\n      ARGV[3]  timestamp\n      ARGV[4]  max check time\n    Events:\n      \'stalled\' with stalled job id.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to recursively move from waitingChildren to failed.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\n--[[\n  Function to remove debounce key if needed.\n]]\nlocal function removeDebounceKeyIfNeeded(prefixKey, debounceId)\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    local pttl = rcall("PTTL", debounceKey)\n    if pttl == 0 or pttl == -1 then\n      rcall("DEL", debounceKey)\n    end\n  end\nend\nlocal function moveParentFromWaitingChildrenToFailed( parentQueueKey, parentKey, parentId, jobIdKey, timestamp)\n  if rcall("ZREM", parentQueueKey .. ":waiting-children", parentId) == 1 then\n    rcall("ZADD", parentQueueKey .. ":failed", timestamp, parentId)\n    local failedReason = "child " .. jobIdKey .. " failed"\n    rcall("HMSET", parentKey, "failedReason", failedReason, "finishedOn", timestamp)\n    rcall("XADD", parentQueueKey .. ":events", "*", "event", "failed", "jobId", parentId, "failedReason",\n      failedReason, "prev", "waiting-children")\n    local jobAttributes = rcall("HMGET", parentKey, "parent", "deid")\n    removeDebounceKeyIfNeeded(parentQueueKey .. ":", jobAttributes[2])\n    if jobAttributes[1] then\n      local parentData = cjson.decode(jobAttributes[1])\n      if parentData[\'fpof\'] then\n        moveParentFromWaitingChildrenToFailed(\n          parentData[\'queueKey\'],\n          parentData[\'queueKey\'] .. \':\' .. parentData[\'id\'],\n          parentData[\'id\'],\n          parentKey,\n          timestamp\n        )\n      elseif parentData[\'idof\'] or parentData[\'rdof\'] then\n        local grandParentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n        local grandParentDependenciesSet = grandParentKey .. ":dependencies"\n        if rcall("SREM", grandParentDependenciesSet, parentKey) == 1 then\n          moveParentToWaitIfNeeded(parentData[\'queueKey\'], grandParentDependenciesSet,\n            grandParentKey, parentData[\'id\'], timestamp)\n          if parentData[\'idof\'] then\n            local grandParentFailedSet = grandParentKey .. ":failed"\n            rcall("HSET", grandParentFailedSet, parentKey, failedReason)\n          end\n        end\n      end\n    end\n  end\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Functions to remove jobs by max age.\n]]\n-- Includes\nlocal function removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix,\n  shouldRemoveDebounceKey)\n  local start = timestamp - maxAge * 1000\n  local jobIds = rcall("ZREVRANGEBYSCORE", targetSet, start, "-inf")\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYSCORE", targetSet, "-inf", start)\nend\n--[[\n  Functions to remove jobs by max count.\n]]\n-- Includes\nlocal function removeJobsByMaxCount(maxCount, targetSet, prefix)\n  local start = maxCount\n  local jobIds = rcall("ZREVRANGE", targetSet, start, -1)\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYRANK", targetSet, 0, -(maxCount + 1))\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents ~= false then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\nlocal stalledKey = KEYS[1]\nlocal waitKey = KEYS[2]\nlocal activeKey = KEYS[3]\nlocal failedKey = KEYS[4]\nlocal stalledCheckKey = KEYS[5]\nlocal metaKey = KEYS[6]\nlocal pausedKey = KEYS[7]\nlocal markerKey = KEYS[8]\nlocal eventStreamKey = KEYS[9]\nlocal maxStalledJobCount = ARGV[1]\nlocal queueKeyPrefix = ARGV[2]\nlocal timestamp = ARGV[3]\nlocal maxCheckTime = ARGV[4]\nif rcall("EXISTS", stalledCheckKey) == 1 then return {{}, {}} end\nrcall("SET", stalledCheckKey, timestamp, "PX", maxCheckTime)\n-- Trim events before emiting them to avoid trimming events emitted in this script\ntrimEvents(metaKey, eventStreamKey)\n-- Move all stalled jobs to wait\nlocal stalling = rcall(\'SMEMBERS\', stalledKey)\nlocal stalled = {}\nlocal failed = {}\nif (#stalling > 0) then\n    rcall(\'DEL\', stalledKey)\n    local MAX_STALLED_JOB_COUNT = tonumber(maxStalledJobCount)\n    -- Remove from active list\n    for i, jobId in ipairs(stalling) do\n        -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n        if string.sub(jobId, 1, 2) == "0:" then\n            -- If the jobId is a delay marker ID we just remove it.\n            rcall("LREM", activeKey, 1, jobId)\n        else\n            local jobKey = queueKeyPrefix .. jobId\n            -- Check that the lock is also missing, then we can handle this job as really stalled.\n            if (rcall("EXISTS", jobKey .. ":lock") == 0) then\n                --  Remove from the active queue.\n                local removed = rcall("LREM", activeKey, 1, jobId)\n                if (removed > 0) then\n                    -- If this job has been stalled too many times, such as if it crashes the worker, then fail it.\n                    local stalledCount =\n                        rcall("HINCRBY", jobKey, "stalledCounter", 1)\n                    if (stalledCount > MAX_STALLED_JOB_COUNT) then\n                        local jobAttributes = rcall("HMGET", jobKey, "opts", "parent", "deid")\n                        local rawOpts = jobAttributes[1]\n                        local rawParentData = jobAttributes[2]\n                        local opts = cjson.decode(rawOpts)\n                        local removeOnFailType = type(opts["removeOnFail"])\n                        rcall("ZADD", failedKey, timestamp, jobId)\n                        removeDebounceKeyIfNeeded(queueKeyPrefix, jobAttributes[3])\n                        local failedReason =\n                            "job stalled more than allowable limit"\n                        rcall("HMSET", jobKey, "failedReason", failedReason,\n                              "finishedOn", timestamp)\n                        rcall("XADD", eventStreamKey, "*", "event",\n                              "failed", "jobId", jobId, \'prev\', \'active\',\n                              \'failedReason\', failedReason)\n                        if rawParentData ~= false then\n                            if opts[\'fpof\'] then\n                                local parentData = cjson.decode(rawParentData)\n                                moveParentFromWaitingChildrenToFailed(\n                                    parentData[\'queueKey\'],\n                                    parentData[\'queueKey\'] .. \':\' .. parentData[\'id\'],\n                                    parentData[\'id\'],\n                                    jobKey,\n                                    timestamp\n                                )\n                            elseif opts[\'idof\'] or opts[\'rdof\'] then\n                                local parentData = cjson.decode(rawParentData)\n                                local parentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n                                local dependenciesSet = parentKey .. ":dependencies"\n                                if rcall("SREM", dependenciesSet, jobKey) == 1 then\n                                    moveParentToWaitIfNeeded(parentData[\'queueKey\'], dependenciesSet,\n                                                             parentKey, parentData[\'id\'], timestamp)\n                                    if opts[\'idof\'] then\n                                       local failedSet = parentKey .. ":failed"\n                                       rcall("HSET", failedSet, jobKey, failedReason)\n                                    end\n                                end\n                            end\n                        end\n                        if removeOnFailType == "number" then\n                            removeJobsByMaxCount(opts["removeOnFail"],\n                                                  failedKey, queueKeyPrefix)\n                        elseif removeOnFailType == "boolean" then\n                            if opts["removeOnFail"] then\n                                removeJob(jobId, false, queueKeyPrefix,\n                                  false --[[remove debounce key]])\n                                rcall("ZREM", failedKey, jobId)\n                            end\n                        elseif removeOnFailType ~= "nil" then\n                            local maxAge = opts["removeOnFail"]["age"]\n                            local maxCount = opts["removeOnFail"]["count"]\n                            if maxAge ~= nil then\n                                removeJobsByMaxAge(timestamp, maxAge,\n                                                    failedKey, queueKeyPrefix)\n                            end\n                            if maxCount ~= nil and maxCount > 0 then\n                                removeJobsByMaxCount(maxCount, failedKey,\n                                                      queueKeyPrefix)\n                            end\n                        end\n                        table.insert(failed, jobId)\n                    else\n                        local target, isPausedOrMaxed=\n                            getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n                        -- Move the job back to the wait queue, to immediately be picked up by a waiting worker.\n                        addJobInTargetList(target, markerKey, "RPUSH", isPausedOrMaxed, jobId)\n                        rcall("XADD", eventStreamKey, "*", "event",\n                              "waiting", "jobId", jobId, \'prev\', \'active\')\n                        -- Emit the stalled event\n                        rcall("XADD", eventStreamKey, "*", "event",\n                              "stalled", "jobId", jobId)\n                        table.insert(stalled, jobId)\n                    end\n                end\n            end\n        end\n    end\nend\n-- Mark potentially stalled jobs\nlocal active = rcall(\'LRANGE\', activeKey, 0, -1)\nif (#active > 0) then\n    for from, to in batches(#active, 7000) do\n        rcall(\'SADD\', stalledKey, unpack(active, from, to))\n    end\nend\nreturn {failed, stalled}',keys:9},sp={name:"moveToActive",content:'--[[\n  Move next job to be processed to active, lock it and fetch its data. The job\n  may be delayed, in that case we need to move it to the delayed set instead.\n  This operation guarantees that the worker owns the job during the lock\n  expiration time. The worker is responsible of keeping the lock fresh\n  so that no other worker picks this job again.\n  Input:\n    KEYS[1] wait key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] stream events key\n    KEYS[5] stalled key\n    -- Rate limiting\n    KEYS[6] rate limiter key\n    KEYS[7] delayed key\n    -- Delayed jobs\n    KEYS[8] paused key\n    KEYS[9] meta key\n    KEYS[10] pc priority counter\n    -- Marker\n    KEYS[11] marker key\n    -- Arguments\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] opts\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\nlocal rcall = redis.call\nlocal waitKey = KEYS[1]\nlocal activeKey = KEYS[2]\nlocal eventStreamKey = KEYS[4]\nlocal rateLimiterKey = KEYS[6]\nlocal delayedKey = KEYS[7]\nlocal opts = cmsgpack.unpack(ARGV[3])\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPriorityToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                addJobInTargetList(targetKey, markerKey, "LPUSH", isPaused, jobId)\n            else\n                addJobWithPriority(markerKey, prioritizedKey, priority,\n                  jobId, priorityCounterKey, isPaused)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n    end\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[9], activeKey, waitKey, KEYS[8])\n-- Check if there are delayed jobs that we can move to wait.\nlocal markerKey = KEYS[11]\npromoteDelayedJobs(delayedKey, markerKey, target, KEYS[3], eventStreamKey, ARGV[1],\n                   ARGV[2], KEYS[10], isPausedOrMaxed)\nlocal maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\nlocal expireTime = getRateLimitTTL(maxJobs, rateLimiterKey)\n-- Check if we are rate limited first.\nif expireTime > 0 then return {0, 0, expireTime, 0} end\n-- paused or maxed queue\nif isPausedOrMaxed then return {0, 0, 0, 0} end\n-- no job ID, try non-blocking move from wait to active\nlocal jobId = rcall("RPOPLPUSH", waitKey, activeKey)\n-- Markers in waitlist DEPRECATED in v5: Will be completely removed in v6.\nif jobId and string.sub(jobId, 1, 2) == "0:" then\n    rcall("LREM", activeKey, 1, jobId)\n    jobId = rcall("RPOPLPUSH", waitKey, activeKey)\nend\nif jobId then\n    return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                   maxJobs, opts)\nelse\n    jobId = moveJobFromPriorityToActive(KEYS[3], activeKey, KEYS[10])\n    if jobId then\n        return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                       maxJobs, opts)\n    end\nend\n-- Return the timestamp for the next delayed job if any.\nlocal nextTimestamp = getNextDelayedTimestamp(delayedKey)\nif nextTimestamp ~= nil then return {0, 0, 0, nextTimestamp} end\nreturn {0, 0, 0, 0}\n',keys:11},lp={name:"moveToDelayed",content:'--[[\n  Moves job from active to delayed set.\n  Input:\n    KEYS[1] marker key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] delayed key\n    KEYS[5] job key\n    KEYS[6] events stream\n    KEYS[7] meta key\n    KEYS[8] stalled key\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] queue token\n    ARGV[5] delay value\n    ARGV[6] skip attempt\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in active set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal jobKey = KEYS[5]\nlocal metaKey = KEYS[7]\nlocal token = ARGV[4] \nif rcall("EXISTS", jobKey) == 1 then\n    local errorCode = removeLock(jobKey, KEYS[8], token, ARGV[3])\n    if errorCode < 0 then\n        return errorCode\n    end\n    local delayedKey = KEYS[4]\n    local jobId = ARGV[3]\n    local delay = tonumber(ARGV[5])\n    local score, delayedTimestamp = getDelayedScore(delayedKey, ARGV[2], delay)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if numRemovedElements < 1 then return -3 end\n    if ARGV[6] == "0" then\n        rcall("HINCRBY", jobKey, "atm", 1)\n    end\n    rcall("HSET", jobKey, "delay", ARGV[5])\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    rcall("ZADD", delayedKey, score, jobId)\n    rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n          "jobId", jobId, "delay", delayedTimestamp)\n    -- Check if we need to push a marker job to wake up sleeping workers.\n    local markerKey = KEYS[1]\n    addDelayMarkerIfNeeded(markerKey, delayedKey)\n    return 0\nelse\n    return -1\nend\n',keys:8},cp={name:"moveToFinished",content:'--[[\n  Move job from active to a finished status (completed o failed)\n  A job can only be moved to completed if it was active.\n  The job must be locked before it can be moved to a finished status,\n  and the lock must be released in this script.\n    Input:\n      KEYS[1] wait key\n      KEYS[2] active key\n      KEYS[3] prioritized key\n      KEYS[4] event stream key\n      KEYS[5] stalled key\n      -- Rate limiting\n      KEYS[6] rate limiter key\n      KEYS[7] delayed key\n      KEYS[8] paused key\n      KEYS[9] meta key\n      KEYS[10] pc priority counter\n      KEYS[11] completed/failed key\n      KEYS[12] jobId key\n      KEYS[13] metrics key\n      KEYS[14] marker key\n      ARGV[1]  jobId\n      ARGV[2]  timestamp\n      ARGV[3]  msg property returnvalue / failedReason\n      ARGV[4]  return value / failed reason\n      ARGV[5]  target (completed/failed)\n      ARGV[6]  fetch next?\n      ARGV[7]  keys prefix\n      ARGV[8]  opts\n      opts - token - lock token\n      opts - keepJobs\n      opts - lockDuration - lock duration in milliseconds\n      opts - attempts max attempts\n      opts - maxMetricsSize\n      opts - fpof - fail parent on fail\n      opts - idof - ignore dependency on fail\n      opts - rdof - remove dependency on fail\n    Output:\n      0 OK\n      -1 Missing key.\n      -2 Missing lock.\n      -3 Job not in active set\n      -4 Job has pending dependencies\n      -6 Lock is not owned by this client\n    Events:\n      \'completed/failed\'\n]]\nlocal rcall = redis.call\n--- Includes\n--[[\n  Functions to collect metrics based on a current and previous count of jobs.\n  Granualarity is fixed at 1 minute.\n]] \n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\nlocal function collectMetrics(metaKey, dataPointsList, maxDataPoints,\n                                 timestamp)\n    -- Increment current count\n    local count = rcall("HINCRBY", metaKey, "count", 1) - 1\n    -- Compute how many data points we need to add to the list, N.\n    local prevTS = rcall("HGET", metaKey, "prevTS")\n    if not prevTS then\n        -- If prevTS is nil, set it to the current timestamp\n        rcall("HSET", metaKey, "prevTS", timestamp, "prevCount", 0)\n        return\n    end\n    local N = math.min(math.floor((timestamp - prevTS) / 60000), tonumber(maxDataPoints))\n    if N > 0 then\n        local delta = count - rcall("HGET", metaKey, "prevCount")\n        -- If N > 1, add N-1 zeros to the list\n        if N > 1 then\n            local points = {}\n            points[1] = delta\n            for i = 2, N do\n                points[i] = 0\n            end\n            for from, to in batches(#points, 7000) do\n                rcall("LPUSH", dataPointsList, unpack(points, from, to))\n            end\n        else\n            -- LPUSH delta to the list\n            rcall("LPUSH", dataPointsList, delta)\n        end\n        -- LTRIM to keep list to its max size\n        rcall("LTRIM", dataPointsList, 0, maxDataPoints - 1)\n        -- update prev count with current count\n        rcall("HSET", metaKey, "prevCount", count, "prevTS", timestamp)\n    end\nend\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPriorityToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to recursively move from waitingChildren to failed.\n]]\n-- Includes\n--[[\n  Validate and move parent to active if needed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey,\n                                        parentKey, parentId, timestamp)\n    local isParentActive = rcall("ZSCORE",\n                                 parentQueueKey .. ":waiting-children", parentId)\n    if rcall("SCARD", parentDependenciesKey) == 0 and isParentActive then\n        rcall("ZREM", parentQueueKey .. ":waiting-children", parentId)\n        local parentWaitKey = parentQueueKey .. ":wait"\n        local parentPausedKey = parentQueueKey .. ":paused"\n        local parentActiveKey = parentQueueKey .. ":active"\n        local parentMetaKey = parentQueueKey .. ":meta"\n        local parentMarkerKey = parentQueueKey .. ":marker"\n        local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n        local priority = tonumber(jobAttributes[1]) or 0\n        local delay = tonumber(jobAttributes[2]) or 0\n        if delay > 0 then\n            local delayedTimestamp = tonumber(timestamp) + delay\n            local score = delayedTimestamp * 0x1000\n            local parentDelayedKey = parentQueueKey .. ":delayed"\n            rcall("ZADD", parentDelayedKey, score, parentId)\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed",\n                  "jobId", parentId, "delay", delayedTimestamp)\n            addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n        else\n            if priority == 0 then\n                local parentTarget, isParentPausedOrMaxed =\n                    getTargetQueueList(parentMetaKey, parentActiveKey, parentWaitKey,\n                                       parentPausedKey)\n                addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed,\n                    parentId)\n            else\n                local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n                addJobWithPriority(parentMarkerKey,\n                                   parentQueueKey .. ":prioritized", priority,\n                                   parentId, parentQueueKey .. ":pc", isPausedOrMaxed)\n            end\n            rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting",\n                  "jobId", parentId, "prev", "waiting-children")\n        end\n    end\nend\n--[[\n  Function to remove debounce key if needed.\n]]\nlocal function removeDebounceKeyIfNeeded(prefixKey, debounceId)\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    local pttl = rcall("PTTL", debounceKey)\n    if pttl == 0 or pttl == -1 then\n      rcall("DEL", debounceKey)\n    end\n  end\nend\nlocal function moveParentFromWaitingChildrenToFailed( parentQueueKey, parentKey, parentId, jobIdKey, timestamp)\n  if rcall("ZREM", parentQueueKey .. ":waiting-children", parentId) == 1 then\n    rcall("ZADD", parentQueueKey .. ":failed", timestamp, parentId)\n    local failedReason = "child " .. jobIdKey .. " failed"\n    rcall("HMSET", parentKey, "failedReason", failedReason, "finishedOn", timestamp)\n    rcall("XADD", parentQueueKey .. ":events", "*", "event", "failed", "jobId", parentId, "failedReason",\n      failedReason, "prev", "waiting-children")\n    local jobAttributes = rcall("HMGET", parentKey, "parent", "deid")\n    removeDebounceKeyIfNeeded(parentQueueKey .. ":", jobAttributes[2])\n    if jobAttributes[1] then\n      local parentData = cjson.decode(jobAttributes[1])\n      if parentData[\'fpof\'] then\n        moveParentFromWaitingChildrenToFailed(\n          parentData[\'queueKey\'],\n          parentData[\'queueKey\'] .. \':\' .. parentData[\'id\'],\n          parentData[\'id\'],\n          parentKey,\n          timestamp\n        )\n      elseif parentData[\'idof\'] or parentData[\'rdof\'] then\n        local grandParentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n        local grandParentDependenciesSet = grandParentKey .. ":dependencies"\n        if rcall("SREM", grandParentDependenciesSet, parentKey) == 1 then\n          moveParentToWaitIfNeeded(parentData[\'queueKey\'], grandParentDependenciesSet,\n            grandParentKey, parentData[\'id\'], timestamp)\n          if parentData[\'idof\'] then\n            local grandParentFailedSet = grandParentKey .. ":failed"\n            rcall("HSET", grandParentFailedSet, parentKey, failedReason)\n          end\n        end\n      end\n    end\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                addJobInTargetList(targetKey, markerKey, "LPUSH", isPaused, jobId)\n            else\n                addJobWithPriority(markerKey, prioritizedKey, priority,\n                  jobId, priorityCounterKey, isPaused)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n    end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Functions to remove jobs by max age.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix,\n  shouldRemoveDebounceKey)\n  local start = timestamp - maxAge * 1000\n  local jobIds = rcall("ZREVRANGEBYSCORE", targetSet, start, "-inf")\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYSCORE", targetSet, "-inf", start)\nend\n--[[\n  Functions to remove jobs by max count.\n]]\n-- Includes\nlocal function removeJobsByMaxCount(maxCount, targetSet, prefix)\n  local start = maxCount\n  local jobIds = rcall("ZREVRANGE", targetSet, start, -1)\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYRANK", targetSet, 0, -(maxCount + 1))\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents ~= false then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNeeded(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal jobIdKey = KEYS[12]\nif rcall("EXISTS", jobIdKey) == 1 then -- // Make sure job exists\n    local opts = cmsgpack.unpack(ARGV[8])\n    local token = opts[\'token\']\n    local errorCode = removeLock(jobIdKey, KEYS[5], token, ARGV[1])\n    if errorCode < 0 then\n        return errorCode\n    end\n    local attempts = opts[\'attempts\']\n    local maxMetricsSize = opts[\'maxMetricsSize\']\n    local maxCount = opts[\'keepJobs\'][\'count\']\n    local maxAge = opts[\'keepJobs\'][\'age\']\n    if rcall("SCARD", jobIdKey .. ":dependencies") ~= 0 then -- // Make sure it does not have pending dependencies\n        return -4\n    end\n    local jobAttributes = rcall("HMGET", jobIdKey, "parentKey", "parent", "deid")\n    local parentKey = jobAttributes[1] or ""\n    local parentId = ""\n    local parentQueueKey = ""\n    if jobAttributes[2] ~= false then\n        local jsonDecodedParent = cjson.decode(jobAttributes[2])\n        parentId = jsonDecodedParent[\'id\']\n        parentQueueKey = jsonDecodedParent[\'queueKey\']\n    end\n    local jobId = ARGV[1]\n    local timestamp = ARGV[2]\n    -- Remove from active list (if not active we shall return error)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if (numRemovedElements < 1) then return -3 end\n    local eventStreamKey = KEYS[4]\n    local metaKey = KEYS[9]\n    -- Trim events before emiting them to avoid trimming events emitted in this script\n    trimEvents(metaKey, eventStreamKey)\n    local prefix = ARGV[7]\n    removeDebounceKeyIfNeeded(prefix, jobAttributes[3])\n    -- If job has a parent we need to\n    -- 1) remove this job id from parents dependencies\n    -- 2) move the job Id to parent "processed" set\n    -- 3) push the results into parent "results" list\n    -- 4) if parent\'s dependencies is empty, then move parent to "wait/paused". Note it may be a different queue!.\n    if parentId == "" and parentKey ~= "" then\n        parentId = getJobIdFromKey(parentKey)\n        parentQueueKey = getJobKeyPrefix(parentKey, ":" .. parentId)\n    end\n    if parentId ~= "" then\n        if ARGV[5] == "completed" then\n            local dependenciesSet = parentKey .. ":dependencies"\n            if rcall("SREM", dependenciesSet, jobIdKey) == 1 then\n                updateParentDepsIfNeeded(parentKey, parentQueueKey,\n                                         dependenciesSet, parentId, jobIdKey,\n                                         ARGV[4], timestamp)\n            end\n        else\n            if opts[\'fpof\'] then\n                moveParentFromWaitingChildrenToFailed(parentQueueKey, parentKey,\n                                                      parentId, jobIdKey,\n                                                      timestamp)\n            elseif opts[\'idof\'] or opts[\'rdof\'] then\n                local dependenciesSet = parentKey .. ":dependencies"\n                if rcall("SREM", dependenciesSet, jobIdKey) == 1 then\n                    moveParentToWaitIfNeeded(parentQueueKey, dependenciesSet,\n                                             parentKey, parentId, timestamp)\n                    if opts[\'idof\'] then\n                        local failedSet = parentKey .. ":failed"\n                        rcall("HSET", failedSet, jobIdKey, ARGV[4])\n                    end\n                end\n            end\n        end\n    end\n    local attemptsMade = rcall("HINCRBY", jobIdKey, "atm", 1)\n    -- Remove job?\n    if maxCount ~= 0 then\n        local targetSet = KEYS[11]\n        -- Add to complete/failed set\n        rcall("ZADD", targetSet, timestamp, jobId)\n        rcall("HMSET", jobIdKey, ARGV[3], ARGV[4], "finishedOn", timestamp)\n        -- "returnvalue" / "failedReason" and "finishedOn"\n        -- Remove old jobs?\n        if maxAge ~= nil then\n            removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix)\n        end\n        if maxCount ~= nil and maxCount > 0 then\n            removeJobsByMaxCount(maxCount, targetSet, prefix)\n        end\n    else\n        removeJobKeys(jobIdKey)\n        if parentKey ~= "" then\n            -- TODO: when a child is removed when finished, result or failure in parent\n            -- must not be deleted, those value references should be deleted when the parent\n            -- is deleted\n            removeParentDependencyKey(jobIdKey, false, parentKey, jobAttributes[3])\n        end\n    end\n    rcall("XADD", eventStreamKey, "*", "event", ARGV[5], "jobId", jobId, ARGV[3],\n          ARGV[4])\n    if ARGV[5] == "failed" then\n        if tonumber(attemptsMade) >= tonumber(attempts) then\n            rcall("XADD", eventStreamKey, "*", "event", "retries-exhausted", "jobId",\n                  jobId, "attemptsMade", attemptsMade)\n        end\n    end\n    -- Collect metrics\n    if maxMetricsSize ~= "" then\n        collectMetrics(KEYS[13], KEYS[13] .. \':data\', maxMetricsSize, timestamp)\n    end\n    -- Try to get next job to avoid an extra roundtrip if the queue is not closing,\n    -- and not rate limited.\n    if (ARGV[6] == "1") then\n        local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[2], KEYS[1], KEYS[8])\n        -- Check if there are delayed jobs that can be promoted\n        promoteDelayedJobs(KEYS[7], KEYS[14], target, KEYS[3], eventStreamKey, prefix,\n                           timestamp, KEYS[10], isPausedOrMaxed)\n        local maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\n        -- Check if we are rate limited first.\n        local expireTime = getRateLimitTTL(maxJobs, KEYS[6])\n        if expireTime > 0 then return {0, 0, expireTime, 0} end\n        -- paused or maxed queue\n        if isPausedOrMaxed then return {0, 0, 0, 0} end\n        jobId = rcall("RPOPLPUSH", KEYS[1], KEYS[2])\n        if jobId then\n            -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n            if string.sub(jobId, 1, 2) == "0:" then\n                rcall("LREM", KEYS[2], 1, jobId)\n                -- If jobId is special ID 0:delay (delay greater than 0), then there is no job to process\n                -- but if ID is 0:0, then there is at least 1 prioritized job to process\n                if jobId == "0:0" then\n                    jobId = moveJobFromPriorityToActive(KEYS[3], KEYS[2],\n                                                        KEYS[10])\n                    return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId,\n                                                   timestamp, maxJobs,\n                                                   opts)\n                end\n            else\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId,\n                                               timestamp, maxJobs,\n                                               opts)\n            end\n        else\n            jobId = moveJobFromPriorityToActive(KEYS[3], KEYS[2], KEYS[10])\n            if jobId then\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId,\n                                               timestamp, maxJobs,\n                                               opts)\n            end\n        end\n        -- Return the timestamp for the next delayed job if any.\n        local nextTimestamp = getNextDelayedTimestamp(KEYS[7])\n        if nextTimestamp ~= nil then\n            -- The result is guaranteed to be positive, since the\n            -- ZRANGEBYSCORE command would have return a job otherwise.\n            return {0, 0, 0, nextTimestamp}\n        end\n    end\n    local waitLen = rcall("LLEN", KEYS[1])\n    if waitLen == 0 then\n        local activeLen = rcall("LLEN", KEYS[2])\n        if activeLen == 0 then\n            local prioritizedLen = rcall("ZCARD", KEYS[3])\n            if prioritizedLen == 0 then\n                rcall("XADD", eventStreamKey, "*", "event", "drained")\n            end\n        end\n    end\n    return 0\nelse\n    return -1\nend\n',keys:14},dp={name:"moveToWaitingChildren",content:'--[[\n  Moves job from active to waiting children set.\n  Input:\n    KEYS[1] lock key\n    KEYS[2] active key\n    KEYS[3] waitChildrenKey key\n    KEYS[4] job key\n    KEYS[5] stalled key\n    ARGV[1] token\n    ARGV[2] child key\n    ARGV[3] timestamp\n    ARGV[4] the id of the job\n  Output:\n    0 - OK\n    1 - There are not pending dependencies.\n   -1 - Missing job.\n   -2 - Missing lock\n   -3 - Job not in active set\n]]\nlocal rcall = redis.call\nlocal stalledKey = KEYS[5]\n--- Includes\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal function moveToWaitingChildren (activeKey, waitingChildrenKey, jobId,\n    timestamp)\n  local score = tonumber(timestamp)\n  local numRemovedElements = rcall("LREM", activeKey, -1, jobId)\n  if(numRemovedElements < 1) then\n    return -3\n  end\n  rcall("ZADD", waitingChildrenKey, score, jobId)\n  return 0\nend\nif rcall("EXISTS", KEYS[4]) == 1 then\n  if ARGV[2] ~= "" then\n    if rcall("SISMEMBER", KEYS[4] .. ":dependencies", ARGV[2]) ~= 0 then\n      local errorCode = removeLock(KEYS[4], stalledKey, ARGV[1], ARGV[4])\n      if errorCode < 0 then\n        return errorCode\n      end\n      return moveToWaitingChildren(KEYS[2], KEYS[3], ARGV[4], ARGV[3])\n    end\n    return 1\n  else\n    if rcall("SCARD", KEYS[4] .. ":dependencies") ~= 0 then \n      local errorCode = removeLock(KEYS[4], stalledKey, ARGV[1], ARGV[4])\n      if errorCode < 0 then\n        return errorCode\n      end\n      return moveToWaitingChildren(KEYS[2], KEYS[3], ARGV[4], ARGV[3])\n    end\n    return 1\n  end\nend\nreturn -1\n',keys:5},up={name:"obliterate",content:'--[[\n  Completely obliterates a queue and all of its contents\n  This command completely destroys a queue including all of its jobs, current or past \n  leaving no trace of its existence. Since this script needs to iterate to find all the job\n  keys, consider that this call may be slow for very large queues.\n  The queue needs to be "paused" or it will return an error\n  If the queue has currently active jobs then the script by default will return error,\n  however this behaviour can be overrided using the \'force\' option.\n  Input:\n    KEYS[1] meta\n    KEYS[2] base\n    ARGV[1] count\n    ARGV[2] force\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal baseKey = KEYS[2]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDebounceKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDebounceKey then\n    removeDebounceKey(baseKey, jobKey)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max)\n  local jobs = getListItems(keyName, max)\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max)\n  local jobs = getZSetItems(keyName, max)\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\nlocal function removeLockKeys(keys)\n  for i, key in ipairs(keys) do\n    rcall("DEL", baseKey .. key .. \':lock\')\n  end\nend\n-- 1) Check if paused, if not return with error.\nif rcall("HEXISTS", KEYS[1], "paused") ~= 1 then\n  return -1 -- Error, NotPaused\nend\n-- 2) Check if there are active jobs, if there are and not "force" return error.\nlocal activeKey = baseKey .. \'active\'\nlocal activeJobs = getListItems(activeKey, maxCount)\nif (#activeJobs > 0) then\n  if(ARGV[2] == "") then \n    return -2 -- Error, ExistActiveJobs\n  end\nend\nremoveLockKeys(activeJobs)\nmaxCount = removeJobs(activeJobs, true, baseKey, maxCount)\nrcall("LTRIM", activeKey, #activeJobs, -1)\nif(maxCount <= 0) then\n  return 1\nend\nlocal delayedKey = baseKey .. \'delayed\'\nmaxCount = removeZSetJobs(delayedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal repeatKey = baseKey .. \'repeat\'\nlocal repeatJobsIds = getZSetItems(repeatKey, maxCount)\nfor i, key in ipairs(repeatJobsIds) do\n  local jobKey = repeatKey .. ":" .. key\n  rcall("DEL", jobKey)\nend\nif(#repeatJobsIds > 0) then\n  for from, to in batches(#repeatJobsIds, 7000) do\n    rcall("ZREM", repeatKey, unpack(repeatJobsIds, from, to))\n  end\nend\nmaxCount = maxCount - #repeatJobsIds\nif(maxCount <= 0) then\n  return 1\nend\nlocal completedKey = baseKey .. \'completed\'\nmaxCount = removeZSetJobs(completedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal waitKey = baseKey .. \'paused\'\nmaxCount = removeListJobs(waitKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal prioritizedKey = baseKey .. \'prioritized\'\nmaxCount = removeZSetJobs(prioritizedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal failedKey = baseKey .. \'failed\'\nmaxCount = removeZSetJobs(failedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nif(maxCount > 0) then\n  rcall("DEL",\n    baseKey .. \'events\',\n    baseKey .. \'delay\', \n    baseKey .. \'stalled-check\',\n    baseKey .. \'stalled\',\n    baseKey .. \'id\',\n    baseKey .. \'pc\',\n    baseKey .. \'meta\',\n    baseKey .. \'metrics:completed\',\n    baseKey .. \'metrics:completed:data\',\n    baseKey .. \'metrics:failed\',\n    baseKey .. \'metrics:failed:data\')\n  return 0\nelse\n  return 1\nend\n',keys:2},pp={name:"paginate",content:'--[[\n    Paginate a set or hash\n    Input:\n      KEYS[1] key pointing to the set or hash to be paginated.\n      ARGV[1]  page start offset\n      ARGV[2]  page end offset (-1 for all the elements)\n      ARGV[3]  cursor\n      ARGV[4]  offset\n      ARGV[5]  max iterations\n      ARGV[6]  fetch jobs?\n    Output:\n      [cursor, offset, items, numItems]\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to achieve pagination for a set or hash.\n  This function simulates pagination in the most efficient way possible\n  for a set using sscan or hscan.\n  The main limitation is that sets are not order preserving, so the\n  pagination is not stable. This means that if the set is modified\n  between pages, the same element may appear in different pages.\n]] -- Maximum number of elements to be returned by sscan per iteration.\nlocal maxCount = 100\n-- Finds the cursor, and returns the first elements available for the requested page.\nlocal function findPage(key, command, pageStart, pageSize, cursor, offset,\n                        maxIterations, fetchJobs)\n    local items = {}\n    local jobs = {}\n    local iterations = 0\n    repeat\n        -- Iterate over the set using sscan/hscan.\n        local result = rcall(command, key, cursor, "COUNT", maxCount)\n        cursor = result[1]\n        local members = result[2]\n        local step = 1\n        if command == "HSCAN" then\n            step = 2\n        end\n        if #members == 0 then\n            -- If the result is empty, we can return the result.\n            return cursor, offset, items, jobs\n        end\n        local chunkStart = offset\n        local chunkEnd = offset + #members / step\n        local pageEnd = pageStart + pageSize\n        if chunkEnd < pageStart then\n            -- If the chunk is before the page, we can skip it.\n            offset = chunkEnd\n        elseif chunkStart > pageEnd then\n            -- If the chunk is after the page, we can return the result.\n            return cursor, offset, items, jobs\n        else\n            -- If the chunk is overlapping the page, we need to add the elements to the result.\n            for i = 1, #members, step do\n                if offset >= pageEnd then\n                    return cursor, offset, items, jobs\n                end\n                if offset >= pageStart then\n                    local index = #items + 1\n                    if fetchJobs ~= nil then\n                        jobs[#jobs+1] = rcall("HGETALL", members[i])\n                    end\n                    if step == 2 then\n                        items[index] = {members[i], members[i + 1]}\n                    else\n                        items[index] = members[i]\n                    end\n                end\n                offset = offset + 1\n            end\n        end\n        iterations = iterations + 1\n    until cursor == "0" or iterations >= maxIterations\n    return cursor, offset, items, jobs\nend\nlocal key = KEYS[1]\nlocal scanCommand = "SSCAN"\nlocal countCommand = "SCARD"\nlocal type = rcall("TYPE", key)["ok"]\nif type == "none" then\n    return {0, 0, {}, 0}\nelseif type == "hash" then\n    scanCommand = "HSCAN"\n    countCommand = "HLEN"\nelseif type ~= "set" then\n    return\n        redis.error_reply("Pagination is only supported for sets and hashes.")\nend\nlocal numItems = rcall(countCommand, key)\nlocal startOffset = tonumber(ARGV[1])\nlocal endOffset = tonumber(ARGV[2])\nif endOffset == -1 then \n  endOffset = numItems\nend\nlocal pageSize = (endOffset - startOffset) + 1\nlocal cursor, offset, items, jobs = findPage(key, scanCommand, startOffset,\n                                       pageSize, ARGV[3], tonumber(ARGV[4]),\n                                       tonumber(ARGV[5]), ARGV[6])\nreturn {cursor, offset, items, numItems, jobs}\n',keys:1},mp={name:"pause",content:'--[[\n  Pauses or resumes a queue globably.\n  Input:\n    KEYS[1] \'wait\' or \'paused\'\'\n    KEYS[2] \'paused\' or \'wait\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] events stream key\n    KEYS[6] \'delayed\'\n    KEYS|7] \'marker\'\n    ARGV[1] \'paused\' or \'resumed\'\n  Event:\n    publish paused or resumed event.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then \n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\nlocal markerKey = KEYS[7]\nlocal hasJobs = rcall("EXISTS", KEYS[1]) == 1\n--TODO: check this logic to be reused when changing a delay\nif hasJobs then rcall("RENAME", KEYS[1], KEYS[2]) end\nif ARGV[1] == "paused" then\n    rcall("HSET", KEYS[3], "paused", 1)\n    rcall("DEL", markerKey)\nelse\n    rcall("HDEL", KEYS[3], "paused")\n    if hasJobs or rcall("ZCARD", KEYS[4]) > 0 then\n        -- Add marker if there are waiting or priority jobs\n        rcall("ZADD", markerKey, 0, "0")\n    else\n        addDelayMarkerIfNeeded(markerKey, KEYS[6])\n    end\nend\nrcall("XADD", KEYS[5], "*", "event", ARGV[1]);\n',keys:7},hp={name:"promote",content:'--[[\n  Promotes a job that is currently "delayed" to the "waiting" state\n    Input:\n      KEYS[1] \'delayed\'\n      KEYS[2] \'wait\'\n      KEYS[3] \'paused\'\n      KEYS[4] \'meta\'\n      KEYS[5] \'prioritized\'\n      KEYS[6] \'active\'\n      KEYS[7] \'pc\' priority counter\n      KEYS[8] \'event stream\'\n      KEYS[9] \'marker\'\n      ARGV[1]  queue.toKey(\'\')\n      ARGV[2]  jobId\n    Output:\n       0 - OK\n      -3 - Job not in delayed zset.\n    Events:\n      \'waiting\'\n]]\nlocal rcall = redis.call\nlocal jobId = ARGV[2]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("ZREM", KEYS[1], jobId) == 1 then\n    local jobKey = ARGV[1] .. jobId\n    local priority = tonumber(rcall("HGET", jobKey, "priority")) or 0\n    local metaKey = KEYS[4]\n    local markerKey = KEYS[9]\n    -- Remove delayed "marker" from the wait list if there is any.\n    -- Since we are adding a job we do not need the marker anymore.\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[6], KEYS[2], KEYS[3])\n    local marker = rcall("LINDEX", target, 0)\n    if marker and string.sub(marker, 1, 2) == "0:" then rcall("LPOP", target) end\n    if priority == 0 then\n        -- LIFO or FIFO\n        addJobInTargetList(target, markerKey, "LPUSH", isPausedOrMaxed, jobId)\n    else\n        addJobWithPriority(markerKey, KEYS[5], priority, jobId, KEYS[7], isPausedOrMaxed)\n    end\n    -- Emit waiting event (wait..ing@token)\n    rcall("XADD", KEYS[8], "*", "event", "waiting", "jobId", jobId, "prev",\n          "delayed");\n    rcall("HSET", jobKey, "delay", 0)\n    return 0\nelse\n    return -3\nend\n',keys:9},fp={name:"releaseLock",content:'--[[\n  Release lock\n    Input:\n      KEYS[1] \'lock\',\n      ARGV[1]  token\n      ARGV[2]  lock duration in milliseconds\n    Output:\n      "OK" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  return rcall("DEL", KEYS[1])\nelse\n  return 0\nend\n',keys:1},yp={name:"removeChildDependency",content:'--[[\n  Break parent-child dependency by removing\n  child reference from parent\n  Input:\n    KEYS[1] \'key\' prefix,\n    ARGV[1] job key\n    ARGV[2] parent key\n    Output:\n       0  - OK\n       1  - There is not relationship.\n      -1  - Missing job key\n      -5  - Missing parent key\n]]\nlocal rcall = redis.call\nlocal jobKey = ARGV[1]\nlocal parentKey = ARGV[2]\n-- Includes\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nif rcall("EXISTS", jobKey) ~= 1 then return -1 end\nif rcall("EXISTS", parentKey) ~= 1 then return -5 end\nif removeParentDependencyKey(jobKey, false, parentKey, KEYS[1], nil) then\n  rcall("HDEL", jobKey, "parentKey", "parent")\n  return 0\nelse\n  return 1\nend',keys:1},vp={name:"removeJob",content:'--[[\n    Remove a job from all the queues it may be in as well as all its data.\n    In order to be able to remove a job, it cannot be active.\n    Input:\n      KEYS[1] queue prefix\n      KEYS[2] meta key\n      ARGV[1] jobId\n      ARGV[2] remove children\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to recursively check if there are no locks\n  on the jobs to be removed.\n  returns:\n    boolean\n]]\nlocal function isLocked( prefix, jobId, removeChildren)\n  local jobKey = prefix .. jobId;\n  -- Check if this job is locked\n  local lockKey = jobKey .. \':lock\'\n  local lock = rcall("GET", lockKey)\n  if not lock then\n    if removeChildren == "1" then\n      local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n      if (#dependencies > 0) then\n        for i, childJobKey in ipairs(dependencies) do\n          -- We need to get the jobId for this job.\n          local childJobId = getJobIdFromKey(childJobKey)\n          local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n          local result = isLocked( childJobPrefix, childJobId, removeChildren )\n          if result then\n            return true\n          end\n        end\n      end\n    end\n    return false\n  end\n  return true\nend\n--[[\n  Function to remove debounce key.\n]]\nlocal function removeDebounceKey(prefixKey, jobKey)\n  local debounceId = rcall("HGET", jobKey, "deid")\n  if debounceId then\n    local debounceKey = prefixKey .. "de:" .. debounceId\n    rcall("DEL", debounceKey)\n  end\nend\n--[[\n  Function to remove from any state.\n  returns:\n    prev state\n]]\nlocal function removeJobFromAnyState( prefix, jobId)\n  -- We start with the ZSCORE checks, since they have O(1) complexity\n  if rcall("ZSCORE", prefix .. "completed", jobId) then\n    rcall("ZREM", prefix .. "completed", jobId)\n    return "completed"\n  elseif rcall("ZSCORE", prefix .. "waiting-children", jobId) then\n    rcall("ZREM", prefix .. "waiting-children", jobId)\n    return "waiting-children"\n  elseif rcall("ZSCORE", prefix .. "delayed", jobId) then\n    rcall("ZREM", prefix .. "delayed", jobId)\n    return "delayed"\n  elseif rcall("ZSCORE", prefix .. "failed", jobId) then\n    rcall("ZREM", prefix .. "failed", jobId)\n    return "failed"\n  elseif rcall("ZSCORE", prefix .. "prioritized", jobId) then\n    rcall("ZREM", prefix .. "prioritized", jobId)\n    return "prioritized"\n  -- We remove only 1 element from the list, since we assume they are not added multiple times\n  elseif rcall("LREM", prefix .. "wait", 1, jobId) == 1 then\n    return "wait"\n  elseif rcall("LREM", prefix .. "paused", 1, jobId) == 1 then\n    return "paused"\n  elseif rcall("LREM", prefix .. "active", 1, jobId) == 1 then\n    return "active"\n  end\n  return "unknown"\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob( prefix, jobId, parentKey, removeChildren)\n    local jobKey = prefix .. jobId;\n    removeParentDependencyKey(jobKey, false, parentKey, nil)\n    if removeChildren == "1" then\n        -- Check if this job has children\n        -- If so, we are going to try to remove the children recursively in deep first way because\n        -- if some job is locked we must exit with and error.\n        --local countProcessed = rcall("HLEN", jobKey .. ":processed")\n        local processed = rcall("HGETALL", jobKey .. ":processed")\n        if (#processed > 0) then\n            for i = 1, #processed, 2 do\n                local childJobId = getJobIdFromKey(processed[i])\n                local childJobPrefix = getJobKeyPrefix(processed[i], childJobId)\n                removeJob( childJobPrefix, childJobId, jobKey, removeChildren )\n            end\n        end\n        local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n        if (#dependencies > 0) then\n            for i, childJobKey in ipairs(dependencies) do\n                -- We need to get the jobId for this job.\n                local childJobId = getJobIdFromKey(childJobKey)\n                local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n                removeJob( childJobPrefix, childJobId, jobKey, removeChildren )\n            end\n        end\n        local failed = rcall("HGETALL", jobKey .. ":failed")\n        if (#failed > 0) then\n            for i = 1, #failed, 2 do\n                local childJobId = getJobIdFromKey(failed[i])\n                local childJobPrefix = getJobKeyPrefix(failed[i], childJobId)\n                removeJob( childJobPrefix, childJobId, jobKey, removeChildren )\n            end\n        end\n    end\n    local prev = removeJobFromAnyState(prefix, jobId)\n    removeDebounceKey(prefix, jobKey)\n    if removeJobKeys(jobKey) > 0 then\n        local maxEvents = getOrSetMaxEvents(KEYS[2])\n        rcall("XADD", prefix .. "events", "MAXLEN", "~", maxEvents, "*", "event", "removed",\n            "jobId", jobId, "prev", prev)\n    end\nend\nlocal prefix = KEYS[1]\nif not isLocked(prefix, ARGV[1], ARGV[2]) then\n    removeJob(prefix, ARGV[1], nil, ARGV[2])\n    return 1\nend\nreturn 0\n',keys:2},bp={name:"removeRepeatable",content:'--[[\n  Removes a repeatable job\n  Input:\n    KEYS[1] repeat jobs key\n    KEYS[2] delayed jobs key\n    KEYS[3] events key\n    ARGV[1] old repeat job id\n    ARGV[2] options concat\n    ARGV[3] repeat job key\n    ARGV[4] prefix key\n  Output:\n    0 - OK\n    1 - Missing repeat job\n  Events:\n    \'removed\'\n]]\nlocal rcall = redis.call\nlocal millis = rcall("ZSCORE", KEYS[1], ARGV[2])\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\',\n    jobKey .. \':dependencies\', jobKey .. \':processed\', jobKey .. \':failed\')\nend\n-- legacy removal TODO: remove in next breaking change\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = ARGV[1] .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed");\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[2]) == 1) then\n  return 0\nend\n-- new removal\nmillis = rcall("ZSCORE", KEYS[1], ARGV[3])\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = "repeat:" .. ARGV[3] .. ":" .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed")\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[3]) == 1) then\n  rcall("DEL", KEYS[1] .. ":" .. ARGV[3])\n  return 0\nend\nreturn 1\n',keys:3},gp={name:"reprocessJob",content:'--[[\n  Attempts to reprocess a job\n  Input:\n    KEYS[1] job key\n    KEYS[2] events stream\n    KEYS[3] job state\n    KEYS[4] wait key\n    KEYS[5] meta\n    KEYS[6] paused key\n    KEYS[7] active key\n    KEYS[8] marker key\n    ARGV[1] job.id\n    ARGV[2] (job.opts.lifo ? \'R\' : \'L\') + \'PUSH\'\n    ARGV[3] propVal - failedReason/returnvalue\n    ARGV[4] prev state - failed/completed\n  Output:\n     1 means the operation was a success\n    -1 means the job does not exist\n    -3 means the job was not found in the expected set.\n]]\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("EXISTS", KEYS[1]) == 1 then\n  local jobId = ARGV[1]\n  if (rcall("ZREM", KEYS[3], jobId) == 1) then\n    rcall("HDEL", KEYS[1], "finishedOn", "processedOn", ARGV[3])\n    local target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[7], KEYS[4], KEYS[6])\n    addJobInTargetList(target, KEYS[8], ARGV[2], isPausedOrMaxed, jobId)\n    local maxEvents = getOrSetMaxEvents(KEYS[5])\n    -- Emit waiting event\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId, "prev", ARGV[4]);\n    return 1\n  else\n    return -3\n  end\nelse\n  return -1\nend\n',keys:8},_p={name:"retryJob",content:'--[[\n  Retries a failed job by moving it back to the wait queue.\n    Input:\n      KEYS[1]  \'active\',\n      KEYS[2]  \'wait\'\n      KEYS[3]  \'paused\'\n      KEYS[4]  job key\n      KEYS[5]  \'meta\'\n      KEYS[6]  events stream\n      KEYS[7]  delayed key\n      KEYS[8]  prioritized key\n      KEYS[9]  \'pc\' priority counter\n      KEYS[10] \'marker\'\n      KEYS[11] \'stalled\'\n      ARGV[1]  key prefix\n      ARGV[2]  timestamp\n      ARGV[3]  pushCmd\n      ARGV[4]  jobId\n      ARGV[5]  token\n    Events:\n      \'waiting\'\n    Output:\n     0  - OK\n     -1 - Missing key\n     -2 - Missing lock\n     -3 - Job not in active set\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  local score = priority * 0x100000000 + prioCounter % 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                addJobInTargetList(targetKey, markerKey, "LPUSH", isPaused, jobId)\n            else\n                addJobWithPriority(markerKey, prioritizedKey, priority,\n                  jobId, priorityCounterKey, isPaused)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n    end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[1], KEYS[2], KEYS[3])\nlocal markerKey = KEYS[10]\n-- Check if there are delayed jobs that we can move to wait.\n-- test example: when there are delayed jobs between retries\npromoteDelayedJobs(KEYS[7], markerKey, target, KEYS[8], KEYS[6], ARGV[1], ARGV[2], KEYS[9], isPausedOrMaxed)\nif rcall("EXISTS", KEYS[4]) == 1 then\n  local errorCode = removeLock(KEYS[4], KEYS[11], ARGV[5], ARGV[4]) \n  if errorCode < 0 then\n    return errorCode\n  end\n  local numRemovedElements = rcall("LREM", KEYS[1], -1, ARGV[4])\n  if (numRemovedElements < 1) then return -3 end\n  local priority = tonumber(rcall("HGET", KEYS[4], "priority")) or 0\n  --need to re-evaluate after removing job from active\n  isPausedOrMaxed = isQueuePausedOrMaxed(KEYS[5], KEYS[1])\n  -- Standard or priority add\n  if priority == 0 then\n    addJobInTargetList(target, markerKey, ARGV[3], isPausedOrMaxed, ARGV[4])\n  else\n    addJobWithPriority(markerKey, KEYS[8], priority, ARGV[4], KEYS[9], isPausedOrMaxed)\n  end\n  rcall("HINCRBY", KEYS[4], "atm", 1)\n  local maxEvents = getOrSetMaxEvents(KEYS[5])\n  -- Emit waiting event\n  rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n    "jobId", ARGV[4], "prev", "failed")\n  return 0\nelse\n  return -1\nend\n',keys:11},xp={name:"saveStacktrace",content:'--[[\n  Save stacktrace and failedReason.\n  Input:\n    KEYS[1] job key\n    ARGV[1]  stacktrace\n    ARGV[2]  failedReason\n  Output:\n     0 - OK\n    -1 - Missing key\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then\n  rcall("HMSET", KEYS[1], "stacktrace", ARGV[1], "failedReason", ARGV[2])\n  return 0\nelse\n  return -1\nend\n',keys:1},kp={name:"updateData",content:'--[[\n  Update job data\n  Input:\n    KEYS[1] Job id key\n    ARGV[1] data\n  Output:\n    0 - OK\n   -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS",KEYS[1]) == 1 then -- // Make sure job exists\n  rcall("HSET", KEYS[1], "data", ARGV[1])\n  return 0\nelse\n  return -1\nend\n',keys:1},wp={name:"updateProgress",content:'--[[\n  Update job progress\n  Input:\n    KEYS[1] Job id key\n    KEYS[2] event stream key\n    KEYS[3] meta key\n    ARGV[1] id\n    ARGV[2] progress\n  Output:\n     0 - OK\n    -1 - Missing job.\n  Event:\n    progress(jobId, progress)\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n    local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n    if not maxEvents then\n        maxEvents = 10000\n        rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n    end\n    return maxEvents\nend\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n    local maxEvents = getOrSetMaxEvents(KEYS[3])\n    rcall("HSET", KEYS[1], "progress", ARGV[2])\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "progress",\n          "jobId", ARGV[1], "data", ARGV[2]);\n    return 0\nelse\n    return -1\nend\n',keys:3},Ep={name:"updateRepeatableJobMillis",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      ARGV[1] next milliseconds\n      ARGV[2] custom key\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal nextMillis = ARGV[1]\nlocal customKey = ARGV[2]\nlocal legacyCustomKey = ARGV[3]\nif rcall("ZSCORE", repeatKey, customKey) ~= false then\n    rcall("ZADD", repeatKey, nextMillis, customKey)\n    return customKey\nelseif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n    rcall("ZADD", repeatKey, nextMillis, legacyCustomKey)\n    return legacyCustomKey\nend\nreturn \'\'\n',keys:1};var Sp=Object.freeze({__proto__:null,addDelayedJob:Lu,addLog:Fu,addParentJob:Uu,addPrioritizedJob:qu,addRepeatableJob:Ju,addStandardJob:Vu,changeDelay:Gu,changePriority:Bu,cleanJobsInSet:zu,drain:Yu,extendLock:$u,getCounts:Wu,getCountsPerPriority:Hu,getRanges:Qu,getRateLimitTtl:Zu,getState:Xu,getStateV2:ep,isFinished:tp,isJobInList:np,isMaxed:ap,moveJobFromActiveToWait:ip,moveJobsToWait:op,moveStalledJobsToWait:rp,moveToActive:sp,moveToDelayed:lp,moveToFinished:cp,moveToWaitingChildren:dp,obliterate:up,paginate:pp,pause:mp,promote:hp,releaseLock:fp,removeChildDependency:yp,removeJob:vp,removeRepeatable:bp,reprocessJob:gp,retryJob:_p,saveStacktrace:xp,updateData:kp,updateProgress:wp,updateRepeatableJobMillis:Ep});const Kp=["BullMQ: WARNING! Your redis options maxRetriesPerRequest must be null","and will be overridden by BullMQ."].join(" ");class Rp extends p.EventEmitter{constructor(e,t=!1,n=!0,a=!1){if(super(),this.shared=t,this.blocking=n,this.capabilities={canDoubleTimeout:!1,canBlockFor1Ms:!0},this.status="initializing",Fc(e)){if(this._client=e,this._client.options.keyPrefix)throw new Error("BullMQ: ioredis does not support ioredis prefixes, use the prefix option instead.");!function(e){return Fc(e)&&e.isCluster}(this._client)?this.opts=this._client.options:this.opts=this._client.options.redisOptions,this.checkBlockingOptions("BullMQ: Your redis options maxRetriesPerRequest must be null.",this.opts,!0)}else this.checkBlockingOptions(Kp,e),this.opts=Object.assign({port:6379,host:"127.0.0.1",retryStrategy:function(e){return Math.max(Math.min(Math.exp(e),2e4),1e3)}},e),this.blocking&&(this.opts.maxRetriesPerRequest=null);this.skipVersionCheck=a||!(!this.opts||!this.opts.skipVersionCheck),this.handleClientError=e=>{this.emit("error",e)},this.handleClientClose=()=>{this.emit("close")},this.handleClientReady=()=>{this.emit("ready")},this.initializing=this.init(),this.initializing.catch((e=>this.emit("error",e)))}checkBlockingOptions(e,t,n=!1){if(this.blocking&&t&&t.maxRetriesPerRequest){if(n)throw new Error(e);console.error(e)}}static async waitUntilReady(e){if("ready"===e.status)return;if("wait"===e.status)return e.connect();if("end"===e.status)throw new Error(Qa.CONNECTION_CLOSED_ERROR_MSG);let t,n,a;try{await new Promise(((i,o)=>{let r;a=e=>{r=e},t=()=>{i()},n=()=>{"end"!==e.status?o(r||new Error(Qa.CONNECTION_CLOSED_ERROR_MSG)):r?o(r):i()},Lc(e,3),e.once("ready",t),e.on("end",n),e.once("error",a)}))}finally{e.removeListener("end",n),e.removeListener("error",a),e.removeListener("ready",t),Uc(e,3)}}get client(){return this.initializing}loadCommands(e){const t=e||Sp;for(const e in t)this._client[t[e].name]||this._client.defineCommand(t[e].name,{numberOfKeys:t[e].keys,lua:t[e].content})}async init(){if(this._client||(this._client=new ps(this.opts)),Lc(this._client,3),this._client.on("error",this.handleClientError),this._client.on("close",this.handleClientClose),this._client.on("ready",this.handleClientReady),await Rp.waitUntilReady(this._client),this.loadCommands(),"end"!==this._client.status){if(this.version=await this.getRedisVersion(),!0!==this.skipVersionCheck&&!this.closing){if(Gc(this.version,Rp.minimumVersion))throw new Error(`Redis version needs to be greater or equal than ${Rp.minimumVersion} Current: ${this.version}`);Gc(this.version,Rp.recommendedMinimumVersion)&&console.warn(`It is highly recommended to use a minimum Redis version of ${Rp.recommendedMinimumVersion}\n             Current: ${this.version}`)}this.capabilities={canDoubleTimeout:!Gc(this.version,"6.0.0"),canBlockFor1Ms:!Gc(this.version,"7.0.8")},this.status="ready"}return this._client}async disconnect(e=!0){const t=await this.client;if("end"!==t.status){let n,a;if(!e)return t.disconnect();const i=new Promise(((e,i)=>{Lc(t,2),t.once("end",e),t.once("error",i),n=e,a=i}));t.disconnect();try{await i}finally{Uc(t,2),t.removeListener("end",n),t.removeListener("error",a)}}}async reconnect(){return(await this.client).connect()}async close(e=!1){if(!this.closing){const t=this.status;this.status="closing",this.closing=!0;try{"ready"===t&&await this.initializing,this.shared||("initializing"==t||e?this._client.disconnect():await this._client.quit(),this._client.status="end")}catch(e){if(Vc(e))throw e}finally{this._client.off("error",this.handleClientError),this._client.off("close",this.handleClientClose),this._client.off("ready",this.handleClientReady),Uc(this._client,3),this.removeAllListeners(),this.status="closed"}}}async getRedisVersion(){const e="redis_version:",t="maxmemory_policy:",n=(await this._client.info()).split("\r\n");let a;for(let i=0;i<n.length;i++){if(0===n[i].indexOf(t)){const e=n[i].substr(17);"noeviction"!==e&&console.warn(`IMPORTANT! Eviction policy is ${e}. It should be "noeviction"`)}0===n[i].indexOf(e)&&(a=n[i].substr(14))}return a}get redisVersion(){return this.version}}Rp.minimumVersion="5.0.0",Rp.recommendedMinimumVersion="6.2.0";class Ip extends p.EventEmitter{constructor(e,t={connection:{}},n=Rp){if(super(),this.name=e,this.opts=t,this.closed=!1,this.opts=Object.assign({prefix:"bull"},t),!e)throw new Error("Queue name must be provided");if(e.includes(":"))throw new Error("Queue name cannot contain :");this.connection=new n(t.connection,Fc(t.connection),t.blockingConnection,t.skipVersionCheck),this.connection.on("error",(e=>this.emit("error",e))),this.connection.on("close",(()=>{this.closing||this.emit("ioredis:close")}));const a=new Mu(t.prefix);this.qualifiedName=a.getQueueQualifiedName(e),this.keys=a.getKeys(e),this.toKey=t=>a.toKey(e,t),this.setScripts()}get client(){return this.connection.client}setScripts(){this.scripts=new Iu(this)}get redisVersion(){return this.connection.redisVersion}get Job(){return Nu}emit(e,...t){try{return super.emit(e,...t)}catch(e){try{return super.emit("error",e)}catch(e){return console.error(e),!1}}}waitUntilReady(){return this.client}base64Name(){return Buffer.from(this.name).toString("base64")}clientName(e=""){const t=this.base64Name();return`${this.opts.prefix}:${t}${e}`}async close(){this.closing||(this.closing=this.connection.close()),await this.closing,this.closed=!0}disconnect(){return this.connection.disconnect()}async checkConnectionError(e,t=5e3){try{return await e()}catch(e){if(Vc(e)&&this.emit("error",e),this.closing||!t)return;await Mc(t)}}}class Tp extends Ip{constructor(e,t={connection:{}},n){var{connection:a,autorun:i=!0}=t,o=sd(t,["connection","autorun"]);super(e,Object.assign(Object.assign({},o),{connection:Fc(a)?a.duplicate():a,blockingConnection:!0}),n),this.running=!1,this.opts=Object.assign({blockingTimeout:1e4},this.opts),i&&this.run().catch((e=>this.emit("error",e)))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}async run(){if(this.running)throw new Error("Queue Events is already running.");try{this.running=!0;const e=await this.client;try{await e.client("SETNAME",this.clientName(":qe"))}catch(e){if(!Jc.test(e.message))throw e}await this.consumeEvents(e)}catch(e){throw this.running=!1,e}}async consumeEvents(e){const t=this.opts,n=this.keys.events;let a=t.lastEventId||"$";for(;!this.closing;){const i=await this.checkConnectionError((()=>e.xread("BLOCK",t.blockingTimeout,"STREAMS",n,a)));if(i){const e=i[0][1];for(let t=0;t<e.length;t++){a=e[t][0];const n=Dc(e[t][1]);switch(n.event){case"progress":n.data=JSON.parse(n.data);break;case"completed":n.returnvalue=JSON.parse(n.returnvalue)}const{event:i}=n,o=sd(n,["event"]);"drained"===i?this.emit(i,a):(this.emit(i,o,a),this.emit(`${i}:${o.jobId}`,o,a))}}}}close(){return this.closing||(this.closing=this.disconnect()),this.closing}}class jp extends Ip{getJob(e){return this.Job.fromId(this,e)}commandByType(e,t,n){return e.map((e=>{e="waiting"===e?"wait":e;const a=this.toKey(e);switch(e){case"completed":case"failed":case"delayed":case"prioritized":case"repeat":case"waiting-children":return n(a,t?"zcard":"zrange");case"active":case"wait":case"paused":return n(a,t?"llen":"lrange")}}))}get Job(){return Nu}sanitizeJobTypes(e){const t="string"==typeof e?[e]:e;if(Array.isArray(t)&&t.length>0){const e=[...t];return-1!==e.indexOf("waiting")&&e.push("paused"),[...new Set(e)]}return["active","completed","delayed","failed","paused","prioritized","waiting","waiting-children"]}async count(){return await this.getJobCountByTypes("waiting","paused","delayed","prioritized","waiting-children")}async getRateLimitTtl(e){return this.scripts.getRateLimitTtl(e)}async getJobCountByTypes(...e){const t=await this.getJobCounts(...e);return Object.values(t).reduce(((e,t)=>e+t),0)}async getJobCounts(...e){const t=this.sanitizeJobTypes(e),n=await this.scripts.getCounts(t),a={};return n.forEach(((e,n)=>{a[t[n]]=e||0})),a}getJobState(e){return this.scripts.getState(e)}getCompletedCount(){return this.getJobCountByTypes("completed")}getFailedCount(){return this.getJobCountByTypes("failed")}getDelayedCount(){return this.getJobCountByTypes("delayed")}getActiveCount(){return this.getJobCountByTypes("active")}getPrioritizedCount(){return this.getJobCountByTypes("prioritized")}async getCountsPerPriority(e){const t=[...new Set(e)],n=await this.scripts.getCountsPerPriority(t),a={};return n.forEach(((e,n)=>{a[`${t[n]}`]=e||0})),a}getWaitingCount(){return this.getJobCountByTypes("waiting")}getWaitingChildrenCount(){return this.getJobCountByTypes("waiting-children")}getWaiting(e=0,t=-1){return this.getJobs(["waiting"],e,t,!0)}getWaitingChildren(e=0,t=-1){return this.getJobs(["waiting-children"],e,t,!0)}getActive(e=0,t=-1){return this.getJobs(["active"],e,t,!0)}getDelayed(e=0,t=-1){return this.getJobs(["delayed"],e,t,!0)}getPrioritized(e=0,t=-1){return this.getJobs(["prioritized"],e,t,!0)}getCompleted(e=0,t=-1){return this.getJobs(["completed"],e,t,!1)}getFailed(e=0,t=-1){return this.getJobs(["failed"],e,t,!1)}async getDependencies(e,t,n,a){const i=this.toKey("processed"==t?`${e}:processed`:`${e}:dependencies`),{items:o,total:r,jobs:s}=await this.scripts.paginate(i,{start:n,end:a,fetchJobs:!0});return{items:o,jobs:s,total:r}}async getRanges(e,t=0,n=1,a=!1){const i=[];this.commandByType(e,!1,((e,t)=>{switch(t){case"lrange":i.push("lrange");break;case"zrange":i.push("zrange")}}));const o=await this.scripts.getRanges(e,t,n,a);let r=[];return o.forEach(((e,t)=>{const n=e||[];r=a&&"lrange"===i[t]?r.concat(n.reverse()):r.concat(n)})),[...new Set(r)]}async getJobs(e,t=0,n=-1,a=!1){const i=this.sanitizeJobTypes(e),o=await this.getRanges(i,t,n,a);return Promise.all(o.map((e=>this.Job.fromId(this,e))))}async getJobLogs(e,t=0,n=-1,a=!0){const i=(await this.client).multi(),o=this.toKey(e+":logs");a?i.lrange(o,t,n):i.lrange(o,-(n+1),-(t+1)),i.llen(o);const r=await i.exec();return a||r[0][1].reverse(),{logs:r[0][1],count:r[1][1]}}async baseGetClients(e){const t=await this.client;try{const n=await t.client("LIST");return this.parseClientList(n,e)}catch(e){if(!Jc.test(e.message))throw e;return[{name:"GCP does not support client list"}]}}getWorkers(){const e=`${this.clientName()}`,t=`${this.clientName()}:w:`;return this.baseGetClients((n=>n&&(n===e||n.startsWith(t))))}async getWorkersCount(){return(await this.getWorkers()).length}async getQueueEvents(){const e=`${this.clientName()}:qe`;return this.baseGetClients((t=>t===e))}async getMetrics(e,t=0,n=-1){const a=await this.client,i=this.toKey(`metrics:${e}`),o=`${i}:data`,r=a.multi();r.hmget(i,"count","prevTS","prevCount"),r.lrange(o,t,n),r.llen(o);const[s,l,c]=await r.exec(),[d,[u,p,m]]=s,[h,f]=l,[y,v]=c;if(d||h)throw d||h||y;return{meta:{count:parseInt(u||"0",10),prevTS:parseInt(p||"0",10),prevCount:parseInt(m||"0",10)},data:f,count:v}}parseClientList(e,t){const n=e.split("\n"),a=[];return n.forEach((e=>{const n={};e.split(" ").forEach((function(e){const t=e.indexOf("="),a=e.substring(0,t),i=e.substring(t+1);n[a]=i}));const i=n.name;t(i)&&(n.name=this.name,n.rawname=i,a.push(n))})),a}}var Op={};Object.defineProperty(Op,"__esModule",{value:!0});class Ap extends Error{}class Cp extends Ap{constructor(e){super(`Invalid DateTime: ${e.toMessage()}`)}}class Pp extends Ap{constructor(e){super(`Invalid Interval: ${e.toMessage()}`)}}class Np extends Ap{constructor(e){super(`Invalid Duration: ${e.toMessage()}`)}}class Dp extends Ap{}class Mp extends Ap{constructor(e){super(`Invalid unit ${e}`)}}class Lp extends Ap{}class Fp extends Ap{constructor(){super("Zone is an abstract class")}}const Up="numeric",qp="short",Jp="long",Vp={year:Up,month:Up,day:Up},Gp={year:Up,month:qp,day:Up},Bp={year:Up,month:qp,day:Up,weekday:qp},zp={year:Up,month:Jp,day:Up},Yp={year:Up,month:Jp,day:Up,weekday:Jp},$p={hour:Up,minute:Up},Wp={hour:Up,minute:Up,second:Up},Hp={hour:Up,minute:Up,second:Up,timeZoneName:qp},Qp={hour:Up,minute:Up,second:Up,timeZoneName:Jp},Zp={hour:Up,minute:Up,hourCycle:"h23"},Xp={hour:Up,minute:Up,second:Up,hourCycle:"h23"},em={hour:Up,minute:Up,second:Up,hourCycle:"h23",timeZoneName:qp},tm={hour:Up,minute:Up,second:Up,hourCycle:"h23",timeZoneName:Jp},nm={year:Up,month:Up,day:Up,hour:Up,minute:Up},am={year:Up,month:Up,day:Up,hour:Up,minute:Up,second:Up},im={year:Up,month:qp,day:Up,hour:Up,minute:Up},om={year:Up,month:qp,day:Up,hour:Up,minute:Up,second:Up},rm={year:Up,month:qp,day:Up,weekday:qp,hour:Up,minute:Up},sm={year:Up,month:Jp,day:Up,hour:Up,minute:Up,timeZoneName:qp},lm={year:Up,month:Jp,day:Up,hour:Up,minute:Up,second:Up,timeZoneName:qp},cm={year:Up,month:Jp,day:Up,weekday:Jp,hour:Up,minute:Up,timeZoneName:Jp},dm={year:Up,month:Jp,day:Up,weekday:Jp,hour:Up,minute:Up,second:Up,timeZoneName:Jp};class um{get type(){throw new Fp}get name(){throw new Fp}get ianaName(){return this.name}get isUniversal(){throw new Fp}offsetName(e,t){throw new Fp}formatOffset(e,t){throw new Fp}offset(e){throw new Fp}equals(e){throw new Fp}get isValid(){throw new Fp}}let pm=null;class mm extends um{static get instance(){return null===pm&&(pm=new mm),pm}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return Oh(e,t,n)}formatOffset(e,t){return Nh(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}let hm={};const fm={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};let ym={};class vm extends um{static create(e){return ym[e]||(ym[e]=new vm(e)),ym[e]}static resetCache(){ym={},hm={}}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new Intl.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this.zoneName=e,this.valid=vm.isValidZone(e)}get type(){return"iana"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return Oh(e,t,n,this.name)}formatOffset(e,t){return Nh(this.offset(e),t)}offset(e){const t=new Date(e);if(isNaN(t))return NaN;const n=(a=this.name,hm[a]||(hm[a]=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:a,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"})),hm[a]);var a;let[i,o,r,s,l,c,d]=n.formatToParts?function(e,t){const n=e.formatToParts(t),a=[];for(let e=0;e<n.length;e++){const{type:t,value:i}=n[e],o=fm[t];"era"===t?a[o]=i:dh(o)||(a[o]=parseInt(i,10))}return a}(n,t):function(e,t){const n=e.format(t).replace(/\u200E/g,""),a=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(n),[,i,o,r,s,l,c,d]=a;return[r,i,o,s,l,c,d]}(n,t);"BC"===s&&(i=1-Math.abs(i));let u=+t;const p=u%1e3;return u-=p>=0?p:1e3+p,(Rh({year:i,month:o,day:r,hour:24===l?0:l,minute:c,second:d,millisecond:0})-u)/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this.valid}}let bm={};let gm={};function _m(e,t={}){const n=JSON.stringify([e,t]);let a=gm[n];return a||(a=new Intl.DateTimeFormat(e,t),gm[n]=a),a}let xm={};let km={};let wm=null;let Em={};function Sm(e,t,n,a){const i=e.listingMode();return"error"===i?null:"en"===i?n(t):a(t)}class Km{constructor(e,t,n){this.padTo=n.padTo||0,this.floor=n.floor||!1;const{padTo:a,floor:i,...o}=n;if(!t||Object.keys(o).length>0){const t={useGrouping:!1,...n};n.padTo>0&&(t.minimumIntegerDigits=n.padTo),this.inf=function(e,t={}){const n=JSON.stringify([e,t]);let a=xm[n];return a||(a=new Intl.NumberFormat(e,t),xm[n]=a),a}(e,t)}}format(e){if(this.inf){const t=this.floor?Math.floor(e):e;return this.inf.format(t)}return gh(this.floor?Math.floor(e):wh(e,3),this.padTo)}}class Rm{constructor(e,t,n){let a;if(this.opts=n,this.originalZone=void 0,this.opts.timeZone)this.dt=e;else if("fixed"===e.zone.type){const t=e.offset/60*-1,n=t>=0?`Etc/GMT+${t}`:`Etc/GMT${t}`;0!==e.offset&&vm.create(n).valid?(a=n,this.dt=e):(a="UTC",this.dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone)}else"system"===e.zone.type?this.dt=e:"iana"===e.zone.type?(this.dt=e,a=e.zone.name):(a="UTC",this.dt=e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone);const i={...this.opts};i.timeZone=i.timeZone||a,this.dtf=_m(t,i)}format(){return this.originalZone?this.formatToParts().map((({value:e})=>e)).join(""):this.dtf.format(this.dt.toJSDate())}formatToParts(){const e=this.dtf.formatToParts(this.dt.toJSDate());return this.originalZone?e.map((e=>{if("timeZoneName"===e.type){const t=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return{...e,value:t}}return e})):e}resolvedOptions(){return this.dtf.resolvedOptions()}}class Im{constructor(e,t,n){this.opts={style:"long",...n},!t&&mh()&&(this.rtf=function(e,t={}){const{base:n,...a}=t,i=JSON.stringify([e,a]);let o=km[i];return o||(o=new Intl.RelativeTimeFormat(e,t),km[i]=o),o}(e,n))}format(e,t){return this.rtf?this.rtf.format(e,t):function(e,t,n="always",a=!1){const i={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},o=-1===["hours","minutes","seconds"].indexOf(e);if("auto"===n&&o){const n="days"===e;switch(t){case 1:return n?"tomorrow":`next ${i[e][0]}`;case-1:return n?"yesterday":`last ${i[e][0]}`;case 0:return n?"today":`this ${i[e][0]}`}}const r=Object.is(t,-0)||t<0,s=Math.abs(t),l=1===s,c=i[e],d=a?l?c[1]:c[2]||c[1]:l?i[e][0]:e;return r?`${s} ${d} ago`:`in ${s} ${d}`}(t,e,this.opts.numeric,"long"!==this.opts.style)}formatToParts(e,t){return this.rtf?this.rtf.formatToParts(e,t):[]}}const Tm={firstDay:1,minimalDays:4,weekend:[6,7]};class jm{static fromOpts(e){return jm.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static create(e,t,n,a,i=!1){const o=e||$m.defaultLocale,r=o||(i?"en-US":wm||(wm=(new Intl.DateTimeFormat).resolvedOptions().locale,wm)),s=t||$m.defaultNumberingSystem,l=n||$m.defaultOutputCalendar,c=vh(a)||$m.defaultWeekSettings;return new jm(r,s,l,c,o)}static resetCache(){wm=null,gm={},xm={},km={}}static fromObject({locale:e,numberingSystem:t,outputCalendar:n,weekSettings:a}={}){return jm.create(e,t,n,a)}constructor(e,t,n,a,i){const[o,r,s]=function(e){const t=e.indexOf("-x-");-1!==t&&(e=e.substring(0,t));const n=e.indexOf("-u-");if(-1===n)return[e];{let t,a;try{t=_m(e).resolvedOptions(),a=e}catch(i){const o=e.substring(0,n);t=_m(o).resolvedOptions(),a=o}const{numberingSystem:i,calendar:o}=t;return[a,i,o]}}(e);this.locale=o,this.numberingSystem=t||r||null,this.outputCalendar=n||s||null,this.weekSettings=a,this.intl=function(e,t,n){return n||t?(e.includes("-u-")||(e+="-u"),n&&(e+=`-ca-${n}`),t&&(e+=`-nu-${t}`),e):e}(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=i,this.fastNumbersCached=null}get fastNumbers(){var e;return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||"latn"===e.numberingSystem)&&("latn"===e.numberingSystem||!e.locale||e.locale.startsWith("en")||"latn"===new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem)),this.fastNumbersCached}listingMode(){const e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?jm.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,vh(e.weekSettings)||this.weekSettings,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone({...e,defaultToEN:!0})}redefaultToSystem(e={}){return this.clone({...e,defaultToEN:!1})}months(e,t=!1){return Sm(this,e,Uh,(()=>{const n=t?{month:e,day:"numeric"}:{month:e},a=t?"format":"standalone";return this.monthsCache[a][e]||(this.monthsCache[a][e]=function(e){const t=[];for(let n=1;n<=12;n++){const a=Gy.utc(2009,n,1);t.push(e(a))}return t}((e=>this.extract(e,n,"month")))),this.monthsCache[a][e]}))}weekdays(e,t=!1){return Sm(this,e,Gh,(()=>{const n=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e},a=t?"format":"standalone";return this.weekdaysCache[a][e]||(this.weekdaysCache[a][e]=function(e){const t=[];for(let n=1;n<=7;n++){const a=Gy.utc(2016,11,13+n);t.push(e(a))}return t}((e=>this.extract(e,n,"weekday")))),this.weekdaysCache[a][e]}))}meridiems(){return Sm(this,void 0,(()=>Bh),(()=>{if(!this.meridiemCache){const e={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[Gy.utc(2016,11,13,9),Gy.utc(2016,11,13,19)].map((t=>this.extract(t,e,"dayperiod")))}return this.meridiemCache}))}eras(e){return Sm(this,e,Wh,(()=>{const t={era:e};return this.eraCache[e]||(this.eraCache[e]=[Gy.utc(-40,1,1),Gy.utc(2017,1,1)].map((e=>this.extract(e,t,"era")))),this.eraCache[e]}))}extract(e,t,n){const a=this.dtFormatter(e,t).formatToParts().find((e=>e.type.toLowerCase()===n));return a?a.value:null}numberFormatter(e={}){return new Km(this.intl,e.forceSimple||this.fastNumbers,e)}dtFormatter(e,t={}){return new Rm(e,this.intl,t)}relFormatter(e={}){return new Im(this.intl,this.isEnglish(),e)}listFormatter(e={}){return function(e,t={}){const n=JSON.stringify([e,t]);let a=bm[n];return a||(a=new Intl.ListFormat(e,t),bm[n]=a),a}(this.intl,e)}isEnglish(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us")}getWeekSettings(){return this.weekSettings?this.weekSettings:hh()?function(e){let t=Em[e];if(!t){const n=new Intl.Locale(e);t="getWeekInfo"in n?n.getWeekInfo():n.weekInfo,Em[e]=t}return t}(this.locale):Tm}getStartOfWeek(){return this.getWeekSettings().firstDay}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getWeekendDays(){return this.getWeekSettings().weekend}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`}}let Om=null;class Am extends um{static get utcInstance(){return null===Om&&(Om=new Am(0)),Om}static instance(e){return 0===e?Am.utcInstance:new Am(e)}static parseSpecifier(e){if(e){const t=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(t)return new Am(Ah(t[1],t[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return"fixed"}get name(){return 0===this.fixed?"UTC":`UTC${Nh(this.fixed,"narrow")}`}get ianaName(){return 0===this.fixed?"Etc/UTC":`Etc/GMT${Nh(-this.fixed,"narrow")}`}offsetName(){return this.name}formatOffset(e,t){return Nh(this.fixed,t)}get isUniversal(){return!0}offset(){return this.fixed}equals(e){return"fixed"===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class Cm extends um{constructor(e){super(),this.zoneName=e}get type(){return"invalid"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}function Pm(e,t){if(dh(e)||null===e)return t;if(e instanceof um)return e;if("string"==typeof e){const n=e.toLowerCase();return"default"===n?t:"local"===n||"system"===n?mm.instance:"utc"===n||"gmt"===n?Am.utcInstance:Am.parseSpecifier(n)||vm.create(e)}return uh(e)?Am.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new Cm(e)}const Nm={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},Dm={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},Mm=Nm.hanidec.replace(/[\[|\]]/g,"").split("");let Lm={};function Fm({numberingSystem:e},t=""){const n=e||"latn";return Lm[n]||(Lm[n]={}),Lm[n][t]||(Lm[n][t]=new RegExp(`${Nm[n]}${t}`)),Lm[n][t]}let Um,qm=()=>Date.now(),Jm="system",Vm=null,Gm=null,Bm=null,zm=60,Ym=null;class $m{static get now(){return qm}static set now(e){qm=e}static set defaultZone(e){Jm=e}static get defaultZone(){return Pm(Jm,mm.instance)}static get defaultLocale(){return Vm}static set defaultLocale(e){Vm=e}static get defaultNumberingSystem(){return Gm}static set defaultNumberingSystem(e){Gm=e}static get defaultOutputCalendar(){return Bm}static set defaultOutputCalendar(e){Bm=e}static get defaultWeekSettings(){return Ym}static set defaultWeekSettings(e){Ym=vh(e)}static get twoDigitCutoffYear(){return zm}static set twoDigitCutoffYear(e){zm=e%100}static get throwOnInvalid(){return Um}static set throwOnInvalid(e){Um=e}static resetCaches(){jm.resetCache(),vm.resetCache(),Gy.resetCache(),Lm={}}}class Wm{constructor(e,t){this.reason=e,this.explanation=t}toMessage(){return this.explanation?`${this.reason}: ${this.explanation}`:this.reason}}const Hm=[0,31,59,90,120,151,181,212,243,273,304,334],Qm=[0,31,60,91,121,152,182,213,244,274,305,335];function Zm(e,t){return new Wm("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function Xm(e,t,n){const a=new Date(Date.UTC(e,t-1,n));e<100&&e>=0&&a.setUTCFullYear(a.getUTCFullYear()-1900);const i=a.getUTCDay();return 0===i?7:i}function eh(e,t,n){return n+(Eh(e)?Qm:Hm)[t-1]}function th(e,t){const n=Eh(e)?Qm:Hm,a=n.findIndex((e=>e<t));return{month:a+1,day:t-n[a]}}function nh(e,t){return(e-t+7)%7+1}function ah(e,t=4,n=1){const{year:a,month:i,day:o}=e,r=eh(a,i,o),s=nh(Xm(a,i,o),n);let l,c=Math.floor((r-s+14-t)/7);return c<1?(l=a-1,c=Th(l,t,n)):c>Th(a,t,n)?(l=a+1,c=1):l=a,{weekYear:l,weekNumber:c,weekday:s,...Dh(e)}}function ih(e,t=4,n=1){const{weekYear:a,weekNumber:i,weekday:o}=e,r=nh(Xm(a,1,t),n),s=Sh(a);let l,c=7*i+o-r-7+t;c<1?(l=a-1,c+=Sh(l)):c>s?(l=a+1,c-=Sh(a)):l=a;const{month:d,day:u}=th(l,c);return{year:l,month:d,day:u,...Dh(e)}}function oh(e){const{year:t,month:n,day:a}=e;return{year:t,ordinal:eh(t,n,a),...Dh(e)}}function rh(e){const{year:t,ordinal:n}=e,{month:a,day:i}=th(t,n);return{year:t,month:a,day:i,...Dh(e)}}function sh(e,t){if(!dh(e.localWeekday)||!dh(e.localWeekNumber)||!dh(e.localWeekYear)){if(!dh(e.weekday)||!dh(e.weekNumber)||!dh(e.weekYear))throw new Dp("Cannot mix locale-based week fields with ISO-based week fields");return dh(e.localWeekday)||(e.weekday=e.localWeekday),dh(e.localWeekNumber)||(e.weekNumber=e.localWeekNumber),dh(e.localWeekYear)||(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:4,startOfWeek:1}}function lh(e){const t=ph(e.year),n=bh(e.month,1,12),a=bh(e.day,1,Kh(e.year,e.month));return t?n?!a&&Zm("day",e.day):Zm("month",e.month):Zm("year",e.year)}function ch(e){const{hour:t,minute:n,second:a,millisecond:i}=e,o=bh(t,0,23)||24===t&&0===n&&0===a&&0===i,r=bh(n,0,59),s=bh(a,0,59),l=bh(i,0,999);return o?r?s?!l&&Zm("millisecond",i):Zm("second",a):Zm("minute",n):Zm("hour",t)}function dh(e){return void 0===e}function uh(e){return"number"==typeof e}function ph(e){return"number"==typeof e&&e%1==0}function mh(){try{return"undefined"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function hh(){try{return"undefined"!=typeof Intl&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype)}catch(e){return!1}}function fh(e,t,n){if(0!==e.length)return e.reduce(((e,a)=>{const i=[t(a),a];return e&&n(e[0],i[0])===e[0]?e:i}),null)[1]}function yh(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function vh(e){if(null==e)return null;if("object"!=typeof e)throw new Lp("Week settings must be an object");if(!bh(e.firstDay,1,7)||!bh(e.minimalDays,1,7)||!Array.isArray(e.weekend)||e.weekend.some((e=>!bh(e,1,7))))throw new Lp("Invalid week settings");return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:Array.from(e.weekend)}}function bh(e,t,n){return ph(e)&&e>=t&&e<=n}function gh(e,t=2){let n;return n=e<0?"-"+(""+-e).padStart(t,"0"):(""+e).padStart(t,"0"),n}function _h(e){return dh(e)||null===e||""===e?void 0:parseInt(e,10)}function xh(e){return dh(e)||null===e||""===e?void 0:parseFloat(e)}function kh(e){if(!dh(e)&&null!==e&&""!==e){const t=1e3*parseFloat("0."+e);return Math.floor(t)}}function wh(e,t,n=!1){const a=10**t;return(n?Math.trunc:Math.round)(e*a)/a}function Eh(e){return e%4==0&&(e%100!=0||e%400==0)}function Sh(e){return Eh(e)?366:365}function Kh(e,t){const n=function(e,t){return e-t*Math.floor(e/t)}(t-1,12)+1;return 2===n?Eh(e+(t-n)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}function Rh(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&e.year>=0&&(t=new Date(t),t.setUTCFullYear(e.year,e.month-1,e.day)),+t}function Ih(e,t,n){return-nh(Xm(e,1,t),n)+t-1}function Th(e,t=4,n=1){const a=Ih(e,t,n),i=Ih(e+1,t,n);return(Sh(e)-a+i)/7}function jh(e){return e>99?e:e>$m.twoDigitCutoffYear?1900+e:2e3+e}function Oh(e,t,n,a=null){const i=new Date(e),o={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};a&&(o.timeZone=a);const r={timeZoneName:t,...o},s=new Intl.DateTimeFormat(n,r).formatToParts(i).find((e=>"timezonename"===e.type.toLowerCase()));return s?s.value:null}function Ah(e,t){let n=parseInt(e,10);Number.isNaN(n)&&(n=0);const a=parseInt(t,10)||0;return 60*n+(n<0||Object.is(n,-0)?-a:a)}function Ch(e){const t=Number(e);if("boolean"==typeof e||""===e||Number.isNaN(t))throw new Lp(`Invalid unit value ${e}`);return t}function Ph(e,t){const n={};for(const a in e)if(yh(e,a)){const i=e[a];if(null==i)continue;n[t(a)]=Ch(i)}return n}function Nh(e,t){const n=Math.trunc(Math.abs(e/60)),a=Math.trunc(Math.abs(e%60)),i=e>=0?"+":"-";switch(t){case"short":return`${i}${gh(n,2)}:${gh(a,2)}`;case"narrow":return`${i}${n}${a>0?`:${a}`:""}`;case"techie":return`${i}${gh(n,2)}${gh(a,2)}`;default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function Dh(e){return function(e,t){return t.reduce(((t,n)=>(t[n]=e[n],t)),{})}(e,["hour","minute","second","millisecond"])}const Mh=["January","February","March","April","May","June","July","August","September","October","November","December"],Lh=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],Fh=["J","F","M","A","M","J","J","A","S","O","N","D"];function Uh(e){switch(e){case"narrow":return[...Fh];case"short":return[...Lh];case"long":return[...Mh];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}const qh=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],Jh=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],Vh=["M","T","W","T","F","S","S"];function Gh(e){switch(e){case"narrow":return[...Vh];case"short":return[...Jh];case"long":return[...qh];case"numeric":return["1","2","3","4","5","6","7"];default:return null}}const Bh=["AM","PM"],zh=["Before Christ","Anno Domini"],Yh=["BC","AD"],$h=["B","A"];function Wh(e){switch(e){case"narrow":return[...$h];case"short":return[...Yh];case"long":return[...zh];default:return null}}function Hh(e,t){let n="";for(const a of e)a.literal?n+=a.val:n+=t(a.val);return n}const Qh={D:Vp,DD:Gp,DDD:zp,DDDD:Yp,t:$p,tt:Wp,ttt:Hp,tttt:Qp,T:Zp,TT:Xp,TTT:em,TTTT:tm,f:nm,ff:im,fff:sm,ffff:cm,F:am,FF:om,FFF:lm,FFFF:dm};class Zh{static create(e,t={}){return new Zh(e,t)}static parseFormat(e){let t=null,n="",a=!1;const i=[];for(let o=0;o<e.length;o++){const r=e.charAt(o);"'"===r?(n.length>0&&i.push({literal:a||/^\s+$/.test(n),val:n}),t=null,n="",a=!a):a||r===t?n+=r:(n.length>0&&i.push({literal:/^\s+$/.test(n),val:n}),n=r,t=r)}return n.length>0&&i.push({literal:a||/^\s+$/.test(n),val:n}),i}static macroTokenToFormatOpts(e){return Qh[e]}constructor(e,t){this.opts=t,this.loc=e,this.systemLoc=null}formatWithSystemDefault(e,t){null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem());return this.systemLoc.dtFormatter(e,{...this.opts,...t}).format()}dtFormatter(e,t={}){return this.loc.dtFormatter(e,{...this.opts,...t})}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatInterval(e,t){return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate())}resolvedOptions(e,t){return this.dtFormatter(e,t).resolvedOptions()}num(e,t=0){if(this.opts.forceSimple)return gh(e,t);const n={...this.opts};return t>0&&(n.padTo=t),this.loc.numberFormatter(n).format(e)}formatDateTimeFromString(e,t){const n="en"===this.loc.listingMode(),a=this.loc.outputCalendar&&"gregory"!==this.loc.outputCalendar,i=(t,n)=>this.loc.extract(e,t,n),o=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",r=()=>n?function(e){return Bh[e.hour<12?0:1]}(e):i({hour:"numeric",hourCycle:"h12"},"dayperiod"),s=(t,a)=>n?function(e,t){return Uh(t)[e.month-1]}(e,t):i(a?{month:t}:{month:t,day:"numeric"},"month"),l=(t,a)=>n?function(e,t){return Gh(t)[e.weekday-1]}(e,t):i(a?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday"),c=t=>{const n=Zh.macroTokenToFormatOpts(t);return n?this.formatWithSystemDefault(e,n):t},d=t=>n?function(e,t){return Wh(t)[e.year<0?0:1]}(e,t):i({era:t},"era");return Hh(Zh.parseFormat(t),(t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return o({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return o({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return o({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this.loc.locale});case"z":return e.zoneName;case"a":return r();case"d":return a?i({day:"numeric"},"day"):this.num(e.day);case"dd":return a?i({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return l("short",!0);case"cccc":return l("long",!0);case"ccccc":return l("narrow",!0);case"EEE":return l("short",!1);case"EEEE":return l("long",!1);case"EEEEE":return l("narrow",!1);case"L":return a?i({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return a?i({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return s("short",!0);case"LLLL":return s("long",!0);case"LLLLL":return s("narrow",!0);case"M":return a?i({month:"numeric"},"month"):this.num(e.month);case"MM":return a?i({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return s("short",!1);case"MMMM":return s("long",!1);case"MMMMM":return s("narrow",!1);case"y":return a?i({year:"numeric"},"year"):this.num(e.year);case"yy":return a?i({year:"2-digit"},"year"):this.num(e.year.toString().slice(-2),2);case"yyyy":return a?i({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return a?i({year:"numeric"},"year"):this.num(e.year,6);case"G":return d("short");case"GG":return d("long");case"GGGGG":return d("narrow");case"kk":return this.num(e.weekYear.toString().slice(-2),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"n":return this.num(e.localWeekNumber);case"nn":return this.num(e.localWeekNumber,2);case"ii":return this.num(e.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(e.localWeekYear,4);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return c(t)}}))}formatDurationFromString(e,t){const n=e=>{switch(e[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null}},a=Zh.parseFormat(t),i=a.reduce(((e,{literal:t,val:n})=>t?e:e.concat(n)),[]),o=e.shiftTo(...i.map(n).filter((e=>e)));return Hh(a,(e=>t=>{const a=n(t);return a?this.num(e.get(a),t.length):t})(o))}}const Xh=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function ef(...e){const t=e.reduce(((e,t)=>e+t.source),"");return RegExp(`^${t}$`)}function tf(...e){return t=>e.reduce((([e,n,a],i)=>{const[o,r,s]=i(t,a);return[{...e,...o},r||n,s]}),[{},null,1]).slice(0,2)}function nf(e,...t){if(null==e)return[null,null];for(const[n,a]of t){const t=n.exec(e);if(t)return a(t)}return[null,null]}function af(...e){return(t,n)=>{const a={};let i;for(i=0;i<e.length;i++)a[e[i]]=_h(t[n+i]);return[a,null,n+i]}}const of=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,rf=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,sf=RegExp(`${rf.source}${`(?:${of.source}?(?:\\[(${Xh.source})\\])?)?`}`),lf=RegExp(`(?:T${sf.source})?`),cf=af("weekYear","weekNumber","weekDay"),df=af("year","ordinal"),uf=RegExp(`${rf.source} ?(?:${of.source}|(${Xh.source}))?`),pf=RegExp(`(?: ${uf.source})?`);function mf(e,t,n){const a=e[t];return dh(a)?n:_h(a)}function hf(e,t){return[{hours:mf(e,t,0),minutes:mf(e,t+1,0),seconds:mf(e,t+2,0),milliseconds:kh(e[t+3])},null,t+4]}function ff(e,t){const n=!e[t]&&!e[t+1],a=Ah(e[t+1],e[t+2]);return[{},n?null:Am.instance(a),t+3]}function yf(e,t){return[{},e[t]?vm.create(e[t]):null,t+1]}const vf=RegExp(`^T?${rf.source}$`),bf=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function gf(e){const[t,n,a,i,o,r,s,l,c]=e,d="-"===t[0],u=l&&"-"===l[0],p=(e,t=!1)=>void 0!==e&&(t||e&&d)?-e:e;return[{years:p(xh(n)),months:p(xh(a)),weeks:p(xh(i)),days:p(xh(o)),hours:p(xh(r)),minutes:p(xh(s)),seconds:p(xh(l),"-0"===l),milliseconds:p(kh(c),u)}]}const _f={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function xf(e,t,n,a,i,o,r){const s={year:2===t.length?jh(_h(t)):_h(t),month:Lh.indexOf(n)+1,day:_h(a),hour:_h(i),minute:_h(o)};return r&&(s.second=_h(r)),e&&(s.weekday=e.length>3?qh.indexOf(e)+1:Jh.indexOf(e)+1),s}const kf=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function wf(e){const[,t,n,a,i,o,r,s,l,c,d,u]=e,p=xf(t,i,a,n,o,r,s);let m;return m=l?_f[l]:c?0:Ah(d,u),[p,new Am(m)]}const Ef=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,Sf=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Kf=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function Rf(e){const[,t,n,a,i,o,r,s]=e;return[xf(t,i,a,n,o,r,s),Am.utcInstance]}function If(e){const[,t,n,a,i,o,r,s]=e;return[xf(t,s,n,a,i,o,r),Am.utcInstance]}const Tf=ef(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,lf),jf=ef(/(\d{4})-?W(\d\d)(?:-?(\d))?/,lf),Of=ef(/(\d{4})-?(\d{3})/,lf),Af=ef(sf),Cf=tf((function(e,t){return[{year:mf(e,t),month:mf(e,t+1,1),day:mf(e,t+2,1)},null,t+3]}),hf,ff,yf),Pf=tf(cf,hf,ff,yf),Nf=tf(df,hf,ff,yf),Df=tf(hf,ff,yf);const Mf=tf(hf);const Lf=ef(/(\d{4})-(\d\d)-(\d\d)/,pf),Ff=ef(uf),Uf=tf(hf,ff,yf);const qf="Invalid Duration",Jf={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},Vf={years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6},...Jf},Gf=365.2425,Bf=30.436875,zf={years:{quarters:4,months:12,weeks:52.1775,days:Gf,hours:8765.82,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:13.044375,days:91.310625,hours:2191.455,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:4.3481250000000005,days:Bf,hours:730.485,minutes:43829.1,seconds:2629746,milliseconds:2629746e3},...Jf},Yf=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],$f=Yf.slice(0).reverse();function Wf(e,t,n=!1){const a={values:n?t.values:{...e.values,...t.values||{}},loc:e.loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix};return new Zf(a)}function Hf(e,t){var n;let a=null!=(n=t.milliseconds)?n:0;for(const n of $f.slice(1))t[n]&&(a+=t[n]*e[n].milliseconds);return a}function Qf(e,t){const n=Hf(e,t)<0?-1:1;Yf.reduceRight(((a,i)=>{if(dh(t[i]))return a;if(a){const o=t[a]*n,r=e[i][a],s=Math.floor(o/r);t[i]+=s*n,t[a]-=s*r*n}return i}),null),Yf.reduce(((n,a)=>{if(dh(t[a]))return n;if(n){const i=t[n]%1;t[n]-=i,t[a]+=i*e[n][a]}return a}),null)}class Zf{constructor(e){const t="longterm"===e.conversionAccuracy||!1;let n=t?zf:Vf;e.matrix&&(n=e.matrix),this.values=e.values,this.loc=e.loc||jm.create(),this.conversionAccuracy=t?"longterm":"casual",this.invalid=e.invalid||null,this.matrix=n,this.isLuxonDuration=!0}static fromMillis(e,t){return Zf.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new Lp("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new Zf({values:Ph(e,Zf.normalizeUnit),loc:jm.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static fromDurationLike(e){if(uh(e))return Zf.fromMillis(e);if(Zf.isDuration(e))return e;if("object"==typeof e)return Zf.fromObject(e);throw new Lp(`Unknown duration argument ${e} of type ${typeof e}`)}static fromISO(e,t){const[n]=function(e){return nf(e,[bf,gf])}(e);return n?Zf.fromObject(n,t):Zf.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t){const[n]=function(e){return nf(e,[vf,Mf])}(e);return n?Zf.fromObject(n,t):Zf.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t=null){if(!e)throw new Lp("need to specify a reason the Duration is invalid");const n=e instanceof Wm?e:new Wm(e,t);if($m.throwOnInvalid)throw new Np(n);return new Zf({invalid:n})}static normalizeUnit(e){const t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e?e.toLowerCase():e];if(!t)throw new Mp(e);return t}static isDuration(e){return e&&e.isLuxonDuration||!1}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}toFormat(e,t={}){const n={...t,floor:!1!==t.round&&!1!==t.floor};return this.isValid?Zh.create(this.loc,n).formatDurationFromString(this,e):qf}toHuman(e={}){if(!this.isValid)return qf;const t=Yf.map((t=>{const n=this.values[t];return dh(n)?null:this.loc.numberFormatter({style:"unit",unitDisplay:"long",...e,unit:t.slice(0,-1)}).format(n)})).filter((e=>e));return this.loc.listFormatter({type:"conjunction",style:e.listStyle||"narrow",...e}).format(t)}toObject(){return this.isValid?{...this.values}:{}}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=wh(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){if(!this.isValid)return null;const t=this.toMillis();if(t<0||t>=864e5)return null;e={suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended",...e,includeOffset:!1};return Gy.fromMillis(t,{zone:"UTC"}).toISOTime(e)}toJSON(){return this.toISO()}toString(){return this.toISO()}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this.values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}toMillis(){return this.isValid?Hf(this.matrix,this.values):NaN}valueOf(){return this.toMillis()}plus(e){if(!this.isValid)return this;const t=Zf.fromDurationLike(e),n={};for(const e of Yf)(yh(t.values,e)||yh(this.values,e))&&(n[e]=t.get(e)+this.get(e));return Wf(this,{values:n},!0)}minus(e){if(!this.isValid)return this;const t=Zf.fromDurationLike(e);return this.plus(t.negate())}mapUnits(e){if(!this.isValid)return this;const t={};for(const n of Object.keys(this.values))t[n]=Ch(e(this.values[n],n));return Wf(this,{values:t},!0)}get(e){return this[Zf.normalizeUnit(e)]}set(e){if(!this.isValid)return this;return Wf(this,{values:{...this.values,...Ph(e,Zf.normalizeUnit)}})}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:n,matrix:a}={}){return Wf(this,{loc:this.loc.clone({locale:e,numberingSystem:t}),matrix:a,conversionAccuracy:n})}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;const e=this.toObject();return Qf(this.matrix,e),Wf(this,{values:e},!0)}rescale(){if(!this.isValid)return this;return Wf(this,{values:function(e){const t={};for(const[n,a]of Object.entries(e))0!==a&&(t[n]=a);return t}(this.normalize().shiftToAll().toObject())},!0)}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map((e=>Zf.normalizeUnit(e)));const t={},n={},a=this.toObject();let i;for(const o of Yf)if(e.indexOf(o)>=0){i=o;let e=0;for(const t in n)e+=this.matrix[t][o]*n[t],n[t]=0;uh(a[o])&&(e+=a[o]);const r=Math.trunc(e);t[o]=r,n[o]=(1e3*e-1e3*r)/1e3}else uh(a[o])&&(n[o]=a[o]);for(const e in n)0!==n[e]&&(t[i]+=e===i?n[e]:n[e]/this.matrix[i][e]);return Qf(this.matrix,t),Wf(this,{values:t},!0)}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}negate(){if(!this.isValid)return this;const e={};for(const t of Object.keys(this.values))e[t]=0===this.values[t]?0:-this.values[t];return Wf(this,{values:e},!0)}get years(){return this.isValid?this.values.years||0:NaN}get quarters(){return this.isValid?this.values.quarters||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;for(const a of Yf)if(t=this.values[a],n=e.values[a],!(void 0===t||0===t?void 0===n||0===n:t===n))return!1;var t,n;return!0}}const Xf="Invalid Interval";class ey{constructor(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}static invalid(e,t=null){if(!e)throw new Lp("need to specify a reason the Interval is invalid");const n=e instanceof Wm?e:new Wm(e,t);if($m.throwOnInvalid)throw new Pp(n);return new ey({invalid:n})}static fromDateTimes(e,t){const n=By(e),a=By(t),i=function(e,t){return e&&e.isValid?t&&t.isValid?t<e?ey.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`):null:ey.invalid("missing or invalid end"):ey.invalid("missing or invalid start")}(n,a);return null==i?new ey({start:n,end:a}):i}static after(e,t){const n=Zf.fromDurationLike(t),a=By(e);return ey.fromDateTimes(a,a.plus(n))}static before(e,t){const n=Zf.fromDurationLike(t),a=By(e);return ey.fromDateTimes(a.minus(n),a)}static fromISO(e,t){const[n,a]=(e||"").split("/",2);if(n&&a){let e,i,o,r;try{e=Gy.fromISO(n,t),i=e.isValid}catch(a){i=!1}try{o=Gy.fromISO(a,t),r=o.isValid}catch(a){r=!1}if(i&&r)return ey.fromDateTimes(e,o);if(i){const n=Zf.fromISO(a,t);if(n.isValid)return ey.after(e,n)}else if(r){const e=Zf.fromISO(n,t);if(e.isValid)return ey.before(o,e)}}return ey.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static isInterval(e){return e&&e.isLuxonInterval||!1}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}length(e="milliseconds"){return this.isValid?this.toDuration(e).get(e):NaN}count(e="milliseconds",t){if(!this.isValid)return NaN;const n=this.start.startOf(e,t);let a;return a=null!=t&&t.useLocaleWeeks?this.end.reconfigure({locale:n.locale}):this.end,a=a.startOf(e,t),Math.floor(a.diff(n,e).get(e))+(a.valueOf()!==this.end.valueOf())}hasSame(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e<=e}contains(e){return!!this.isValid&&(this.s<=e&&this.e>e)}set({start:e,end:t}={}){return this.isValid?ey.fromDateTimes(e||this.s,t||this.e):this}splitAt(...e){if(!this.isValid)return[];const t=e.map(By).filter((e=>this.contains(e))).sort(((e,t)=>e.toMillis()-t.toMillis())),n=[];let{s:a}=this,i=0;for(;a<this.e;){const e=t[i]||this.e,o=+e>+this.e?this.e:e;n.push(ey.fromDateTimes(a,o)),a=o,i+=1}return n}splitBy(e){const t=Zf.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let n,{s:a}=this,i=1;const o=[];for(;a<this.e;){const e=this.start.plus(t.mapUnits((e=>e*i)));n=+e>+this.e?this.e:e,o.push(ey.fromDateTimes(a,n)),a=n,i+=1}return o}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e==+e.s}abutsEnd(e){return!!this.isValid&&+e.e==+this.s}engulfs(e){return!!this.isValid&&(this.s<=e.s&&this.e>=e.e)}equals(e){return!(!this.isValid||!e.isValid)&&(this.s.equals(e.s)&&this.e.equals(e.e))}intersection(e){if(!this.isValid)return this;const t=this.s>e.s?this.s:e.s,n=this.e<e.e?this.e:e.e;return t>=n?null:ey.fromDateTimes(t,n)}union(e){if(!this.isValid)return this;const t=this.s<e.s?this.s:e.s,n=this.e>e.e?this.e:e.e;return ey.fromDateTimes(t,n)}static merge(e){const[t,n]=e.sort(((e,t)=>e.s-t.s)).reduce((([e,t],n)=>t?t.overlaps(n)||t.abutsStart(n)?[e,t.union(n)]:[e.concat([t]),n]:[e,n]),[[],null]);return n&&t.push(n),t}static xor(e){let t=null,n=0;const a=[],i=e.map((e=>[{time:e.s,type:"s"},{time:e.e,type:"e"}])),o=Array.prototype.concat(...i).sort(((e,t)=>e.time-t.time));for(const e of o)n+="s"===e.type?1:-1,1===n?t=e.time:(t&&+t!=+e.time&&a.push(ey.fromDateTimes(t,e.time)),t=null);return ey.merge(a)}difference(...e){return ey.xor([this].concat(e)).map((e=>this.intersection(e))).filter((e=>e&&!e.isEmpty()))}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:Xf}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}toLocaleString(e=Vp,t={}){return this.isValid?Zh.create(this.s.loc.clone(t),e).formatInterval(this):Xf}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:Xf}toISODate(){return this.isValid?`${this.s.toISODate()}/${this.e.toISODate()}`:Xf}toISOTime(e){return this.isValid?`${this.s.toISOTime(e)}/${this.e.toISOTime(e)}`:Xf}toFormat(e,{separator:t=" – "}={}){return this.isValid?`${this.s.toFormat(e)}${t}${this.e.toFormat(e)}`:Xf}toDuration(e,t){return this.isValid?this.e.diff(this.s,e,t):Zf.invalid(this.invalidReason)}mapEndpoints(e){return ey.fromDateTimes(e(this.s),e(this.e))}}class ty{static hasDST(e=$m.defaultZone){const t=Gy.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return vm.isValidZone(e)}static normalizeZone(e){return Pm(e,$m.defaultZone)}static getStartOfWeek({locale:e=null,locObj:t=null}={}){return(t||jm.create(e)).getStartOfWeek()}static getMinimumDaysInFirstWeek({locale:e=null,locObj:t=null}={}){return(t||jm.create(e)).getMinDaysInFirstWeek()}static getWeekendWeekdays({locale:e=null,locObj:t=null}={}){return(t||jm.create(e)).getWeekendDays().slice()}static months(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:i="gregory"}={}){return(a||jm.create(t,n,i)).months(e)}static monthsFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:i="gregory"}={}){return(a||jm.create(t,n,i)).months(e,!0)}static weekdays(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||jm.create(t,n,null)).weekdays(e)}static weekdaysFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||jm.create(t,n,null)).weekdays(e,!0)}static meridiems({locale:e=null}={}){return jm.create(e).meridiems()}static eras(e="short",{locale:t=null}={}){return jm.create(t,null,"gregory").eras(e)}static features(){return{relative:mh(),localeWeek:hh()}}}function ny(e,t){const n=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf(),a=n(t)-n(e);return Math.floor(Zf.fromMillis(a).as("days"))}function ay(e,t,n,a){let[i,o,r,s]=function(e,t,n){const a=[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>{const n=ny(e,t);return(n-n%7)/7}],["days",ny]],i={},o=e;let r,s;for(const[l,c]of a)n.indexOf(l)>=0&&(r=l,i[l]=c(e,t),s=o.plus(i),s>t?(i[l]--,(e=o.plus(i))>t&&(s=e,i[l]--,e=o.plus(i))):e=s);return[e,i,s,r]}(e,t,n);const l=t-i,c=n.filter((e=>["hours","minutes","seconds","milliseconds"].indexOf(e)>=0));0===c.length&&(r<t&&(r=i.plus({[s]:1})),r!==i&&(o[s]=(o[s]||0)+l/(r-i)));const d=Zf.fromObject(o,a);return c.length>0?Zf.fromMillis(l,a).shiftTo(...c).plus(d):d}function iy(e,t=(e=>e)){return{regex:e,deser:([e])=>t(function(e){let t=parseInt(e,10);if(isNaN(t)){t="";for(let n=0;n<e.length;n++){const a=e.charCodeAt(n);if(-1!==e[n].search(Nm.hanidec))t+=Mm.indexOf(e[n]);else for(const e in Dm){const[n,i]=Dm[e];a>=n&&a<=i&&(t+=a-n)}}return parseInt(t,10)}return t}(e))}}const oy=`[ ${String.fromCharCode(160)}]`,ry=new RegExp(oy,"g");function sy(e){return e.replace(/\./g,"\\.?").replace(ry,oy)}function ly(e){return e.replace(/\./g,"").replace(ry," ").toLowerCase()}function cy(e,t){return null===e?null:{regex:RegExp(e.map(sy).join("|")),deser:([n])=>e.findIndex((e=>ly(n)===ly(e)))+t}}function dy(e,t){return{regex:e,deser:([,e,t])=>Ah(e,t),groups:t}}function uy(e){return{regex:e,deser:([e])=>e}}const py={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let my=null;function hy(e,t){return Array.prototype.concat(...e.map((e=>function(e,t){if(e.literal)return e;const n=vy(Zh.macroTokenToFormatOpts(e.val),t);return null==n||n.includes(void 0)?e:n}(e,t))))}class fy{constructor(e,t){if(this.locale=e,this.format=t,this.tokens=hy(Zh.parseFormat(t),e),this.units=this.tokens.map((t=>function(e,t){const n=Fm(t),a=Fm(t,"{2}"),i=Fm(t,"{3}"),o=Fm(t,"{4}"),r=Fm(t,"{6}"),s=Fm(t,"{1,2}"),l=Fm(t,"{1,3}"),c=Fm(t,"{1,6}"),d=Fm(t,"{1,9}"),u=Fm(t,"{2,4}"),p=Fm(t,"{4,6}"),m=e=>{return{regex:RegExp((t=e.val,t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:([e])=>e,literal:!0};var t},h=(h=>{if(e.literal)return m(h);switch(h.val){case"G":return cy(t.eras("short"),0);case"GG":return cy(t.eras("long"),0);case"y":return iy(c);case"yy":case"kk":return iy(u,jh);case"yyyy":case"kkkk":return iy(o);case"yyyyy":return iy(p);case"yyyyyy":return iy(r);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return iy(s);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return iy(a);case"MMM":return cy(t.months("short",!0),1);case"MMMM":return cy(t.months("long",!0),1);case"LLL":return cy(t.months("short",!1),1);case"LLLL":return cy(t.months("long",!1),1);case"o":case"S":return iy(l);case"ooo":case"SSS":return iy(i);case"u":return uy(d);case"uu":return uy(s);case"uuu":case"E":case"c":return iy(n);case"a":return cy(t.meridiems(),0);case"EEE":return cy(t.weekdays("short",!1),1);case"EEEE":return cy(t.weekdays("long",!1),1);case"ccc":return cy(t.weekdays("short",!0),1);case"cccc":return cy(t.weekdays("long",!0),1);case"Z":case"ZZ":return dy(new RegExp(`([+-]${s.source})(?::(${a.source}))?`),2);case"ZZZ":return dy(new RegExp(`([+-]${s.source})(${a.source})?`),2);case"z":return uy(/[a-z_+-/]{1,256}?/i);case" ":return uy(/[^\S\n\r]/);default:return m(h)}})(e)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"};return h.token=e,h}(t,e))),this.disqualifyingUnit=this.units.find((e=>e.invalidReason)),!this.disqualifyingUnit){const[e,t]=[`^${(n=this.units).map((e=>e.regex)).reduce(((e,t)=>`${e}(${t.source})`),"")}$`,n];this.regex=RegExp(e,"i"),this.handlers=t}var n}explainFromTokens(e){if(this.isValid){const[t,n]=function(e,t,n){const a=e.match(t);if(a){const e={};let t=1;for(const i in n)if(yh(n,i)){const o=n[i],r=o.groups?o.groups+1:1;!o.literal&&o.token&&(e[o.token.val[0]]=o.deser(a.slice(t,t+r))),t+=r}return[a,e]}return[a,{}]}(e,this.regex,this.handlers),[a,i,o]=n?function(e){let t,n=null;return dh(e.z)||(n=vm.create(e.z)),dh(e.Z)||(n||(n=new Am(e.Z)),t=e.Z),dh(e.q)||(e.M=3*(e.q-1)+1),dh(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),dh(e.u)||(e.S=kh(e.u)),[Object.keys(e).reduce(((t,n)=>{const a=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(n);return a&&(t[a]=e[n]),t}),{}),n,t]}(n):[null,null,void 0];if(yh(n,"a")&&yh(n,"H"))throw new Dp("Can't include meridiem when specifying 24-hour format");return{input:e,tokens:this.tokens,regex:this.regex,rawMatches:t,matches:n,result:a,zone:i,specificOffset:o}}return{input:e,tokens:this.tokens,invalidReason:this.invalidReason}}get isValid(){return!this.disqualifyingUnit}get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null}}function yy(e,t,n){return new fy(e,n).explainFromTokens(t)}function vy(e,t){if(!e)return null;const n=Zh.create(t,e).dtFormatter((my||(my=Gy.fromMillis(1555555555555)),my)),a=n.formatToParts(),i=n.resolvedOptions();return a.map((t=>function(e,t,n){const{type:a,value:i}=e;if("literal"===a){const e=/^\s+$/.test(i);return{literal:!e,val:e?" ":i}}const o=t[a];let r=a;"hour"===a&&(r=null!=t.hour12?t.hour12?"hour12":"hour24":null!=t.hourCycle?"h11"===t.hourCycle||"h12"===t.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24");let s=py[r];if("object"==typeof s&&(s=s[o]),s)return{literal:!1,val:s}}(t,e,i)))}const by="Invalid DateTime",gy=864e13;function _y(e){return new Wm("unsupported zone",`the zone "${e.name}" is not supported`)}function xy(e){return null===e.weekData&&(e.weekData=ah(e.c)),e.weekData}function ky(e){return null===e.localWeekData&&(e.localWeekData=ah(e.c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e.localWeekData}function wy(e,t){const n={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new Gy({...n,...t,old:n})}function Ey(e,t,n){let a=e-60*t*1e3;const i=n.offset(a);if(t===i)return[a,t];a-=60*(i-t)*1e3;const o=n.offset(a);return i===o?[a,i]:[e-60*Math.min(i,o)*1e3,Math.max(i,o)]}function Sy(e,t){const n=new Date(e+=60*t*1e3);return{year:n.getUTCFullYear(),month:n.getUTCMonth()+1,day:n.getUTCDate(),hour:n.getUTCHours(),minute:n.getUTCMinutes(),second:n.getUTCSeconds(),millisecond:n.getUTCMilliseconds()}}function Ky(e,t,n){return Ey(Rh(e),t,n)}function Ry(e,t){const n=e.o,a=e.c.year+Math.trunc(t.years),i=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),o={...e.c,year:a,month:i,day:Math.min(e.c.day,Kh(a,i))+Math.trunc(t.days)+7*Math.trunc(t.weeks)},r=Zf.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as("milliseconds"),s=Rh(o);let[l,c]=Ey(s,n,e.zone);return 0!==r&&(l+=r,c=e.zone.offset(l)),{ts:l,o:c}}function Iy(e,t,n,a,i,o){const{setZone:r,zone:s}=n;if(e&&0!==Object.keys(e).length||t){const a=t||s,i=Gy.fromObject(e,{...n,zone:a,specificOffset:o});return r?i:i.setZone(s)}return Gy.invalid(new Wm("unparsable",`the input "${i}" can't be parsed as ${a}`))}function Ty(e,t,n=!0){return e.isValid?Zh.create(jm.create("en-US"),{allowZ:n,forceSimple:!0}).formatDateTimeFromString(e,t):null}function jy(e,t){const n=e.c.year>9999||e.c.year<0;let a="";return n&&e.c.year>=0&&(a+="+"),a+=gh(e.c.year,n?6:4),t?(a+="-",a+=gh(e.c.month),a+="-",a+=gh(e.c.day)):(a+=gh(e.c.month),a+=gh(e.c.day)),a}function Oy(e,t,n,a,i,o){let r=gh(e.c.hour);return t?(r+=":",r+=gh(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(r+=":")):r+=gh(e.c.minute),0===e.c.millisecond&&0===e.c.second&&n||(r+=gh(e.c.second),0===e.c.millisecond&&a||(r+=".",r+=gh(e.c.millisecond,3))),i&&(e.isOffsetFixed&&0===e.offset&&!o?r+="Z":e.o<0?(r+="-",r+=gh(Math.trunc(-e.o/60)),r+=":",r+=gh(Math.trunc(-e.o%60))):(r+="+",r+=gh(Math.trunc(e.o/60)),r+=":",r+=gh(Math.trunc(e.o%60)))),o&&(r+="["+e.zone.ianaName+"]"),r}const Ay={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},Cy={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},Py={ordinal:1,hour:0,minute:0,second:0,millisecond:0},Ny=["year","month","day","hour","minute","second","millisecond"],Dy=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],My=["year","ordinal","hour","minute","second","millisecond"];function Ly(e){switch(e.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return function(e){const t={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(!t)throw new Mp(e);return t}(e)}}function Fy(e,t){const n=Pm(t.zone,$m.defaultZone);if(!n.isValid)return Gy.invalid(_y(n));const a=jm.fromObject(t);let i,o;if(dh(e.year))i=$m.now();else{for(const t of Ny)dh(e[t])&&(e[t]=Ay[t]);const t=lh(e)||ch(e);if(t)return Gy.invalid(t);const a=function(e){return Vy[e]||(void 0===Jy&&(Jy=$m.now()),Vy[e]=e.offset(Jy)),Vy[e]}(n);[i,o]=Ky(e,a,n)}return new Gy({ts:i,zone:n,loc:a,o:o})}function Uy(e,t,n){const a=!!dh(n.round)||n.round,i=(e,i)=>{e=wh(e,a||n.calendary?0:2,!0);return t.loc.clone(n).relFormatter(n).format(e,i)},o=a=>n.calendary?t.hasSame(e,a)?0:t.startOf(a).diff(e.startOf(a),a).get(a):t.diff(e,a).get(a);if(n.unit)return i(o(n.unit),n.unit);for(const e of n.units){const t=o(e);if(Math.abs(t)>=1)return i(t,e)}return i(e>t?-0:0,n.units[n.units.length-1])}function qy(e){let t,n={};return e.length>0&&"object"==typeof e[e.length-1]?(n=e[e.length-1],t=Array.from(e).slice(0,e.length-1)):t=Array.from(e),[n,t]}let Jy,Vy={};class Gy{constructor(e){const t=e.zone||$m.defaultZone;let n=e.invalid||(Number.isNaN(e.ts)?new Wm("invalid input"):null)||(t.isValid?null:_y(t));this.ts=dh(e.ts)?$m.now():e.ts;let a=null,i=null;if(!n){if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t))[a,i]=[e.old.c,e.old.o];else{const o=uh(e.o)&&!e.old?e.o:t.offset(this.ts);a=Sy(this.ts,o),n=Number.isNaN(a.year)?new Wm("invalid input"):null,a=n?null:a,i=n?null:o}}this._zone=t,this.loc=e.loc||jm.create(),this.invalid=n,this.weekData=null,this.localWeekData=null,this.c=a,this.o=i,this.isLuxonDateTime=!0}static now(){return new Gy({})}static local(){const[e,t]=qy(arguments),[n,a,i,o,r,s,l]=t;return Fy({year:n,month:a,day:i,hour:o,minute:r,second:s,millisecond:l},e)}static utc(){const[e,t]=qy(arguments),[n,a,i,o,r,s,l]=t;return e.zone=Am.utcInstance,Fy({year:n,month:a,day:i,hour:o,minute:r,second:s,millisecond:l},e)}static fromJSDate(e,t={}){const n=(a=e,"[object Date]"===Object.prototype.toString.call(a)?e.valueOf():NaN);var a;if(Number.isNaN(n))return Gy.invalid("invalid input");const i=Pm(t.zone,$m.defaultZone);return i.isValid?new Gy({ts:n,zone:i,loc:jm.fromObject(t)}):Gy.invalid(_y(i))}static fromMillis(e,t={}){if(uh(e))return e<-gy||e>gy?Gy.invalid("Timestamp out of range"):new Gy({ts:e,zone:Pm(t.zone,$m.defaultZone),loc:jm.fromObject(t)});throw new Lp(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(uh(e))return new Gy({ts:1e3*e,zone:Pm(t.zone,$m.defaultZone),loc:jm.fromObject(t)});throw new Lp("fromSeconds requires a numerical input")}static fromObject(e,t={}){e=e||{};const n=Pm(t.zone,$m.defaultZone);if(!n.isValid)return Gy.invalid(_y(n));const a=jm.fromObject(t),i=Ph(e,Ly),{minDaysInFirstWeek:o,startOfWeek:r}=sh(i,a),s=$m.now(),l=dh(t.specificOffset)?n.offset(s):t.specificOffset,c=!dh(i.ordinal),d=!dh(i.year),u=!dh(i.month)||!dh(i.day),p=d||u,m=i.weekYear||i.weekNumber;if((p||c)&&m)throw new Dp("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(u&&c)throw new Dp("Can't mix ordinal dates with month/day");const h=m||i.weekday&&!p;let f,y,v=Sy(s,l);h?(f=Dy,y=Cy,v=ah(v,o,r)):c?(f=My,y=Py,v=oh(v)):(f=Ny,y=Ay);let b=!1;for(const e of f){dh(i[e])?i[e]=b?y[e]:v[e]:b=!0}const g=h?function(e,t=4,n=1){const a=ph(e.weekYear),i=bh(e.weekNumber,1,Th(e.weekYear,t,n)),o=bh(e.weekday,1,7);return a?i?!o&&Zm("weekday",e.weekday):Zm("week",e.weekNumber):Zm("weekYear",e.weekYear)}(i,o,r):c?function(e){const t=ph(e.year),n=bh(e.ordinal,1,Sh(e.year));return t?!n&&Zm("ordinal",e.ordinal):Zm("year",e.year)}(i):lh(i),_=g||ch(i);if(_)return Gy.invalid(_);const x=h?ih(i,o,r):c?rh(i):i,[k,w]=Ky(x,l,n),E=new Gy({ts:k,zone:n,o:w,loc:a});return i.weekday&&p&&e.weekday!==E.weekday?Gy.invalid("mismatched weekday",`you can't specify both a weekday of ${i.weekday} and a date of ${E.toISO()}`):E.isValid?E:Gy.invalid(E.invalid)}static fromISO(e,t={}){const[n,a]=function(e){return nf(e,[Tf,Cf],[jf,Pf],[Of,Nf],[Af,Df])}(e);return Iy(n,a,t,"ISO 8601",e)}static fromRFC2822(e,t={}){const[n,a]=function(e){return nf(function(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}(e),[kf,wf])}(e);return Iy(n,a,t,"RFC 2822",e)}static fromHTTP(e,t={}){const[n,a]=function(e){return nf(e,[Ef,Rf],[Sf,Rf],[Kf,If])}(e);return Iy(n,a,t,"HTTP",t)}static fromFormat(e,t,n={}){if(dh(e)||dh(t))throw new Lp("fromFormat requires an input string and a format");const{locale:a=null,numberingSystem:i=null}=n,o=jm.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0}),[r,s,l,c]=function(e,t,n){const{result:a,zone:i,specificOffset:o,invalidReason:r}=yy(e,t,n);return[a,i,o,r]}(o,e,t);return c?Gy.invalid(c):Iy(r,s,n,`format ${t}`,e,l)}static fromString(e,t,n={}){return Gy.fromFormat(e,t,n)}static fromSQL(e,t={}){const[n,a]=function(e){return nf(e,[Lf,Cf],[Ff,Uf])}(e);return Iy(n,a,t,"SQL",e)}static invalid(e,t=null){if(!e)throw new Lp("need to specify a reason the DateTime is invalid");const n=e instanceof Wm?e:new Wm(e,t);if($m.throwOnInvalid)throw new Cp(n);return new Gy({invalid:n})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}static parseFormatForOpts(e,t={}){const n=vy(e,jm.fromObject(t));return n?n.map((e=>e?e.val:null)).join(""):null}static expandFormat(e,t={}){return hy(Zh.parseFormat(e),jm.fromObject(t)).map((e=>e.val)).join("")}static resetCache(){Jy=void 0,Vy={}}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?xy(this).weekYear:NaN}get weekNumber(){return this.isValid?xy(this).weekNumber:NaN}get weekday(){return this.isValid?xy(this).weekday:NaN}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get localWeekday(){return this.isValid?ky(this).weekday:NaN}get localWeekNumber(){return this.isValid?ky(this).weekNumber:NaN}get localWeekYear(){return this.isValid?ky(this).weekYear:NaN}get ordinal(){return this.isValid?oh(this.c).ordinal:NaN}get monthShort(){return this.isValid?ty.months("short",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?ty.months("long",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?ty.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?ty.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed)return[this];const e=864e5,t=6e4,n=Rh(this.c),a=this.zone.offset(n-e),i=this.zone.offset(n+e),o=this.zone.offset(n-a*t),r=this.zone.offset(n-i*t);if(o===r)return[this];const s=n-o*t,l=n-r*t,c=Sy(s,o),d=Sy(l,r);return c.hour===d.hour&&c.minute===d.minute&&c.second===d.second&&c.millisecond===d.millisecond?[wy(this,{ts:s}),wy(this,{ts:l})]:[this]}get isInLeapYear(){return Eh(this.year)}get daysInMonth(){return Kh(this.year,this.month)}get daysInYear(){return this.isValid?Sh(this.year):NaN}get weeksInWeekYear(){return this.isValid?Th(this.weekYear):NaN}get weeksInLocalWeekYear(){return this.isValid?Th(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}resolvedLocaleOptions(e={}){const{locale:t,numberingSystem:n,calendar:a}=Zh.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:n,outputCalendar:a}}toUTC(e=0,t={}){return this.setZone(Am.instance(e),t)}toLocal(){return this.setZone($m.defaultZone)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:n=!1}={}){if((e=Pm(e,$m.defaultZone)).equals(this.zone))return this;if(e.isValid){let a=this.ts;if(t||n){const t=e.offset(this.ts),n=this.toObject();[a]=Ky(n,t,e)}return wy(this,{ts:a,zone:e})}return Gy.invalid(_y(e))}reconfigure({locale:e,numberingSystem:t,outputCalendar:n}={}){return wy(this,{loc:this.loc.clone({locale:e,numberingSystem:t,outputCalendar:n})})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const t=Ph(e,Ly),{minDaysInFirstWeek:n,startOfWeek:a}=sh(t,this.loc),i=!dh(t.weekYear)||!dh(t.weekNumber)||!dh(t.weekday),o=!dh(t.ordinal),r=!dh(t.year),s=!dh(t.month)||!dh(t.day),l=r||s,c=t.weekYear||t.weekNumber;if((l||o)&&c)throw new Dp("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(s&&o)throw new Dp("Can't mix ordinal dates with month/day");let d;i?d=ih({...ah(this.c,n,a),...t},n,a):dh(t.ordinal)?(d={...this.toObject(),...t},dh(t.day)&&(d.day=Math.min(Kh(d.year,d.month),d.day))):d=rh({...oh(this.c),...t});const[u,p]=Ky(d,this.o,this.zone);return wy(this,{ts:u,o:p})}plus(e){if(!this.isValid)return this;return wy(this,Ry(this,Zf.fromDurationLike(e)))}minus(e){if(!this.isValid)return this;return wy(this,Ry(this,Zf.fromDurationLike(e).negate()))}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;const n={},a=Zf.normalizeUnit(e);switch(a){case"years":n.month=1;case"quarters":case"months":n.day=1;case"weeks":case"days":n.hour=0;case"hours":n.minute=0;case"minutes":n.second=0;case"seconds":n.millisecond=0}if("weeks"===a)if(t){const e=this.loc.getStartOfWeek(),{weekday:t}=this;t<e&&(n.weekNumber=this.weekNumber-1),n.weekday=e}else n.weekday=1;if("quarters"===a){const e=Math.ceil(this.month/3);n.month=3*(e-1)+1}return this.set(n)}endOf(e,t){return this.isValid?this.plus({[e]:1}).startOf(e,t).minus(1):this}toFormat(e,t={}){return this.isValid?Zh.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):by}toLocaleString(e=Vp,t={}){return this.isValid?Zh.create(this.loc.clone(t),e).formatDateTime(this):by}toLocaleParts(e={}){return this.isValid?Zh.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:n=!1,includeOffset:a=!0,extendedZone:i=!1}={}){if(!this.isValid)return null;const o="extended"===e;let r=jy(this,o);return r+="T",r+=Oy(this,o,t,n,a,i),r}toISODate({format:e="extended"}={}){return this.isValid?jy(this,"extended"===e):null}toISOWeekDate(){return Ty(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:n=!0,includePrefix:a=!1,extendedZone:i=!1,format:o="extended"}={}){if(!this.isValid)return null;return(a?"T":"")+Oy(this,"extended"===o,t,e,n,i)}toRFC2822(){return Ty(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return Ty(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?jy(this,!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:n=!0}={}){let a="HH:mm:ss.SSS";return(t||e)&&(n&&(a+=" "),t?a+="z":e&&(a+="ZZ")),Ty(this,a,!0)}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():by}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t={...this.c};return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t="milliseconds",n={}){if(!this.isValid||!e.isValid)return Zf.invalid("created by diffing an invalid DateTime");const a={locale:this.locale,numberingSystem:this.numberingSystem,...n},i=(s=t,Array.isArray(s)?s:[s]).map(Zf.normalizeUnit),o=e.valueOf()>this.valueOf(),r=ay(o?this:e,o?e:this,i,a);var s;return o?r.negate():r}diffNow(e="milliseconds",t={}){return this.diff(Gy.now(),e,t)}until(e){return this.isValid?ey.fromDateTimes(this,e):this}hasSame(e,t,n){if(!this.isValid)return!1;const a=e.valueOf(),i=this.setZone(e.zone,{keepLocalTime:!0});return i.startOf(t,n)<=a&&a<=i.endOf(t,n)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;const t=e.base||Gy.fromObject({},{zone:this.zone}),n=e.padding?this<t?-e.padding:e.padding:0;let a=["years","months","days","hours","minutes","seconds"],i=e.unit;return Array.isArray(e.unit)&&(a=e.unit,i=void 0),Uy(t,this.plus(n),{...e,numeric:"always",units:a,unit:i})}toRelativeCalendar(e={}){return this.isValid?Uy(e.base||Gy.fromObject({},{zone:this.zone}),this,{...e,numeric:"auto",units:["years","months","days"],calendary:!0}):null}static min(...e){if(!e.every(Gy.isDateTime))throw new Lp("min requires all arguments be DateTimes");return fh(e,(e=>e.valueOf()),Math.min)}static max(...e){if(!e.every(Gy.isDateTime))throw new Lp("max requires all arguments be DateTimes");return fh(e,(e=>e.valueOf()),Math.max)}static fromFormatExplain(e,t,n={}){const{locale:a=null,numberingSystem:i=null}=n;return yy(jm.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,n={}){return Gy.fromFormatExplain(e,t,n)}static buildFormatParser(e,t={}){const{locale:n=null,numberingSystem:a=null}=t,i=jm.fromOpts({locale:n,numberingSystem:a,defaultToEN:!0});return new fy(i,e)}static fromFormatParser(e,t,n={}){if(dh(e)||dh(t))throw new Lp("fromFormatParser requires an input string and a format parser");const{locale:a=null,numberingSystem:i=null}=n,o=jm.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0});if(!o.equals(t.locale))throw new Lp(`fromFormatParser called with a locale of ${o}, but the format parser was created for ${t.locale}`);const{result:r,zone:s,specificOffset:l,invalidReason:c}=t.explainFromTokens(e);return c?Gy.invalid(c):Iy(r,s,n,`format ${t.format}`,e,l)}static get DATE_SHORT(){return Vp}static get DATE_MED(){return Gp}static get DATE_MED_WITH_WEEKDAY(){return Bp}static get DATE_FULL(){return zp}static get DATE_HUGE(){return Yp}static get TIME_SIMPLE(){return $p}static get TIME_WITH_SECONDS(){return Wp}static get TIME_WITH_SHORT_OFFSET(){return Hp}static get TIME_WITH_LONG_OFFSET(){return Qp}static get TIME_24_SIMPLE(){return Zp}static get TIME_24_WITH_SECONDS(){return Xp}static get TIME_24_WITH_SHORT_OFFSET(){return em}static get TIME_24_WITH_LONG_OFFSET(){return tm}static get DATETIME_SHORT(){return nm}static get DATETIME_SHORT_WITH_SECONDS(){return am}static get DATETIME_MED(){return im}static get DATETIME_MED_WITH_SECONDS(){return om}static get DATETIME_MED_WITH_WEEKDAY(){return rm}static get DATETIME_FULL(){return sm}static get DATETIME_FULL_WITH_SECONDS(){return lm}static get DATETIME_HUGE(){return cm}static get DATETIME_HUGE_WITH_SECONDS(){return dm}}function By(e){if(Gy.isDateTime(e))return e;if(e&&e.valueOf&&uh(e.valueOf()))return Gy.fromJSDate(e);if(e&&"object"==typeof e)return Gy.fromObject(e);throw new Lp(`Unknown datetime argument: ${e}, of type ${typeof e}`)}Op.DateTime=Gy,Op.Duration=Zf,Op.FixedOffsetZone=Am,Op.IANAZone=vm,Op.Info=ty,Op.Interval=ey,Op.InvalidZone=Cm,Op.Settings=$m,Op.SystemZone=mm,Op.VERSION="3.5.0",Op.Zone=um;var zy=Op;function Yy(e,t){var n={zone:t};if(e?e instanceof Yy?this._date=e._date:e instanceof Date?this._date=zy.DateTime.fromJSDate(e,n):"number"==typeof e?this._date=zy.DateTime.fromMillis(e,n):"string"==typeof e&&(this._date=zy.DateTime.fromISO(e,n),this._date.isValid||(this._date=zy.DateTime.fromRFC2822(e,n)),this._date.isValid||(this._date=zy.DateTime.fromSQL(e,n)),this._date.isValid||(this._date=zy.DateTime.fromFormat(e,"EEE, d MMM yyyy HH:mm:ss",n))):this._date=zy.DateTime.local(),!this._date||!this._date.isValid)throw new Error("CronDate: unhandled timestamp: "+JSON.stringify(e));t&&t!==this._date.zoneName&&(this._date=this._date.setZone(t))}function $y(e){return{start:e,count:1}}function Wy(e,t){e.end=t,e.step=t-e.start,e.count=2}function Hy(e,t,n){t&&(2===t.count?(e.push($y(t.start)),e.push($y(t.end))):e.push(t)),n&&e.push(n)}Yy.prototype.addYear=function(){this._date=this._date.plus({years:1})},Yy.prototype.addMonth=function(){this._date=this._date.plus({months:1}).startOf("month")},Yy.prototype.addDay=function(){this._date=this._date.plus({days:1}).startOf("day")},Yy.prototype.addHour=function(){var e=this._date;this._date=this._date.plus({hours:1}).startOf("hour"),this._date<=e&&(this._date=this._date.plus({hours:1}))},Yy.prototype.addMinute=function(){var e=this._date;this._date=this._date.plus({minutes:1}).startOf("minute"),this._date<e&&(this._date=this._date.plus({hours:1}))},Yy.prototype.addSecond=function(){var e=this._date;this._date=this._date.plus({seconds:1}).startOf("second"),this._date<e&&(this._date=this._date.plus({hours:1}))},Yy.prototype.subtractYear=function(){this._date=this._date.minus({years:1})},Yy.prototype.subtractMonth=function(){this._date=this._date.minus({months:1}).endOf("month").startOf("second")},Yy.prototype.subtractDay=function(){this._date=this._date.minus({days:1}).endOf("day").startOf("second")},Yy.prototype.subtractHour=function(){var e=this._date;this._date=this._date.minus({hours:1}).endOf("hour").startOf("second"),this._date>=e&&(this._date=this._date.minus({hours:1}))},Yy.prototype.subtractMinute=function(){var e=this._date;this._date=this._date.minus({minutes:1}).endOf("minute").startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},Yy.prototype.subtractSecond=function(){var e=this._date;this._date=this._date.minus({seconds:1}).startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},Yy.prototype.getDate=function(){return this._date.day},Yy.prototype.getFullYear=function(){return this._date.year},Yy.prototype.getDay=function(){var e=this._date.weekday;return 7==e?0:e},Yy.prototype.getMonth=function(){return this._date.month-1},Yy.prototype.getHours=function(){return this._date.hour},Yy.prototype.getMinutes=function(){return this._date.minute},Yy.prototype.getSeconds=function(){return this._date.second},Yy.prototype.getMilliseconds=function(){return this._date.millisecond},Yy.prototype.getTime=function(){return this._date.valueOf()},Yy.prototype.getUTCDate=function(){return this._getUTC().day},Yy.prototype.getUTCFullYear=function(){return this._getUTC().year},Yy.prototype.getUTCDay=function(){var e=this._getUTC().weekday;return 7==e?0:e},Yy.prototype.getUTCMonth=function(){return this._getUTC().month-1},Yy.prototype.getUTCHours=function(){return this._getUTC().hour},Yy.prototype.getUTCMinutes=function(){return this._getUTC().minute},Yy.prototype.getUTCSeconds=function(){return this._getUTC().second},Yy.prototype.toISOString=function(){return this._date.toUTC().toISO()},Yy.prototype.toJSON=function(){return this._date.toJSON()},Yy.prototype.setDate=function(e){this._date=this._date.set({day:e})},Yy.prototype.setFullYear=function(e){this._date=this._date.set({year:e})},Yy.prototype.setDay=function(e){this._date=this._date.set({weekday:e})},Yy.prototype.setMonth=function(e){this._date=this._date.set({month:e+1})},Yy.prototype.setHours=function(e){this._date=this._date.set({hour:e})},Yy.prototype.setMinutes=function(e){this._date=this._date.set({minute:e})},Yy.prototype.setSeconds=function(e){this._date=this._date.set({second:e})},Yy.prototype.setMilliseconds=function(e){this._date=this._date.set({millisecond:e})},Yy.prototype._getUTC=function(){return this._date.toUTC()},Yy.prototype.toString=function(){return this.toDate().toString()},Yy.prototype.toDate=function(){return this._date.toJSDate()},Yy.prototype.isLastDayOfMonth=function(){var e=this._date.plus({days:1}).startOf("day");return this._date.month!==e.month},Yy.prototype.isLastWeekdayOfMonth=function(){var e=this._date.plus({days:7}).startOf("day");return this._date.month!==e.month};var Qy=function(e){for(var t=[],n=void 0,a=0;a<e.length;a++){var i=e[a];"number"!=typeof i?(Hy(t,n,$y(i)),n=void 0):n?1===n.count?Wy(n,i):n.step===i-n.end?(n.count++,n.end=i):2===n.count?(t.push($y(n.start)),Wy(n=$y(n.end),i)):(Hy(t,n),n=$y(i)):n=$y(i)}return Hy(t,n),t};var Zy=function(e,t,n){var a=Qy(e);if(1===a.length){var i=a[0];if(1===(c=i.step)&&i.start===t&&i.end===n)return"*";if(1!==c&&i.start===t&&i.end===n-c+1)return"*/"+c}for(var o=[],r=0,s=a.length;r<s;++r){var l=a[r];if(1!==l.count){var c=l.step;if(1!==l.step){var d=0==l.start?l.count-1:l.count;l.step*d>l.end?o=o.concat(Array.from({length:l.end-l.start+1}).map((function(e,t){var n=l.start+t;return(n-l.start)%l.step==0?n:null})).filter((function(e){return null!=e}))):l.end===n-l.step+1?o.push(l.start+"/"+l.step):o.push(l.start+"-"+l.end+"/"+l.step)}else o.push(l.start+"-"+l.end)}else o.push(l.start)}return o.join(",")},Xy=Yy,ev=Zy;function tv(e,t){this._options=t,this._utc=t.utc||!1,this._tz=this._utc?"UTC":t.tz,this._currentDate=new Xy(t.currentDate,this._tz),this._startDate=t.startDate?new Xy(t.startDate,this._tz):null,this._endDate=t.endDate?new Xy(t.endDate,this._tz):null,this._isIterator=t.iterator||!1,this._hasIterated=!1,this._nthDayOfWeek=t.nthDayOfWeek||0,this.fields=tv._freezeFields(e)}tv.map=["second","minute","hour","dayOfMonth","month","dayOfWeek"],tv.predefined={"@yearly":"0 0 1 1 *","@monthly":"0 0 1 * *","@weekly":"0 0 * * 0","@daily":"0 0 * * *","@hourly":"0 * * * *"},tv.constraints=[{min:0,max:59,chars:[]},{min:0,max:59,chars:[]},{min:0,max:23,chars:[]},{min:1,max:31,chars:["L"]},{min:1,max:12,chars:[]},{min:0,max:7,chars:["L"]}],tv.daysInMonth=[31,29,31,30,31,30,31,31,30,31,30,31],tv.aliases={month:{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12},dayOfWeek:{sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6}},tv.parseDefaults=["0","*","*","*","*","*"],tv.standardValidCharacters=/^[,*\d/-]+$/,tv.dayOfWeekValidCharacters=/^[?,*\dL#/-]+$/,tv.dayOfMonthValidCharacters=/^[?,*\dL/-]+$/,tv.validCharacters={second:tv.standardValidCharacters,minute:tv.standardValidCharacters,hour:tv.standardValidCharacters,dayOfMonth:tv.dayOfMonthValidCharacters,month:tv.standardValidCharacters,dayOfWeek:tv.dayOfWeekValidCharacters},tv._isValidConstraintChar=function(e,t){return"string"==typeof t&&e.chars.some((function(e){return t.indexOf(e)>-1}))},tv._parseField=function(e,t,n){switch(e){case"month":case"dayOfWeek":var a=tv.aliases[e];t=t.replace(/[a-z]{3}/gi,(function(e){if(e=e.toLowerCase(),void 0!==a[e])return a[e];throw new Error('Validation error, cannot resolve alias "'+e+'"')}))}if(!tv.validCharacters[e].test(t))throw new Error("Invalid characters, got value: "+t);function i(e){var t=e.split("/");if(t.length>2)throw new Error("Invalid repeat: "+e);return t.length>1?(t[0]==+t[0]&&(t=[t[0]+"-"+n.max,t[1]]),o(t[0],t[t.length-1])):o(e,1)}function o(t,a){var i=[],o=t.split("-");if(o.length>1){if(o.length<2)return+t;if(!o[0].length){if(!o[1].length)throw new Error("Invalid range: "+t);return+t}var r=+o[0],s=+o[1];if(Number.isNaN(r)||Number.isNaN(s)||r<n.min||s>n.max)throw new Error("Constraint error, got range "+r+"-"+s+" expected range "+n.min+"-"+n.max);if(r>s)throw new Error("Invalid range: "+t);var l=+a;if(Number.isNaN(l)||l<=0)throw new Error("Constraint error, cannot repeat at every "+l+" time.");"dayOfWeek"===e&&s%7==0&&i.push(0);for(var c=r,d=s;c<=d;c++){!(-1!==i.indexOf(c))&&l>0&&l%a==0?(l=1,i.push(c)):l++}return i}return Number.isNaN(+t)?t:+t}return-1!==t.indexOf("*")?t=t.replace(/\*/g,n.min+"-"+n.max):-1!==t.indexOf("?")&&(t=t.replace(/\?/g,n.min+"-"+n.max)),function(t){var a=[];function o(t){if(t instanceof Array)for(var i=0,o=t.length;i<o;i++){var r=t[i];if(tv._isValidConstraintChar(n,r))a.push(r);else{if("number"!=typeof r||Number.isNaN(r)||r<n.min||r>n.max)throw new Error("Constraint error, got value "+r+" expected range "+n.min+"-"+n.max);a.push(r)}}else{if(tv._isValidConstraintChar(n,t))return void a.push(t);var s=+t;if(Number.isNaN(s)||s<n.min||s>n.max)throw new Error("Constraint error, got value "+t+" expected range "+n.min+"-"+n.max);"dayOfWeek"===e&&(s%=7),a.push(s)}}var r=t.split(",");if(!r.every((function(e){return e.length>0})))throw new Error("Invalid list value format");if(r.length>1)for(var s=0,l=r.length;s<l;s++)o(i(r[s]));else o(i(t));return a.sort(tv._sortCompareFn),a}(t)},tv._sortCompareFn=function(e,t){var n="number"==typeof e,a="number"==typeof t;return n&&a?e-t:!n&&a?1:n&&!a?-1:e.localeCompare(t)},tv._handleMaxDaysInMonth=function(e){if(1===e.month.length){var t=tv.daysInMonth[e.month[0]-1];if(e.dayOfMonth[0]>t)throw new Error("Invalid explicit day of month definition");return e.dayOfMonth.filter((function(e){return"L"===e||e<=t})).sort(tv._sortCompareFn)}},tv._freezeFields=function(e){for(var t=0,n=tv.map.length;t<n;++t){var a=tv.map[t],i=e[a];e[a]=Object.freeze(i)}return Object.freeze(e)},tv.prototype._applyTimezoneShift=function(e,t,n){if("Month"===n||"Day"===n){var a=e.getTime();e[t+n](),a===e.getTime()&&(0===e.getMinutes()&&0===e.getSeconds()?e.addHour():59===e.getMinutes()&&59===e.getSeconds()&&e.subtractHour())}else{var i=e.getHours();e[t+n]();var o=e.getHours(),r=o-i;2===r?24!==this.fields.hour.length&&(this._dstStart=o):0===r&&0===e.getMinutes()&&0===e.getSeconds()&&24!==this.fields.hour.length&&(this._dstEnd=o)}},tv.prototype._findSchedule=function(e){function t(e,t){for(var n=0,a=t.length;n<a;n++)if(t[n]>=e)return t[n]===e;return t[0]===e}function n(e,t){if(t<6){if(e.getDate()<8&&1===t)return!0;var n=e.getDate()%7?1:0,a=e.getDate()-e.getDate()%7;return Math.floor(a/7)+n===t}return!1}function a(e){return e.length>0&&e.some((function(e){return"string"==typeof e&&e.indexOf("L")>=0}))}var i=(e=e||!1)?"subtract":"add",o=new Xy(this._currentDate,this._tz),r=this._startDate,s=this._endDate,l=o.getTime(),c=0;for(;c<1e4;){if(c++,e){if(r&&o.getTime()-r.getTime()<0)throw new Error("Out of the timespan range")}else if(s&&s.getTime()-o.getTime()<0)throw new Error("Out of the timespan range");var d=t(o.getDate(),this.fields.dayOfMonth);a(this.fields.dayOfMonth)&&(d=d||o.isLastDayOfMonth());var u=t(o.getDay(),this.fields.dayOfWeek);a(this.fields.dayOfWeek)&&(u=u||this.fields.dayOfWeek.some((function(e){if(!a([e]))return!1;var t=Number.parseInt(e[0])%7;if(Number.isNaN(t))throw new Error("Invalid last weekday of the month expression: "+e);return o.getDay()===t&&o.isLastWeekdayOfMonth()})));var p=this.fields.dayOfMonth.length>=tv.daysInMonth[o.getMonth()],m=this.fields.dayOfWeek.length===tv.constraints[5].max-tv.constraints[5].min+1,h=o.getHours();if(d||u&&!m)if(p||!m||d)if(!p||m||u)if(this._nthDayOfWeek>0&&!n(o,this._nthDayOfWeek))this._applyTimezoneShift(o,i,"Day");else if(t(o.getMonth()+1,this.fields.month)){if(t(h,this.fields.hour)){if(this._dstEnd===h&&!e){this._dstEnd=null,this._applyTimezoneShift(o,"add","Hour");continue}}else{if(this._dstStart!==h){this._dstStart=null,this._applyTimezoneShift(o,i,"Hour");continue}if(!t(h-1,this.fields.hour)){o[i+"Hour"]();continue}}if(t(o.getMinutes(),this.fields.minute))if(t(o.getSeconds(),this.fields.second)){if(l!==o.getTime())break;"add"===i||0===o.getMilliseconds()?this._applyTimezoneShift(o,i,"Second"):o.setMilliseconds(0)}else this._applyTimezoneShift(o,i,"Second");else this._applyTimezoneShift(o,i,"Minute")}else this._applyTimezoneShift(o,i,"Month");else this._applyTimezoneShift(o,i,"Day");else this._applyTimezoneShift(o,i,"Day");else this._applyTimezoneShift(o,i,"Day")}if(c>=1e4)throw new Error("Invalid expression, loop limit exceeded");return this._currentDate=new Xy(o,this._tz),this._hasIterated=!0,o},tv.prototype.next=function(){var e=this._findSchedule();return this._isIterator?{value:e,done:!this.hasNext()}:e},tv.prototype.prev=function(){var e=this._findSchedule(!0);return this._isIterator?{value:e,done:!this.hasPrev()}:e},tv.prototype.hasNext=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},tv.prototype.hasPrev=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(!0),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},tv.prototype.iterate=function(e,t){var n=[];if(e>=0)for(var a=0,i=e;a<i;a++)try{var o=this.next();n.push(o),t&&t(o,a)}catch(e){break}else for(a=0,i=e;a>i;a--)try{o=this.prev();n.push(o),t&&t(o,a)}catch(e){break}return n},tv.prototype.reset=function(e){this._currentDate=new Xy(e||this._options.currentDate)},tv.prototype.stringify=function(e){for(var t=[],n=e?0:1,a=tv.map.length;n<a;++n){var i=tv.map[n],o=this.fields[i],r=tv.constraints[n];"dayOfMonth"===i&&1===this.fields.month.length?r={min:1,max:tv.daysInMonth[this.fields.month[0]-1]}:"dayOfWeek"===i&&(r={min:0,max:6},o=7===o[o.length-1]?o.slice(0,-1):o),t.push(ev(o,r.min,r.max))}return t.join(" ")},tv.parse=function(e,t){var n=this;function a(e,t){t||(t={}),void 0===t.currentDate&&(t.currentDate=new Xy(void 0,n._tz)),tv.predefined[e]&&(e=tv.predefined[e]);var a=[],i=(e+"").trim().split(/\s+/);if(i.length>6)throw new Error("Invalid cron expression");for(var o=tv.map.length-i.length,r=0,s=tv.map.length;r<s;++r){var l=tv.map[r],c=i[i.length>s?r:r-o];if(r<o||!c)a.push(tv._parseField(l,tv.parseDefaults[r],tv.constraints[r]));else{var d="dayOfWeek"===l?m(c):c;a.push(tv._parseField(l,d,tv.constraints[r]))}}var u={};for(r=0,s=tv.map.length;r<s;r++){u[tv.map[r]]=a[r]}var p=tv._handleMaxDaysInMonth(u);return u.dayOfMonth=p||u.dayOfMonth,new tv(u,t);function m(e){var n=e.split("#");if(n.length>1){var a=+n[n.length-1];if(/,/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `,` special characters are incompatible");if(/\//.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `/` special characters are incompatible");if(/-/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `-` special characters are incompatible");if(n.length>2||Number.isNaN(a)||a<1||a>5)throw new Error("Constraint error, invalid dayOfWeek occurrence number (#)");return t.nthDayOfWeek=a,n[0]}return e}}return"function"==typeof t&&(t={}),a(e,t)},tv.fieldsToExpression=function(e,t){function n(e,t,n){if(!t)throw new Error("Validation error, Field "+e+" is missing");if(0===t.length)throw new Error("Validation error, Field "+e+" contains no values");for(var a=0,i=t.length;a<i;a++){var o=t[a];if(!tv._isValidConstraintChar(n,o)&&("number"!=typeof o||Number.isNaN(o)||o<n.min||o>n.max))throw new Error("Constraint error, got value "+o+" expected range "+n.min+"-"+n.max)}}for(var a={},i=0,o=tv.map.length;i<o;++i){var r=tv.map[i],s=e[r];n(r,s,tv.constraints[i]);for(var l=[],c=-1;++c<s.length;)l[c]=s[c];if((s=l.sort(tv._sortCompareFn).filter((function(e,t,n){return!t||e!==n[t-1]}))).length!==l.length)throw new Error("Validation error, Field "+r+" contains duplicate values");a[r]=s}var d=tv._handleMaxDaysInMonth(a);return a.dayOfMonth=d||a.dayOfMonth,new tv(a,t||{})};var nv=tv;function av(){}av._parseEntry=function(e){var t=e.split(" ");if(6===t.length)return{interval:nv.parse(e)};if(t.length>6)return{interval:nv.parse(t.slice(0,6).join(" ")),command:t.slice(6,t.length)};throw new Error("Invalid entry: "+e)},av.parseExpression=function(e,t){return nv.parse(e,t)},av.fieldsToExpression=function(e,t){return nv.fieldsToExpression(e,t)},av.parseString=function(e){for(var t=e.split("\n"),n={variables:{},expressions:[],errors:{}},a=0,i=t.length;a<i;a++){var o=null,r=t[a].trim();if(r.length>0){if(r.match(/^#/))continue;if(o=r.match(/^(.*)=(.*)$/))n.variables[o[1]]=o[2];else{var s=null;try{s=av._parseEntry("0 "+r),n.expressions.push(s.interval)}catch(e){n.errors[r]=e}}}}return n},av.parseFile=function(e,t){s.readFile(e,(function(e,n){if(!e)return t(null,av.parseString(n.toString()));t(e)}))};var iv=av;class ov extends Ip{constructor(e,t,n){super(e,t,n),this.repeatStrategy=t.settings&&t.settings.repeatStrategy||sv,this.repeatKeyHashAlgorithm=t.settings&&t.settings.repeatKeyHashAlgorithm||"md5"}async updateRepeatableJob(e,t,n,{override:a}){var i,o,r;const s=Object.assign({},n.repeat);null!==(i=s.pattern)&&void 0!==i||(s.pattern=s.cron),delete s.cron;const l=s.count?s.count+1:1;if(void 0!==s.limit&&l>s.limit)return;let c=Date.now();const{endDate:d}=s;if(void 0!==typeof d&&c>new Date(d).getTime())return;const u=n.prevMillis||0;c=u<c?c:u;const p=await this.repeatStrategy(c,s,e),{every:m,pattern:h}=s,f=Boolean((m||h)&&s.immediately),y=f?c-p:void 0;if(p){!u&&n.jobId&&(s.jobId=n.jobId);const i=rv(e,s);let c;if(a)c=await this.scripts.addRepeatableJob(null!==(o=n.repeat.key)&&void 0!==o?o:this.hash(i),p,{name:e,endDate:d?new Date(d).getTime():void 0,tz:s.tz,pattern:h,every:m},i);else{const e=await this.client;c=await this.scripts.updateRepeatableJobMillis(e,null!==(r=n.repeat.key)&&void 0!==r?r:this.hash(i),p,i)}if(c){const a=sd(s,["immediately"]);return this.createNextJob(e,p,c,Object.assign(Object.assign({},n),{repeat:Object.assign({offset:y},a)}),t,l,f)}}}async createNextJob(e,t,n,a,i,o,r){const s=this.getRepeatJobKey(e,t,n,i),l=Date.now(),c=t+(a.repeat.offset?a.repeat.offset:0)-l,d=Object.assign(Object.assign({},a),{jobId:s,delay:c<0||r?0:c,timestamp:l,prevMillis:t,repeatJobKey:n});return d.repeat=Object.assign(Object.assign({},a.repeat),{count:o}),this.Job.create(this,e,i,d)}getRepeatJobKey(e,t,n,a){return n.split(":").length>2?this.getRepeatJobId({name:e,nextMillis:t,namespace:this.hash(n),jobId:null==a?void 0:a.id}):this.getRepeatDelayedJobId({customKey:n,nextMillis:t})}async removeRepeatable(e,t,n){var a;const i=rv(e,Object.assign(Object.assign({},t),{jobId:n})),o=null!==(a=t.key)&&void 0!==a?a:this.hash(i),r=this.getRepeatJobId({name:e,nextMillis:"",namespace:this.hash(i),jobId:null!=n?n:t.jobId,key:t.key});return this.scripts.removeRepeatable(r,i,o)}async removeRepeatableByKey(e){const t=this.keyToData(e),n=this.getRepeatJobId({name:t.name,nextMillis:"",namespace:this.hash(e),jobId:t.id});return this.scripts.removeRepeatable(n,"",e)}async getRepeatableData(e,t,n){const a=await e.hgetall(this.toKey("repeat:"+t));return a?{key:t,name:a.name,endDate:parseInt(a.endDate)||null,tz:a.tz||null,pattern:a.pattern||null,every:a.every||null,next:n}:this.keyToData(t,n)}keyToData(e,t){const n=e.split(":"),a=n.slice(4).join(":")||null;return{key:e,name:n[0],id:n[1]||null,endDate:parseInt(n[2])||null,tz:n[3]||null,pattern:a,next:t}}async getRepeatableJobs(e=0,t=-1,n=!1){const a=await this.client,i=this.keys.repeat,o=n?await a.zrange(i,e,t,"WITHSCORES"):await a.zrevrange(i,e,t,"WITHSCORES"),r=[];for(let e=0;e<o.length;e+=2)r.push(this.getRepeatableData(a,o[e],parseInt(o[e+1])));return Promise.all(r)}async getRepeatableCount(){return(await this.client).zcard(this.toKey("repeat"))}hash(e){return y.createHash(this.repeatKeyHashAlgorithm).update(e).digest("hex")}getRepeatDelayedJobId({nextMillis:e,customKey:t}){return`repeat:${t}:${e}`}getRepeatJobId({name:e,nextMillis:t,namespace:n,jobId:a,key:i}){return`repeat:${null!=i?i:this.hash(`${e}${a||""}${n}`)}:${t}`}}function rv(e,t){const n=t.endDate?new Date(t.endDate).getTime():"",a=t.tz||"",i=t.pattern,o=i||String(t.every)||"";return`${e}:${t.jobId?t.jobId:""}:${n}:${a}:${o}`}const sv=(e,t)=>{const n=t.pattern;if(n&&t.every)throw new Error("Both .pattern and .every options are defined for this repeatable job");if(t.every)return Math.floor(e/t.every)*t.every+(t.immediately?0:t.every);const a=t.startDate&&new Date(t.startDate)>new Date(e)?new Date(t.startDate):new Date(e),i=iv.parseExpression(n,Object.assign(Object.assign({},t),{currentDate:a}));try{return i.next().getTime()}catch(e){}};class lv extends jp{constructor(e,t,n){var a;super(e,Object.assign({blockingConnection:!1},t),n),this.token=rd(),this.jobsOpts=null!==(a=null==t?void 0:t.defaultJobOptions)&&void 0!==a?a:{},this.waitUntilReady().then((e=>{this.closing||e.hmset(this.keys.meta,this.metaValues)})).catch((e=>{}))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}get defaultJobOptions(){return Object.assign({},this.jobsOpts)}get metaValues(){var e,t,n,a;return{"opts.maxLenEvents":null!==(a=null===(n=null===(t=null===(e=this.opts)||void 0===e?void 0:e.streams)||void 0===t?void 0:t.events)||void 0===n?void 0:n.maxLen)&&void 0!==a?a:1e4}}get repeat(){return new Promise((async e=>{this._repeat||(this._repeat=new ov(this.name,Object.assign(Object.assign({},this.opts),{connection:await this.client})),this._repeat.on("error",(e=>this.emit.bind(this,e)))),e(this._repeat)}))}async getGlobalConcurrency(){const e=await this.client,t=await e.hget(this.keys.meta,"concurrency");return t?Number(t):null}async setGlobalConcurrency(e){return(await this.client).hset(this.keys.meta,"concurrency",e)}async add(e,t,n){if(n&&n.repeat){if(n.repeat.endDate&&+new Date(n.repeat.endDate)<Date.now())throw new Error("End date must be greater than current timestamp");return(await this.repeat).updateRepeatableJob(e,t,Object.assign(Object.assign({},this.jobsOpts),n),{override:!0})}{const a=null==n?void 0:n.jobId;if("0"==a||(null==a?void 0:a.startsWith("0:")))throw new Error("JobId cannot be '0' or start with 0:");const i=await this.Job.create(this,e,t,Object.assign(Object.assign(Object.assign({},this.jobsOpts),n),{jobId:a}));return this.emit("waiting",i),i}}addBulk(e){return this.Job.createBulk(this,e.map((e=>{var t;return{name:e.name,data:e.data,opts:Object.assign(Object.assign(Object.assign({},this.jobsOpts),e.opts),{jobId:null===(t=e.opts)||void 0===t?void 0:t.jobId})}})))}async pause(){await this.scripts.pause(!0),this.emit("paused")}async close(){return this.closing||this._repeat&&await this._repeat.close(),super.close()}async resume(){await this.scripts.pause(!1),this.emit("resumed")}async isPaused(){const e=await this.client;return 1===await e.hexists(this.keys.meta,"paused")}isMaxed(){return this.scripts.isMaxed()}async getRepeatableJobs(e,t,n){return(await this.repeat).getRepeatableJobs(e,t,n)}async removeRepeatable(e,t,n){const a=await this.repeat;return!await a.removeRepeatable(e,t,n)}async removeDebounceKey(e){return(await this.client).del(`${this.keys.de}:${e}`)}async removeRepeatableByKey(e){const t=await this.repeat;return!await t.removeRepeatableByKey(e)}remove(e,{removeChildren:t=!0}={}){return this.scripts.remove(e,t)}async updateJobProgress(e,t){return this.scripts.updateProgress(e,t)}async addJobLog(e,t,n){return Nu.addJobLog(this,e,t,n)}drain(e=!1){return this.scripts.drain(e)}async clean(e,t,n="completed"){const a=t||1/0,i=Math.min(1e4,a),o=Date.now()-e;let r=0;const s=[];for(;r<a;){const e=await this.scripts.cleanJobsInSet(n,o,i);if(this.emit("cleaned",e,n),r+=e.length,s.push(...e),e.length<i)break}return s}async obliterate(e){await this.pause();let t=0;do{t=await this.scripts.obliterate(Object.assign({force:!1,count:1e3},e))}while(t)}async retryJobs(e={}){let t=0;do{t=await this.scripts.retryJobs(e.state,e.count,e.timestamp)}while(t)}async promoteJobs(e={}){let t=0;do{t=await this.scripts.promoteJobs(e.count)}while(t)}async trimEvents(e){return(await this.client).xtrim(this.keys.events,"MAXLEN","~",e)}async removeDeprecatedPriorityKey(){return(await this.client).del(this.toKey("priority"))}}const{EventEmitter:cv}=p;class dv{constructor(){this.eventEmitter=new cv,this.onabort=null,this.aborted=!1,this.reason=void 0}toString(){return"[object AbortSignal]"}get[Symbol.toStringTag](){return"AbortSignal"}removeEventListener(e,t){this.eventEmitter.removeListener(e,t)}addEventListener(e,t){this.eventEmitter.on(e,t)}dispatchEvent(e){const t={type:e,target:this},n=`on${e}`;"function"==typeof this[n]&&this[n](t),this.eventEmitter.emit(e,t)}throwIfAborted(){if(this.aborted)throw this.reason}static abort(e){const t=new uv;return t.abort(),t.signal}static timeout(e){const t=new uv;return setTimeout((()=>t.abort(new Error("TimeoutError"))),e),t.signal}}class uv{constructor(){this.signal=new dv}abort(e){this.signal.aborted||(this.signal.aborted=!0,this.signal.reason=e||new Error("AbortError"),this.signal.dispatchEvent("abort"))}toString(){return"[object AbortController]"}get[Symbol.toStringTag](){return"AbortController"}}var pv={AbortController:uv,AbortSignal:dv};class mv extends Ip{static RateLimitError(){return new Hc}constructor(e,t,n,a){if(super(e,Object.assign(Object.assign({},n),{blockingConnection:!0}),a),this.abortDelayController=null,this.blockUntil=0,this.drained=!1,this.extendLocksTimer=null,this.limitUntil=0,this.waiting=null,this.running=!1,!n||!n.connection)throw new Error("Worker requires a connection");if(this.opts=Object.assign({drainDelay:5,concurrency:1,lockDuration:3e4,maxStalledCount:1,stalledInterval:3e4,autorun:!0,runRetryDelay:15e3},this.opts),this.opts.stalledInterval<=0)throw new Error("stalledInterval must be greater than 0");if(this.opts.drainDelay<=0)throw new Error("drainDelay must be greater than 0");if(this.concurrency=this.opts.concurrency,this.opts.lockRenewTime=this.opts.lockRenewTime||this.opts.lockDuration/2,this.id=rd(),t){if("function"==typeof t)this.processFn=t;else{if(t instanceof r.URL){if(!w.existsSync(t))throw new Error(`URL ${t} does not exist in the local file system`);t=t.href}else{const e=t+([".js",".ts",".flow",".cjs"].includes(k.extname(t))?"":".js");if(!w.existsSync(e))throw new Error(`File ${e} does not exist`)}const e=k.dirname(module.filename||__filename),n=k.join(e,"main-worker.js"),a=k.join(e,"main.js");let s=this.opts.useWorkerThreads?n:a;try{w.statSync(s)}catch(e){const t=this.opts.useWorkerThreads?"main-worker.js":"main.js";s=k.join(process.cwd(),`dist/cjs/classes/${t}`),w.statSync(s)}this.childPool=new Oa({mainFile:s,useWorkerThreads:this.opts.useWorkerThreads}),this.processFn=(i=t,o=this.childPool,async function(e,t){const n=await o.retain(i);let a,r;await n.send({cmd:wa.Start,job:e.asJSONSandbox(),token:t});const s=new Promise(((t,i)=>{a=async n=>{var a,o;switch(n.cmd){case Sa.Completed:t(n.value);break;case Sa.Failed:case Sa.Error:{const e=new Error;Object.assign(e,n.value),i(e);break}case Sa.Progress:await e.updateProgress(n.value);break;case Sa.Log:await e.log(n.value);break;case Sa.MoveToDelayed:await e.moveToDelayed(null===(a=n.value)||void 0===a?void 0:a.timestamp,null===(o=n.value)||void 0===o?void 0:o.token);break;case Sa.Update:await e.updateData(n.value)}},r=(e,t)=>{i(new Error("Unexpected exit code: "+e+" signal: "+t))},n.on("message",a),n.on("exit",r)}));try{return await s,s}finally{n.off("message",a),n.off("exit",r),null!==n.exitCode||/SIG.*/.test(`${n.signalCode}`)?o.remove(n):o.release(n)}}).bind(this)}this.opts.autorun&&this.run().catch((e=>this.emit("error",e)))}var i,o;const s=this.clientName()+(this.opts.name?`:w:${this.opts.name}`:"");this.blockingConnection=new Rp(Fc(n.connection)?n.connection.duplicate({connectionName:s}):Object.assign(Object.assign({},n.connection),{connectionName:s}),!1,!0,n.skipVersionCheck),this.blockingConnection.on("error",(e=>this.emit("error",e))),this.blockingConnection.on("ready",(()=>setTimeout((()=>this.emit("ready")),0)))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}callProcessJob(e,t){return this.processFn(e,t)}createJob(e,t){return this.Job.fromJSON(this,e,t)}async waitUntilReady(){return await super.waitUntilReady(),this.blockingConnection.client}set concurrency(e){if("number"!=typeof e||e<1||!isFinite(e))throw new Error("concurrency must be a finite number greater than 0");this.opts.concurrency=e}get repeat(){return new Promise((async e=>{if(!this._repeat){const e=await this.client;this._repeat=new ov(this.name,Object.assign(Object.assign({},this.opts),{connection:e})),this._repeat.on("error",(e=>this.emit.bind(this,e)))}e(this._repeat)}))}async run(){if(!this.processFn)throw new Error("No process function is defined.");if(this.running)throw new Error("Worker is already running.");try{if(this.running=!0,this.closing)return;await this.startStalledCheckTimer();const e=new Set;this.startLockExtenderTimer(e);const t=this.asyncFifoQueue=new xa;let n=0;const a=await this.client,i=await this.blockingConnection.client;for(;!this.closing;){let o,r=t.numTotal();for(;!this.waiting&&r<this.opts.concurrency&&(!this.limitUntil||0==r);){const e=`${this.id}:${n++}`,o=this.retryIfFailed((()=>this._getNextJob(a,i,e,{block:!0})),this.opts.runRetryDelay);if(t.add(o),r=t.numTotal(),this.waiting&&r>1)break;if(!await o&&r>1)break;if(this.blockUntil)break}do{o=await t.fetch()}while(!o&&t.numQueued()>0);if(o){const n=o.token;t.add(this.retryIfFailed((()=>this.processJob(o,n,(()=>t.numTotal()<=this.opts.concurrency),e)),this.opts.runRetryDelay))}}return this.running=!1,t.waitAll()}catch(e){throw this.running=!1,e}}async getNextJob(e,{block:t=!0}={}){return this._getNextJob(await this.client,await this.blockingConnection.client,e,{block:t})}async _getNextJob(e,t,n,{block:a=!0}={}){var i;if(this.paused){if(!a)return;await this.paused}if(!this.closing){if(!this.drained||!a||this.limitUntil||this.waiting){const t=this.limitUntil;return t&&(null===(i=this.abortDelayController)||void 0===i||i.abort(),this.abortDelayController=new pv.AbortController,await this.delay(this.getLimitUntil(t),this.abortDelayController)),this.moveToActive(e,n,this.opts.name)}this.waiting=this.waitForJob(t,this.blockUntil);try{if(this.blockUntil=await this.waiting,this.blockUntil<=0||this.blockUntil-Date.now()<1)return this.moveToActive(e,n,this.opts.name)}catch(e){if(!this.paused&&!this.closing&&Vc(e))throw e}finally{this.waiting=null}}}async rateLimit(e){await this.client.then((t=>t.set(this.keys.limiter,Number.MAX_SAFE_INTEGER,"PX",e)))}get minimumBlockTimeout(){return this.blockingConnection.capabilities.canBlockFor1Ms?.001:.002}async moveToActive(e,t,n){const[a,i,o,r]=await this.scripts.moveToActive(e,t,n);return this.updateDelays(o,r),this.nextJobFromJobData(a,i,t)}async waitForJob(e,t){if(this.paused)return 1/0;let n;try{if(!this.closing&&!this.limitUntil){let a=this.getBlockTimeout(t);if(a>0){a=this.blockingConnection.capabilities.canDoubleTimeout?a:Math.ceil(a),n=setTimeout((async()=>{e.disconnect(!this.closing)}),1e3*a+1e3),this.updateDelays();const t=await e.bzpopmin(this.keys.marker,a);if(t){const[e,n,a]=t;if(n)return parseInt(a)}}return 0}}catch(e){Vc(e)&&this.emit("error",e),this.closing||await this.delay()}finally{clearTimeout(n)}return 1/0}getBlockTimeout(e){const t=this.opts;if(e){const t=e-Date.now();return t<=0?t:t<1e3*this.minimumBlockTimeout?this.minimumBlockTimeout:Math.min(t/1e3,10)}return Math.max(t.drainDelay,this.minimumBlockTimeout)}getLimitUntil(e){return Math.min(e,3e4)}async delay(e,t){await Mc(e||100,t)}updateDelays(e=0,t=0){this.limitUntil=Math.max(e,0)||0,this.blockUntil=Math.max(t,0)||0}async nextJobFromJobData(e,t,n){if(e){this.drained=!1;const a=this.createJob(e,t);if(a.token=n,a.opts.repeat){const e=await this.repeat;await e.updateRepeatableJob(a.name,a.data,a.opts,{override:!1})}return a}this.drained||(this.emit("drained"),this.drained=!0)}async processJob(e,t,n=(()=>!0),a){if(!e||this.closing||this.paused)return;const i=async a=>{if(!this.connection.closing){const i=await e.moveToCompleted(a,t,n()&&!(this.closing||this.paused));this.emit("completed",e,a,"active");const[o,r,s,l]=i||[];return this.updateDelays(s,l),this.nextJobFromJobData(o,r,t)}},o=async n=>{if(!this.connection.closing)try{if(n.message==Wc)return void(this.limitUntil=await this.moveLimitedBackToWait(e,t));if(n instanceof Yc||"DelayedError"==n.name||n instanceof Qc||"WaitingChildrenError"==n.name)return;const a=await e.moveToFailed(n,t,!0);if(this.emit("failed",e,n,"active"),a){const[e,n,i,o]=a;return this.updateDelays(i,o),this.nextJobFromJobData(e,n,t)}}catch(n){this.emit("error",n)}};this.emit("active",e,"waiting");const r={job:e,ts:Date.now()};try{a.add(r);const n=await this.callProcessJob(e,t);return await i(n)}catch(e){return o(e)}finally{a.delete(r)}}async pause(e){this.paused||(this.paused=new Promise((e=>{this.resumeWorker=function(){e(),this.paused=null,this.resumeWorker=null}})),await(!e&&this.whenCurrentJobsFinished()),this.emit("paused"))}resume(){this.resumeWorker&&(this.resumeWorker(),this.emit("resumed"))}isPaused(){return!!this.paused}isRunning(){return this.running}close(e=!1){return this.closing||(this.closing=(async()=>{var t;this.emit("closing","closing queue"),null===(t=this.abortDelayController)||void 0===t||t.abort(),this.resume();const n=[()=>e||this.whenCurrentJobsFinished(!1),()=>{var e;return null===(e=this.childPool)||void 0===e?void 0:e.clean()},()=>this.blockingConnection.close(e),()=>this.connection.close(e)];for(const e of n)try{await e()}catch(e){this.emit("error",e)}clearTimeout(this.extendLocksTimer),clearTimeout(this.stalledCheckTimer),this.closed=!0,this.emit("closed")})()),this.closing}async startStalledCheckTimer(){if(!this.opts.skipStalledCheck&&(clearTimeout(this.stalledCheckTimer),!this.closing))try{await this.checkConnectionError((()=>this.moveStalledJobsToWait())),this.stalledCheckTimer=setTimeout((async()=>{await this.startStalledCheckTimer()}),this.opts.stalledInterval)}catch(e){this.emit("error",e)}}startLockExtenderTimer(e){this.opts.skipLockRenewal||(clearTimeout(this.extendLocksTimer),this.closed||(this.extendLocksTimer=setTimeout((async()=>{const t=Date.now(),n=[];for(const a of e){const{job:e,ts:i}=a;i?i+this.opts.lockRenewTime/2<t&&(a.ts=t,n.push(e)):a.ts=t}try{n.length&&await this.extendLocks(n)}catch(e){this.emit("error",e)}this.startLockExtenderTimer(e)}),this.opts.lockRenewTime/2)))}async whenCurrentJobsFinished(e=!0){this.waiting?await this.blockingConnection.disconnect(e):e=!1,this.asyncFifoQueue&&await this.asyncFifoQueue.waitAll(),e&&await this.blockingConnection.reconnect()}async retryIfFailed(e,t){for(;;)try{return await e()}catch(e){if(this.emit("error",e),!t)return;await this.delay(t)}}async extendLocks(e){try{const t=(await this.client).pipeline();for(const n of e)await this.scripts.extendLock(n.id,n.token,this.opts.lockDuration,t);const n=await t.exec();for(const[e,t]of n)e&&this.emit("error",new Error(`could not renew lock for job ${t}`))}catch(e){this.emit("error",e)}}async moveStalledJobsToWait(){const[e,t]=await this.scripts.moveStalledJobsToWait();t.forEach((e=>this.emit("stalled",e,"active")));const n=[];for(let t=0;t<e.length;t++)n.push(Nu.fromId(this,e[t])),(t+1)%50==0&&(this.notifyFailedJobs(await Promise.all(n)),n.length=0);this.notifyFailedJobs(await Promise.all(n))}notifyFailedJobs(e){e.forEach((e=>this.emit("failed",e,new Error("job stalled more than allowable limit"),"active")))}moveLimitedBackToWait(e,t){return this.scripts.moveJobFromActiveToWait(e.id,t)}}var hv;!function(e){e.blocking="blocking",e.normal="normal"}(hv||(hv={}));const fv=new Aa.exports.Redis({host:e.env.CACHE_REDIS_HOST,port:e.env.CACHE_REDIS_PORT,password:e.env.CACHE_PASSWORD,maxRetriesPerRequest:null});if(!global.crypto){const e=require("crypto");global.crypto={getRandomValues:t=>e.randomFillSync(t)}}const yv={},vv={},bv=e=>((e=>{vv[e]||(vv[e]=new Tp(`client_${e}`,{connection:fv}),vv[e].on("progress",(async(e,t)=>{console.log(e,"progress")})),vv[e].on("waiting",(e=>{console.log(e,"waiting")})),vv[e].on("active",(e=>{console.log(e,"active")})),vv[e].on("completed",(e=>{console.log(e,"completed")})),vv[e].on("failed",((e,t)=>{console.log(e,"failed")})))})(e),new lv(`client_${e}`,{connection:fv})),gv=async(e,t)=>{const n=bv(e);((e,t)=>{yv[e]||(yv[e]=new mv(`client_${e}`,(async e=>{try{const n=e.data;return await _v(n,t,n.schema,{admin:!0})}catch(e){return{error:e}}}),{connection:fv,concurrency:1,removeOnComplete:{count:0},removeOnFail:{count:0}})),yv[e]})(e,t.services);const a=await n.add("orders",t,{removeOnComplete:{count:0},removeOnFail:{count:0}});if((await n.getJobCounts()).active,a){return await a.waitUntilFinished(vv[e])}},_v=async(e,t,n,a)=>{var i,o,r,s,l;try{if("update"==e.item){const a="performing_invoice"==e.collection?await ba(t,{id:{_eq:e.id}},["id","original_value","total_value","total_value_cashback","cashback","date_updated","client","user_created","commerical","poc"],n,"performing_invoice"):"shakepe_orders"==e.collection?await ba(t,{id:{_eq:e.id}},["id","original_value","total_value","commerical","total_value_cashback","cashback","date_updated","user_created","client","calculation","status","payment","cashback","type","campiagn","payment_terms","remaining_amount","payment_received","poc","*"],n,"shakepe_orders"):"client_product_mapping"==e.collection?await ba(t,{id:{_eq:e.data.id}},["id","credit_limt","date_updated","user_updated","client_id","user_created"],n,"client_product_mapping"):"corporate_load"==e.collection?await ba(t,{id:{_eq:e.id}},["id","amount","transaction_type","date_updated","user_created","payment_terms","client_name","poc"],n,"corporate_load"):"payment_verify"==e.collection?await ba(t,{id:{_eq:e.id}},["id","corporate_load.amount","corporate_load.transaction_type","corporate_load.id","corporate_load.payment_terms","corporate_load.poc","date_updated","user_created","amount","corporate_load.client_name"],n,"payment_verify"):"client"==e.collection?await ba(t,{id:{_eq:e.id}},["id","credit_limit","previous_credit_limit","credit_wallet","user_created","requested_credit_limit"],n,"client"):"poc_fund_transfer"==e.collection?await ba(t,{id:{_eq:e.id}},["client","sender_poc.*","receiver_poc.*","amount","status"],n,"poc_fund_transfer"):null;if(!a)return!0;{const i={...a[0],collection:e.collection};if("performing_invoice"===i.collection){const e=await ba(t,{id:{_eq:i.client}},["wallet","outstanding_wallet"],n,"client"),a=await ba(t,{id:{_eq:i.poc}},["id","wallet"],n,"client_point_of_contact"),o=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet),r=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),s=parseFloat("Cashback"===i.commerical?i.total_value_cashback:i.total_value?i.total_value:i.original_value).toFixed(2);await xv(i.client,i.id,n,t,"credit","perform_invoice","wallet",s,r,i.user_created,null),await kv(t,n,i.poc,s,o,"credit",i.user_created,"perform_invoice","cpp",i.id,i.client)}else if("shakepe_orders"===i.collection){const a=await ba(t,{id:{_eq:i.client}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),o=await ba(t,{id:{_eq:i.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),r=parseFloat(i.total_value_cashback?i.total_value_cashback:i.total_order_value),s=o[0].product_type.product_types,l=(o[0].id,await ba(t,{id:{_eq:i.poc}},["id","wallet"],n,"client_point_of_contact")),c=parseFloat(isNaN(l[0].wallet)?0:l[0].wallet),d=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet),u=parseFloat("Cashback"===i.commerical?i.total_value_cashback:i.total_value?i.total_value:i.original_value).toFixed(2),p=o[0].product_type.coin,m=await ba(t,{id:{_eq:i.poc}},["id",p],n,"client_point_of_contact"),h=o[0].coins?parseFloat(isNaN(m[0][p])?0:m[0][p]):0;if("Advance"==i.payment_terms&&"draft"==i.status){const a=parseFloat(e.data.total_value_cashback?e.data.total_value_cashback:e.data.total_order_value),o=parseFloat("Cashback"===i.commerical?e.data.total_value_cashback:e.data.total_value_cashback?e.data.total_value:e.data.original_value).toFixed(2);if(o<=c){if("true"==e.data.order_confirm){await xv(i.client,i.id,n,t,"debit","shakepe_orders","wallet",o,d,i.user_created,i.calculation.includes("Previous")?"reserved":null);await kv(t,n,i.poc,o,c,"debit",i.user_created,"shakepe_orders","cpp",i.id,i.client);await wv(t,n,"credit",h,a,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p);return{payment:"Payment Received",status:i.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:i.calculation.includes("Previous")?"Pending":null}}return{status:"draft"}}return{error:E.ERROR.INSUFFIENT}}if("Credit"==i.payment_terms&&"Payment Received"===e.data.payment){const e=await ba(t,{id:{_eq:i.client}},["wallet","credit_wallet","credit_used"],n,"client"),a=parseFloat(e[0].credit_wallet),o=parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used),r="partial_payment_recevied"==i.payment?parseFloat(i.remaining_amount).toFixed(2):parseFloat("Cashback"===i.commerical?i.total_value_cashback:i.total_value?i.total_value:i.original_value).toFixed(2),s=await ba(t,{_and:[{id:{_eq:i.poc}}]},["credit_used"],n,"client_point_of_contact"),l=parseFloat(isNaN(s[0].credit_used)?0:s[0].credit_used);await I({credit_used:l-r},"client_point_of_contact",t,i.poc,n,{admin:!0,user:i.user_created}),await I({credit_used:o-r},"client",t,i.client,n,{admin:!0,user:i.user_created}),await xv(i.client,i.id,n,t,"credit","shakepe_orders","credit_wallet",r,a,i.user_created,null)}else if("Order Cancelled"==e.data.status){if("Advance"==i.payment_terms){const e=await ba(t,{id:{_eq:i.client}},["wallet","credit_wallet"],n,"client"),a=parseFloat(e[0].wallet);await xv(i.client,i.id,n,t,"credit","shakepe_orders","wallet",u,a,i.user_created,"reverse"),await kv(t,n,i.poc,u,c,"credit",i.user_created,"shakepe_orders","cpp",i.id,i.client),await wv(t,n,"debit",h,r,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p)}else if("Credit"==i.payment_terms&&"Payment Pending"==i.payment){const e=await ba(t,{id:{_eq:i.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await ba(t,{_and:[{id:{_eq:i.poc}}]},["credit_used"],n,"client_point_of_contact"),o=parseFloat(isNaN(a[0].credit_used)?0:a[0].credit_used);await I({credit_used:o-u},"client_point_of_contact",t,i.poc,n,{admin:!0,user:i.user_created});const l=parseFloat(e[0].credit_wallet),c=parseFloat(e[0].credit_used);await I({credit_used:c-u},"client",t,i.client,n,{admin:!0,user:i.user_created}),await xv(i.client,i.id,n,t,"credit","shakepe_orders","credit_wallet",u,l,i.user_created,"reverse"),await wv(t,n,"debit",h,r,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p)}else if("Credit"==i.payment_terms&&"partial_payment_recevied"==i.payment){const e=await ba(t,{id:{_eq:i.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(e[0].wallet),o=parseFloat(e[0].credit_wallet),l=parseFloat(e[0].credit_used),c=await ba(t,{_and:[{id:{_eq:i.poc}}]},["credit_used"],n,"client_point_of_contact"),d=parseFloat(isNaN(c[0].credit_used)?0:c[0].credit_used);await I({credit_used:d-parseFloat(i.remaining_amount)},"client_point_of_contact",t,i.poc,n,{admin:!0,user:i.user_created}),await xv(i.client,i.id,n,t,"credit","shakepe_orders","wallet",parseFloat(i.payment_received),a,i.user_created,"reverse"),await I({credit_used:l-parseFloat(i.remaining_amount)},"client",t,i.client,n,{admin:!0,user:i.user_created}),await xv(i.client,i.id,n,t,"credit","shakepe_orders","credit_wallet",parseFloat(i.remaining_amount),o,i.user_created,"reverse"),await wv(t,n,"debit",h,r,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p)}}else if("Order Completed"==i.status&&"Cashback"==i.commerical&&(null==i?void 0:i.cashback)){const e=await ba(t,{id:{_eq:i.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(e[0].wallet);await xv(i.client,i.id,n,t,"credit","shakepe_orders","wallet",null==i?void 0:i.cashback,a,i.user_created,"cashback"),await kv(t,n,i.poc,parseFloat(null==i?void 0:i.cashback),c,"credit",i.user_created,"shakepe_orders","cpp","reverse",i.client)}else if("Order Processed"==e.data.status){if("ShakePe Points"==s){await I({consume_status:"not_consumed"},"shakepe_orders",t,i.id,n,{admin:!0,user:i.user_created}),await wv(t,n,"credit",h,r,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p);return!0}await wv(t,n,"debit",h,r,i.user_created,i.poc,"cpp",i.client,"shakepe_orders",i.id,s,p)}}else if("client_product_mapping"==i.collection){const e=await ba(t,{id:{_eq:i.client_id}},["credit_wallet","credit_limit"],n,"client"),a=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),o=parseFloat(isNaN(e[0].credit_limit)?0:e[0].credit_limit),r=parseFloat(i.credit_limt).toFixed(2);await xv(i.client_id,null,n,t,"credit",null,"credit_wallet",r,a,i.user_created,null),await I({credit_limit:o+r},"client",t,i.client_id,n,{admin:!0,user:i.user_created})}else if("payment_verify"==i.collection){if("reload"==i.corporate_load.transaction_type&&"advance"==i.corporate_load.payment_terms){const e=await ba(t,{id:{_eq:i.corporate_load.client_name}},["wallet"],n,"client"),a=parseFloat(e[0].wallet),o=parseFloat(i.amount).toFixed(2),r=await ba(t,{id:{_eq:i.corporate_load.poc}},["id","wallet"],n,"client_point_of_contact"),s=parseFloat(isNaN(r[0].wallet)?0:r[0].wallet);await kv(t,n,i.corporate_load.poc,o,s,"credit",i.user_created,"corporate_load","cpp",i.corporate_load.id,i.corporate_load.client_name);await xv(i.corporate_load.client_name,i.corporate_load.id,n,t,"credit","corporate_load","wallet",o,a,i.user_created,null)}else if("reload"==i.corporate_load.transaction_type&&"credit"==i.corporate_load.payment_terms){const e=await ba(t,{id:{_eq:i.corporate_load.client_name}},["wallet","credit_wallet","credit_used"],n,"client"),a=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,o=parseFloat(i.amount).toFixed(2),r=parseFloat(e[0].credit_wallet);await I({credit_used:a-o},"client",t,i.client,n,{admin:!0,user:i.user_created}),await xv(i.corporate_load.client_name,i.corporate_load.id,n,t,"credit","corporate_load","credit_wallet",o,r,i.user_created,null)}}else if("corporate_load"==i.collection&&"approved"==e.data.status){if("cashback"==i.transaction_type){const e=await ba(t,{id:{_eq:i.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await ba(t,{id:{_eq:i.poc}},["id","wallet"],n,"client_point_of_contact"),o=parseFloat(i.amount).toFixed(2),r=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await xv(i.client_name,i.id,n,t,"credit","corporate_load","wallet",o,r,i.user_created,null,"Corporate Load"),await kv(t,n,i.poc,o,s,"credit",i.user_created,"corporate_load","cpp",null,i.client_name);return!0}if("debit"==i.transaction_type){const e=await ba(t,{id:{_eq:i.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await ba(t,{id:{_eq:i.poc}},["id","wallet"],n,"client_point_of_contact"),o=parseFloat(i.amount).toFixed(2),r=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await xv(i.client_name,i.id,n,t,"debit","corporate_load","wallet",o,r,i.user_created,null,"Corporate Load"),await kv(t,n,i.poc,o,s,"debit",i.user_created,"corporate_load","cpp",null,i.client_name);return!0}if("reload"==i.transaction_type&&"credit"==i.payment_terms){const e=await ba(t,{id:{_eq:i.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await ba(t,{id:{_eq:i.poc}},["id","wallet"],n,"client_point_of_contact"),o=parseFloat(i.amount).toFixed(2),r=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await xv(i.client_name,i.id,n,t,"credit","corporate_load","wallet",o,r,i.user_created,null,"Corporate Load"),await kv(t,n,i.poc,o,s,"credit",i.user_created,"corporate_load","cpp",null,i.client_name);return!0}}else if("corporate_load"==i.collection&&"cancelled"==e.data.status){if("reload"==i.transaction_type&&"credit"==i.payment_terms){const e=await ba(t,{id:{_eq:i.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(i.amount).toFixed(2),o=parseFloat(e[0].credit_wallet),r=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0;await I({credit_used:r-a},"client",t,i.client_name,n,{admin:!0,user:i.user_created}),await xv(i.client_name,i.id,n,t,"credit","corporate_load","credit_wallet",a,o,i.user_created,null)}}else{if("client"==i.collection&&"approved"==e.data.credit_limit_status){const e=parseFloat((null==i?void 0:i.requested_credit_limit)-(null==i?void 0:i.previous_credit_limit)).toFixed(2),a=parseFloat(isNaN(i.credit_wallet)?0:i.credit_wallet);return await xv(i.id,null,n,t,"credit",null,"credit_wallet",e,a,i.user_created,null),{credit_limit:null==i?void 0:i.requested_credit_limit}}if("poc_fund_transfer"==i.collection){const e=i.amount.toFixed(2);if(e>i.sender_poc.wallet)return{error:E.ERROR.INSUFFIENT};{const a=await ba(t,{id:{_eq:i.sender_poc.id}},["id","wallet"],n,"client_point_of_contact"),o=await ba(t,{id:{_eq:i.receiver_poc.id}},["id","wallet"],n,"client_point_of_contact");return await kv(t,n,i.sender_poc.id,e,a[0].wallet,"debit",i.user_created,"poc_fund_transfer","cpp",null,i.client),await kv(t,n,i.receiver_poc.id,e,o[0].wallet,"credit",i.user_created,"poc_fund_transfer","cpp",null,i.client),!0}}}}}else if("create"==e.item){const a=e.data;if(a&&"shakepe_orders"==e.collection&&"enterprise"!=e.data.type&&"DIY"!=e.data.type){const e=await ba(t,{id:{_eq:a.client}},["wallet","credit_wallet","credit_used"],n,"client"),i=await ba(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),o=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.*"],n,"client_product_mapping"),r=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),s=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),l=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,c=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),d=parseFloat("Cashback"==a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2),u=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),p=o[0].product_type.product_types,m=o[0].product_type.coin,h=await ba(t,{id:{_eq:a.poc}},["id",m],n,"client_point_of_contact"),f=o[0].coins?parseFloat(isNaN(h[0][m])?0:h[0][m]):0;if("Advance"==a.payment_terms){if(d<=s&&d<=r){const e=await xv(a.client,a.id,n,t,"debit","shakepe_orders","wallet",d,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),i=await kv(t,n,a.poc,d,r,"debit",a.user_created,"shakepe_orders","cpp",null,a.client);if("ShakePe Points"!=p){return{transaction_create:[e,i,await wv(t,n,"credit",f,u,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,p,m)],payment:"Payment Received",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null}}return{transaction_create:[e,i],payment:"Payment Received",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null,consume_status:"not_consumed"}}return{error:E.ERROR.INSUFFIENT}}if("Credit"==a.payment_terms){const e=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),o=e[0].product_type.product_types,u=e[0].product_type.coin,p=await ba(t,{id:{_eq:a.poc}},["id",u],n,"client_point_of_contact"),m=e[0].coins?parseFloat(isNaN(p[0][u])?0:p[0][u]):0;if(c<0)return{error:E.ERROR.NEGATIVE_VALUE};if(d<=r){const e=await xv(a.client,a.id,n,t,"debit",null,"wallet",d,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),l=await kv(t,n,a.poc,d,r,"debit",a.user_created,"shakepe_orders","shakepe_orders",null,a.client);return{transaction_create:[e,l,"ShakePe Points"!=o?await wv(t,n,"credit",m,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,o,u):null].filter((e=>null!=e)),payment:"Payment Received",payment_terms:"Advance",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null,consume_status:"not_consumed"}}if(0==r){const e=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),o=e[0].product_type.product_types,r=e[0].product_type.coin,s=await ba(t,{id:{_eq:a.poc}},["id",r],n,"client_point_of_contact"),u=e[0].coins?parseFloat(isNaN(s[0][r])?0:s[0][r]):0,p="ShakePe Points"!=o?await wv(t,n,"credit",u,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,o,r):null;await I({credit_used:l+d},"client",t,a.client,n,{admin:!0,user:a.user_created});const m=await xv(a.client,a.id,n,t,"debit","shakepe_orders","credit_wallet",d,c,a.user_created,a.calculation.includes("Previous")||d>c?"reserved":null),h=await ba(t,{_and:[{id:{_eq:a.poc}}]},["credit_used"],n,"client_point_of_contact"),f=parseFloat(isNaN(h[0].credit_used)?0:h[0].credit_used);return await I({credit_used:f+d},"client_point_of_contact",t,a.poc,n,{admin:!0,user:a.user_created}),{transaction_create:[m,p].filter((e=>null!=e)),payment:"Payment Pending",status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||d>c?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||d>c?"Pending":null,changes:d>c?"exceceed_limit":null,consume_status:"not_consumed"}}{const e=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),o=e[0].product_type.product_types,u=e[0].product_type.coin,p=await ba(t,{id:{_eq:a.poc}},["id",u],n,"client_point_of_contact"),m=e[0].coins?parseFloat(isNaN(p[0][u])?0:p[0][u]):0,h="ShakePe Points"!=o?await wv(t,n,"credit",m,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,o,u):null,f=await kv(t,n,a.poc,r,r,"debit",a.user_created,"shakepe_orders","cpp",null,a.client),y=await xv(a.client,a.id,n,t,"debit",null,"wallet",r,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),v=d-r;await I({credit_used:l+v},"client",t,a.client,n,{admin:!0,user:a.user_created});const b=await xv(a.client,a.id,n,t,"debit",null,"credit_wallet",v,c,a.user_created,a.calculation.includes("Previous")||v>c?"reserved":null,"cpp"),g=await ba(t,{_and:[{id:{_eq:a.poc}}]},["credit_used"],n,"client_point_of_contact"),_=parseFloat(isNaN(g[0].credit_used)?0:g[0].credit_used);return await I({credit_used:_+c},"client_point_of_contact",t,a.poc,n,{admin:!0,user:a.user_created}),{transaction_create:[f,b,h,y].filter((e=>null!=e)),payment:"partial_payment_recevied",status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||v>c?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||v>c?"Pending":null,remaining_amount:v,payment_received:r,changes:v>c?"exceceed_limit":null,consume_status:"not_consumed"}}}}else{if(a&&"shakepe_orders"==e.collection&&"DIY"==e.data.type){const i=await ba(t,{id:{_eq:a.client}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),o=await ba(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),r=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),s=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),l=r[0].product_type.product_types,c=r[0].product_type.coin,d=await ba(t,{id:{_eq:a.poc}},["id",c],n,"client_point_of_contact"),u=r[0].coins?parseFloat(isNaN(d[0][c])?0:d[0][c]):0,p=parseFloat(isNaN(o[0].wallet)?0:o[0].wallet),m=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),h=parseFloat("Cashback"===a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2);if(h<=m&&h<=p){const i=await xv(a.client,a.id,n,t,"debit","shakepe_orders","wallet",h,m,a.user_created,null,e.data.type),o=await kv(t,n,a.poc,h,p,"debit",a.user_created,"shakepe_orders","diy",null,a.client),r=await wv(t,n,"credit",u,s,a.user_created,a.poc,"diy",a.client,"shakepe_orders",null,l,c);return{transaction_create:[i,await wv(t,n,"debit",u+s,s,a.user_created,a.poc,"diy",a.client,"shakepe_orders",null,l,c),r,o],payment:"Payment Received"}}return{error:E.ERROR.INSUFFIENT}}if(a&&"shakepe_orders"==e.collection&&"enterprise"==e.data.type){const e=await ba(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin","discount"],n,"client_product_mapping"),i=parseFloat("Cashback"===a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2),o=e[0].product_type.product_types,r=e[0].product_type.coin,s=e[0].discount,l=await ba(t,{id:{_eq:a.poc}},["id",r],n,"client_point_of_contact"),c=l[0][r]?parseFloat(isNaN(l[0][r])?0:l[0][r]):0;if(i<=c){const e=await wv(t,n,"debit",c,i,a.user_created,a.poc,"enterprise",a.client,"shakepe_orders",null,o,r),l=await ba(t,{_and:[{client:{_eq:a.client}},{poc:{_eq:a.poc}},{status:{_in:["Order Completed","Order Processed"]}},{product_type:{product_type:{_eq:7}}},{campiagn:{_null:!0}},{consume_status:{_in:["not_consumed","partially_consumed"]}}]},["id","total_order_value","consume_status","consumed_amount","date_created"],n,"shakepe_orders"),d={create:[],update:[],delete:[]};if(0!=l.length){const e=Ev(l,i,s);await Promise.all(e.updatedRecords.map((async e=>{if("not_consumed"==e.consume_status)return null;await I({consume_status:e.consume_status,consumed_amount:e.consumed_amount},"shakepe_orders",t,e.id,n,{admin:!0,user:a.user_created}),d.create.push({shakepe_orders_id:"+",related_shakepe_orders_id:{id:e.id},amount_debit_coins:null==e?void 0:e.consumeNow})})))}return{consumer:d,transaction_create:[e],payment:"Payment Received"}}return{error:E.ERROR.INSUFFIENT}}if(a&&"corporate_load"==e.collection&&"credit"==e.data.payment_terms){const e=await ba(t,{id:{_eq:a.client_name}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),i=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),o=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,r=parseFloat(a.amount).toFixed(2);await I({credit_used:o+r},"client",t,a.client_name,n,{admin:!0,user:a.user_created});return{transaction_create:[await xv(a.client_name,a.id,n,t,"debit","corporate_load","credit_wallet",r,i,a.user_created,"reserved","Corporate Load")],payment:"Payment Pending"}}if(a&&"corporate_load"==e.collection&&"payment_gateway"==e.data.payment_mode){const e=await ba(t,{id:{_eq:a.client_name}},["wallet"],n,"client"),i=await ba(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),o=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),r=parseFloat(a.amount).toFixed(2),s=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),l=await kv(t,n,a.poc,r,s,"credit",a.user_created,"corporate_load","cpp",null,a.client_name);return{transaction_create:[await xv(a.client_name,a.id,n,t,"credit",null,"wallet",r,o,a.user_created,null,"diy"),l]}}if(a&&"poc_wallet_transfer"==e.collection){const e=await ba(t,{id:{_eq:a.poc}},["id","wallet","links_coins","shakepe_codes_coins","shakepe_points_coins"],n,"client_point_of_contact"),c=await ba(t,{_and:[{id:{_eq:a.client}},{product_type_mapping:{product_type:{_eq:a.type_of_transfer}}},{poc:{_in:[a.poc]}}]},["wallet","product_type_mapping.product_type.product_types","product_type_mapping.discount","product_type_mapping.product_type.id","product_type_mapping.product_type.coin"],n,"client");if(Number.isInteger(a.amount)&&Number(a.amount)>0){if(c.length>0){const d=parseFloat(isNaN(c[0].wallet)?0:c[0].wallet),u=c[0].product_type_mapping.find((e=>e.product_type.id==a.type_of_transfer)),p=u.discount,m=u.product_type.product_types,h=u.product_type.coin,f=parseFloat(isNaN(null==(i=e[0])?void 0:i.wallet)?0:null==(o=e[0])?void 0:o.wallet),y=await ba(t,{_and:[{client:{_eq:a.client}},{poc:{_eq:a.poc}},{status:{_in:["Order Completed","Order Processed"]}},{product_type:{product_type:{_eq:a.type_of_transfer}}},{campiagn:{_null:!0}},{consume_status:{_in:["not_consumed","partially_consumed"]}}]},["id","total_order_value","consume_status","consumed_amount","date_created","discount","add_or_reduce_discount","order_level_discount"],n,"shakepe_orders"),v={create:[],update:[],delete:[]},b={create:[],update:[],delete:[]},g=7==a.type_of_transfer?parseFloat(null==(r=e[0])?void 0:r.shakepe_points_coins):8==a.type_of_transfer?parseFloat(null==(s=e[0])?void 0:s.shakepe_codes_coins):parseFloat(null==(l=e[0])?void 0:l.links_coins);if(g>=a.amount){if(0!=y.length){const e=Ev(y,a.amount,p),i=0!=e.remainingBalance?await wv(t,n,"debit",g,e.remainingBalance,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h):null;i&&b.update.push({transfer_poc:"+",id:i});await Promise.all(e.updatedRecords.map((async e=>{var i;if("not_consumed"!=e.consume_status){const o=await ba(t,{id:{_eq:a.poc}},["id","wallet","links_coins","shakepe_codes_coins","shakepe_points_coins"],n,"client_point_of_contact"),r=parseFloat(null==(i=o[0])?void 0:i.shakepe_points_coins);await I({consume_status:e.consume_status,consumed_amount:e.consumed_amount},"shakepe_orders",t,e.id,n,{admin:!0,user:a.user_created}),console.log(h);const s=await wv(t,n,"debit",r,e.consumeNow,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h);return v.create.push({poc_wallet_transfer_id:"+",shakepe_orders_id:{id:e.id},amount_debit_coins:e.consumeNow,amount_credit_poc:e.return_amount}),b.update.push({transfer_poc:"+",id:s}),s}return null})));const o=await kv(t,n,a.poc,e.totalValue,f,"credit",a.user_created,null,"cpp",null,a.client),r=await xv(a.client,a.id,n,t,"credit","shakepe_orders","wallet",e.totalValue,d,a.user_created,null,"cpp");return b.update.push({transfer_poc:"+",id:o}),b.update.push({transfer_poc:"+",id:r}),{cpp_ledger:b,amount_utilized:v}}{const e=a.amount-a.amount*p/100,i=await wv(t,n,"debit",g,a.amount,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h),o=await kv(t,n,a.poc,e,f,"credit",a.user_created,null,"cpp",null,a.client),r=await xv(a.client,a.id,n,t,"credit","shakepe_orders","wallet",e,d,a.user_created,null,"cpp");return{cpp_ledger:{create:[],update:[{transfer_poc:"+",id:o},{transfer_poc:"+",id:i},{transfer_poc:"+",id:r}],delete:[]}}}}return{error:E.ERROR.INSUFFIENT}}return{error:E.ERROR.PRODUCT_TYPE}}return{error:E.ERROR.IS_NAN}}}}}catch(e){return{error:E.ERROR.INSUFFIENT}}},xv=async(e,t,n,a,i,o,r,s,l,c,d,u)=>{const p="credit"==i?parseFloat(l)+parseFloat(s):parseFloat(l)-parseFloat(s);return await I("outstanding_wallet"==r?{outstanding_wallet:p}:"credit_wallet"==r?{credit_wallet:p}:{wallet:p},"client",a,e,n,{admin:!0,user:c}),await K(a,"cpp_ledger",{opening_balance:l,closing_balance:p,client_id:e,amount:"credit"==i?s:null,wallet_type:r,status:i,tag:d||("perform_invoice"==o?"perform_invoice":null),debit_amount:"debit"==i?s:null,order_id:"shakepe_orders"==o?t:null,load_id:"corporate_load"==o?t:null,pi_id:"perform_invoice"==o?t:null,pi:"perform_invoice"==o?t:null,order:"shakepe_orders"==o?t:null,load:"corporate_load"==o?t:null,order_source:u||"cpp"},n,{admin:!0,user:c})},kv=async(e,t,n,a,i,o,r,s,l,c,d)=>{const u="credit"==o?parseFloat(i)+parseFloat(a):parseFloat(i)-parseFloat(a);return await I({wallet:u},"client_point_of_contact",e,n,t,{admin:!0,user:r}),await K(e,"cpp_ledger",{opening_balance:i,closing_balance:u,amount:"credit"==o?a:null,wallet_type:"poc_wallet",status:o,tag:null,debit_amount:"debit"==o?a:null,load_id:"corporate_load"==s?c:null,pi_id:"perform_invoice"==s?c:null,pi:"perform_invoice"==s?c:null,order:"shakepe_orders"==s?c:null,order_id:"shakepe_orders"==s?c:null,load:"corporate_load"==s?c:null,order_source:l||"cpp",poc_id:n,client_id:d},t,{admin:!0,user:r})},wv=async(e,t,n,a,i,o,r,s,l,c,d,u,p)=>{const m="credit"==n?parseFloat(a)+parseFloat(i):parseFloat(a)-parseFloat(i);return await I({[p]:m},"client_point_of_contact",e,r,t,{admin:!0,user:o}),await K(e,"cpp_ledger",{opening_balance:a,closing_balance:m,amount:"credit"==n?i:null,wallet_type:u,status:n,tag:null,debit_amount:"debit"==n?i:null,order:"shakepe_orders"==c?d:null,order_id:"shakepe_orders"==c?d:null,order_source:s||"cpp",client_id:l,poc_id:r},t,{admin:!0,user:o})};function Ev(e,t,n){const a=e.reduce(((e,t)=>e+(t.total_order_value-parseFloat(t.consumed_amount))),0);let i=Math.min(a,t);const o=t-a>0?t-a:0;let r=0;for(const t of e){if(i<=0)break;const n=t.total_order_value-parseFloat(t.consumed_amount),a=Math.min(n,i);t.consumed_amount=(parseFloat(t.consumed_amount)+a).toFixed(2),t.consumeNow=a,t.return_amount=a-((null==t?void 0:t.order_level_discount)?a*(null==t?void 0:t.order_level_discount)/100:a*(null==t?void 0:t.discount)/100),r+=t.return_amount,t.consume_status=t.total_order_value===parseFloat(t.consumed_amount)?"consumed":"partially_consumed",delete e.total_order_value,delete t.date_created,i-=a}return{updatedRecords:e,remainingBalance:o,totalValue:r+o-o*n/100}}const Sv=13,Kv=14,Rv=15,Iv=16,Tv=17,jv=18,Ov=19,Av=20,Cv=21,Pv=22,Nv=23,Dv=24,Mv=25,Lv=26,Fv=28,Uv=45,qv=2,Jv=3,Vv=4,Gv=5,Bv=6,zv=7,Yv=8,$v=9,Wv=10,Hv=11,Qv=12,Zv=13,Xv=14,eb=15,tb=16,nb=17,ab=18,ib=19,ob=20,rb=21,sb=22,lb=23,cb=26;var db=async({filter:t,action:n},{services:a,exceptions:i,database:o,getSchema:r})=>{const{ItemsService:s,MailService:l}=a,{InvalidPayloadException:c}=i,d=await r();async function u(e,t){try{const n={},a=new s("error_log_zeus",{schema:await r(),accountability:{admin:!0}});n.collection_name=t,n.error=String(e),await a.createOne({error:JSON.stringify(n)})}catch(e){return e}}t("shakepe_orders.items.create",(e=>{if(""==e.discount)return{...e,discount:0}})),t("shakepe_orders.items.create",(async(e,t,n)=>{var i,o,r,s,l,u,p;if("enterprise"==(null==e?void 0:e.type)||"DIY"==(null==e?void 0:e.type)){const t=await gv(null==e?void 0:e.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:e});if(null==t?void 0:t.error)throw new c(null==t?void 0:t.error);return null==e||delete e.csv_file,e.consumer=(null==t?void 0:t.consumer)?null==t?void 0:t.consumer:null,null==t||delete t.consumer,{...e,...t}}{const t=parseFloat((null==e?void 0:e.service_amount)&&(null==e?void 0:e.service_fee)?e.service_amount:0),n=parseFloat(e.discount?e.discount:0),m=parseFloat((null==e?void 0:e.order_level_discount)?e.order_level_discount:0),h=(null==e?void 0:e.filtering_with_product_type)===E.GPR,f=(null==e?void 0:e.filtering_with_product_type)==E.GIFT_CARD,y=(null==e?void 0:e.filtering_with_product_type)==E.VOUCHERS,v=(null==e?void 0:e.filtering_with_product_type)==E.LINKS,b=(null==e?void 0:e.filtering_with_product_type)==E.SHAKEPEPOINT,g=(null==e?void 0:e.filtering_with_product_type)==E.SHAKEPECODE,_=e.commerical;switch(await ba(a,{id:{_eq:e.client}},E.FIELDSDATA.CLIENT,d,"client"),!0){case h:const x=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),k=x-x*n/100+t;if(m!=n&&(null==e?void 0:e.add_or_reduce_discount)){const i=x-x*m/100+t,o={...e,total_value:_==E.UPFRONT&&e.add_or_reduce_discount?i:null,original_value:_==E.UPFRONT?k:null,cashback:_!=E.UPFRONT?x*m/100:null,total_value_cashback:_!=E.UPFRONT?x+t:null,previous_cashback:_!=E.UPFRONT?x*n/100:null,total_order_value:_==E.UPFRONT?x:null},r=await gv(null==o?void 0:o.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:o});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...o,...r}}{const i={...e,original_value:_==E.UPFRONT?k:null,cashback:_!=E.UPFRONT?x*n/100:null,total_value_cashback:_!=E.UPFRONT?x+t:null,total_order_value:_==E.UPFRONT?x:null},o=await gv(null==i?void 0:i.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:i});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...i,...o}}case f:let w=0,S=0,K=0;null==(i=e.brand_sku_mapping)||i.create.forEach((e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:o}=e.gift_card_order_details_id;if(K+=n*a,w+=(n-n*i/100)*a,i<o||i>o&&t){S+=(n-n*o/100)*a}else{S+=(n-n*i/100)*a}}));const R=w+t,I={...e,total_value:_==E.UPFRONT&&w!=S?S+t:null,original_value:_==E.UPFRONT?R:null,cashback:_!=E.UPFRONT&&w!=S?K-S:_!=E.UPFRONT?K-w:null,previous_cashback:_!=E.UPFRONT&&w!=S?K-w:null,total_value_cashback:_!=E.UPFRONT?K+t:null,total_order_value:_==E.UPFRONT?K:null},T=await gv(null==I?void 0:I.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:I});if(null==T?void 0:T.error)throw new c(null==T?void 0:T.error);return{...I,...T};case y:let j=0,O=0,A=0;(null==(o=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:o.create)&&(null==(r=null==e?void 0:e.brand_sku_mapping_voucher)||r.create.forEach((e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:o}=e;if(A+=n*a,j+=(n-n*i/100)*a,i<o||i>o&&t){O+=(n-n*o/100)*a}else{O+=(n-n*i/100)*a}})));const C=j+t,P={...e,total_value:_==E.UPFRONT&&j!=O?O+t:null,original_value:_==E.UPFRONT?C:null,cashback:_!=E.UPFRONT&&j!=O?A-O:_!=E.UPFRONT?A-j:null,previous_cashback:_!=E.UPFRONT&&j!=O?A-j:null,total_value_cashback:_!=E.UPFRONT?A+t:null,total_order_value:_==E.UPFRONT?A:null},N=await gv(null==P?void 0:P.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:P});if(null==N?void 0:N.error)throw new c(null==N?void 0:N.error);return{...P,...N};case v:if(null==(s=null==e?void 0:e.generic_links_details)?void 0:s.create){let i=0,o=0,r=0;null==(l=null==e?void 0:e.generic_links_details)||l.create.map((t=>{const{denomination:a,quantity:s}=t;i+=a*s,o+=a*s*(n/100),r+=e.add_or_reduce_discount?a*s*(e.order_level_discount/100):a*s*(n/100)}));const s={...e,total_value:_==E.UPFRONT&&e.add_or_reduce_discount?i-r+t:null,original_value:_==E.UPFRONT?i-o+t:null,cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?r:_!=E.UPFRONT?o:null,previous_cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?o:null,total_value_cashback:_!=E.UPFRONT?i+t:null,total_order_value:_==E.UPFRONT?i:null},u=await gv(null==s?void 0:s.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:s});if(null==u?void 0:u.error)throw new c(null==u?void 0:u.error);return{...s,...u}}if(null==(u=null==e?void 0:e.catalog_links_orders)?void 0:u.create){let n=0,i=0,o=0;null==(p=null==e?void 0:e.catalog_links_orders)||p.create.map((t=>{const{denomination:a,total_no_links:r}=t;n+=a*r,i+=a*r*(e.discount/100),o+=e.order_level_discount&&(null==e?void 0:e.add_or_reduce_discount)?a*r*(e.order_level_discount/100):a*r*(e.discount/100)}));const r={...e,total_value:_==E.UPFRONT&&e.add_or_reduce_discount?n-o+t:null,original_value:_==E.UPFRONT?n-i+t:null,cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?o:_!=E.UPFRONT?i:null,previous_cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?i:null,total_value_cashback:_!=E.UPFRONT?n+t:null,total_order_value:_==E.UPFRONT?n:null},s=await gv(null==r?void 0:r.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:r});if(null==s?void 0:s.error)throw new c(null==s?void 0:s.error);return{...r,...s}}break;case b:const D=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),M=D-D*n/100;if(m>n&&(null==e?void 0:e.add_or_reduce_discount)||m<n){const i=D-D*m/100+t,o={...e,total_value:_==E.UPFRONT&&e.add_or_reduce_discount?i:null,original_value:_==E.UPFRONT?M+t:null,cashback:_!=E.UPFRONT&&(null==e?void 0:e.add_or_reduce_discount)?D*m/100:null,total_value_cashback:_!=E.UPFRONT?D+t:null,previous_cashback:_!=E.UPFRONT&&(null==e?void 0:e.add_or_reduce_discount)?D*n/100:null,total_order_value:_==E.UPFRONT?D:null},r=await gv(null==o?void 0:o.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:o});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...o,...r}}{const i={...e,original_value:_==E.UPFRONT?M+t:null,cashback:_!=E.UPFRONT?D*n/100:null,total_value_cashback:_!=E.UPFRONT?D+t:null,total_order_value:_==E.UPFRONT?D:null},o=await gv(null==i?void 0:i.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:i});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...i,...o}}case g:let L=0,F=0,U=0;e.shakepe_codes_orders.create.map((t=>{const{value_of_code:a,total_no_of_codes:i}=t;L+=a*i,F+=a*i*(n/100),U+=m&&(null==e?void 0:e.add_or_reduce_discount)?a*i*(m/100):a*i*(n/100)}));const q={...e,total_value:_==E.UPFRONT&&e.add_or_reduce_discount?L-U+t:null,original_value:_==E.UPFRONT?L-F+t:null,cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?U:_!=E.UPFRONT?F:null,previous_cashback:_!=E.UPFRONT&&e.add_or_reduce_discount?F:null,total_value_cashback:_!=E.UPFRONT?L+t:null,total_order_value:_==E.UPFRONT?L:null},J=await gv(null==q?void 0:q.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:q});if(null==J?void 0:J.error)throw new c(null==J?void 0:J.error);return{...q,...J}}}})),t("shakepe_orders.items.update",(async(e,t)=>{var n,a,i;try{const o=new s("shakepe_orders",{schema:await r(),accountability:{admin:!0}}),l=await o.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["filtering_with_product_type","status","brand_sku_mapping_voucher.id","brand_sku_mapping_voucher.quantity","brand_sku_mapping_voucher.denomination","brand_sku_mapping_voucher.vendor_detail.*"]});if(e.status==E.ORDERPROCESSED&&e.status==E.ORDEROPEN||!e.brand_sku_mapping_voucher||(null==(n=l[0])?void 0:n.status)!=E.ORDERPROCESSED&&(null==(a=l[0])?void 0:a.status)!=E.ORDEROPEN||(null==(i=l[0])?void 0:i.filtering_with_product_type)!=E.VOUCHERS||0==l.length)return e;return l.map((t=>{var n,a;if(0!=t.brand_sku_mapping_voucher.length&&0!=(null==(a=null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update)?void 0:a.length))return t.brand_sku_mapping_voucher.map((t=>{if(t.vendor_detail.reduce(((e,t)=>e+t.quantity?parseInt(t.quantity):0),0)+e.brand_sku_mapping_voucher.update.filter((e=>e.id==t.id)).reduce(((e,n)=>e+n.vendor_detail.create.reduce(((e,n)=>e+(null==n?void 0:n.quantity)?parseInt(n.quantity):t.quantity),0)),0)<=t.quantity)return e;throw{error:E.VENDORQTYEXCEDDED}}))})).flat(1)[0]}catch(e){if((null==e?void 0:e.error)==E.VENDORQTYEXCEDDED)throw new c(E.VENDORQTYEXCEDDED);u(e,"shakepe_order")}})),t("shakepe_orders.items.create",(e=>{var t;try{if(null==(t=null==e?void 0:e.calculation)?void 0:t.includes(E.PREVIOUS))return e.credit_addional_discount=E.APPROVEPENDIND,e.approval_status=E.PENDING,e.status=E.APPROVALPENDING,e}catch(e){u(e,"shakepe_order")}})),t("client.items.create",(async e=>{var t;try{if((null==e?void 0:e.client_type)==E.CORPORATE){if(!(null==(t=null==e?void 0:e.client_address_details)?void 0:t.create)||e.client_address_details.create.every((e=>e.client_address_id.gstin)))return e;throw{error:E.GSTINMANDATORY}}}catch(e){if((null==e?void 0:e.error)==E.GSTINMANDATORY)throw new c(E.GSTINMANDATORY);u(e,"client")}})),t("client.items.update",(async(e,t)=>{var n,i,o,l,p,m;try{const c=new s("client",{schema:await r(),accountability:{admin:!0}}),u=await c.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["poc.client_address.client_address_id.gstin","id","client_limit"]});if("approved"==(null==e?void 0:e.credit_limit_status)){return await gv(t.keys[0],{collection:"client",item:"update",schema:d,services:a,data:e,id:t.keys[0]})}if((null==e?void 0:e.client_type)==E.CORPORATE){let t=null==(i=null==(n=u[0])?void 0:n.poc)?void 0:i.map((e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.every((e=>e.client_address_id.gstin)))})).every((e=>1==e));if(t=t=(null==(o=null==e?void 0:e.poc)?void 0:o.update)?e.poc.update.map((e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.update.every((e=>e.client_address_id.gstin)))})).every((e=>1==e)):0==(null==(p=null==(l=null==e?void 0:e.poc)?void 0:l.update)?void 0:p.length),t&&(t=null==(m=null==e?void 0:e.poc)?void 0:m.create.map((e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.create.every((e=>e.client_address_id.gstin)))})).every((e=>1==e))),t)return e;throw{error:E.GSTINMANDATORY}}}catch(e){if((null==e?void 0:e.error)==E.GSTINMANDATORY)throw new c(E.GSTINMANDATORY);u(e,"client")}})),t("client.items.create",(async e=>{var t,n;try{if(null==(t=e.product_type_mapping)?void 0:t.create){const t=(null==(n=null==e?void 0:e.product_type_mapping)?void 0:n.create)?e.product_type_mapping.create:[];if([...new Set(t.map((e=>e.product_type)))].length!=t.length)throw{error:E.DUPLICATEPRODUCT};return e}}catch(e){if((null==e?void 0:e.error)==E.DUPLICATEPRODUCT)throw new c(E.DUPLICATEPRODUCT);u(e,"client")}})),t("client.items.update",(async(e,t)=>{var n,a;try{const i=new s("client",{schema:await r(),accountability:{admin:!0}}),o=await i.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["product_type_mapping.product_type"]});if(o.length>0&&(null==(n=o[0])?void 0:n.product_type_mapping)&&(null==(a=null==e?void 0:e.product_type_mapping)?void 0:a.create.length)>0){o[0].product_type_mapping.push(...e.product_type_mapping.create);const t=o[0].product_type_mapping;if([...new Set(t.map((e=>e.product_type)))].length!=t.length)throw{error:E.DUPLICATEPRODUCT};return e}}catch(e){if((null==e?void 0:e.error)==E.DUPLICATEPRODUCT)throw new c(E.DUPLICATEPRODUCT);u(e,"client")}})),t("client.items.create",(async e=>{var t;try{if((null==(t=null==e?void 0:e.client_address_details)?void 0:t.create.length)>0){const t=e.client_address_details.create;let n=e;return t.forEach((t=>{var a,i;const o=null==(i=null==(a=null==t?void 0:t.client_address_id)?void 0:a.point_of_contact)?void 0:i.create;let r=0;o?o.forEach((e=>{if(e.primary&&(r++,r>1))throw{error:E.PRIMARYCONTACT}})):n=e})),e}}catch(e){if((null==e?void 0:e.error)==E.PRIMARYCONTACT)throw new c(E.PRIMARYCONTACT);u(e,"client")}})),t("client.items.create",(async e=>{const t=e;return t.product_type_mapping.update=[],t.previous_discount=t.discount,t})),t("client_product_mapping.items.update",(async(t,n,i)=>{var r,s,p,m,h,f,y,v,b,g,_,x,k,w,S,K,j,O,A,C,P,N,D,M,L,F,U,q,J,V,G,B,z,Y,$,W,H,Q,Z,X,ee,te,ne,ae,ie,oe,re,se,le,ce,de,ue,pe,me,he,fe,ye,ve,be,ge,_e,xe,ke,we,Ee,Se,Ke,Re,Ie,Te,je,Oe,Ae,Ce,Pe,Ne,De,Me,Le,Fe,Ue,qe,Je,Ve,Ge,Be,ze,Ye,$e,We,He,Qe,Ze,Xe,et,tt,nt,at,it,ot,rt,st,lt,ct,dt,ut,pt,mt,ht,ft,yt,vt,bt,gt,_t,xt,kt,wt,Et,St,Kt,Rt,It,Tt,jt,Ot,At,Ct,Pt,Nt,Dt,Mt,Lt,Ft,Ut,qt,Jt,Vt,Gt,Bt,zt,Yt,$t,Wt,Ht,Qt,Zt,Xt,en,tn,nn,an,on,rn,sn,ln,cn,dn,un,pn,mn,hn,fn,yn,vn,bn,gn,_n,xn,kn,wn,En,Sn,Kn,Rn,In,Tn,jn,On,An,Cn,Pn,Nn,Dn,Mn,Ln,Fn,Un,qn,Jn,Vn,Gn,Bn,zn,Yn,$n,Wn,Hn,Qn,Zn,Xn,ea,ta,na,aa,ia,oa,ra,sa,la,ca,da,ua,pa,ma,ha,fa,ya,ga,_a,xa,ka,wa,Ea,Sa,Ka,Ra,Ia,Ta,ja,Oa,Aa,Ca,Pa,Na,Da,Ma,La,Fa,Ua,qa,Ja,Va,Ga,Ba,za,Ya,$a,Wa,Ha,Qa,Za,Xa,ei,ti,ni,ai,ii,oi,ri,si,li,ci,di,ui,pi,mi,hi,fi,yi,vi,bi,gi,_i,xi,ki,wi,Ei,Si,Ki,Ri,Ii,Ti,ji,Oi,Ai,Ci,Pi,Ni,Di,Mi,Li,Fi,Ui,qi,Ji,Vi,Gi,Bi,zi,Yi,$i,Wi,Hi,Qi,Zi,Xi,eo,to,no,ao,io,oo,ro,so,lo,co,uo,po,mo,ho,fo,yo,vo,bo,go,_o,xo,ko,wo,Eo,So,Ko,Ro,Io,To,jo,Oo,Ao,Co,Po,No,Do,Mo,Lo,Fo,Uo,qo,Jo,Vo,Go,Bo,zo,Yo,$o,Wo,Ho,Qo,Zo,Xo,er,tr,nr,ar,ir,or,rr,sr,lr,cr,dr,ur,pr,mr,hr,fr,yr,vr,br,gr,_r,xr,kr,wr,Er,Sr,Kr,Rr,Ir,Tr,jr,Or,Ar,Cr,Pr,Nr,Dr,Mr,Lr,Fr,Ur,qr,Jr,Vr,Gr,Br,zr,Yr,$r,Wr,Hr,Qr,Zr,Xr,es,ts,ns,as,is,os,rs,ss,ls,cs,ds,us,ps,ms,hs,fs,ys,vs,bs,gs,_s,xs,ks,ws,Es,Ss,Ks,Rs,Is,Ts,js,Os,As,Cs,Ps,Ns,Ds,Ms,Ls,Fs,Us,qs,Js,Vs,Gs,Bs,zs,Ys,$s,Ws,Hs,Qs,Zs,Xs,el,tl,nl,al,il,ol,rl,sl,ll,cl,dl,ul,pl,ml,hl,fl,yl,vl,bl,gl,_l,xl,kl,wl,El,Sl,Kl,Rl,Il,Tl,jl,Ol,Al,Cl,Pl,Nl,Dl,Ml,Ll,Fl,Ul,ql,Jl,Vl,Gl,Bl,zl,Yl,$l,Wl,Hl,Ql,Zl,Xl,ec,tc,nc,ac,ic,oc,rc,sc,lc,cc,dc,uc,pc,mc,hc,fc,yc,vc,bc,gc,_c,xc,kc,wc,Ec,Sc,Kc,Rc,Ic,Tc,jc,Oc,Ac,Cc,Pc,Nc,Dc,Mc,Lc;const Fc={id:{_eq:null==n?void 0:n.keys[0]}},Uc={id:{_eq:null==(r=null==i?void 0:i.accountability)?void 0:r.user}},qc={id:{_eq:e.env.ACCOUNT_ROLE}},Jc=null==(p=null==(s=(await ba(a,qc,["users.email"],d,"directus_roles"))[0])?void 0:s.users)?void 0:p.map((e=>e.email)),Vc=await ba(a,Uc,["first_name"],d,"directus_users"),Gc=E.FIELDSDATA.CLIENT_UPDATE,Bc=await ba(a,Fc,Gc,d,n.collection);new l({schema:d,knex:o});const zc={id:{_eq:e.env.MANAGAMENT_ROLE}},Yc=await ba(a,zc,["users.email","users.id"],d,"directus_roles"),$c=null==(h=null==(m=Yc[0])?void 0:m.users)?void 0:h.map((e=>e.email)),Wc=null==(y=null==(f=Yc[0])?void 0:f.users)?void 0:y.map((e=>e.id));if(Bc.length>0&&!(null==(b=null==(v=t[0])?void 0:v.client_product_mapping)?void 0:b.update))if("Credit"==Bc[0].payment_terms&&(null==(g=Bc[0])?void 0:g.credit_limt)&&"N"==Bc[0].action&&(null==t?void 0:t.approval_status)==E.APPROVED&&(await gv(null==(_=Bc[0])?void 0:_.id,{collection:"client_product_mapping",item:"update",schema:d,services:a,data:{id:Bc[0].id}}),t.action="Y"),(null==(x=Bc[0])?void 0:x.approval_status)!=E.PENDING)try{if((null==t?void 0:t.approval_status)==E.APPROVED){if((null==(k=Bc[0])?void 0:k.changes)==E.COMMERICAL){const a={to:[null==(S=null==(w=Bc[0])?void 0:w.user_updated)?void 0:S.email],users:[null==(j=null==(K=Bc[0])?void 0:K.user_updated)?void 0:j.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(A=null==(O=Bc[0])?void 0:O.client_id)?void 0:A.client_name,client_email:null==(P=null==(C=Bc[0])?void 0:C.client_id)?void 0:P.client_email,client_pan:null==(D=null==(N=Bc[0])?void 0:N.client_id)?void 0:D.pan_number,product_type:null==(M=Bc[0])?void 0:M.product,payment_terms:null==(L=Bc[0])?void 0:L.payment_terms,previous_commercials:(null==(F=Bc[0])?void 0:F.commerical)==E.UPFRONT?E.Cashback:E.UPFRONT,new_commercials:null==(U=Bc[0])?void 0:U.commerical,approved:null==(q=Vc[0])?void 0:q.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"approved",client_name:null==(V=null==(J=Bc[0])?void 0:J.client_id)?void 0:V.client_name,client_email:null==(B=null==(G=Bc[0])?void 0:G.client_id)?void 0:B.client_email,client_pan:null==(Y=null==(z=Bc[0])?void 0:z.client_id)?void 0:Y.pan_number,product_type:null==($=Bc[0])?void 0:$.product,payment_terms:null==(W=Bc[0])?void 0:W.payment_terms,previous_commercials:(null==(H=Bc[0])?void 0:H.commerical)==E.UPFRONT?E.Cashback:E.UPFRONT,new_commercials:null==(Q=Bc[0])?void 0:Q.commerical,approved:null==(Z=Vc[0])?void 0:Z.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Rv}`,a).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${$v}`,a).then((e=>e)).catch((e=>e)),t.changes=null,t}if((null==(X=Bc[0])?void 0:X.changes)==E.CREDITDAYS){const a={to:[null==(te=null==(ee=Bc[0])?void 0:ee.user_updated)?void 0:te.email],users:[null==(ae=null==(ne=Bc[0])?void 0:ne.user_updated)?void 0:ae.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(oe=null==(ie=Bc[0])?void 0:ie.client_id)?void 0:oe.client_name,client_email:null==(se=null==(re=Bc[0])?void 0:re.client_id)?void 0:se.client_email,client_pan:null==(ce=null==(le=Bc[0])?void 0:le.client_id)?void 0:ce.pan_number,product_type:null==(de=Bc[0])?void 0:de.product,payment_terms:null==(ue=Bc[0])?void 0:ue.payment_terms,previous_credit:null==(pe=Bc[0])?void 0:pe.previous_credit,modify_credit:null==(me=Bc[0])?void 0:me.credit_days,approved:null==(he=Vc[0])?void 0:he.first_name},body_data:{filter:"approved",client_name:null==(ye=null==(fe=Bc[0])?void 0:fe.client_id)?void 0:ye.client_name,client_email:null==(be=null==(ve=Bc[0])?void 0:ve.client_id)?void 0:be.client_email,client_pan:null==(_e=null==(ge=Bc[0])?void 0:ge.client_id)?void 0:_e.pan_number,product_type:null==(xe=Bc[0])?void 0:xe.product,payment_terms:null==(ke=Bc[0])?void 0:ke.payment_terms,previous_credit:null==(we=Bc[0])?void 0:we.previous_credit,modify_credit:null==(Ee=Bc[0])?void 0:Ee.credit_days,approved:null==(Se=Vc[0])?void 0:Se.first_name},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Iv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Qv}`,a).then((e=>e)).catch((e=>e)),t.changes=null,t.previous_credit=null,t}if((null==(Ke=Bc[0])?void 0:Ke.changes)==E.PAYMENTTERMS){const a={to:[null==(Ie=null==(Re=Bc[0])?void 0:Re.user_updated)?void 0:Ie.email],users:[null==(je=null==(Te=Bc[0])?void 0:Te.user_updated)?void 0:je.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(Ae=null==(Oe=Bc[0])?void 0:Oe.client_id)?void 0:Ae.client_name,client_email:null==(Pe=null==(Ce=Bc[0])?void 0:Ce.client_id)?void 0:Pe.client_email,client_pan:null==(De=null==(Ne=Bc[0])?void 0:Ne.client_id)?void 0:De.pan_number,product_type:null==(Me=Bc[0])?void 0:Me.product,payment_terms:null==(Le=Bc[0])?void 0:Le.payment_terms,previous_credit:null==(Fe=Bc[0])?void 0:Fe.previous_credit,modify_credit:null==(Ue=Bc[0])?void 0:Ue.credit_days,approved:null==(qe=Vc[0])?void 0:qe.first_name},body_data:{filter:"approved",client_name:null==(Ve=null==(Je=Bc[0])?void 0:Je.client_id)?void 0:Ve.client_name,client_email:null==(Be=null==(Ge=Bc[0])?void 0:Ge.client_id)?void 0:Be.client_email,client_pan:null==(Ye=null==(ze=Bc[0])?void 0:ze.client_id)?void 0:Ye.pan_number,product_type:null==($e=Bc[0])?void 0:$e.product,payment_terms:null==(We=Bc[0])?void 0:We.payment_terms,previous_credit:null==(He=Bc[0])?void 0:He.previous_credit,modify_credit:null==(Qe=Bc[0])?void 0:Qe.credit_days,approved:null==(Ze=Vc[0])?void 0:Ze.first_name},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Tv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${eb}`,a).then((e=>e)).catch((e=>e)),t.changes=null,t}if((null==(Xe=Bc[0])?void 0:Xe.changes)==E.DISCOUNT){const a={to:[null==(tt=null==(et=Bc[0])?void 0:et.user_updated)?void 0:tt.email],users:[null==(at=null==(nt=Bc[0])?void 0:nt.user_updated)?void 0:at.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(ot=null==(it=Bc[0])?void 0:it.client_id)?void 0:ot.client_name,client_email:null==(st=null==(rt=Bc[0])?void 0:rt.client_id)?void 0:st.client_email,client_pan:null==(ct=null==(lt=Bc[0])?void 0:lt.client_id)?void 0:ct.pan_number,product_type:null==(dt=Bc[0])?void 0:dt.product,payment_terms:null==(ut=Bc[0])?void 0:ut.payment_terms,previous_discount:null==(pt=Bc[0])?void 0:pt.previous_discount,modify_discount:null==(mt=Bc[0])?void 0:mt.discount,approved:null==(ht=Vc[0])?void 0:ht.first_name},body_data:{filter:"approved",client_name:null==(yt=null==(ft=Bc[0])?void 0:ft.client_id)?void 0:yt.client_name,client_email:null==(bt=null==(vt=Bc[0])?void 0:vt.client_id)?void 0:bt.client_email,client_pan:null==(_t=null==(gt=Bc[0])?void 0:gt.client_id)?void 0:_t.pan_number,product_type:null==(xt=Bc[0])?void 0:xt.product,payment_terms:null==(kt=Bc[0])?void 0:kt.payment_terms,previous_discount:null==(wt=Bc[0])?void 0:wt.previous_discount,modify_discount:null==(Et=Bc[0])?void 0:Et.discount,approved:null==(St=Vc[0])?void 0:St.first_name},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${jv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ab}`,a).then((e=>e)).catch((e=>e)),t.previous_discount=null,t.changes=null,t}if((null==(Kt=Bc[0])?void 0:Kt.changes)==E.BRANDDISCOUNT){const i={to:[null==(It=null==(Rt=Bc[0])?void 0:Rt.user_created)?void 0:It.email],users:[null==(jt=null==(Tt=Bc[0])?void 0:Tt.user_created)?void 0:jt.id],cc:Jc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==(At=null==(Ot=Bc[0])?void 0:Ot.client_id)?void 0:At.client_name,client_email:null==(Pt=null==(Ct=Bc[0])?void 0:Ct.client_id)?void 0:Pt.client_email,client_pan:null==(Dt=null==(Nt=Bc[0])?void 0:Nt.client_id)?void 0:Dt.pan_number,product_type:null==(Mt=Bc[0])?void 0:Mt.product,noofbrands:null==(Lt=Bc[0])?void 0:Lt.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(Ft=Vc[0])?void 0:Ft.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,i).then((e=>i)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ob}`,i).then((e=>e)).catch((e=>e));const o=Bc[0].client_product_mapping.map((e=>e.id));return T({previous_discount:0},"client_brand_commercial",a,o,d,null),t.changes=null,t}if((null==(Ut=Bc[0])?void 0:Ut.changes)==E.NEW&&(null==(Jt=null==(qt=Bc[0])?void 0:qt.client_product_mapping)?void 0:Jt.length)>0){const a={to:[null==(Gt=null==(Vt=Bc[0])?void 0:Vt.user_created)?void 0:Gt.email],users:[null==(zt=null==(Bt=Bc[0])?void 0:Bt.user_created)?void 0:zt.id],cc:Jc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==($t=null==(Yt=Bc[0])?void 0:Yt.client_id)?void 0:$t.client_name,client_email:null==(Ht=null==(Wt=Bc[0])?void 0:Wt.client_id)?void 0:Ht.client_email,client_pan:null==(Zt=null==(Qt=Bc[0])?void 0:Qt.client_id)?void 0:Zt.pan_number,product_type:null==(Xt=Bc[0])?void 0:Xt.product,noofbrands:null==(en=Bc[0])?void 0:en.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(tn=Vc[0])?void 0:tn.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ob}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands}}else{if((null==(nn=Bc[0])?void 0:nn.approval_status)==E.DECLINED){t.approval_status=E.PENDING,t.status=E.INACTIVE,t.changes=(null==(an=Bc[0])?void 0:an.changes)?null==(on=Bc[0])?void 0:on.changes:(null==(rn=Bc[0])?void 0:rn.discount)<(null==t?void 0:t.discount)?E.DISCOUNT:(null==t?void 0:t.credit_days)>(null==(sn=Bc[0])?void 0:sn.previous_credit)?E.CREDITDAYS:null;null==(dn=null==(cn=null==(ln=Bc[0])?void 0:ln.client_product_mapping)?void 0:cn.filter((e=>e.status==E.DECLINED)))||dn.map((async e=>{await I({status:E.PENDING},"client_brand_commercial",a,e.id,d,i.accountability)}));return t}if(null==t?void 0:t.commerical){const a={to:$c,users:Wc,cc:Jc,subject_data:{sub:"request",data:t,client_name:null==(pn=null==(un=Bc[0])?void 0:un.client_id)?void 0:pn.client_name,client_email:null==(hn=null==(mn=Bc[0])?void 0:mn.client_id)?void 0:hn.client_email,client_pan:null==(yn=null==(fn=Bc[0])?void 0:fn.client_id)?void 0:yn.pan_number,product_type:null==(vn=Bc[0])?void 0:vn.product,payment_terms:null==(bn=Bc[0])?void 0:bn.payment_terms,previous_commercials:null==(gn=Bc[0])?void 0:gn.commerical,new_commercials:null==t?void 0:t.commerical,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(xn=null==(_n=Bc[0])?void 0:_n.client_id)?void 0:xn.client_name,client_email:null==(wn=null==(kn=Bc[0])?void 0:kn.client_id)?void 0:wn.client_email,client_pan:null==(Sn=null==(En=Bc[0])?void 0:En.client_id)?void 0:Sn.pan_number,product_type:null==(Kn=Bc[0])?void 0:Kn.product,payment_terms:null==(Rn=Bc[0])?void 0:Rn.payment_terms,previous_commercials:null==(In=Bc[0])?void 0:In.commerical,new_commercials:null==t?void 0:t.commerical,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Rv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Yv}`,a).then((e=>e)).catch((e=>e)),t.approval_status=E.PENDING,t.status=E.INACTIVE,t.changes=E.COMMERICAL,t}if((null==(Tn=Bc[0])?void 0:Tn.discount)<(null==t?void 0:t.discount)){const a={to:$c,users:Wc,cc:Jc,subject_data:{sub:"request",data:t,client_name:null==(On=null==(jn=Bc[0])?void 0:jn.client_id)?void 0:On.client_name,client_email:null==(Cn=null==(An=Bc[0])?void 0:An.client_id)?void 0:Cn.client_email,client_pan:null==(Nn=null==(Pn=Bc[0])?void 0:Pn.client_id)?void 0:Nn.pan_number,product_type:null==(Dn=Bc[0])?void 0:Dn.product,payment_terms:null==(Mn=Bc[0])?void 0:Mn.payment_terms,previous_discount:null==(Ln=Bc[0])?void 0:Ln.discount,modify_discount:null==t?void 0:t.discount,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(Un=null==(Fn=Bc[0])?void 0:Fn.client_id)?void 0:Un.client_name,client_email:null==(Jn=null==(qn=Bc[0])?void 0:qn.client_id)?void 0:Jn.client_email,client_pan:null==(Gn=null==(Vn=Bc[0])?void 0:Vn.client_id)?void 0:Gn.pan_number,product_type:null==(Bn=Bc[0])?void 0:Bn.product,payment_terms:null==(zn=Bc[0])?void 0:zn.payment_terms,previous_discount:null==(Yn=Bc[0])?void 0:Yn.discount,modify_discount:null==t?void 0:t.discount,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${jv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${nb}`,a).then((e=>e)).catch((e=>e)),t.approval_status=E.PENDING,t.status=E.INACTIVE,t.changes=E.DISCOUNT,t.previous_discount=(null==($n=Bc[0])?void 0:$n.previous_discount)?null==(Wn=Bc[0])?void 0:Wn.previous_discount:null==(Hn=Bc[0])?void 0:Hn.discount,t}if(null==(Qn=null==t?void 0:t.client_product_mapping)?void 0:Qn.update){const a=null==(Zn=Bc[0])?void 0:Zn.client_product_mapping,i=null==(Xn=null==t?void 0:t.client_product_mapping)?void 0:Xn.update;if(a.some((e=>{const t=i.find((t=>t.id===e.id));return t&&(null==t?void 0:t.discount)>(null==e?void 0:e.discount)||(null==e?void 0:e.previous_discount)<(null==t?void 0:t.discount)}))){const a=t.client_product_mapping.update.map((e=>{const t=Bc[0].client_product_mapping.find((t=>t.id===e.id));return t?t.id:null})).filter((e=>null!==e)),i=e.env.CURRENT_URL+"admin/content/client_brand_commercial/",o=a.map((e=>`${i}${e}`)),r=t.client_product_mapping.update.map((e=>{var t;const n=null==(t=Bc[0])?void 0:t.client_product_mapping.find((t=>t.id==e.id));return n&&!(null==e?void 0:e.previous_discount)?{...e,status:E.PENDING,previous_discount:n.discount,brand_name:n.brand_name}:e})),s={to:$c,users:Wc,body_data:{client_name:null==(ta=null==(ea=Bc[0])?void 0:ea.client_id)?void 0:ta.client_name,client_email:null==(aa=null==(na=Bc[0])?void 0:na.client_id)?void 0:aa.client_email,client_pan:null==(oa=null==(ia=Bc[0])?void 0:ia.client_id)?void 0:oa.pan_number,commercials:null==(ra=Bc[0])?void 0:ra.commerical,product_type:null==(sa=Bc[0])?void 0:sa.product,payment_terms:null==(la=Bc[0])?void 0:la.payment_terms,link:o,brand_detail:r},subject_data:{client_name:null==(da=null==(ca=Bc[0])?void 0:ca.client_id)?void 0:da.client_name,client_email:null==(pa=null==(ua=Bc[0])?void 0:ua.client_id)?void 0:pa.client_email,client_pan:null==(ha=null==(ma=Bc[0])?void 0:ma.client_id)?void 0:ha.pan_number,commercials:null==(fa=Bc[0])?void 0:fa.commerical,product_type:null==(ya=Bc[0])?void 0:ya.product,payment_terms:null==(ga=Bc[0])?void 0:ga.payment_terms,link:o,brand_detail:r},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Uv}`,s).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${cb}`,s).then((e=>e)).catch((e=>e)),t.client_product_mapping.update=r,t}if((null==(_a=Bc[0])?void 0:_a.approval_status)==E.DECLINED){if((null==(xa=Bc[0])?void 0:xa.payment_terms)==E.ADVANCE){const t={to:$c,users:Wc,cc:Jc,body_data:{client_name:null==(ka=Bc[0])?void 0:ka.client_id.client_name,client_email:null==(wa=Bc[0])?void 0:wa.client_id.client_email,client_pan:null==(Ea=Bc[0])?void 0:Ea.client_id.pan_number,commercials:Bc[0].commerical,product_type:Bc[0].product,payment_terms:Bc[0].payment_terms,url_link:e.env.CURRENT_URL}};va.post(`${e.env.CURRENT_URL}email/sendemail/${Pv}`,t).then((e=>t)).catch((e=>e))}return t.approval_status=E.PENDING,t.status=E.INACTIVE,t}}if(u({log:"Credit"},"client_product_mapping"),(null==t?void 0:t.payment_terms)==E.CREDIT){u({log:"Credit Days"},"client_product_mapping");const a={to:$c,users:Wc,cc:Jc,subject_data:{sub:"request",data:t,client_name:null==(Ka=null==(Sa=Bc[0])?void 0:Sa.client_id)?void 0:Ka.client_name,client_email:null==(Ia=null==(Ra=Bc[0])?void 0:Ra.client_id)?void 0:Ia.client_email,client_pan:null==(ja=null==(Ta=Bc[0])?void 0:Ta.client_id)?void 0:ja.pan_number,product_type:null==(Oa=Bc[0])?void 0:Oa.product,payment_terms:null==(Aa=Bc[0])?void 0:Aa.payment_terms,credit_day:null==(Ca=Bc[0])?void 0:Ca.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(Na=null==(Pa=Bc[0])?void 0:Pa.client_id)?void 0:Na.client_name,client_email:null==(Ma=null==(Da=Bc[0])?void 0:Da.client_id)?void 0:Ma.client_email,client_pan:null==(Fa=null==(La=Bc[0])?void 0:La.client_id)?void 0:Fa.pan_number,product_type:null==(Ua=Bc[0])?void 0:Ua.product,payment_terms:null==(qa=Bc[0])?void 0:qa.payment_terms,credit_day:null==(Ja=Bc[0])?void 0:Ja.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Tv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Xv}`,a).then((e=>e)).catch((e=>e)),t.approval_status=E.PENDING,t.status=E.INACTIVE,t.changes=E.PAYMENTTERMS,t}if((null==(Va=Bc[0])?void 0:Va.credit_days)<(null==t?void 0:t.credit_days)||(null==(Ga=Bc[0])?void 0:Ga.previous_credit)){const a={to:$c,users:Wc,cc:Jc,subject_data:{sub:"request",data:t,client_name:null==(za=null==(Ba=Bc[0])?void 0:Ba.client_id)?void 0:za.client_name,client_email:null==($a=null==(Ya=Bc[0])?void 0:Ya.client_id)?void 0:$a.client_email,client_pan:null==(Ha=null==(Wa=Bc[0])?void 0:Wa.client_id)?void 0:Ha.pan_number,product_type:null==(Qa=Bc[0])?void 0:Qa.product,payment_terms:null==(Za=Bc[0])?void 0:Za.payment_terms,credit_days:null==(Xa=Bc[0])?void 0:Xa.credit_days,modify_days:null==t?void 0:t.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(ti=null==(ei=Bc[0])?void 0:ei.client_id)?void 0:ti.client_name,client_email:null==(ai=null==(ni=Bc[0])?void 0:ni.client_id)?void 0:ai.client_email,client_pan:null==(oi=null==(ii=Bc[0])?void 0:ii.client_id)?void 0:oi.pan_number,product_type:null==(ri=Bc[0])?void 0:ri.product,payment_terms:null==(si=Bc[0])?void 0:si.payment_terms,credit_days:null==(li=Bc[0])?void 0:li.credit_days,modify_days:null==t?void 0:t.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Iv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Hv}`,a).then((e=>e)).catch((e=>e)),t.approval_status=E.PENDING,t.status=E.INACTIVE,t.previous_credit=(null==(ci=Bc[0])?void 0:ci.previous_credit)?null==(di=Bc[0])?void 0:di.previous_credit:null==(ui=Bc[0])?void 0:ui.credit_days,t.changes=E.CREDITDAYS,t}if((null==t?void 0:t.requestBrands)&&(null==t?void 0:t.approval_status)==E.DECLINED)return delete t.requestBrands,t}}catch(e){throw new c(E.PENDING_MESSAGE)}else if((null==t?void 0:t.approval_status)==E.DECLINED){const o={id:{_eq:null==(pi=null==i?void 0:i.accountability)?void 0:pi.user}},r=await ba(a,o,["first_name"],d,"directus_users");if((null==(mi=Bc[0])?void 0:mi.changes)==E.COMMERICAL){const a={to:[null==(fi=null==(hi=Bc[0])?void 0:hi.user_updated)?void 0:fi.email],users:[null==(vi=null==(yi=Bc[0])?void 0:yi.user_updated)?void 0:vi.id],cc:Jc,subject_data:{sub:"declined",data:t,client_name:null==(gi=null==(bi=Bc[0])?void 0:bi.client_id)?void 0:gi.client_name,client_email:null==(xi=null==(_i=Bc[0])?void 0:_i.client_id)?void 0:xi.client_email,client_pan:null==(wi=null==(ki=Bc[0])?void 0:ki.client_id)?void 0:wi.pan_number,product_type:null==(Ei=Bc[0])?void 0:Ei.product,payment_terms:null==(Si=Bc[0])?void 0:Si.payment_terms,previous_commercials:null==(Ki=Bc[0])?void 0:Ki.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Ri=r[0])?void 0:Ri.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"declined",client_name:null==(Ti=null==(Ii=Bc[0])?void 0:Ii.client_id)?void 0:Ti.client_name,client_email:null==(Oi=null==(ji=Bc[0])?void 0:ji.client_id)?void 0:Oi.client_email,client_pan:null==(Ci=null==(Ai=Bc[0])?void 0:Ai.client_id)?void 0:Ci.pan_number,product_type:null==(Pi=Bc[0])?void 0:Pi.product,payment_terms:null==(Ni=Bc[0])?void 0:Ni.payment_terms,previous_commercials:null==(Di=Bc[0])?void 0:Di.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Mi=r[0])?void 0:Mi.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Rv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Wv}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Li=Bc[0])?void 0:Li.changes)==E.CREDITDAYS){const a={to:[null==(Ui=null==(Fi=Bc[0])?void 0:Fi.user_updated)?void 0:Ui.email],users:[null==(Ji=null==(qi=Bc[0])?void 0:qi.user_updated)?void 0:Ji.id],cc:Jc,subject_data:{sub:"declined",data:t,client_name:null==(Gi=null==(Vi=Bc[0])?void 0:Vi.client_id)?void 0:Gi.client_name,client_email:null==(zi=null==(Bi=Bc[0])?void 0:Bi.client_id)?void 0:zi.client_email,client_pan:null==($i=null==(Yi=Bc[0])?void 0:Yi.client_id)?void 0:$i.pan_number,product_type:null==(Wi=Bc[0])?void 0:Wi.product,payment_terms:null==(Hi=Bc[0])?void 0:Hi.payment_terms,previous_credit:null==(Qi=Bc[0])?void 0:Qi.previous_credit,modify_credit:null==(Zi=Bc[0])?void 0:Zi.credit_days,declined:null==(Xi=Vc[0])?void 0:Xi.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"declined",client_name:null==(to=null==(eo=Bc[0])?void 0:eo.client_id)?void 0:to.client_name,client_email:null==(ao=null==(no=Bc[0])?void 0:no.client_id)?void 0:ao.client_email,client_pan:null==(oo=null==(io=Bc[0])?void 0:io.client_id)?void 0:oo.pan_number,product_type:null==(ro=Bc[0])?void 0:ro.product,payment_terms:null==(so=Bc[0])?void 0:so.payment_terms,previous_credit:null==(lo=Bc[0])?void 0:lo.previous_credit,modify_credit:null==(co=Bc[0])?void 0:co.credit_days,declined:null==(uo=Vc[0])?void 0:uo.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Iv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Zv}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(po=Bc[0])?void 0:po.changes)==E.PAYMENTTERMS){const a={to:[null==(ho=null==(mo=Bc[0])?void 0:mo.user_updated)?void 0:ho.email],users:[null==(yo=null==(fo=Bc[0])?void 0:fo.user_updated)?void 0:yo.id],cc:Jc,subject_data:{sub:"declined",data:t,client_name:null==(bo=null==(vo=Bc[0])?void 0:vo.client_id)?void 0:bo.client_name,client_email:null==(_o=null==(go=Bc[0])?void 0:go.client_id)?void 0:_o.client_email,client_pan:null==(ko=null==(xo=Bc[0])?void 0:xo.client_id)?void 0:ko.pan_number,product_type:null==(wo=Bc[0])?void 0:wo.product,payment_terms:null==(Eo=Bc[0])?void 0:Eo.payment_terms,credit_day:null==(So=Bc[0])?void 0:So.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"declined",client_name:null==(Ro=null==(Ko=Bc[0])?void 0:Ko.client_id)?void 0:Ro.client_name,client_email:null==(To=null==(Io=Bc[0])?void 0:Io.client_id)?void 0:To.client_email,client_pan:null==(Oo=null==(jo=Bc[0])?void 0:jo.client_id)?void 0:Oo.pan_number,product_type:null==(Ao=Bc[0])?void 0:Ao.product,payment_terms:null==(Co=Bc[0])?void 0:Co.payment_terms,previous_credit:null==(Po=Bc[0])?void 0:Po.previous_credit,modify_credit:null==(No=Bc[0])?void 0:No.credit_days,declined:null==(Do=Vc[0])?void 0:Do.first_name,credit_day:null==(Mo=Bc[0])?void 0:Mo.credit_days},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Tv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${tb}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Lo=Bc[0])?void 0:Lo.changes)==E.DISCOUNT){const a={to:[null==(Uo=null==(Fo=Bc[0])?void 0:Fo.user_updated)?void 0:Uo.email],users:[null==(Jo=null==(qo=Bc[0])?void 0:qo.user_updated)?void 0:Jo.id],cc:Jc,subject_data:{sub:"declined",data:t,client_name:null==(Go=null==(Vo=Bc[0])?void 0:Vo.client_id)?void 0:Go.client_name,client_email:null==(zo=null==(Bo=Bc[0])?void 0:Bo.client_id)?void 0:zo.client_email,client_pan:null==($o=null==(Yo=Bc[0])?void 0:Yo.client_id)?void 0:$o.pan_number,product_type:null==(Wo=Bc[0])?void 0:Wo.product,payment_terms:null==(Ho=Bc[0])?void 0:Ho.payment_terms,previous_discount:null==(Qo=Bc[0])?void 0:Qo.previous_discount,modify_discount:null==(Zo=Bc[0])?void 0:Zo.discount,declined:null==(Xo=Vc[0])?void 0:Xo.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"declined",client_name:null==(tr=null==(er=Bc[0])?void 0:er.client_id)?void 0:tr.client_name,client_email:null==(ar=null==(nr=Bc[0])?void 0:nr.client_id)?void 0:ar.client_email,client_pan:null==(or=null==(ir=Bc[0])?void 0:ir.client_id)?void 0:or.pan_number,product_type:null==(rr=Bc[0])?void 0:rr.product,payment_terms:null==(sr=Bc[0])?void 0:sr.payment_terms,previous_discount:null==(lr=Bc[0])?void 0:lr.previous_discount,modify_discount:null==(cr=Bc[0])?void 0:cr.discount,declined:null==(dr=Vc[0])?void 0:dr.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${jv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ib}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(ur=Bc[0])?void 0:ur.changes)==E.NEW&&(null==(mr=null==(pr=Bc[0])?void 0:pr.client_product_mapping)?void 0:mr.length)>0){const o={to:[null==(fr=null==(hr=Bc[0])?void 0:hr.user_created)?void 0:fr.email],users:[null==(vr=null==(yr=Bc[0])?void 0:yr.user_created)?void 0:vr.id],cc:Jc,subject_data:{sub:"declined",data:t},body_data:{filter:"declined",client_name:null==(gr=null==(br=Bc[0])?void 0:br.client_id)?void 0:gr.client_name,client_email:null==(xr=null==(_r=Bc[0])?void 0:_r.client_id)?void 0:xr.client_email,client_pan:null==(wr=null==(kr=Bc[0])?void 0:kr.client_id)?void 0:wr.pan_number,product_type:null==(Er=Bc[0])?void 0:Er.product,noofbrands:(null==(Sr=null==t?void 0:t.requestBrands)?void 0:Sr.length)?t.requestBrands.length:null==(Kr=Bc[0])?void 0:Kr.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(Rr=Vc[0])?void 0:Rr.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,o).then((e=>o)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${rb}`,o).then((e=>e)).catch((e=>e));const r=(null==(Ir=null==t?void 0:t.requestBrands)?void 0:Ir.length)>0?null==t?void 0:t.requestBrands:Bc[0].client_product_mapping.map((e=>e.id));if(T({status:E.DECLINED},"client_brand_commercial",a,r,d,i.accountability),null==t?void 0:t.requestBrands)return delete t.requestBrands,t}if((null==(Tr=Bc[0])?void 0:Tr.changes)==E.BRANDDISCOUNT){const a={to:[null==(Or=null==(jr=Bc[0])?void 0:jr.user_updated)?void 0:Or.email],users:[null==(Cr=null==(Ar=Bc[0])?void 0:Ar.user_updated)?void 0:Cr.id],cc:Jc,subject_data:{sub:"declined",data:t,client_name:null==(Nr=null==(Pr=Bc[0])?void 0:Pr.client_id)?void 0:Nr.client_name,client_email:null==(Mr=null==(Dr=Bc[0])?void 0:Dr.client_id)?void 0:Mr.client_email,client_pan:null==(Fr=null==(Lr=Bc[0])?void 0:Lr.client_id)?void 0:Fr.pan_number,product_type:null==(Ur=Bc[0])?void 0:Ur.product,payment_terms:null==(qr=Bc[0])?void 0:qr.payment_terms,previous_commercials:null==(Jr=Bc[0])?void 0:Jr.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Vr=r[0])?void 0:Vr.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),url_link:e.env.CURRENT_URL},body_data:{filter:"declined",client_name:null==(Br=null==(Gr=Bc[0])?void 0:Gr.client_id)?void 0:Br.client_name,client_email:null==(Yr=null==(zr=Bc[0])?void 0:zr.client_id)?void 0:Yr.client_email,client_pan:null==(Wr=null==($r=Bc[0])?void 0:$r.client_id)?void 0:Wr.pan_number,product_type:null==(Hr=Bc[0])?void 0:Hr.product,payment_terms:null==(Qr=Bc[0])?void 0:Qr.payment_terms,previous_commercials:null==(Zr=Bc[0])?void 0:Zr.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Xr=r[0])?void 0:Xr.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),url_link:e.env.CURRENT_URL},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Rv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Wv}`,a).then((e=>e)).catch((e=>e)),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}}else{if((null==t?void 0:t.approval_status)!=E.APPROVED)throw new c(E.PENDING_MESSAGE);if((null==(es=Bc[0])?void 0:es.changes)==E.COMMERICAL){const a={to:[null==(ns=null==(ts=Bc[0])?void 0:ts.user_updated)?void 0:ns.email],users:[null==(is=null==(as=Bc[0])?void 0:as.user_updated)?void 0:is.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(rs=null==(os=Bc[0])?void 0:os.client_id)?void 0:rs.client_name,client_email:null==(ls=null==(ss=Bc[0])?void 0:ss.client_id)?void 0:ls.client_email,client_pan:null==(ds=null==(cs=Bc[0])?void 0:cs.client_id)?void 0:ds.pan_number,product_type:null==(us=Bc[0])?void 0:us.product,payment_terms:null==(ps=Bc[0])?void 0:ps.payment_terms,previous_commercials:(null==(ms=Bc[0])?void 0:ms.commerical)==E.UPFRONT?E.Cashback:E.UPFRONT,new_commercials:null==(hs=Bc[0])?void 0:hs.commerical,approved:null==(fs=Vc[0])?void 0:fs.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0],body_data:{filter:"approved",client_name:null==(vs=null==(ys=Bc[0])?void 0:ys.client_id)?void 0:vs.client_name,client_email:null==(gs=null==(bs=Bc[0])?void 0:bs.client_id)?void 0:gs.client_email,client_pan:null==(xs=null==(_s=Bc[0])?void 0:_s.client_id)?void 0:xs.pan_number,product_type:null==(ks=Bc[0])?void 0:ks.product,payment_terms:null==(ws=Bc[0])?void 0:ws.payment_terms,previous_commercials:(null==(Es=Bc[0])?void 0:Es.commerical)==E.UPFRONT?E.Cashback:E.UPFRONT,new_commercials:null==(Ss=Bc[0])?void 0:Ss.commerical,approved:null==(Ks=Vc[0])?void 0:Ks.first_name,comment:null==t?void 0:t.comment}};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Rv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${$v}`,a).then((e=>e)).catch((e=>e)),t.changes=null,t}if((null==(Rs=Bc[0])?void 0:Rs.changes)==E.CREDITDAYS){const a={to:[null==(Ts=null==(Is=Bc[0])?void 0:Is.user_updated)?void 0:Ts.email],users:[null==(Os=null==(js=Bc[0])?void 0:js.user_updated)?void 0:Os.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(Cs=null==(As=Bc[0])?void 0:As.client_id)?void 0:Cs.client_name,client_email:null==(Ns=null==(Ps=Bc[0])?void 0:Ps.client_id)?void 0:Ns.client_email,client_pan:null==(Ms=null==(Ds=Bc[0])?void 0:Ds.client_id)?void 0:Ms.pan_number,product_type:null==(Ls=Bc[0])?void 0:Ls.product,payment_terms:null==(Fs=Bc[0])?void 0:Fs.payment_terms,previous_credit:null==(Us=Bc[0])?void 0:Us.previous_credit,modify_credit:null==(qs=Bc[0])?void 0:qs.credit_days,approved:null==(Js=Vc[0])?void 0:Js.first_name},body_data:{filter:"approved",client_name:null==(Gs=null==(Vs=Bc[0])?void 0:Vs.client_id)?void 0:Gs.client_name,client_email:null==(zs=null==(Bs=Bc[0])?void 0:Bs.client_id)?void 0:zs.client_email,client_pan:null==($s=null==(Ys=Bc[0])?void 0:Ys.client_id)?void 0:$s.pan_number,product_type:null==(Ws=Bc[0])?void 0:Ws.product,payment_terms:null==(Hs=Bc[0])?void 0:Hs.payment_terms,previous_credit:null==(Qs=Bc[0])?void 0:Qs.previous_credit,modify_credit:null==(Zs=Bc[0])?void 0:Zs.credit_days,approved:null==(Xs=Vc[0])?void 0:Xs.first_name},item:null==n?void 0:n.keys[0]};return(null==t?void 0:t.requestBrands)&&delete t.requestBrands,va.post(`${e.env.CURRENT_URL}email/sendemail/${Iv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Qv}`,a).then((e=>e)).catch((e=>e)),t.changes=null,t.previous_credit=null,t}if((null==(el=Bc[0])?void 0:el.changes)==E.PAYMENTTERMS){const a={to:[null==(nl=null==(tl=Bc[0])?void 0:tl.user_updated)?void 0:nl.email],users:[null==(il=null==(al=Bc[0])?void 0:al.user_updated)?void 0:il.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(rl=null==(ol=Bc[0])?void 0:ol.client_id)?void 0:rl.client_name,client_email:null==(ll=null==(sl=Bc[0])?void 0:sl.client_id)?void 0:ll.client_email,client_pan:null==(dl=null==(cl=Bc[0])?void 0:cl.client_id)?void 0:dl.pan_number,product_type:null==(ul=Bc[0])?void 0:ul.product,payment_terms:null==(pl=Bc[0])?void 0:pl.payment_terms,credit_day:null==(ml=Bc[0])?void 0:ml.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),approved:null==(hl=Vc[0])?void 0:hl.first_name},body_data:{filter:"approved",client_name:null==(yl=null==(fl=Bc[0])?void 0:fl.client_id)?void 0:yl.client_name,client_email:null==(bl=null==(vl=Bc[0])?void 0:vl.client_id)?void 0:bl.client_email,client_pan:null==(_l=null==(gl=Bc[0])?void 0:gl.client_id)?void 0:_l.pan_number,product_type:null==(xl=Bc[0])?void 0:xl.product,payment_terms:null==(kl=Bc[0])?void 0:kl.payment_terms,previous_credit:null==(wl=Bc[0])?void 0:wl.previous_credit,modify_credit:null==(El=Bc[0])?void 0:El.credit_days,approved:null==(Sl=Vc[0])?void 0:Sl.first_name},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${Tv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${eb}`,a).then((e=>e)).catch((e=>e)),t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Kl=Bc[0])?void 0:Kl.changes)==E.DISCOUNT){const a={to:[null==(Il=null==(Rl=Bc[0])?void 0:Rl.user_updated)?void 0:Il.email],users:[null==(jl=null==(Tl=Bc[0])?void 0:Tl.user_updated)?void 0:jl.id],cc:Jc,subject_data:{sub:"approved",data:t,client_name:null==(Al=null==(Ol=Bc[0])?void 0:Ol.client_id)?void 0:Al.client_name,client_email:null==(Pl=null==(Cl=Bc[0])?void 0:Cl.client_id)?void 0:Pl.client_email,client_pan:null==(Dl=null==(Nl=Bc[0])?void 0:Nl.client_id)?void 0:Dl.pan_number,product_type:null==(Ml=Bc[0])?void 0:Ml.product,payment_terms:null==(Ll=Bc[0])?void 0:Ll.payment_terms,previous_discount:null==(Fl=Bc[0])?void 0:Fl.previous_discount,modify_discount:null==(Ul=Bc[0])?void 0:Ul.discount,approved:null==(ql=Vc[0])?void 0:ql.first_name},body_data:{filter:"approved",client_name:null==(Vl=null==(Jl=Bc[0])?void 0:Jl.client_id)?void 0:Vl.client_name,client_email:null==(Bl=null==(Gl=Bc[0])?void 0:Gl.client_id)?void 0:Bl.client_email,client_pan:null==(Yl=null==(zl=Bc[0])?void 0:zl.client_id)?void 0:Yl.pan_number,product_type:null==($l=Bc[0])?void 0:$l.product,payment_terms:null==(Wl=Bc[0])?void 0:Wl.payment_terms,previous_discount:null==(Hl=Bc[0])?void 0:Hl.previous_discount,modify_discount:null==(Ql=Bc[0])?void 0:Ql.discount,approved:null==(Zl=Vc[0])?void 0:Zl.first_name},item:null==n?void 0:n.keys[0]};return va.post(`${e.env.CURRENT_URL}email/sendemail/${jv}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ab}`,a).then((e=>e)).catch((e=>e)),t.previous_discount=null,t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Xl=Bc[0])?void 0:Xl.changes)==E.BRANDDISCOUNT){const n={to:[null==(tc=null==(ec=Bc[0])?void 0:ec.user_updated)?void 0:tc.email],users:[null==(ac=null==(nc=Bc[0])?void 0:nc.user_updated)?void 0:ac.id],cc:Jc,body_data:{client_name:null==(oc=null==(ic=Bc[0])?void 0:ic.client_id)?void 0:oc.client_name,client_email:null==(sc=null==(rc=Bc[0])?void 0:rc.client_id)?void 0:sc.client_email,client_pan:null==(cc=null==(lc=Bc[0])?void 0:lc.client_id)?void 0:cc.pan_number,product_type:null==(dc=Bc[0])?void 0:dc.product,payment_terms:null==(uc=Bc[0])?void 0:uc.payment_terms,previous_credit:null==(pc=Bc[0])?void 0:pc.previous_credit,modify_credit:null==(mc=Bc[0])?void 0:mc.credit_days,approved:null==(hc=Vc[0])?void 0:hc.first_name}};va.post(`${e.env.CURRENT_URL}email/sendemail/${Av}`,n).then((e=>n)).catch((e=>e));const i=Bc[0].client_product_mapping.map((e=>e.id));return T({previous_discount:0},"client_brand_commercial",a,i,d,null),t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(fc=Bc[0])?void 0:fc.changes)==E.NEW&&(null==(vc=null==(yc=Bc[0])?void 0:yc.client_product_mapping)?void 0:vc.length)>0){const a={to:[null==(gc=null==(bc=Bc[0])?void 0:bc.user_created)?void 0:gc.email],users:[null==(xc=null==(_c=Bc[0])?void 0:_c.user_created)?void 0:xc.id],cc:Jc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==(wc=null==(kc=Bc[0])?void 0:kc.client_id)?void 0:wc.client_name,client_email:null==(Sc=null==(Ec=Bc[0])?void 0:Ec.client_id)?void 0:Sc.client_email,client_pan:null==(Rc=null==(Kc=Bc[0])?void 0:Kc.client_id)?void 0:Rc.pan_number,product_type:null==(Ic=Bc[0])?void 0:Ic.product,noofbrands:null==(Tc=Bc[0])?void 0:Tc.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(jc=Vc[0])?void 0:jc.first_name,credit_limit:null==(Oc=Bc[0])?void 0:Oc.credit_limt,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,a).then((e=>a)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ob}`,a).then((e=>e)).catch((e=>e))}}if((null==(Cc=null==(Ac=null==t?void 0:t.client_product_mapping)?void 0:Ac.create)?void 0:Cc.length)>0){const e=(null==(Pc=null==t?void 0:t.client_product_mapping)?void 0:Pc.create)||[],n=(null==(Nc=Bc[0])?void 0:Nc.client_product_mapping)||[];if((()=>n.some((t=>e.some((e=>{var n,a;return((null==(n=null==t?void 0:t.brand)?void 0:n.id)||(null==t?void 0:t.brand))===((null==(a=null==e?void 0:e.brand)?void 0:a.id)||(null==e?void 0:e.brand))})))))())throw new c(E.BRANDALREADYEXIST)}if((null==(Lc=null==(Mc=null==(Dc=t[0])?void 0:Dc.client_product_mapping)?void 0:Mc.update)?void 0:Lc.length)>0){const o={id:{_in:null==n?void 0:n.keys}},r=await ba(a,o,Gc,d,n.collection),s=t.map((e=>{var n,a,i,o,s,l;const c=r.find((t=>t.id===e.id)).client_product_mapping.filter((t=>e.client_product_mapping.update.some((e=>e.id===t.id)))).map((t=>({id:t.id,status:e.client_product_mapping.update.find((e=>e.id===t.id)).status,update_email:null==t?void 0:t.user_updated}))),d=r.find((t=>t.id===e.id));return{id:e.id,client_name:null==(n=null==d?void 0:d.client_id)?void 0:n.client_name,client_email:null==(a=null==d?void 0:d.client_id)?void 0:a.client_email,pan_number:null==(i=null==d?void 0:d.client_id)?void 0:i.pan_number,product_type:null==d?void 0:d.product,noofbrands:null==(l=null==(s=null==(o=t[0])?void 0:o.client_product_mapping)?void 0:s.update)?void 0:l.length,emails:c}})),l=r.filter((e=>{var n;if((null==e?void 0:e.status)==E.INACTIVE&&(null==(n=t.find((t=>(null==t?void 0:t.id)==(null==e?void 0:e.id))))?void 0:n.id))return!0}));return u(l,"client_product_mapping"),l.map((e=>{var n,o,r,s,l,c;if((null==(r=null==(o=null==(n=t[0])?void 0:n.client_product_mapping)?void 0:o.update[0])?void 0:r.status)==E.APPROVED){const n={approval_status:E.APPROVED,status:E.ACTIVE,requestBrands:t[0].client_product_mapping.update.map((e=>e.id))};R(n,"client_product_mapping",a,null==e?void 0:e.id,d,null==i?void 0:i.accountability)}else{const n={approval_status:E.DECLINED,status:E.INACTIVE,comment:null==(c=null==(l=null==(s=t[0])?void 0:s.client_product_mapping)?void 0:l.update[0])?void 0:c.comment,requestBrands:t[0].client_product_mapping.update.map((e=>e.id))};R(n,"client_product_mapping",a,null==e?void 0:e.id,d,null==i?void 0:i.accountability)}})),0==l.length&&s.map((a=>{const i=a.emails.map((e=>e.update_email));[...new Set(i.map((e=>null==e?void 0:e.email)))].filter((e=>null!=e)).map((i=>{var o,r,s,l,c,d,u,p,m,h,f,y,v,b;if(a.emails[0].status===E.APPROVED){const p={to:[i],cc:Jc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==a?void 0:a.client_name,client_email:null==a?void 0:a.client_email,client_pan:null==a?void 0:a.pan_number,product_type:null==a?void 0:a.product_type,noofbrands:null==(s=null==(r=null==(o=t[0])?void 0:o.client_product_mapping)?void 0:r.update)?void 0:s.length,url_link:e.env.CURRENT_URL,approved:null==(l=Vc[0])?void 0:l.first_name,comment:null==(u=null==(d=null==(c=t[0])?void 0:c.client_product_mapping)?void 0:d.update[0])?void 0:u.comment},item:null==n?void 0:n.keys[0]};va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,p).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${ob}`,p).then((e=>e)).catch((e=>e))}else{const o={to:[i],cc:Jc,subject_data:{sub:"declined",data:t},body_data:{filter:"declined",client_name:null==a?void 0:a.client_name,client_email:null==a?void 0:a.client_email,client_pan:null==a?void 0:a.pan_number,product_type:null==a?void 0:a.product_type,noofbrands:null==(h=null==(m=null==(p=t[0])?void 0:p.client_product_mapping)?void 0:m.update)?void 0:h.length,url_link:e.env.CURRENT_URL,approved:null==(f=Vc[0])?void 0:f.first_name,comment:null==(b=null==(v=null==(y=t[0])?void 0:y.client_product_mapping)?void 0:v.update[0])?void 0:b.comment},item:null==n?void 0:n.keys[0]};va.post(`${e.env.CURRENT_URL}email/sendemail/${Ov}`,o).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${rb}`,o).then((e=>e)).catch((e=>e))}}))})),[]}})),n("client_product_mapping.items.update",(async(t,n)=>{var i,o,r,s,l,c,u,p,m;try{const n={id:{_eq:null==(i=null==t?void 0:t.payload)?void 0:i.client_id}},h={id:{_eq:e.env.MANAGAMENT_ROLE}},f={id:{_eq:e.env.ACCOUNT_ROLE}},y={id:{_eq:t.keys[0]}},v=E.FIELDSDATA.CLIENT,b=E.BRANDS,g=await ba(a,n,v,d,"client");await ba(a,y,b,d,"client_product_mapping");if(g.length>0){const n=await ba(a,h,["users.email","users.id"],d,"directus_roles"),i=await ba(a,f,["users.email","users.id"],d,"directus_roles"),y=null==(o=n[0])?void 0:o.users.map((e=>e.email)),v=null==(r=n[0])?void 0:r.users.map((e=>e.id)),b=null==(s=i[0])?void 0:s.users.map((e=>e.email));null!=(l=t.payload.commerical)||E.UPFRONT,E.PRODUCTS.find((e=>e==(null==t?void 0:t.product)));if((null==(p=null==(u=null==(c=null==t?void 0:t.payload)?void 0:c.client_product_mapping)?void 0:u.create)?void 0:p.length)>0){const n=t.payload.client_product_mapping.create;(null==(m=g[0])?void 0:m.product_type_mapping.filter((e=>3==e.product_type||4==e.product_type)).map((e=>{const t=e.client_product_mapping.filter((e=>"Pending"===e.status)).filter((e=>n.some((t=>t.brand===e.brand))));return{brands:t,product_type:e.product,length:t.length}}))).map((n=>{var a,i,o;const r=n.brands.map((e=>e.id)),s=n.brands.map((e=>e.brand_name)),l=n.brands.map((e=>e.discount)),c=e.env.CURRENT_URL+"admin/content/client_brand_commercial/",d=(u=c,r.map((e=>`${u}${e}`)));var u;const p={to:y,users:v,cc:b,subject_data:{data:t},body_data:{client_name:null==(a=g[0])?void 0:a.client_name,client_email:null==(i=g[0])?void 0:i.client_email,client_pan:null==(o=g[0])?void 0:o.pan_number,product_type:n.product_type,noofbrands:n.length,brand_ids:r,brand_name:s,url_link:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),brand_url:d,brand_discount:l},item:null==t?void 0:t.client_id};0!=n.length&&(va.post(`${e.env.CURRENT_URL}email/sendemail/${Cv}`,p).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${sb}`,p).then((e=>e)).catch((e=>e)))}))}}}catch(e){}})),t("client_brand_commercial.items.create",(async(e,t,n)=>(e.status=E.PENDING,e))),t("client_brand_commercial.items.update",(async(e,t,n)=>{const i=E.FIELDSDATA.CLIENT_BRAND_COMMERICAL,o={id:{_eq:null==t?void 0:t.keys[0]}};if((await ba(a,o,i,d,t.collection))[0].status==E.DECLINED)return e.status=E.PENDING,e})),t("client_product_mapping.items.create",(async(e,t)=>{var n;const i={id:{_eq:null==e?void 0:e.client_id}},o=E.FIELDSDATA.CLIENT;if(null==(n=(await ba(a,i,o,d,"client"))[0])?void 0:n.product_type_mapping.find((t=>(null==t?void 0:t.product)==(null==e?void 0:e.product))))throw new c(E.DUPLICATEPRODUCT);e.approval_status=E.PENDING,e.status=E.INACTIVE})),n("client_product_mapping.items.create",(async(t,n)=>{var i,o,r,s,l,c,u,p,m,h,f,y,v,b,g,_,x,k,w,S,K,R,I,T,j,O;const A={id:{_eq:null==(i=null==t?void 0:t.payload)?void 0:i.client_id}},C={id:{_eq:e.env.MANAGAMENT_ROLE}},P={id:{_eq:e.env.ACCOUNT_ROLE}},N=E.FIELDSDATA.CLIENT,D=await ba(a,A,N,d,"client");if(D.length>0){const n=await ba(a,C,["users.email","users.id"],d,"directus_roles"),i=await ba(a,P,["users.email","users.id"],d,"directus_roles"),A=null==(o=n[0])?void 0:o.users.map((e=>e.email)),N=null==(r=n[0])?void 0:r.users.map((e=>e.id)),M=null==(s=i[0])?void 0:s.users.map((e=>e.email));null==(l=i[0])||l.users.map((e=>e.id));const L=null!=(c=t.payload.commerical)?c:E.UPFRONT;E.PRODUCTS.find((e=>e==(null==t?void 0:t.product)));const F=`${e.env.CURRENT_URL}email/sendemail/${Kv}`;if((null==t?void 0:t.payment_terms)==E.ADVANCE){const n={to:A,users:N,cc:M,body_data:{data:t,brand:null==(p=null==(u=null==t?void 0:t.payload)?void 0:u.client_product_mapping)?void 0:p.create,client_name:null==(m=D[0])?void 0:m.client_name,client_email:null==(h=D[0])?void 0:h.client_email,client_pan:null==(f=D[0])?void 0:f.pan_number,commercials:L,product_type:null==(y=null==t?void 0:t.payload)?void 0:y.product,payment_terms:null==(v=null==t?void 0:t.payload)?void 0:v.payment_terms,credit_day:null==(b=null==t?void 0:t.payload)?void 0:b.credit_days,credit_limit:null==(g=null==t?void 0:t.payload)?void 0:g.credit_limt,discount:null==(_=null==t?void 0:t.payload)?void 0:_.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),url_link:e.env.CURRENT_URL,product_id:null==t?void 0:t.key},subject_data:{data:t,client:D[0]},item:null==t?void 0:t.key};va.post(F,n).catch((e=>{if(!e.response)return e})),va.post(`${e.env.CURRENT_URL}email/notifications/${Jv}`,n).then((e=>e)).catch((e=>e))}else{const n={to:A,users:N,cc:M,body_data:{data:t,brand:null==(k=null==(x=null==t?void 0:t.payload)?void 0:x.client_product_mapping)?void 0:k.create,client_name:null==(w=D[0])?void 0:w.client_name,client_email:null==(S=D[0])?void 0:S.client_email,client_pan:null==(K=D[0])?void 0:K.pan_number,commercials:L,product_type:null==(R=null==t?void 0:t.payload)?void 0:R.product,payment_terms:null==(I=null==t?void 0:t.payload)?void 0:I.payment_terms,credit_day:null==(T=null==t?void 0:t.payload)?void 0:T.credit_days,credit_limit:null==(j=null==t?void 0:t.payload)?void 0:j.credit_limt,discount:null==(O=null==t?void 0:t.payload)?void 0:O.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),url_link:e.env.CURRENT_URL,product_id:null==t?void 0:t.key},subject_data:{data:t},item:null==t?void 0:t.key};va.post(F,n).catch((e=>{if(!e.response)return e})),va.post(`${e.env.CURRENT_URL}email/notifications/${Jv}`,n).then((e=>e)).catch((e=>e))}}})),t("one_time_commerical.items.create",(async e=>{try{if(e.amount<0)throw{error:E.ONETIMECOMMERICAL};return e}catch(e){if((null==e?void 0:e.error)==E.ONETIMECOMMERICAL)throw new c(E.ONETIMECOMMERICAL);u(e,"one_time_commerical")}})),t("one_time_commerical.items.update",(async e=>{try{if(e.amount>-1)throw{error:E.ONETIMECOMMERICAL};return e}catch(e){if((null==e?void 0:e.error)==E.ONETIMECOMMERICAL)throw new c(E.ONETIMECOMMERICAL);u(e,"one_time_commerical")}})),t("vendor_shakepe_order_details.items.create",(async e=>{const t=new s("voucher_order_details",{schema:await r(),accountability:{admin:!0}}),n=await t.readByQuery({filter:{id:{_eq:null==e?void 0:e.voucher_order_id}},fields:["denomination","quantity"]});if(n[0].denomination){const t=(null==e?void 0:e.quantity)&&(null==e?void 0:e.same_as_order)?e.quantity:n[0].quantity,a=t*n[0].denomination*(parseFloat(e.vendor_discount)/100),i=n[0].denomination*t-a;return{...e,quantity:t,po_value:i}}return{...e}})),n("vendor_shakepe_order_details.items.create",(async e=>{var t,n,a,i,o,l,c,d,p,m;try{const u=new s("voucher_order_details",{schema:await r(),accountability:{admin:!0}}),h=new s("sd_vendor_details",{schema:await r(),accountability:{admin:!0}}),f=new s("vendor_payment",{schema:await r(),accountability:{admin:!0}}),y=await u.readByQuery({filter:{id:{_eq:null==(t=null==e?void 0:e.payload)?void 0:t.voucher_order_id}},fields:["shakepe_order_id","quantity","denomination"]}),v=(null==(n=null==e?void 0:e.payload)?void 0:n.quantity)?e.payload.quantity:y[0].quantity,b=v*y[0].denomination*(parseFloat(e.payload.vendor_discount)/100),g=y[0].denomination*v-b;if(y.length>0&&(null==(a=y[0])?void 0:a.shakepe_order_id)&&(null==(i=e.payload)?void 0:i.vendor)){const t=await f.readByQuery({filter:{shake_pe_order_id:{_eq:parseInt(null==(o=y[0])?void 0:o.shakepe_order_id)},vendor:{_eq:parseInt(null==(l=null==e?void 0:e.payload)?void 0:l.vendor)}},fields:["id","po_value","vendor","po_details"]});if(0==t.length){const t=await h.readByQuery({filter:{id:{_eq:parseInt(null==(c=null==e?void 0:e.payload)?void 0:c.vendor)}},fields:["primary_contact","fulfillment","gstin","account_number","ifsc_code","bank_name"]}),n={vendor:null==(d=null==e?void 0:e.payload)?void 0:d.vendor,shake_pe_order_id:null==(p=y[0])?void 0:p.shakepe_order_id,vendor_point_of_contact:t[0].primary_contact,vendor_fullfillment:t[0].fulfillment,vendor_bank:t[0].bank_name,vendor_bank_account_number:t[0].account_number,vendor_ifsc_code:t[0].ifsc_code,vendor_gstin:t[0].gstin,po_details:[e.key],payment_status:E.PAYEMENTPENDING,po_value:g};return await f.createOne(n)}{const n=g+parseInt(null==(m=t[0])?void 0:m.po_value);return await f.updateOne(t[0].id,{po_value:n||0,po_details:[...t[0].po_details,e.key]})}}}catch(e){u(e,"vendor_shakepe_order_details")}})),n("client.items.create",(async t=>{var n,i;const o={id:{_eq:e.env.MANAGAMENT_ROLE}},r=await ba(a,o,["users.email","users.id"],d,"directus_roles"),s=r[0].users.map((e=>e.email)),l=r[0].users.map((e=>e.id)),c={id:{_eq:e.env.ACCOUNT_ROLE}},u=await ba(a,c,["users.email","users.id"],d,"directus_roles"),p=null==(n=u[0])?void 0:n.users.map((e=>e.email));null==(i=u[0])||i.users.map((e=>e.id));const m=`${e.env.CURRENT_URL}email/sendemail/${Sv}`;t.payload.product_type_mapping.create.map((n=>{var a,i,o,r,c,d,u;const h=null!=(a=n.commerical)?a:E.UPFRONT;if(E.PRODUCTS.find((e=>e==n.product)),(null==n?void 0:n.payment_terms)==E.ADVANCE){const a={to:s,users:l,cc:p,body_data:{client_name:null==(i=null==t?void 0:t.payload)?void 0:i.client_name,client_email:null==(o=null==t?void 0:t.payload)?void 0:o.client_email,client_pan:null==(r=null==t?void 0:t.payload)?void 0:r.pan_number,commercials:h,product_type:null==n?void 0:n.product,payment_terms:null==n?void 0:n.payment_terms,discount:null==n?void 0:n.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.key),url_link:e.env.CURRENT_URL,data:t},subject_data:{data:t},item:null==t?void 0:t.key};va.post(m,a).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${qv}`,a).then((e=>e)).catch((e=>e))}else{const a={to:s,users:l,cc:p,body_data:{client_name:null==(c=null==t?void 0:t.payload)?void 0:c.client_name,client_email:null==(d=null==t?void 0:t.payload)?void 0:d.client_email,client_pan:null==(u=null==t?void 0:t.payload)?void 0:u.pan_number,commercials:h,product_type:null==n?void 0:n.product,payment_terms:null==n?void 0:n.payment_terms,credit_day:null==n?void 0:n.credit_days,credit_limit:null==n?void 0:n.credit_limt,discount:null==n?void 0:n.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.key),url_link:e.env.CURRENT_URL,data:t},subject_data:{data:t},item:null==t?void 0:t.key};va.post(m,a).then((e=>a)).catch((e=>{if(e.response)return a})),va.post(`${e.env.CURRENT_URL}email/notifications/${qv}`,a).then((e=>e)).catch((e=>e))}}))})),n("client_product_mapping.items.update",(async({payload:t,keys:n,collection:i},{database:o,schema:r,accountability:s})=>{var c,d,u,p,m,h,f,y,v,b,g,_,x,k,w,S,K,R,T,j,O,A,C,P,N,D,M,L,F,U,q,J,V,G,B,z,Y,$,W,H,Q,Z,X,ee,te,ne,ae,ie,oe,re,se,le,ce;const de=t;try{new l({schema:r,knex:o});const t={id:{_eq:n[0]}},i=E.FIELDSDATA.CLIENT_CREATE,ue={role:{_eq:e.env.MANAGAMENT_ROLE}},pe=await ba(a,t,i,r,"client_product_mapping"),me=await ba(a,ue,["first_name","email","id"],r,"directus_users"),he={id:{_eq:null==s?void 0:s.user}},fe=await ba(a,he,["first_name"],r,"directus_users");if((null==de?void 0:de.approval_status)==E.APPROVED&&(null==(c=pe[0])?void 0:c.changes)==E.NEW){if(pe[0].client_id.status==E.INACTIVE){I({status:E.ACTIVE},"client",a,pe[0].client_id.id,r,s);const t={to:[pe[0].user_created.email],users:[pe[0].user_created.id],body_data:{client_name:null==(u=null==(d=pe[0])?void 0:d.client_id)?void 0:u.client_name,client_email:null==(m=null==(p=pe[0])?void 0:p.client_id)?void 0:m.client_email,client_pan:null==(f=null==(h=pe[0])?void 0:h.client_id)?void 0:f.pan_number,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(v=null==(y=pe[0])?void 0:y.client_id)?void 0:v.id),approved:null==(b=fe[0])?void 0:b.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,client:pe[0],approver:null==(g=fe[0])?void 0:g.first_name},item:null==(x=null==(_=pe[0])?void 0:_.client_id)?void 0:x.id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Nv}`,t).then((e=>e)).catch((e=>{})),va.post(`${e.env.CURRENT_URL}email/notifications/${Vv}`,t).then((e=>{})).catch((e=>{}))}const t={to:[pe[0].user_created.email],users:[pe[0].user_created.id],body_data:{client_name:null==(w=null==(k=pe[0])?void 0:k.client_id)?void 0:w.client_name,client_email:null==(K=null==(S=pe[0])?void 0:S.client_id)?void 0:K.client_email,client_pan:null==(T=null==(R=pe[0])?void 0:R.client_id)?void 0:T.pan_number,product_type:null==(j=pe[0])?void 0:j.product,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(O=pe[0])?void 0:O.client_id.id),approved:null==(A=fe[0])?void 0:A.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,client:pe[0],approver:null==(C=fe[0])?void 0:C.first_name},item:null==(P=pe[0])?void 0:P.id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Dv}`,t).then((e=>{})).catch((e=>{})),va.post(`${e.env.CURRENT_URL}email/notifications/${Bv}`,t).then((e=>{})).catch((e=>{}))}else if((null==de?void 0:de.approval_status)==E.DECLINED&&(null==(N=pe[0])?void 0:N.changes)==E.NEW){if(pe[0].client_id.status==E.INACTIVE){const t={to:[pe[0].user_created.email],users:[null==(D=pe[0])?void 0:D.user_created.id],body_data:{client_name:null==(L=null==(M=pe[0])?void 0:M.client_id)?void 0:L.client_name,client_email:null==(U=null==(F=pe[0])?void 0:F.client_id)?void 0:U.client_email,client_pan:null==(J=null==(q=pe[0])?void 0:q.client_id)?void 0:J.pan_number,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(G=null==(V=pe[0])?void 0:V.client_id)?void 0:G.id),declined:null==(B=fe[0])?void 0:B.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,decline:null==(z=fe[0])?void 0:z.first_name,client:pe[0]},item:null==($=null==(Y=pe[0])?void 0:Y.client_id)?void 0:$.id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Mv}`,t).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${Gv}`,t).then((e=>e)).catch((e=>e))}const t={to:[pe[0].user_created.email],users:[null==(W=pe[0])?void 0:W.user_created.id],body_data:{client_name:null==(Q=null==(H=pe[0])?void 0:H.client_id)?void 0:Q.client_name,client_email:null==(X=null==(Z=pe[0])?void 0:Z.client_id)?void 0:X.client_email,client_pan:null==(te=null==(ee=pe[0])?void 0:ee.client_id)?void 0:te.pan_number,product_type:null==(ne=pe[0])?void 0:ne.product,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(ie=null==(ae=pe[0])?void 0:ae.client_id)?void 0:ie.id),declined:null==(oe=fe[0])?void 0:oe.first_name,comments:null==de?void 0:de.comment,url_link:e.env.CURRENT_URL},subject_data:{data:de,decline:null==(re=me[0])?void 0:re.first_name,client:pe[0]},item:null==(se=pe[0])?void 0:se.id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Lv}`,t).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${zv}`,t).then((e=>e)).catch((e=>e))}else if((null==de?void 0:de.approval_status)==E.PENDING&&(null==(le=pe[0])?void 0:le.changes)==E.NEW)if((null==(ce=pe[0])?void 0:ce.payment_terms)==E.ADVANCE){const t={to:me.map((e=>e.email)),users:me.map((e=>e.id)),body_data:{client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,new_commericals:de.commerical,new_discount:de.discount},subject_data:{data:de,client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL},item:null==de?void 0:de.client_id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Sv}`,t).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${qv}`,t).then((e=>e)).catch((e=>e))}else{const t={to:me.map((e=>e.email)),users:me.map((e=>e.id)),body_data:{client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,credit_day:null==de?void 0:de.credit_days,credit_limit:null==de?void 0:de.credit_limt,new_commericals:de.commerical,new_discount:de.discount},subject_data:{data:de,client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,credit_day:null==de?void 0:de.credit_days,credit_limit:null==de?void 0:de.credit_limt},item:null==de?void 0:de.client_id};va.post(`${e.env.CURRENT_URL}email/sendemail/${Sv}`,t).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${qv}`,t).then((e=>e)).catch((e=>e))}}catch(e){}})),t("client_product_mapping.items.delete",(async(e,t)=>{const n={id:{_in:e}},i=E.FIELDSDATA.CLIENT_DELETE,o=await ba(a,n,i,d,"client_product_mapping"),r=ub(e,o);T({status:E.INACTIVE},"client",a,r,d,null)})),t("performing_invoice.items.create",(async e=>{var t,n,a,i,o,r,s;const l=parseFloat((null==e?void 0:e.service_amount)&&(null==e?void 0:e.service_fee)?e.service_amount:0),c=parseFloat(e.discount?e.discount:0),d=parseFloat((null==e?void 0:e.order_level_discount)?e.order_level_discount:0);try{const u=(null==e?void 0:e.filtering_with_product_type)===E.GPR,p=(null==e?void 0:e.filtering_with_product_type)==E.GIFT_CARD,m=(null==e?void 0:e.filtering_with_product_type)==E.VOUCHERS,h=(null==e?void 0:e.filtering_with_product_type)==E.LINKS,f=(null==e?void 0:e.filtering_with_product_type)==E.SHAKEPEPOINT,y=(null==e?void 0:e.filtering_with_product_type)==E.SHAKEPECODE,v=e.commerical;switch(!0){case u||f:const b=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),g=b-b*c/100+l;if(d!=c&&(null==e?void 0:e.add_or_reduce_discount)){const t=b-b*d/100+l;return{...e,total_value:v==E.UPFRONT&&e.add_or_reduce_discount?t:null,original_value:v==E.UPFRONT?g:null,cashback:v!=E.UPFRONT?b*d/100:null,total_value_cashback:v!=E.UPFRONT?b+l:null,previous_cashback:v!=E.UPFRONT?b*c/100:null,total_order_value:v==E.UPFRONT?b:null}}return{...e,original_value:v==E.UPFRONT?g:null,cashback:v!=E.UPFRONT?b*c/100:null,total_value_cashback:v!=E.UPFRONT?b+l:null,total_order_value:v==E.UPFRONT?b:null};case p:let _=0,x=0,k=0;null==(t=e.brand_sku_mapping)||t.create.forEach((e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:o}=e.gift_card_order_details_id;if(k+=n*a,_+=(n-n*i/100)*a,(i<o||i>o)&&t){x+=(n-n*o/100)*a}else{x+=(n-n*i/100)*a}}));const w=_+l;return{...e,total_value:v==E.UPFRONT&&_!=x?x+l:null,original_value:v==E.UPFRONT?w:null,cashback:v!=E.UPFRONT&&_!=x?k-x:v!=E.UPFRONT?k-_:null,previous_cashback:v!=E.UPFRONT&&_!=x?k-_:null,total_value_cashback:v!=E.UPFRONT?k+l:null,total_order_value:v==E.UPFRONT?k:null};case m:let S=0,K=0,R=0;(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.create)&&(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)||a.create.forEach((e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:o}=e;if(R+=n*a,S+=(n-n*i/100)*a,(i<o||i>o)&&t){K+=(n-n*o/100)*a}else{K+=(n-n*i/100)*a}})));const I=S+l;return{...e,total_value:v==E.UPFRONT&&S!=K?K+l:null,original_value:v==E.UPFRONT?I:null,cashback:v!=E.UPFRONT&&S!=K?R-K:v!=E.UPFRONT?R-S:null,previous_cashback:v!=E.UPFRONT&&S!=K?R-S:null,total_value_cashback:v!=E.UPFRONT?R+l:null,total_order_value:v==E.UPFRONT?R:null};case h:if(null==(i=null==e?void 0:e.generic_links_details)?void 0:i.create){let t=0,n=0,a=0;return null==(o=null==e?void 0:e.generic_links_details)||o.create.map((i=>{const{denomination:o,quantity:r}=i;t+=o*r,n+=o*r*(c/100),a+=e.add_or_reduce_discount?o*r*(e.order_level_discount/100):o*r*(c/100)})),{...e,total_value:v==E.UPFRONT&&e.add_or_reduce_discount?t-a+l:null,original_value:v==E.UPFRONT?t-n+l:null,cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?a:v!=E.UPFRONT?n:null,previous_cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?n:null,total_value_cashback:v!=E.UPFRONT?t+l:null,total_order_value:v==E.UPFRONT?t:null}}if(null==(r=null==e?void 0:e.catalog_links_orders)?void 0:r.create){let t=0,n=0,a=0;return null==(s=null==e?void 0:e.catalog_links_orders)||s.create.map((i=>{const{denomination:o,total_no_links:r}=i;t+=o*r,n+=o*r*(e.discount/100),a+=e.order_level_discount&&(null==e?void 0:e.add_or_reduce_discount)?o*r*(e.order_level_discount/100):o*r*(e.discount/100)})),{...e,total_value:v==E.UPFRONT&&e.add_or_reduce_discount?t-a+l:null,original_value:v==E.UPFRONT?t-n+l:null,cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?a:v!=E.UPFRONT?n:null,previous_cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?n:null,total_value_cashback:v!=E.UPFRONT?t+l:null,total_order_value:v==E.UPFRONT?t:null}}break;case f:const T=parseFloat((null==e?void 0:e.loadAmount)?e.loadAmount:0),j=T-T*c/100;if(d>c&&(null==e?void 0:e.add_or_reduce_discount)||d<c){const t=T-T*d/100+l;return{...e,total_value:v==E.UPFRONT&&e.add_or_reduce_discount?t:null,original_value:v==E.UPFRONT?j+l:null,cashback:v!=E.UPFRONT?T*d/100:null,total_value_cashback:v!=E.UPFRONT?T+l:null,previous_cashback:v!=E.UPFRONT?T*c/100:null,total_order_value:v==E.UPFRONT?T:null}}return{...e,original_value:v==E.UPFRONT?j+l:null,cashback:v!=E.UPFRONT?T*c/100:null,total_value_cashback:v!=E.UPFRONT?T+l:null,total_order_value:v==E.UPFRONT?T:null};case y:let O=0,A=0,C=0;return e.shakepe_codes_orders.create.map((t=>{const{value_of_code:n,total_no_of_codes:a}=t;O+=n*a,A+=n*a*(c/100),C+=d&&(null==e?void 0:e.add_or_reduce_discount)?n*a*(d/100):n*a*(c/100)})),{...e,total_value:v==E.UPFRONT&&e.add_or_reduce_discount?O-C+l:null,original_value:v==E.UPFRONT?O-A+l:null,cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?C:A,previous_cashback:v!=E.UPFRONT&&e.add_or_reduce_discount?A:null,total_value_cashback:v!=E.UPFRONT?O+l:null,total_order_value:v==E.UPFRONT?O:null}}}catch(e){u(e,"performing_invoice")}})),t("performing_invoice.items.create",(e=>({...e,status:E.PENDING,changes:null}))),t("performing_invoice.items.create",(e=>{if((null==e?void 0:e.filtering_with_product_type)==E.shakepe_orders.shakepe_codes){if(!(null==e?void 0:e.form_factor)||(null==e?void 0:e.form_factor)==E.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code;if(e.shakepe_codes_orders.create.reduce(((e,t)=>e+t.total_no_of_codes),0)>5e3)throw new c(E.error.virual_codes);const n=e.shakepe_codes_orders.create.map((n=>({...n,validity:mb(n.activation?n.activation:null==e?void 0:e.activation_date,t)})));return e.shakepe_codes_orders.create=n,e}if(e.form_factor!=E.shakepe_orders.virtual&&(null==e?void 0:e.checkbox.length)>0&&"TRUE"==(null==e?void 0:e.checkbox[0])){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map((n=>({...n,activation:e.activation_date,validity:mb(e.activation_date,t)})));return e.shakepe_codes_orders.create=n,e}if(0==(null==e?void 0:e.checkbox)&&e.form_factor!=E.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map((e=>({...e,validity:mb(null==e?void 0:e.activation,t)})));return e.shakepe_codes_orders.create=n,e}}})),t("performing_invoice.items.update",(async(e,t,n)=>{var i,o,r,s,l,c,u,p,m,h,f,y,v,b,g;const _={id:{_eq:null==t?void 0:t.keys[0]}},x=await ba(a,_,E.FIELDSDATA.PROFOMA_INVOICE,d,"performing_invoice");let k={};if(!(e.status||e.approval_status||e.payment_status||e.send_to_client||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)))switch(x[0].filtering_with_product_type){case E.GPR:k={...x[0],...e};const t=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),n=parseFloat((null==k?void 0:k.discount)?k.discount:0),a=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0);let d=null==k?void 0:k.commerical;const _=parseFloat((null==k?void 0:k.load_amount)?k.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),w=_-_*n/100+t;if(a!=n&&k.add_or_reduce_discount){const i=_-_*a/100+t,o=!!k.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount);return{...e,total_value:d==E.UPFRONT&&o?i:null,original_value:d==E.UPFRONT?w:null,cashback:d!=E.UPFRONT&&(null==k?void 0:k.order_level_discount)?_*a/100:_*n/100,total_value_cashback:d!=E.UPFRONT?_+t:null,previous_cashback:d!=E.UPFRONT&&(null==k?void 0:k.order_level_discount)?_*n/100:null,total_order_value:d==E.UPFRONT?_:null}}return{...e,original_value:d==E.UPFRONT?w:null,total_value:null,cashback:d!=E.UPFRONT?_*n/100:null,total_value_cashback:d!=E.UPFRONT?_+t:null,total_order_value:d==E.UPFRONT?_:null};case E.GIFT_CARD:k={...x[0],...e};const S=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let K=0,R=0,I=0;const T=null==k?void 0:k.commerical,j=null==(i=x[0])?void 0:i.brand_sku_mapping.map((t=>{var n,a,i,o;const r=null==(a=null==(n=null==e?void 0:e.brand_sku_mapping)?void 0:n.update)?void 0:a.find((e=>e.id===t.id));return(null==(o=null==(i=null==e?void 0:e.brand_sku_mapping)?void 0:i.delete)?void 0:o.find((e=>e===t.id)))?null:r?{...t,gift_card_order_details_id:{...t.gift_card_order_details_id,...r.gift_card_order_details_id}}:t}));(null==(r=null==(o=null==e?void 0:e.brand_sku_mapping)?void 0:o.create)?void 0:r.length)>0&&e.brand_sku_mapping.create.forEach((e=>{j.push(e)})),j.forEach((e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:o}=e.gift_card_order_details_id;if(I+=n*a,K+=(n-n*i/100)*a,(i<o||i>o)&&t){R+=(n-n*o/100)*a}else{R+=(n-n*i/100)*a}}));const O=K+S;return{...e,total_value:T==E.UPFRONT&&K!=R?R+S:null,original_value:T==E.UPFRONT?O:null,cashback:T!=E.UPFRONT&&K!=R?I-R:T!=E.UPFRONT?I-K:null,previous_cashback:T!=E.UPFRONT&&K!=R?I-K:null,total_value_cashback:T!=E.UPFRONT?I+S:null,total_order_value:T==E.UPFRONT?I:null};case E.VOUCHERS:k={...x[0],...e};let A=0,C=0,P=0;const N=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),D=null==k?void 0:k.commerical,M=null==(s=x[0])?void 0:s.brand_sku_mapping_voucher.map((t=>{var n,a;const i=(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update.length)>0?e.brand_sku_mapping_voucher.update.find((e=>e.id===t.id)):null,o=(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:a.delete.length)>0?e.brand_sku_mapping_voucher.delete.find((e=>e===t.id)):null;return i?{...t,...i}:o?null:t}));(null==(c=null==(l=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:l.create)?void 0:c.length)>0&&e.brand_sku_mapping_voucher.create.forEach((e=>{M.push(e)}));M.filter((e=>null!=e)).forEach((e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:o}=e;if(P+=n*a,A+=(n-n*i/100)*a,(i<o||i>o)&&t){C+=(n-n*o/100)*a}else{C+=(n-n*i/100)*a}}));const L=A+N;return{...e,total_value:D==E.UPFRONT&&A!=C?C+N:null,original_value:D==E.UPFRONT?L:null,cashback:D!=E.UPFRONT&&A!=C?P-C:D!=E.UPFRONT?P-A:null,previous_cashback:D!=E.UPFRONT&&A!=C?P-A:null,total_value_cashback:D!=E.UPFRONT?P+N:null,total_order_value:D==E.UPFRONT?P:null};case E.SHAKEPECODE:k={...x[0],...e};const F=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let U=0,q=0,J=0;const V=null==k?void 0:k.commerical,G=parseFloat((null==k?void 0:k.discount)?k.discount:0),B=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0),z=null==(u=x[0])?void 0:u.shakepe_codes_orders.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.shakepe_codes_orders)?void 0:n.update)?void 0:a.length)>0?e.shakepe_codes_orders.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.shakepe_codes_orders)?void 0:i.delete)?void 0:o.length)>0?e.shakepe_codes_orders.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));return(null==(m=null==(p=null==e?void 0:e.shakepe_codes_orders)?void 0:p.create)?void 0:m.length)>0&&e.shakepe_codes_orders.create.forEach((e=>{z.push(e)})),null==z||z.map((e=>{const{value_of_code:t,total_no_of_codes:n}=e;U+=t*n,q+=t*n*(G/100),J+=(B||0==B)&&k.add_or_reduce_discount?t*n*(B/100):t*n*(G/100)})),{...e,total_value:V==E.UPFRONT&&k.add_or_reduce_discount?U-J+F:null,original_value:V==E.UPFRONT?U-q+F:null,cashback:V==E.UPFRONT||k.add_or_reduce_discount?J:q,previous_cashback:V!=E.UPFRONT&&k.add_or_reduce_discount?q:null,total_value_cashback:V!=E.UPFRONT?U+F:null,total_order_value:V==E.UPFRONT?U:null};case E.LINKS:k={...x[0],...e};const Y=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let $=0,W=0,H=0;const Q=null==k?void 0:k.commerical,Z=parseFloat((null==k?void 0:k.discount)?k.discount:0),X=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0);if((null==k?void 0:k.link_type)==E.GENERIC){const t=null==(h=x[0])?void 0:h.generic_links_details.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.generic_links_details)?void 0:n.update)?void 0:a.length)>0?e.generic_links_details.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.generic_links_details)?void 0:i.delete)?void 0:o.length)>0?e.generic_links_details.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));(null==(y=null==(f=null==e?void 0:e.generic_links_details)?void 0:f.create)?void 0:y.length)>0&&e.generic_links_details.create.forEach((e=>{t.push(e)}));return t.filter((e=>null!=e)).map((e=>{const{denomination:t,quantity:n}=e;$+=t*n,W+=t*n*(Z/100),H+=k.add_or_reduce_discount?t*n*(X/100):t*n*(Z/100)})),{...e,total_value:Q==E.UPFRONT&&k.add_or_reduce_discount?$-H+Y:null,original_value:Q==E.UPFRONT?$-W+Y:null,cashback:Q!=E.UPFRONT&&k.add_or_reduce_discount?H:Q!=E.UPFRONT?W:null,previous_cashback:Q!=E.UPFRONT&&e.add_or_reduce_discount?W:null,total_value_cashback:Q!=E.UPFRONT?$+Y:null,total_order_value:Q==E.UPFRONT?$:null}}if((null==k?void 0:k.link_type)==E.CATALOGUE){let t=0,n=0,a=0;const i=null==(v=x[0])?void 0:v.catalog_links_orders.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.catalog_links_orders)?void 0:n.update)?void 0:a.length)>0?e.catalog_links_orders.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.catalog_links_orders)?void 0:i.delete)?void 0:o.length)>0?e.catalog_links_orders.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));(null==(g=null==(b=null==e?void 0:e.catalog_links_orders)?void 0:b.create)?void 0:g.length)>0&&e.catalog_links_orders.create.forEach((e=>{i.push(e)}));return i.filter((e=>null!=e)).map((e=>{const{denomination:i,total_no_links:o}=e;t+=i*o,n+=i*o*(k.discount/100),a+=(k.order_level_discount||0==k.order_level_discount)&&(null==k?void 0:k.add_or_reduce_discount)?i*o*(k.order_level_discount/100):i*o*(k.discount/100)})),{...e,total_value:Q==E.UPFRONT&&k.add_or_reduce_discount?t-a+Y:null,original_value:Q==E.UPFRONT?t-n+Y:null,cashback:Q!=E.UPFRONT&&k.add_or_reduce_discount?a:Q!=E.UPFRONT?n:null,previous_cashback:Q!=E.UPFRONT&&k.add_or_reduce_discount?n:null,total_value_cashback:Q!=E.UPFRONT?t+Y:null,total_order_value:Q==E.UPFRONT?t:null}}return e;case E.SHAKEPEPOINT:k={...x[0],...e};const ee=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),te=parseFloat((null==k?void 0:k.discount)?k.discount:0),ne=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0),ae=null==k?void 0:k.commerical,ie=parseFloat((null==k?void 0:k.load_amount)?k.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),oe=ie-ie*te/100+ee;if(ne!=te&&k.add_or_reduce_discount){const t=ie-ie*ne/100+ee,n=!!k.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount);return{...e,total_value:ae==E.UPFRONT&&n?t:null,original_value:ae==E.UPFRONT?oe:null,cashback:ae!=E.UPFRONT&&k.add_or_reduce_discoun?ie*ne/100:ie*te/100,total_value_cashback:ae!=E.UPFRONT?ie+ee:null,previous_cashback:ae!=E.UPFRONT&&k.add_or_reduce_discoun?ie*te/100:null,total_order_value:Q==E.UPFRONT?ie:null}}return{...e,original_value:ae==E.UPFRONT?oe:null,total_value:null,cashback:ae!=E.UPFRONT?ie*te/100:null,total_value_cashback:ae!=E.UPFRONT?ie+ee:null,total_order_value:Q==E.UPFRONT?ie:null}}})),t("performing_invoice.items.update",(async(e,t,n)=>"Convert to Order"==(null==e?void 0:e.status)?e:e.status||e.approval_status||e.payment_status||e.send_to_client||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)?void 0:{...e,status:E.PENDING,changes:null,approval_status:null})),t("performing_invoice.items.update",(async(e,t,n)=>{var i,o,r,s,l,c,u;if("Convert to Order"==(null==e?void 0:e.status)){const n={id:{_eq:null==t?void 0:t.keys[0]}},p=(await ba(a,n,E.FIELDSDATA.PROFOMA_INVOICE_ORDER_CREATION,d,"performing_invoice"))[0],m={service_fee:null==p?void 0:p.service_fee,add_or_reduce_discount:null==p?void 0:p.add_or_reduce_discount,modified_credit_days:null==p?void 0:p.modified_credit_days,credit_days:null==p?void 0:p.credit_days,actual_credit_days:null==p?void 0:p.actual_credit_days,product_type:null==p?void 0:p.product_type,shipping_address:null==p?void 0:p.shipping_address,select_address:null==p?void 0:p.select_address,validity_of_code:null==p?void 0:p.validity_of_code,client:null==p?void 0:p.client,printer:null==p?void 0:p.printer,pi_id:null==t?void 0:t.keys[0],per_card_cost_client:null==p?void 0:p.per_card_cost_client,load_amount:null==p?void 0:p.load_amount,previous_cashback:null==p?void 0:p.previous_cashback,cashback:null==p?void 0:p.cashback,total_value_cashback:null==p?void 0:p.total_value_cashback,total_value:null==p?void 0:p.total_value,original_value:null==p?void 0:p.original_value,order_level_discount:null!=(i=null==p?void 0:p.order_level_discount)?i:0,service_amount:null==p?void 0:p.service_amount,discount:null==p?void 0:p.discount,file_upload_data:null==p?void 0:p.file_upload_data,per_card_cost_for_printer:null==p?void 0:p.per_card_cost_for_printer,form_factor:null!=(o=null==p?void 0:p.form_factor)?o:"Virtual",po_number:null==p?void 0:p.po_number,link_type:null==p?void 0:p.link_type,total_order_value:null==p?void 0:p.total_order_value,action:"flow",filtering_with_product_type:null==p?void 0:p.filtering_with_product_type,calculation:null==p?void 0:p.calculation,payment:"Payment Received",fullfillment:null==p?void 0:p.fullfillment,commerical:null==p?void 0:p.commerical,UTR_Number:null==p?void 0:p.utr_number,payment_terms:null==p?void 0:p.payment_terms,code_type:null==p?void 0:p.code_type,form_factor_copy:null==p?void 0:p.form_factor_copy,card_type:null==p?void 0:p.card_type,checkbox:null==p?void 0:p.checkbox,activation_date:null==p?void 0:p.activation_date,credit_period:null==p?void 0:p.credit_period,load_date:null==p?void 0:p.load_date,upload_codes:null==p?void 0:p.upload_codes,poc:null==p?void 0:p.poc,billing_address:null==p?void 0:p.billing_address,shipping_address_1:null==p?void 0:p.shipping_address_1,generic_links_details:{create:null==(r=null==p?void 0:p.generic_links_details)?void 0:r.map((e=>({brand:null==e?void 0:e.brand,denomination:null==e?void 0:e.denomination,quantity:null==e?void 0:e.quantity,brand_name:null==e?void 0:e.brand_name}))),update:[],delete:[]},brand_sku_mapping_voucher:{create:null==(s=null==p?void 0:p.brand_sku_mapping_voucher)?void 0:s.map((e=>({brand:null==e?void 0:e.brand,sku_code:null==e?void 0:e.sku_code,denomination:null==e?void 0:e.denomination,actual_discount:parseFloat(null==e?void 0:e.actual_discount),quantity:null==e?void 0:e.quantity,add_or_reduce_discount:null==e?void 0:e.add_or_reduce_discount,order_level_discount:(null==e?void 0:e.order_level_discount)?parseFloat(null==e?void 0:e.order_level_discount):null,brand_name:null==e?void 0:e.brand_name}))),update:[],delete:[]},catalog_links_orders:{create:null==(l=null==p?void 0:p.catalog_links_orders)?void 0:l.map((e=>({denomination:null==e?void 0:e.denomination,total_no_links:null==e?void 0:e.total_no_links,brands:null==e?void 0:e.brands}))),update:[],delete:[]},brand_sku_mapping:{create:null==(c=null==p?void 0:p.brand_sku_mapping)?void 0:c.map((e=>{var t,n,a,i,o,r,s,l,c;return{shakepe_orders_id:"+",gift_card_order_details_id:{denomination:null==(t=null==e?void 0:e.gift_card_order_details_id)?void 0:t.denomination,quantity:null==(n=null==e?void 0:e.gift_card_order_details_id)?void 0:n.quantity,actual_discoubt:parseFloat(null==(a=null==e?void 0:e.gift_card_order_details_id)?void 0:a.actual_discoubt),add_or_reduce:null==(i=null==e?void 0:e.gift_card_order_details_id)?void 0:i.add_or_reduce,order_level_discount:(null==(o=null==e?void 0:e.gift_card_order_details_id)?void 0:o.order_level_discount)?parseFloat(null==(r=null==e?void 0:e.gift_card_order_details_id)?void 0:r.order_level_discount):null,vendor_product_mapping:null==(s=null==e?void 0:e.gift_card_order_details_id)?void 0:s.vendor_product_mapping,brand_name:null==(l=null==e?void 0:e.gift_card_order_details_id)?void 0:l.brand_name,brand:null==(c=null==e?void 0:e.gift_card_order_details_id)?void 0:c.brand}}})),update:[],delete:[]},shakepe_codes_orders:{create:null==(u=null==p?void 0:p.shakepe_codes_orders)?void 0:u.map((e=>({total_no_of_codes:null==e?void 0:e.total_no_of_codes,value_of_code:null==e?void 0:e.value_of_code,validity:null==e?void 0:e.validity,activation:null==e?void 0:e.activation}))),update:[],delete:[]},buyer_ref_number:null==p?void 0:p.buyer_ref_number};await gv(null==p?void 0:p.client,{collection:"performing_invoice",item:"update",schema:d,services:a,id:null==t?void 0:t.keys[0]});const h=await K(a,"shakepe_orders",m,d,{admin:!0,user:p.user_created});return e.shakepe_order=h,e}})),t("shakepe_orders.items.update",(async(e,t,n)=>{const i={id:{_eq:null==t?void 0:t.keys[0]}},o=await ba(a,i,["client"],d,"shakepe_orders");"Payment Received"==e.payment&&await gv(null==o?void 0:o.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})})),n("performing_invoice.items.update",(async({payload:e,keys:t,collection:n},{database:i,schema:o,accountability:r})=>{try{const n=new l({schema:o,knex:i}),s={id:{_eq:t[0]}};(null==e?void 0:e.approval_status)||(null==e?void 0:e.approval_status)||(null==e?void 0:e.payment_status)||(null==e?void 0:e.send_to_client)||"Convert to Order"==(null==e?void 0:e.status)||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)||pb(s,a,o,n,r)}catch(e){u(e,"performing_invoice")}})),t("performing_invoice.items.create",(async(e,t,n)=>{if((null==e?void 0:e.filtering_with_product_type)==E.shakepe_orders.shakepe_codes){if(!(null==e?void 0:e.form_factor)||(null==e?void 0:e.form_factor)==E.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code;if(e.shakepe_codes_orders.create.reduce(((e,t)=>e+t.total_no_of_codes),0)>5e3)throw new c(E.error.virual_codes);const n=e.shakepe_codes_orders.create.map((n=>({...n,validity:mb(n.activation?n.activation:null==e?void 0:e.activation_date,t)})));return e.shakepe_codes_orders.create=n,e}if(e.form_factor!=E.shakepe_orders.virtual&&(null==e?void 0:e.checkbox.length)>0&&"TRUE"==(null==e?void 0:e.checkbox[0])){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map((n=>({...n,activation:e.activation_date,validity:mb(e.activation_date,t)})));return e.shakepe_codes_orders.create=n,e}if(0==(null==e?void 0:e.checkbox)&&e.form_factor!=E.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map((e=>({...e,validity:mb(null==e?void 0:e.activation,t)})));return e.shakepe_codes_orders.create=n,e}}})),t("shakepe_orders.items.update",(async(e,t,n)=>{var i,o,r,s,l,u,p,m,h,f,y,v,b,g,_,x;const k=await ba(a,{status:{_eq:"draft"},id:{_eq:null==t?void 0:t.keys[0]}},E.FIELDSDATA.SHAKEPE_ORDERS,d,"shakepe_orders");let w={};if(k.length>0&&"draft"==k[0].status)switch(k[0].filtering_with_product_type){case E.GPR:w={...k[0],...e};const n=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0),x=parseFloat((null==w?void 0:w.discount)?w.discount:0),S=parseFloat((null==w?void 0:w.order_level_discount)?null==w?void 0:w.order_level_discount:0);let K=null==w?void 0:w.commerical;const R=parseFloat((null==w?void 0:w.load_amount)?w.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),I=R-R*x/100+n;if(S!=x&&w.add_or_reduce_discount){const i=R-R*S/100+n,o=!!w.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount),r={...e,total_value:K==E.UPFRONT&&o?i:null,original_value:K==E.UPFRONT?I:null,cashback:K!=E.UPFRONT?R*S/100:null,total_value_cashback:K!=E.UPFRONT?R+n:null,previous_cashback:K!=E.UPFRONT?R*x/100:null,total_order_value:K==E.UPFRONT?R:null},s=await gv(null==r?void 0:r.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:r,id:null==t?void 0:t.keys[0]});if(null==s?void 0:s.error)throw new c(null==s?void 0:s.error);return{...r,...s}}{const i={...e,original_value:K==E.UPFRONT?I:null,total_value:null,cashback:K!=E.UPFRONT?R*x/100:null,total_value_cashback:K!=E.UPFRONT?R+n:null,total_order_value:K==E.UPFRONT?R:null},o=await gv(null==i?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:i,id:null==t?void 0:t.keys[0]});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...i,...o}}case E.GIFT_CARD:w={...k[0],...e};const T=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0);let j=0,O=0,A=0;const C=null==w?void 0:w.commerical,P=null==(i=k[0])?void 0:i.brand_sku_mapping.map((t=>{var n,a,i,o;const r=null==(a=null==(n=null==e?void 0:e.brand_sku_mapping)?void 0:n.update)?void 0:a.find((e=>e.id===t.id));return(null==(o=null==(i=null==e?void 0:e.brand_sku_mapping)?void 0:i.delete)?void 0:o.find((e=>e===t.id)))?null:r?{...t,gift_card_order_details_id:{...t.gift_card_order_details_id,...r.gift_card_order_details_id}}:t}));(null==(r=null==(o=null==e?void 0:e.brand_sku_mapping)?void 0:o.create)?void 0:r.length)>0&&e.brand_sku_mapping.create.forEach((e=>{P.push(e)})),P.forEach((e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:o}=e.gift_card_order_details_id;if(A+=n*a,j+=(n-n*i/100)*a,(i<o||i>o)&&t){O+=(n-n*o/100)*a}else{O+=(n-n*i/100)*a}}));const N=j+T,D={...e,total_value:C==E.UPFRONT&&j!=O?O+T:null,original_value:C==E.UPFRONT?N:null,cashback:C!=E.UPFRONT&&j!=O?A-O:C!=E.UPFRONT?A-j:null,previous_cashback:C!=E.UPFRONT&&j!=O?A-j:null,total_value_cashback:C!=E.UPFRONT?A+T:null,total_order_value:C==E.UPFRONT?A:null},M=await gv(null==D?void 0:D.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,id:null==t?void 0:t.keys[0],data:D});if(null==M?void 0:M.error)throw new c(null==M?void 0:M.error);return{...D,...M};case E.VOUCHERS:w={...k[0],...e};let L=0,F=0,U=0;const q=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0),J=null==w?void 0:w.commerical,V=null==(s=k[0])?void 0:s.brand_sku_mapping_voucher.map((t=>{var n,a;const i=(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update.length)>0?e.brand_sku_mapping_voucher.update.find((e=>e.id===t.id)):null,o=(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:a.delete.length)>0?e.brand_sku_mapping_voucher.delete.find((e=>e===t.id)):null;return i?{...t,...i}:o?null:t}));(null==(u=null==(l=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:l.create)?void 0:u.length)>0&&e.brand_sku_mapping_voucher.create.forEach((e=>{V.push(e)}));V.filter((e=>null!=e)).forEach((e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:o}=e;if(U+=n*a,L+=(n-n*i/100)*a,(i<o||i>o)&&t){F+=(n-n*o/100)*a}else{F+=(n-n*i/100)*a}}));const G=L+q,B={...e,total_value:J==E.UPFRONT&&L!=F?F+q:null,original_value:J==E.UPFRONT?G:null,cashback:J!=E.UPFRONT&&L!=F?U-F:J!=E.UPFRONT?U-L:null,previous_cashback:J!=E.UPFRONT&&L!=F?U-L:null,total_value_cashback:J!=E.UPFRONT?U+q:null,total_order_value:J==E.UPFRONT?U:null},z=await gv(null==B?void 0:B.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:B,id:null==t?void 0:t.keys[0]});if(null==z?void 0:z.error)throw new c(null==z?void 0:z.error);return{...B,...z};case E.SHAKEPECODE:w={...k[0],...e};const Y=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0);let $=0,W=0,H=0;const Q=null==w?void 0:w.commerical,Z=parseFloat((null==w?void 0:w.discount)?w.discount:0),X=parseFloat((null==w?void 0:w.order_level_discount)?null==w?void 0:w.order_level_discount:0),ee=null==(p=k[0])?void 0:p.shakepe_codes_orders.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.shakepe_codes_orders)?void 0:n.update)?void 0:a.length)>0?e.shakepe_codes_orders.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.shakepe_codes_orders)?void 0:i.delete)?void 0:o.length)>0?e.shakepe_codes_orders.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));(null==(h=null==(m=null==e?void 0:e.shakepe_codes_orders)?void 0:m.create)?void 0:h.length)>0&&e.shakepe_codes_orders.create.forEach((e=>{ee.push(e)})),null==ee||ee.map((e=>{const{value_of_code:t,total_no_of_codes:n}=e;$+=t*n,W+=t*n*(Z/100),H+=(X||0==X)&&w.add_or_reduce_discount?t*n*(X/100):t*n*(Z/100)}));const te={...e,total_value:Q==E.UPFRONT&&w.add_or_reduce_discount?$-H+Y:null,original_value:Q==E.UPFRONT?$-W+Y:null,cashback:Q!=E.UPFRONT&&w.add_or_reduce_discount?H:W,previous_cashback:Q!=E.UPFRONT&&w.add_or_reduce_discount?W:null,total_value_cashback:Q!=E.UPFRONT?$+Y:null,total_order_value:Q==E.UPFRONT?$:null,payment:"Payment Received"},ne=await gv(null==te?void 0:te.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:te});if(null==ne?void 0:ne.error)throw new c(null==ne?void 0:ne.error);return{...te,...ne};case E.LINKS:w={...k[0],...e};const ae=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0);let ie=0,oe=0,re=0;const se=null==w?void 0:w.commerical,le=parseFloat((null==w?void 0:w.discount)?w.discount:0),ce=parseFloat((null==w?void 0:w.order_level_discount)?null==w?void 0:w.order_level_discount:0);if((null==w?void 0:w.link_type)==E.GENERIC){const n=null==(f=k[0])?void 0:f.generic_links_details.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.generic_links_details)?void 0:n.update)?void 0:a.length)>0?e.generic_links_details.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.generic_links_details)?void 0:i.delete)?void 0:o.length)>0?e.generic_links_details.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));(null==(v=null==(y=null==e?void 0:e.generic_links_details)?void 0:y.create)?void 0:v.length)>0&&e.generic_links_details.create.forEach((e=>{n.push(e)}));n.filter((e=>null!=e)).map((e=>{const{denomination:t,quantity:n}=e;ie+=t*n,oe+=t*n*(le/100),re+=w.add_or_reduce_discount?t*n*(ce/100):t*n*(le/100)}));const i={...e,total_value:se==E.UPFRONT&&w.add_or_reduce_discount?ie-re+ae:null,original_value:se==E.UPFRONT?ie-oe+ae:null,cashback:se!=E.UPFRONT&&w.add_or_reduce_discount?re:se!=E.UPFRONT?oe:null,previous_cashback:se!=E.UPFRONT&&e.add_or_reduce_discount?oe:null,total_value_cashback:se!=E.UPFRONT?ie+ae:null,total_order_value:se==E.UPFRONT?ie:null,payment:"Payment Received"},o=await gv(null==i?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:i,id:null==t?void 0:t.keys[0]});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...i,...o}}if((null==w?void 0:w.link_type)==E.CATALOGUE){let n=0,i=0,o=0;const r=null==(b=k[0])?void 0:b.catalog_links_orders.map((t=>{var n,a,i,o;const r=(null==(a=null==(n=null==e?void 0:e.catalog_links_orders)?void 0:n.update)?void 0:a.length)>0?e.catalog_links_orders.update.find((e=>e.id===t.id)):null,s=(null==(o=null==(i=null==e?void 0:e.catalog_links_orders)?void 0:i.delete)?void 0:o.length)>0?e.catalog_links_orders.delete.find((e=>e===t.id)):null;return r?{...t,...r}:s?null:t}));(null==(_=null==(g=null==e?void 0:e.catalog_links_orders)?void 0:g.create)?void 0:_.length)>0&&e.catalog_links_orders.create.forEach((e=>{r.push(e)}));r.filter((e=>null!=e)).map((e=>{const{denomination:t,total_no_links:a}=e;n+=t*a,i+=t*a*(w.discount/100),o+=(w.order_level_discount||0==w.order_level_discount)&&(null==w?void 0:w.add_or_reduce_discount)?t*a*(w.order_level_discount/100):t*a*(w.discount/100)}));const s={...e,total_value:se==E.UPFRONT&&w.add_or_reduce_discount?n-o+ae:null,original_value:se==E.UPFRONT?n-i+ae:null,cashback:se!=E.UPFRONT&&w.add_or_reduce_discount?o:se!=E.UPFRONT?i:null,previous_cashback:se!=E.UPFRONT&&w.add_or_reduce_discount?i:null,total_value_cashback:se!=E.UPFRONT?n+ae:null,total_order_value:se==E.UPFRONT?n:null},l=await gv(null==s?void 0:s.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:s,id:null==t?void 0:t.keys[0]});if(null==l?void 0:l.error)throw new c(null==l?void 0:l.error);return{...s,...l}}return e;case E.SHAKEPEPOINT:w={...k[0],...e};const de=parseFloat((null==w?void 0:w.service_amount)&&(null==w?void 0:w.service_fee)?w.service_amount:0),ue=parseFloat((null==w?void 0:w.discount)?w.discount:0),pe=parseFloat((null==w?void 0:w.order_level_discount)?null==w?void 0:w.order_level_discount:0),me=null==w?void 0:w.commerical,he=parseFloat((null==w?void 0:w.load_amount)?w.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),fe=he-he*ue/100+de;if(pe!=ue&&w.add_or_reduce_discount){const n=he-he*pe/100+de,i=!!w.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount),o={...e,total_value:me==E.UPFRONT&&i?n:null,original_value:me==E.UPFRONT?fe:null,cashback:me!=E.UPFRONT&&w.add_or_reduce_discount?he*pe/100:he*ue/100,total_value_cashback:me!=E.UPFRONT?he+de:null,previous_cashback:me!=E.UPFRONT&&w.add_or_reduce_discount?he*ue/100:null,total_order_value:me==E.UPFRONT?he:null,payment:"Payment Received"},r=await gv(null==o?void 0:o.client,{id:null==t?void 0:t.keys[0],collection:"shakepe_orders",item:"update",schema:d,services:a,data:o});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...o,...r}}{const n={...e,original_value:me==E.UPFRONT?fe:null,total_value:null,cashback:me!=E.UPFRONT?he*ue/100:null,total_value_cashback:me!=E.UPFRONT?he+de:null,total_order_value:me==E.UPFRONT?he:null},i=await gv(null==n?void 0:n.client,{collection:"shakepe_orders",id:null==t?void 0:t.keys[0],item:"update",schema:d,services:a,data:n});if(null==i?void 0:i.error)throw new c(null==i?void 0:i.error);return{...n,...i}}}const S=await ba(a,{id:{_eq:null==t?void 0:t.keys[0]}},E.FIELDSDATA.SHAKEPE_ORDERS,d,"shakepe_orders");"Order Processed"==e.status&&await gv(null==(x=S[0])?void 0:x.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:{status:e.status},id:null==t?void 0:t.keys[0]})})),t("payment_verify.items.update",(async(e,t,n)=>{var i,o;const r={id:{_eq:null==t?void 0:t.keys[0]}},s=await ba(a,r,["corporate_load.client_name"],d,"payment_verify");"verified"==(null==e?void 0:e.status)&&await gv(null==(o=null==(i=s[0])?void 0:i.corporate_load)?void 0:o.client_name,{collection:"payment_verify",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})})),t("corporate_load.items.update",(async(e,t,n)=>{var i,o;const r={id:{_eq:null==t?void 0:t.keys[0]}},s=await ba(a,r,["client_name"],d,"corporate_load");"approved"==e.status?await gv(null==(i=s[0])?void 0:i.client_name,{collection:"corporate_load",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]}):"cancelled"==e.status&&await gv(null==(o=s[0])?void 0:o.client_name,{collection:"corporate_load",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})})),t("corporate_load.items.create",(async(e,t,n)=>{if("credit"==e.payment_terms){const t=await gv(null==e?void 0:e.client_name,{collection:"corporate_load",item:"create",schema:d,services:a,data:e});return{...e,...t}}if("payment_gateway"==e.payment_mode){const t=await gv(null==e?void 0:e.client_name,{collection:"corporate_load",item:"create",schema:d,services:a,data:e});return{...e,...t}}return e})),n("shakepe_orders.items.create",(async(e,t,n)=>{var i,o;const r=await ba(a,{id:{_eq:e.key}},["transaction_create"],d,"shakepe_orders");(null==r?void 0:r.length)>0&&(null==(o=null==(i=r[0])?void 0:i.transaction_create)?void 0:o.length)>0&&r[0].transaction_create.map((async n=>{await I({order_id:e.key,order:e.key},"cpp_ledger",a,n,d,null==t?void 0:t.accountability)}))})),n("corporate_load.items.create",(async(e,t,n)=>{var i,o;const r=await ba(a,{id:{_eq:e.key}},["transaction_create"],d,"corporate_load");(null==r?void 0:r.length)>0&&(null==(o=null==(i=r[0])?void 0:i.transaction_create)?void 0:o.length)>0&&r[0].transaction_create.map((async n=>{await I({load_id:e.key},"cpp_ledger",a,n,d,null==t?void 0:t.accountability)}))})),t("shakepe_orders.items.update",(async(e,t,n)=>{var i;const o={id:{_eq:null==t?void 0:t.keys[0]}},r=await ba(a,o,["client"],d,"shakepe_orders");"Order Cancelled"==(null==e?void 0:e.status)&&await gv(null==(i=r[0])?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})})),t("poc_wallet_transfer.items.create",(async e=>{const t=await gv(null==e?void 0:e.client,{collection:"poc_wallet_transfer",item:"create",schema:d,services:a,data:e});if(null==t?void 0:t.error)throw new c(t.error);return e.amount_utilized=null==t?void 0:t.amount_utilized,e.cpp_ledger=null==t?void 0:t.cpp_ledger,e}))};const ub=(e,t)=>{const n=e.map((e=>null==e?void 0:e.toString()));return t.filter((e=>{var t;return null==(t=null==e?void 0:e.client_id)?void 0:t.product_type_mapping.every((e=>n.includes(null==e?void 0:e.id.toString())))})).map((e=>{var t;return null==(t=null==e?void 0:e.client_id)?void 0:t.id}))},pb=async(t,n,a,i,o)=>{var r,s,l,c,d,u,p,m,h,f,y,v,b,g,_,x,k,w,S,K,R,I,T,j,O,A,C,P,N,D;const M=await ba(n,t,E.FIELDSDATA.PROFOMA_INVOICE_EMAIL,a,"performing_invoice"),L={id:{_eq:e.env.MANAGAMENT_ROLE}},F={id:{_eq:e.env.ACCOUNT_ROLE}},U={id:{_eq:null==o?void 0:o.user}},q={id:{_eq:M[0].poc}},J=await ba(n,U,["first_name"],a,"directus_users"),V=await ba(n,q,["name","wallet"],a,"client_point_of_contact"),G=await ba(n,L,["users.email","users.id"],a,"directus_roles"),B=await ba(n,F,["users.email","users.id"],a,"directus_roles"),z={to:null==(r=G[0])?void 0:r.users.map((e=>e.email)),users:null==(s=G[0])?void 0:s.users.map((e=>e.id)),cc:null==(l=B[0])?void 0:l.users.map((e=>e.email)),subject_data:{poc:V[0],id:null==(c=M[0])?void 0:c.id,sales:J[0].first_name,company:null==(u=null==(d=M[0])?void 0:d.client)?void 0:u.client_name,product_type:null==(p=M[0])?void 0:p.filtering_with_product_type,pi_id:null==(m=M[0])?void 0:m.id,previous_order_value:null==(h=M[0])?void 0:h.original_value,new_order_value:null==(f=M[0])?void 0:f.total_value,order_value:null==(y=M[0])?void 0:y.total_value_cashback,previous_cashback:null==(v=M[0])?void 0:v.previous_cashback,cashback:null==(b=M[0])?void 0:b.cashback,commerical:null==(g=M[0])?void 0:g.commerical,link:e.env.CURRENT_URL+"admin/content/performing_invoice"+(null==(_=M[0])?void 0:_.id)},body_data:{poc:V[0],sales:J[0].first_name,company:null==(k=null==(x=M[0])?void 0:x.client)?void 0:k.client_name,product_type:null==(w=M[0])?void 0:w.filtering_with_product_type,pi_id:null==(S=M[0])?void 0:S.id,previous_order_value:null==(K=M[0])?void 0:K.original_value,new_order_value:null==(R=M[0])?void 0:R.total_value,order_value:null==(I=M[0])?void 0:I.total_value_cashback,previous_cashback:null==(T=M[0])?void 0:T.previous_cashback,cashback:null==(j=M[0])?void 0:j.cashback,commerical:null==(O=M[0])?void 0:O.commerical,link:e.env.CURRENT_URL+"admin/content/performing_invoice"+(null==(A=M[0])?void 0:A.id),previous_discount:null==(C=M[0])?void 0:C.discount,new_discount:null==(P=M[0])?void 0:P.order_level_discount},item:null==(N=M[0])?void 0:N.id};if((null==M?void 0:M.length)>0&&(null==(D=M[0])?void 0:D.changes)&&M[0].changes===E.PIINCREASEDISCOUNT)E.PRODUCTS.find((e=>{var t;return e==(null==(t=M[0])?void 0:t.filtering_with_product_type)})),M[0].commerical,E.CASHBACK,va.post(`${e.env.CURRENT_URL}email/sendemail/${Fv}`,z).then((e=>e)).catch((e=>e)),va.post(`${e.env.CURRENT_URL}email/notifications/${lb}`,z).then((e=>e)).catch((e=>e))};function mb(e,t){const n=new Date(e),a=n.getMonth();n.setMonth(a+t);const i=n.getDate(),o=new Date(n.getFullYear(),n.getMonth()+1,0).getDate();return n.setDate(Math.min(i,o)),n}module.exports=db;
