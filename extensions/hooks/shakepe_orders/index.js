"use strict";var e=require("process"),t=require("util"),n=require("stream"),a=require("path"),i=require("http"),r=require("https"),o=require("url"),s=require("fs"),l=require("crypto"),c=require("assert"),d=require("tty"),u=require("net"),p=require("zlib"),m=require("events"),h=require("child_process"),y=require("worker_threads"),f=require("os"),v=require("dns"),b=require("tls"),g=require("buffer"),_=require("string_decoder");function x(e){var t=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}}),t.default=e,Object.freeze(t)}var k=x(a),E=x(s),K={GIFT_CARD:"Gift Card",VOUCHERS:"Vouchers",LINKS:"Links",GPR:"General Purpose Reloadable Prepaid Cards",CREDIT:"Credit",SHAKEPEPOINT:"ShakePe Points",SHAKEPECODE:"ShakePe Codes",PREVIOUS:"Previous",APPROVEPENDIND:"Approve is pending",APPROVALPENDING:"Approval Pending",UPFRONT:"Upfront",CASHBACK:"Cashback",PENDING:"Pending",GENERIC:"Generic",CATALOGUE:"Catalogue",APPROVEDMANAGEMENT:"Approved by Management",ORDERPROCESSED:"Order Processed",ORDEROPEN:"Order Open",CORPORATE:"Corporate",OPEN:"Open",PIINCREASECHANGESCREDIT:"Increase Credit Days",PIDECREASECHANGESCREDIT:"Decrease Credit Days",PICREDIT:"Credit",PIINCREASEDISCOUNT:"Increase discount",GSTINMANDATORY:"GSTIN is Mandatory for Corporate",PAYEMENTPENDING:"Payment Pending",DUPLICATEPRODUCT:"Product Type should be Unique",PRIMARYCONTACT:"Primary Contact should be Only one for Each Address",VENDORQTYEXCEDDED:"Vendor Quantity Excedded",ONETIMECOMMERICAL:"One Time Commerical Amount should be greater than 0",FIELDSDATA:{CLIENT_UPDATE:["discount","client_id.client_name","client_id.id","client_id.client_email","client_id.pan_number","product","payment_terms","commerical","changes","client_product_mapping.discount","client_product_mapping.id","client_product_mapping.brand.*","client_product_mapping.status","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id","user_created.email","credit_days","credit_limt","approval_status","user_updated.email","user_updated.id","previous_credit","previous_discount","user_created.id","status","id","client_product_mapping","action"],CLIENT_CREATE:["discount","client_id.client_name","client_id.client_email","client_id.pan_number","client_id.status","client_id.id","client_id.product_type_mapping.approval_status","client_product_mapping.discount","client_product_mapping.id","client_product_mapping.brand","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id","product","payment_terms","commerical","changes","credit_limt","client_product_mapping.discount","client_product_mapping.id","user_created.email","user_created.id","approval_status","previous_credit","previous_discount","product.id","id"],CLIENT:["client_name","client_email","pan_number","status","product_type_mapping.*","product_type_mapping.client_product_mapping.*","product","wallet","credit_wallet","credit_used","id"],PROFOMA_INVOICE:["status","filtering_with_product_type","user_created.*","original_value","client.client_name","approval_status","total_value","total_value_cashback","commerical","discount","order_level_discount","add_or_reduce_discount","service_amount","service_fee","load_amount","payment","payment_terms","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping_voucher.*","catalog_links_orders.*","generic_links_details.*","shakepe_codes_orders.*","link_type"],PROFOMA_INVOICE_ORDER_CREATION:["*","brand_sku_mapping_voucher","catalog_links_orders","generic_links_details","shakepe_codes_orders","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping_voucher.*","shakepe_codes_orders.*","generic_links_details.*","catalog_links_orders.*"],PROFOMA_INVOICE_STATUS:["actual_credit_days","modified_credit_days","credit_days"],PROFOMA_INVOICE_EMAIL:["changes","order_level_discount","discount","total_value","original_value","total_value_cashback","cashback","previous_cashback","filtering_with_product_type","client.client_email","client.client_name","client.pan_number","id","actual_credit_days","modified_credit_days","credit_days","commerical","user_created.email","user_created.id","poc"],CLIENT_DELETE:["client_id.id","client_id.product_type_mapping.*"],CLIENT_BRAND_COMMERICAL:["id","discount","previous_discount","status"],SHAKEPE_ORDERS:["id","status","filtering_with_product_type","user_created.*","original_value","client.client_name","client.wallet","client.id","product_type.product_type.*","approval_status","total_value","total_value_cashback","commerical","discount","order_level_discount","add_or_reduce_discount","service_amount","service_fee","load_amount","payment","payment_terms","brand_sku_mapping.gift_card_order_details_id.*","brand_sku_mapping.*","brand_sku_mapping_voucher.*","catalog_links_orders.*","generic_links_details.*","shakepe_codes_orders.*","link_type"]},COMMERICAL:"commerical",DISCOUNT:"discount",BRANDDISCOUNT:"Brand Discount",PAYMENTTERMS:"payment terms",CREDITDAYS:"credit days",NEW:"New",INCREASE:"increase",DECREASE:"decrease",INACTIVE:"InActive",ADVANCE:"Advance",APPROVED:"Approved",ACTIVE:"Active",DECLINED:"Declined",PRODUCTS:["Gift Card","Vouchers"],BRANDALREADYEXIST:"Brand is already exist",STATUS:{DELIVERED:"Delivered",REJECTED:"Rejected"},shakepe_orders:{shakepe_codes:"ShakePe Codes",virtual:"Virtual"},ERROR:{INSUFFIENT:"Wallet having Insuffient Funds",SUFFIENT:"You have suffient balance to make advance .Change the payment terms to advance",NEGATIVE_VALUE:"It has negative value in Credit Limit",PRODUCT_TYPE:"CHECK THE PRODUCT TYPE IS MAPPED or Check the POC is linked with that Client",IS_NAN:"Please enter the vaild number or Number should be Integer"},logger:{log:"log",success:"success",error:"error"},collection_name:{santa_log:"santa_log"},BRANDS:["client_product_mapping.discount","client_product_mapping.id","client_product_mapping.status","client_product_mapping.brand_name","client_product_mapping.user_updated.email","client_product_mapping.user_updated.id"],client_point_of_contact:["client_id","wallet"],poc_fund_transfer:["client","sender_poc.*","receiver_poc.*","amount","status"]};const w=async(e,t,n,a,i)=>{try{const r={};r.error=String(e),await S(i,t,JSON.stringify(r),n,a)}catch(e){}},S=async(e,t,n,a,i)=>{const{ItemsService:r}=e,o=new r(t,{schema:a,accountability:null!=i?i:{admin:!0}});return await o.createOne(n)},I=async(e,t,n,a,i,r)=>{try{const{ItemsService:o}=n,s=new o(t,{schema:i,accountability:null!=r?r:{admin:!0}});await s.updateOne(a,e)}catch(a){w({error:a,payload:e,collection:t},"error_log_zeus",i,r,n)}},j=async(e,t,n,a,i,r)=>{try{const{ItemsService:o}=n,s=new o(t,{schema:i,accountability:null!=r?r:{admin:!0}});return await s.updateOne(a,e,{emitEvents:!1})}catch(a){w({error:a,payload:e,collection:t},"error_log_zeus",i,r,n)}},R=async(e,t,n,a,i,r)=>{try{const{ItemsService:o}=n,s=new o(t,{schema:i,accountability:null!=r?r:{admin:!0}});await s.updateMany(a,e)}catch(a){w({error:a,payload:e,collection:t},"error_log_zeus",i,r,n)}};var T="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function O(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function A(e,t){return function(){return e.apply(t,arguments)}}const{toString:C}=Object.prototype,{getPrototypeOf:D}=Object,P=(N=Object.create(null),e=>{const t=C.call(e);return N[t]||(N[t]=t.slice(8,-1).toLowerCase())});var N;const M=e=>(e=e.toLowerCase(),t=>P(t)===e),F=e=>t=>typeof t===e,{isArray:L}=Array,J=F("undefined");const U=M("ArrayBuffer");const q=F("string"),V=F("function"),G=F("number"),B=e=>null!==e&&"object"==typeof e,z=e=>{if("object"!==P(e))return!1;const t=D(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},Y=M("Date"),$=M("File"),W=M("Blob"),H=M("FileList"),Q=M("URLSearchParams");function Z(e,t,{allOwnKeys:n=!1}={}){if(null==e)return;let a,i;if("object"!=typeof e&&(e=[e]),L(e))for(a=0,i=e.length;a<i;a++)t.call(null,e[a],a,e);else{const i=n?Object.getOwnPropertyNames(e):Object.keys(e),r=i.length;let o;for(a=0;a<r;a++)o=i[a],t.call(null,e[o],o,e)}}function X(e,t){t=t.toLowerCase();const n=Object.keys(e);let a,i=n.length;for(;i-- >0;)if(a=n[i],t===a.toLowerCase())return a;return null}const ee="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,te=e=>!J(e)&&e!==ee;const ne=(e=>t=>e&&t instanceof e)("undefined"!=typeof Uint8Array&&D(Uint8Array)),ae=M("HTMLFormElement"),ie=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),re=M("RegExp"),oe=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),a={};Z(n,(n,i)=>{!1!==t(n,i,e)&&(a[i]=n)}),Object.defineProperties(e,a)},se="abcdefghijklmnopqrstuvwxyz",le="0123456789",ce={DIGIT:le,ALPHA:se,ALPHA_DIGIT:se+se.toUpperCase()+le};var de={isArray:L,isArrayBuffer:U,isBuffer:function(e){return null!==e&&!J(e)&&null!==e.constructor&&!J(e.constructor)&&V(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{const t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||C.call(e)===t||V(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){let t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&U(e.buffer),t},isString:q,isNumber:G,isBoolean:e=>!0===e||!1===e,isObject:B,isPlainObject:z,isUndefined:J,isDate:Y,isFile:$,isBlob:W,isRegExp:re,isFunction:V,isStream:e=>B(e)&&V(e.pipe),isURLSearchParams:Q,isTypedArray:ne,isFileList:H,forEach:Z,merge:function e(){const{caseless:t}=te(this)&&this||{},n={},a=(a,i)=>{const r=t&&X(n,i)||i;z(n[r])&&z(a)?n[r]=e(n[r],a):z(a)?n[r]=e({},a):L(a)?n[r]=a.slice():n[r]=a};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&Z(arguments[e],a);return n},extend:(e,t,n,{allOwnKeys:a}={})=>(Z(t,(t,a)=>{n&&V(t)?e[a]=A(t,n):e[a]=t},{allOwnKeys:a}),e),trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,n,a)=>{e.prototype=Object.create(t.prototype,a),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},toFlatObject:(e,t,n,a)=>{let i,r,o;const s={};if(t=t||{},null==e)return t;do{for(i=Object.getOwnPropertyNames(e),r=i.length;r-- >0;)o=i[r],a&&!a(o,e,t)||s[o]||(t[o]=e[o],s[o]=!0);e=!1!==n&&D(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:P,kindOfTest:M,endsWith:(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const a=e.indexOf(t,n);return-1!==a&&a===n},toArray:e=>{if(!e)return null;if(L(e))return e;let t=e.length;if(!G(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},forEachEntry:(e,t)=>{const n=(e&&e[Symbol.iterator]).call(e);let a;for(;(a=n.next())&&!a.done;){const n=a.value;t.call(e,n[0],n[1])}},matchAll:(e,t)=>{let n;const a=[];for(;null!==(n=e.exec(t));)a.push(n);return a},isHTMLForm:ae,hasOwnProperty:ie,hasOwnProp:ie,reduceDescriptors:oe,freezeMethods:e=>{oe(e,(t,n)=>{if(V(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const a=e[n];V(a)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))})},toObjectSet:(e,t)=>{const n={},a=e=>{e.forEach(e=>{n[e]=!0})};return L(e)?a(e):a(String(e).split(t)),n},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(e,t,n){return t.toUpperCase()+n}),noop:()=>{},toFiniteNumber:(e,t)=>(e=+e,Number.isFinite(e)?e:t),findKey:X,global:ee,isContextDefined:te,ALPHABET:ce,generateString:(e=16,t=ce.ALPHA_DIGIT)=>{let n="";const{length:a}=t;for(;e--;)n+=t[Math.random()*a|0];return n},isSpecCompliantForm:function(e){return!!(e&&V(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),n=(e,a)=>{if(B(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[a]=e;const i=L(e)?[]:{};return Z(e,(e,t)=>{const r=n(e,a+1);!J(r)&&(i[t]=r)}),t[a]=void 0,i}}return e};return n(e,0)}};function ue(e,t,n,a,i){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),a&&(this.request=a),i&&(this.response=i)}de.inherits(ue,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:de.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const pe=ue.prototype,me={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{me[e]={value:e}}),Object.defineProperties(ue,me),Object.defineProperty(pe,"isAxiosError",{value:!0}),ue.from=(e,t,n,a,i,r)=>{const o=Object.create(pe);return de.toFlatObject(e,o,function(e){return e!==Error.prototype},e=>"isAxiosError"!==e),ue.call(o,e.message,t,n,a,i),o.cause=e,o.name=e.name,r&&Object.assign(o,r),o};var he=n.Stream,ye=fe;function fe(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}t.inherits(fe,he),fe.create=function(e,t){var n=new this;for(var a in t=t||{})n[a]=t[a];n.source=e;var i=e.emit;return e.emit=function(){return n._handleEmit(arguments),i.apply(e,arguments)},e.on("error",function(){}),n.pauseStream&&e.pause(),n},Object.defineProperty(fe.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),fe.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},fe.prototype.resume=function(){this._released||this.release(),this.source.resume()},fe.prototype.pause=function(){this.source.pause()},fe.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},fe.prototype.pipe=function(){var e=he.prototype.pipe.apply(this,arguments);return this.resume(),e},fe.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},fe.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}};var ve=t,be=n.Stream,ge=ye,_e=xe;function xe(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}ve.inherits(xe,be),xe.create=function(e){var t=new this;for(var n in e=e||{})t[n]=e[n];return t},xe.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},xe.prototype.append=function(e){if(xe.isStreamLike(e)){if(!(e instanceof ge)){var t=ge.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=t}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},xe.prototype.pipe=function(e,t){return be.prototype.pipe.call(this,e,t),this.resume(),e},xe.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},xe.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){xe.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},xe.prototype._pipeNext=function(e){if(this._currentStream=e,xe.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var t=e;this.write(t),this._getNext()},xe.prototype._handleErrors=function(e){var t=this;e.on("error",function(e){t._emitError(e)})},xe.prototype.write=function(e){this.emit("data",e)},xe.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},xe.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},xe.prototype.end=function(){this._reset(),this.emit("end")},xe.prototype.destroy=function(){this._reset(),this.emit("close")},xe.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},xe.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},xe.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach(function(t){t.dataSize&&(e.dataSize+=t.dataSize)}),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},xe.prototype._emitError=function(e){this._reset(),this.emit("error",e)};var ke={},Ee={exports:{}};Ee.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/3gpp-ims+xml":{source:"iana",compressible:!0},"application/3gpphal+json":{source:"iana",compressible:!0},"application/3gpphalforms+json":{source:"iana",compressible:!0},"application/a2l":{source:"iana"},"application/ace+cbor":{source:"iana"},"application/activemessage":{source:"iana"},"application/activity+json":{source:"iana",compressible:!0},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/alto-updatestreamcontrol+json":{source:"iana",compressible:!0},"application/alto-updatestreamparams+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/at+jwt":{source:"iana"},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",compressible:!0,extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana",compressible:!0,extensions:["atomdeleted"]},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",compressible:!0,extensions:["atomsvc"]},"application/atsc-dwd+xml":{source:"iana",compressible:!0,extensions:["dwd"]},"application/atsc-dynamic-event-message":{source:"iana"},"application/atsc-held+xml":{source:"iana",compressible:!0,extensions:["held"]},"application/atsc-rdt+json":{source:"iana",compressible:!0},"application/atsc-rsat+xml":{source:"iana",compressible:!0,extensions:["rsat"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana",compressible:!0},"application/bacnet-xdd+zip":{source:"iana",compressible:!1},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana",compressible:!0,extensions:["xcs"]},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/captive+json":{source:"iana",compressible:!0},"application/cbor":{source:"iana"},"application/cbor-seq":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana",compressible:!0},"application/ccxml+xml":{source:"iana",compressible:!0,extensions:["ccxml"]},"application/cdfx+xml":{source:"iana",compressible:!0,extensions:["cdfx"]},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana",compressible:!0},"application/cellml+xml":{source:"iana",compressible:!0},"application/cfw":{source:"iana"},"application/city+json":{source:"iana",compressible:!0},"application/clr":{source:"iana"},"application/clue+xml":{source:"iana",compressible:!0},"application/clue_info+xml":{source:"iana",compressible:!0},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana",compressible:!0},"application/coap-group+json":{source:"iana",compressible:!0},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana",compressible:!0},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana",compressible:!0,extensions:["cpl"]},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana",compressible:!0},"application/cstadata+xml":{source:"iana",compressible:!0},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cwt":{source:"iana"},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",compressible:!0,extensions:["mpd"]},"application/dash-patch+xml":{source:"iana",compressible:!0,extensions:["mpp"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",compressible:!0,extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana",compressible:!0},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!0},"application/dicom+xml":{source:"iana",compressible:!0},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/dns+json":{source:"iana",compressible:!0},"application/dns-message":{source:"iana"},"application/docbook+xml":{source:"apache",compressible:!0,extensions:["dbk"]},"application/dots+cbor":{source:"iana"},"application/dskpp+xml":{source:"iana",compressible:!0},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",compressible:!0,extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["es","ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/efi":{source:"iana"},"application/elm+json":{source:"iana",charset:"UTF-8",compressible:!0},"application/elm+xml":{source:"iana",compressible:!0},"application/emergencycalldata.cap+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/emergencycalldata.comment+xml":{source:"iana",compressible:!0},"application/emergencycalldata.control+xml":{source:"iana",compressible:!0},"application/emergencycalldata.deviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.serviceinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.subscriberinfo+xml":{source:"iana",compressible:!0},"application/emergencycalldata.veds+xml":{source:"iana",compressible:!0},"application/emma+xml":{source:"iana",compressible:!0,extensions:["emma"]},"application/emotionml+xml":{source:"iana",compressible:!0,extensions:["emotionml"]},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana",compressible:!0},"application/epub+zip":{source:"iana",compressible:!1,extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/expect-ct-report+json":{source:"iana",compressible:!0},"application/express":{source:"iana",extensions:["exp"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana",compressible:!0,extensions:["fdt"]},"application/fhir+json":{source:"iana",charset:"UTF-8",compressible:!0},"application/fhir+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/fido.trusted-apps+json":{compressible:!0},"application/fits":{source:"iana"},"application/flexfec":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1},"application/framework-attributes+xml":{source:"iana",compressible:!0},"application/geo+json":{source:"iana",compressible:!0,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geopackage+sqlite3":{source:"iana"},"application/geoxacml+xml":{source:"iana",compressible:!0},"application/gltf-buffer":{source:"iana"},"application/gml+xml":{source:"iana",compressible:!0,extensions:["gml"]},"application/gpx+xml":{source:"apache",compressible:!0,extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana",compressible:!0},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana",compressible:!0},"application/ibe-pkg-reply+xml":{source:"iana",compressible:!0},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",compressible:!0,extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana",compressible:!0,extensions:["its"]},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:!0},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/jscalendar+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana",compressible:!0},"application/kpml-response+xml":{source:"iana",compressible:!0},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/lgr+xml":{source:"iana",compressible:!0,extensions:["lgr"]},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana",compressible:!0},"application/lost+xml":{source:"iana",compressible:!0,extensions:["lostxml"]},"application/lostsync+xml":{source:"iana",compressible:!0},"application/lpf+zip":{source:"iana",compressible:!1},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",compressible:!0,extensions:["mads"]},"application/manifest+json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",compressible:!0,extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",compressible:!0,extensions:["mathml"]},"application/mathml-content+xml":{source:"iana",compressible:!0},"application/mathml-presentation+xml":{source:"iana",compressible:!0},"application/mbms-associated-procedure-description+xml":{source:"iana",compressible:!0},"application/mbms-deregister+xml":{source:"iana",compressible:!0},"application/mbms-envelope+xml":{source:"iana",compressible:!0},"application/mbms-msk+xml":{source:"iana",compressible:!0},"application/mbms-msk-response+xml":{source:"iana",compressible:!0},"application/mbms-protection-description+xml":{source:"iana",compressible:!0},"application/mbms-reception-report+xml":{source:"iana",compressible:!0},"application/mbms-register+xml":{source:"iana",compressible:!0},"application/mbms-register-response+xml":{source:"iana",compressible:!0},"application/mbms-schedule+xml":{source:"iana",compressible:!0},"application/mbms-user-service-description+xml":{source:"iana",compressible:!0},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana",compressible:!0,extensions:["mpf"]},"application/media_control+xml":{source:"iana",compressible:!0},"application/mediaservercontrol+xml":{source:"iana",compressible:!0,extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",compressible:!0,extensions:["metalink"]},"application/metalink4+xml":{source:"iana",compressible:!0,extensions:["meta4"]},"application/mets+xml":{source:"iana",compressible:!0,extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mipc":{source:"iana"},"application/missing-blocks+cbor-seq":{source:"iana"},"application/mmt-aei+xml":{source:"iana",compressible:!0,extensions:["maei"]},"application/mmt-usd+xml":{source:"iana",compressible:!0,extensions:["musd"]},"application/mods+xml":{source:"iana",compressible:!0,extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana",compressible:!0},"application/mrb-publish+xml":{source:"iana",compressible:!0},"application/msc-ivr+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/msc-mixer+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!0},"application/multipart-core":{source:"iana"},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana",extensions:["nq"]},"application/n-triples":{source:"iana",extensions:["nt"]},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana",charset:"US-ASCII"},"application/news-groupinfo":{source:"iana",charset:"US-ASCII"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana",compressible:!0},"application/node":{source:"iana",extensions:["cjs"]},"application/nss":{source:"iana"},"application/oauth-authz-req+jwt":{source:"iana"},"application/oblivious-dns-message":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odm+xml":{source:"iana",compressible:!0},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",compressible:!0,extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",compressible:!0,extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{source:"iana",compressible:!0},"application/oscore":{source:"iana"},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p21":{source:"iana"},"application/p21+zip":{source:"iana",compressible:!1},"application/p2p-overlay+xml":{source:"iana",compressible:!0,extensions:["relo"]},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",compressible:!0,extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pem-certificate-chain":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana",extensions:["asc"]},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/pidf-diff+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",compressible:!0,extensions:["pls"]},"application/poc-settings+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!0},"application/problem+json":{source:"iana",compressible:!0},"application/problem+xml":{source:"iana",compressible:!0},"application/provenance+xml":{source:"iana",compressible:!0,extensions:["provx"]},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.cyn":{source:"iana",charset:"7-BIT"},"application/prs.hpub+zip":{source:"iana",compressible:!1},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana",compressible:!0},"application/pskc+xml":{source:"iana",compressible:!0,extensions:["pskcxml"]},"application/pvd+json":{source:"iana",compressible:!0},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!0,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf","owl"]},"application/reginfo+xml":{source:"iana",compressible:!0,extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",compressible:!0,extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",compressible:!0,extensions:["rld"]},"application/rfc+xml":{source:"iana",compressible:!0},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana",compressible:!0},"application/rls-services+xml":{source:"iana",compressible:!0,extensions:["rs"]},"application/route-apd+xml":{source:"iana",compressible:!0,extensions:["rapd"]},"application/route-s-tsid+xml":{source:"iana",compressible:!0,extensions:["sls"]},"application/route-usd+xml":{source:"iana",compressible:!0,extensions:["rusd"]},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",compressible:!0,extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana",compressible:!0},"application/samlmetadata+xml":{source:"iana",compressible:!0},"application/sarif+json":{source:"iana",compressible:!0},"application/sarif-external-properties+json":{source:"iana",compressible:!0},"application/sbe":{source:"iana"},"application/sbml+xml":{source:"iana",compressible:!0,extensions:["sbml"]},"application/scaip+xml":{source:"iana",compressible:!0},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/secevent+jwt":{source:"iana"},"application/senml+cbor":{source:"iana"},"application/senml+json":{source:"iana",compressible:!0},"application/senml+xml":{source:"iana",compressible:!0,extensions:["senmlx"]},"application/senml-etch+cbor":{source:"iana"},"application/senml-etch+json":{source:"iana",compressible:!0},"application/senml-exi":{source:"iana"},"application/sensml+cbor":{source:"iana"},"application/sensml+json":{source:"iana",compressible:!0},"application/sensml+xml":{source:"iana",compressible:!0,extensions:["sensmlx"]},"application/sensml-exi":{source:"iana"},"application/sep+xml":{source:"iana",compressible:!0},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",compressible:!0,extensions:["shf"]},"application/sieve":{source:"iana",extensions:["siv","sieve"]},"application/simple-filter+xml":{source:"iana",compressible:!0},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/sipc":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",compressible:!0,extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",compressible:!0,extensions:["srx"]},"application/spdx+json":{source:"iana",compressible:!0},"application/spirits-event+xml":{source:"iana",compressible:!0},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",compressible:!0,extensions:["grxml"]},"application/sru+xml":{source:"iana",compressible:!0,extensions:["sru"]},"application/ssdl+xml":{source:"apache",compressible:!0,extensions:["ssdl"]},"application/ssml+xml":{source:"iana",compressible:!0,extensions:["ssml"]},"application/stix+json":{source:"iana",compressible:!0},"application/swid+xml":{source:"iana",compressible:!0,extensions:["swidtag"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/taxii+json":{source:"iana",compressible:!0},"application/td+json":{source:"iana",compressible:!0},"application/tei+xml":{source:"iana",compressible:!0,extensions:["tei","teicorpus"]},"application/tetra_isi":{source:"iana"},"application/thraud+xml":{source:"iana",compressible:!0,extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tlsrpt+gzip":{source:"iana"},"application/tlsrpt+json":{source:"iana",compressible:!0},"application/tnauthlist":{source:"iana"},"application/token-introspection+jwt":{source:"iana"},"application/toml":{compressible:!0,extensions:["toml"]},"application/trickle-ice-sdpfrag":{source:"iana"},"application/trig":{source:"iana",extensions:["trig"]},"application/ttml+xml":{source:"iana",compressible:!0,extensions:["ttml"]},"application/tve-trigger":{source:"iana"},"application/tzif":{source:"iana"},"application/tzif-leap":{source:"iana"},"application/ubjson":{compressible:!1,extensions:["ubj"]},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana",compressible:!0},"application/urc-ressheet+xml":{source:"iana",compressible:!0,extensions:["rsheet"]},"application/urc-targetdesc+xml":{source:"iana",compressible:!0,extensions:["td"]},"application/urc-uisocketdesc+xml":{source:"iana",compressible:!0},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana",compressible:!0},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana",compressible:!0,extensions:["1km"]},"application/vnd.3gpp-prose+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana",compressible:!0},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.5gnas":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.bsf+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gmop+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.gtpc":{source:"iana"},"application/vnd.3gpp.interworking-data":{source:"iana"},"application/vnd.3gpp.lpp":{source:"iana"},"application/vnd.3gpp.mc-signalling-ear":{source:"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-payload":{source:"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-signalling":{source:"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcdata-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-ue-init-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcptt-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-location-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-service-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-transmission-request+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-ue-config+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mcvideo-user-profile+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.mid-call+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ngap":{source:"iana"},"application/vnd.3gpp.pfcp":{source:"iana"},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.s1ap":{source:"iana"},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.srvcc-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana",compressible:!0},"application/vnd.3gpp.ussd+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana",compressible:!0},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",compressible:!1,extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",compressible:!0,extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.afpc.afplinedata":{source:"iana"},"application/vnd.afpc.afplinedata-pagedef":{source:"iana"},"application/vnd.afpc.cmoca-cmresource":{source:"iana"},"application/vnd.afpc.foca-charset":{source:"iana"},"application/vnd.afpc.foca-codedfont":{source:"iana"},"application/vnd.afpc.foca-codepage":{source:"iana"},"application/vnd.afpc.modca":{source:"iana"},"application/vnd.afpc.modca-cmtable":{source:"iana"},"application/vnd.afpc.modca-formdef":{source:"iana"},"application/vnd.afpc.modca-mediummap":{source:"iana"},"application/vnd.afpc.modca-objectcontainer":{source:"iana"},"application/vnd.afpc.modca-overlay":{source:"iana"},"application/vnd.afpc.modca-pagesegment":{source:"iana"},"application/vnd.age":{source:"iana",extensions:["age"]},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!0},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana",compressible:!0},"application/vnd.android.ota":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.arrow.file":{source:"iana"},"application/vnd.apache.arrow.stream":{source:"iana"},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.aplextor.warrp+json":{source:"iana",compressible:!0},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",compressible:!0,extensions:["mpkg"]},"application/vnd.apple.keynote":{source:"iana",extensions:["key"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.numbers":{source:"iana",extensions:["numbers"]},"application/vnd.apple.pages":{source:"iana",extensions:["pages"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artisan+json":{source:"iana",compressible:!0},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!0},"application/vnd.avistar+xml":{source:"iana",compressible:!0},"application/vnd.balsamiq.bmml+xml":{source:"iana",compressible:!0,extensions:["bmml"]},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.banana-accounting":{source:"iana"},"application/vnd.bbf.usp.error":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!0},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana",compressible:!0},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.bpf":{source:"iana"},"application/vnd.bpf3":{source:"iana"},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.byu.uapi+json":{source:"iana",compressible:!0},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!0},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",compressible:!0,extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.ciedi":{source:"iana"},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana",compressible:!0,extensions:["csl"]},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.comicbook+zip":{source:"iana",compressible:!1},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!0},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",compressible:!0,extensions:["wbs"]},"application/vnd.cryptii.pipe+json":{source:"iana",compressible:!0},"application/vnd.crypto-shade-file":{source:"iana"},"application/vnd.cryptomator.encrypted":{source:"iana"},"application/vnd.cryptomator.vault":{source:"iana"},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana",compressible:!0},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana",compressible:!0},"application/vnd.cybank":{source:"iana"},"application/vnd.cyclonedx+json":{source:"iana",compressible:!0},"application/vnd.cyclonedx+xml":{source:"iana",compressible:!0},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana",compressible:!1},"application/vnd.d3m-dataset":{source:"iana"},"application/vnd.d3m-problem":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!0},"application/vnd.dataresource+json":{source:"iana",compressible:!0},"application/vnd.dbf":{source:"iana",extensions:["dbf"]},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",compressible:!0,extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume.movie":{source:"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana",compressible:!0},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbisl+xml":{source:"iana",compressible:!0},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-container+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-generic+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana",compressible:!0},"application/vnd.dvb.notif-init+xml":{source:"iana",compressible:!0},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.eclipse.ditto+json":{source:"iana",compressible:!0},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana",compressible:!0},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana",compressible:!0},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana",compressible:!1},"application/vnd.eszigno3+xml":{source:"iana",compressible:!0,extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.asic-e+zip":{source:"iana",compressible:!1},"application/vnd.etsi.asic-s+zip":{source:"iana",compressible:!1},"application/vnd.etsi.cug+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvcommand+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvservice+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvsync+xml":{source:"iana",compressible:!0},"application/vnd.etsi.iptvueprofile+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mcid+xml":{source:"iana",compressible:!0},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana",compressible:!0},"application/vnd.etsi.pstn+xml":{source:"iana",compressible:!0},"application/vnd.etsi.sci+xml":{source:"iana",compressible:!0},"application/vnd.etsi.simservs+xml":{source:"iana",compressible:!0},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana",compressible:!0},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eu.kasparian.car+json":{source:"iana",compressible:!0},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.exstream-empower+zip":{source:"iana",compressible:!1},"application/vnd.exstream-package":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.familysearch.gedcom+zip":{source:"iana",compressible:!1},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.ficlab.flb+zip":{source:"iana",compressible:!1},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujifilm.fb.docuworks":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{source:"iana"},"application/vnd.fujifilm.fb.docuworks.container":{source:"iana"},"application/vnd.fujifilm.fb.jfi+xml":{source:"iana",compressible:!0},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.futoin+cbor":{source:"iana"},"application/vnd.futoin+json":{source:"iana",compressible:!0},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.gentics.grd+json":{source:"iana",compressible:!0},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana",compressible:!0},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.slides":{source:"iana"},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana",compressible:!0},"application/vnd.gov.sk.e-form+zip":{source:"iana",compressible:!1},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana",compressible:!0},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",compressible:!0,extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",compressible:!0,extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!0},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hl7cda+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.hl7v2+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper+json":{source:"iana",compressible:!0},"application/vnd.hyper-item+json":{source:"iana",compressible:!0},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana",compressible:!1},"application/vnd.imagemeter.image+zip":{source:"iana",compressible:!1},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana",compressible:!0},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana",compressible:!0},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.packageitem+xml":{source:"iana",compressible:!0},"application/vnd.iptc.g2.planningitem+xml":{source:"iana",compressible:!0},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",compressible:!0,extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.iso11783-10+zip":{source:"iana",compressible:!1},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las":{source:"iana"},"application/vnd.las.las+json":{source:"iana",compressible:!0},"application/vnd.las.las+xml":{source:"iana",compressible:!0,extensions:["lasxml"]},"application/vnd.laszip":{source:"iana"},"application/vnd.leap+json":{source:"iana",compressible:!0},"application/vnd.liberty-request+xml":{source:"iana",compressible:!0},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",compressible:!0,extensions:["lbe"]},"application/vnd.logipipe.circuit+zip":{source:"iana",compressible:!1},"application/vnd.loom":{source:"iana"},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana",extensions:["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.conftoken+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.license+xml":{source:"iana",compressible:!0},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxar.archive.3tz+zip":{source:"iana",compressible:!1},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana",compressible:!0},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-outlook":{compressible:!1,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana",compressible:!0},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana",compressible:!0},"application/vnd.ms-printing.printticket+xml":{source:"apache",compressible:!0},"application/vnd.ms-printschematicket+xml":{source:"iana",compressible:!0},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.nacamar.ybrid+json":{source:"iana",compressible:!0},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!0},"application/vnd.nebumind.line":{source:"iana"},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nimn":{source:"iana"},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana",compressible:!0},"application/vnd.nokia.iptv.config+xml":{source:"iana",compressible:!0},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana",compressible:!0},"application/vnd.nokia.landmarkcollection+xml":{source:"iana",compressible:!0},"application/vnd.nokia.n-gage.ac+xml":{source:"iana",compressible:!0,extensions:["ac"]},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana",compressible:!0},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oci.image.manifest.v1+json":{source:"iana",compressible:!0},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana",compressible:!0},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana",compressible:!0},"application/vnd.oipf.dae.xhtml+xml":{source:"iana",compressible:!0},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana",compressible:!0},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana",compressible:!0},"application/vnd.oipf.spdlist+xml":{source:"iana",compressible:!0},"application/vnd.oipf.ueprofile+xml":{source:"iana",compressible:!0},"application/vnd.oipf.userprofile+xml":{source:"iana",compressible:!0},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.imd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.sprov+xml":{source:"iana",compressible:!0},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-feature-handler+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-pcc+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-subs-invite+xml":{source:"iana",compressible:!0},"application/vnd.oma.cab-user-prefs+xml":{source:"iana",compressible:!0},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",compressible:!0,extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana",compressible:!0},"application/vnd.oma.group-usage-list+xml":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+cbor":{source:"iana"},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.final-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.groups+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana",compressible:!0},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana",compressible:!0},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana",compressible:!0},"application/vnd.oma.xcap-directory+xml":{source:"iana",compressible:!0},"application/vnd.omads-email+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omads-file+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omads-folder+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana",compressible:!0,extensions:["obgx"]},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana",compressible:!0,extensions:["osm"]},"application/vnd.opentimestamps.ots":{source:"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana",compressible:!0},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana",compressible:!0},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana",compressible:!0},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos.xml":{source:"iana"},"application/vnd.patentdive":{source:"iana"},"application/vnd.patientecommsdoc":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana",compressible:!0},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.psfs":{source:"iana"},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana",compressible:!0},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-conf+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana",compressible:!0},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana",compressible:!0},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana",extensions:["rar"]},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",compressible:!0,extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.resilient.logic":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!0},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",compressible:!0,extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sar":{source:"iana"},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.seis+json":{source:"iana",compressible:!0},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shade-save-file":{source:"iana"},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.shootproof+json":{source:"iana",compressible:!0},"application/vnd.shopkick+json":{source:"iana",compressible:!0},"application/vnd.shp":{source:"iana"},"application/vnd.shx":{source:"iana"},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.snesdev-page-table":{source:"iana"},"application/vnd.software602.filler.form+xml":{source:"iana",compressible:!0,extensions:["fo"]},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",compressible:!0,extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!0,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.sycle+xml":{source:"iana",compressible:!0},"application/vnd.syft+json":{source:"iana",compressible:!0},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",charset:"UTF-8",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana",charset:"UTF-8",compressible:!0},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!0},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{source:"iana",compressible:!0},"application/vnd.tmd.mediaflex.api+xml":{source:"iana",compressible:!0},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",compressible:!0,extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!0},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.veritone.aion+json":{source:"iana",compressible:!0},"application/vnd.veryant.thin":{source:"iana"},"application/vnd.ves.encrypted":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",charset:"UTF-8",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.dpp":{source:"iana"},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana",compressible:!0},"application/vnd.wv.ssp+xml":{source:"iana",compressible:!0},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana",compressible:!0},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",compressible:!0,extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",compressible:!0,extensions:["zaz"]},"application/voicexml+xml":{source:"iana",compressible:!0,extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!0},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{source:"iana",compressible:!0,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana",compressible:!0,extensions:["wif"]},"application/webpush-options+json":{source:"iana",compressible:!0},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",compressible:!0,extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",compressible:!0,extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!1,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",compressible:!0,extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",compressible:!0,extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",compressible:!0,extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-iwork-keynote-sffkey":{extensions:["key"]},"application/x-iwork-numbers-sffnumbers":{extensions:["numbers"]},"application/x-iwork-pages-sffpages":{extensions:["pages"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-keepass2":{extensions:["kdbx"]},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-pki-message":{source:"iana"},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!0,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!0,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!0,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!0,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!1,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!0,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!0,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!0,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"iana",extensions:["der","crt","pem"]},"application/x-x509-ca-ra-cert":{source:"iana"},"application/x-x509-next-ca-cert":{source:"iana"},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",compressible:!0,extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana",compressible:!0},"application/xaml+xml":{source:"apache",compressible:!0,extensions:["xaml"]},"application/xcap-att+xml":{source:"iana",compressible:!0,extensions:["xav"]},"application/xcap-caps+xml":{source:"iana",compressible:!0,extensions:["xca"]},"application/xcap-diff+xml":{source:"iana",compressible:!0,extensions:["xdf"]},"application/xcap-el+xml":{source:"iana",compressible:!0,extensions:["xel"]},"application/xcap-error+xml":{source:"iana",compressible:!0},"application/xcap-ns+xml":{source:"iana",compressible:!0,extensions:["xns"]},"application/xcon-conference-info+xml":{source:"iana",compressible:!0},"application/xcon-conference-info-diff+xml":{source:"iana",compressible:!0},"application/xenc+xml":{source:"iana",compressible:!0,extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache",compressible:!0},"application/xliff+xml":{source:"iana",compressible:!0,extensions:["xlf"]},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana",compressible:!0},"application/xmpp+xml":{source:"iana",compressible:!0},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",compressible:!0,extensions:["xpl"]},"application/xslt+xml":{source:"iana",compressible:!0,extensions:["xsl","xslt"]},"application/xspf+xml":{source:"apache",compressible:!0,extensions:["xspf"]},"application/xv+xml":{source:"iana",compressible:!0,extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!0},"application/yang-data+xml":{source:"iana",compressible:!0},"application/yang-patch+json":{source:"iana",compressible:!0},"application/yang-patch+xml":{source:"iana",compressible:!0},"application/yin+xml":{source:"iana",compressible:!0,extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"application/zstd":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:!1,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/aac":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana",extensions:["amr"]},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/flexfec":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/mhas":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana",extensions:["mxmf"]},"audio/mp3":{compressible:!1,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:!1,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx","opus"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/scip":{source:"iana"},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sofa":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tetra_acelp":{source:"iana"},"audio/tetra_acelp_bb":{source:"iana"},"audio/tone":{source:"iana"},"audio/tsvcis":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/usac":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dts.uhd":{source:"iana"},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!0,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",compressible:!0,extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana",extensions:["exr"]},"image/apng":{compressible:!1,extensions:["apng"]},"image/avci":{source:"iana",extensions:["avci"]},"image/avcs":{source:"iana",extensions:["avcs"]},"image/avif":{source:"iana",compressible:!1,extensions:["avif"]},"image/bmp":{source:"iana",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana",extensions:["drle"]},"image/emf":{source:"iana",extensions:["emf"]},"image/fits":{source:"iana",extensions:["fits"]},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/heic":{source:"iana",extensions:["heic"]},"image/heic-sequence":{source:"iana",extensions:["heics"]},"image/heif":{source:"iana",extensions:["heif"]},"image/heif-sequence":{source:"iana",extensions:["heifs"]},"image/hej2k":{source:"iana",extensions:["hej2"]},"image/hsj2":{source:"iana",extensions:["hsj2"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana",extensions:["jls"]},"image/jp2":{source:"iana",compressible:!1,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jph":{source:"iana",extensions:["jph"]},"image/jphc":{source:"iana",extensions:["jhc"]},"image/jpm":{source:"iana",compressible:!1,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!1,extensions:["jpx","jpf"]},"image/jxr":{source:"iana",extensions:["jxr"]},"image/jxra":{source:"iana",extensions:["jxra"]},"image/jxrs":{source:"iana",extensions:["jxrs"]},"image/jxs":{source:"iana",extensions:["jxs"]},"image/jxsc":{source:"iana",extensions:["jxsc"]},"image/jxsi":{source:"iana",extensions:["jxsi"]},"image/jxss":{source:"iana",extensions:["jxss"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/ktx2":{source:"iana",extensions:["ktx2"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana",extensions:["pti"]},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana",extensions:["t38"]},"image/tiff":{source:"iana",compressible:!1,extensions:["tif","tiff"]},"image/tiff-fx":{source:"iana",extensions:["tfx"]},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana",extensions:["azv"]},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana",compressible:!0,extensions:["ico"]},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-dds":{compressible:!0,extensions:["dds"]},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.pco.b16":{source:"iana",extensions:["b16"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana",extensions:["tap"]},"image/vnd.valve.source.texture":{source:"iana",extensions:["vtf"]},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana",extensions:["pcx"]},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana",extensions:["wmf"]},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana",extensions:["3mf"]},"model/e57":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!0,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!0,extensions:["glb"]},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/mtl":{source:"iana",extensions:["mtl"]},"model/obj":{source:"iana",extensions:["obj"]},"model/step":{source:"iana"},"model/step+xml":{source:"iana",compressible:!0,extensions:["stpx"]},"model/step+zip":{source:"iana",compressible:!1,extensions:["stpz"]},"model/step-xml+zip":{source:"iana",compressible:!1,extensions:["stpxz"]},"model/stl":{source:"iana",extensions:["stl"]},"model/vnd.collada+xml":{source:"iana",compressible:!0,extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana",compressible:!0},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana",extensions:["ogex"]},"model/vnd.parasolid.transmit.binary":{source:"iana",extensions:["x_b"]},"model/vnd.parasolid.transmit.text":{source:"iana",extensions:["x_t"]},"model/vnd.pytha.pyox":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.sap.vds":{source:"iana",extensions:["vds"]},"model/vnd.usdz+zip":{source:"iana",compressible:!1,extensions:["usdz"]},"model/vnd.valve.source.compiled-map":{source:"iana",extensions:["bsp"]},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana",extensions:["x3db"]},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana",extensions:["x3dv"]},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana"},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/cql":{source:"iana"},"text/cql-expression":{source:"iana"},"text/cql-identifier":{source:"iana"},"text/css":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fhirpath":{source:"iana"},"text/flexfec":{source:"iana"},"text/fwdred":{source:"iana"},"text/gff3":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{compressible:!0,extensions:["less"]},"text/markdown":{source:"iana",compressible:!0,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mdx":{compressible:!0,extensions:["mdx"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana",charset:"UTF-8"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana",charset:"UTF-8"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shaclc":{source:"iana"},"text/shex":{source:"iana",extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/spdx":{source:"iana",extensions:["spdx"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",charset:"UTF-8",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana",charset:"UTF-8"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana",charset:"UTF-8"},"text/vnd.familysearch.gedcom":{source:"iana",extensions:["ged"]},"text/vnd.ficlab.flt":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.gml":{source:"iana"},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.hans":{source:"iana"},"text/vnd.hgl":{source:"iana"},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.senx.warpscript":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sosi":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",charset:"UTF-8",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana",charset:"UTF-8"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!0,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{compressible:!0,extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/av1":{source:"iana"},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/ffv1":{source:"iana"},"video/flexfec":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana",extensions:["m4s"]},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/jxsv":{source:"iana"},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!1,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/scip":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vc2":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vnd.youtube.yt":{source:"iana"},"video/vp8":{source:"iana"},"video/vp9":{source:"iana"},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}},
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
function(e){var t=Ee.exports,n=a.extname,i=/^\s*([^;\s]*)(?:;|\s|$)/,r=/^text\//i;function o(e){if(!e||"string"!=typeof e)return!1;var n=i.exec(e),a=n&&t[n[1].toLowerCase()];return a&&a.charset?a.charset:!(!n||!r.test(n[1]))&&"UTF-8"}e.charset=o,e.charsets={lookup:o},e.contentType=function(t){if(!t||"string"!=typeof t)return!1;var n=-1===t.indexOf("/")?e.lookup(t):t;if(!n)return!1;if(-1===n.indexOf("charset")){var a=e.charset(n);a&&(n+="; charset="+a.toLowerCase())}return n},e.extension=function(t){if(!t||"string"!=typeof t)return!1;var n=i.exec(t),a=n&&e.extensions[n[1].toLowerCase()];if(!a||!a.length)return!1;return a[0]},e.extensions=Object.create(null),e.lookup=function(t){if(!t||"string"!=typeof t)return!1;var a=n("x."+t).toLowerCase().substr(1);if(!a)return!1;return e.types[a]||!1},e.types=Object.create(null),function(e,n){var a=["nginx","apache",void 0,"iana"];Object.keys(t).forEach(function(i){var r=t[i],o=r.extensions;if(o&&o.length){e[i]=o;for(var s=0;s<o.length;s++){var l=o[s];if(n[l]){var c=a.indexOf(t[n[l]].source),d=a.indexOf(r.source);if("application/octet-stream"!==n[l]&&(c>d||c===d&&"application/"===n[l].substr(0,12)))continue}n[l]=i}}})}(e.extensions,e.types)}(ke);var Ke=function(e){var t="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;t?t(e):setTimeout(e,0)},we=function(e){var t=!1;return Ke(function(){t=!0}),function(n,a){t?e(n,a):Ke(function(){e(n,a)})}};var Se=function(e){Object.keys(e.jobs).forEach(Ie.bind(e)),e.jobs={}};function Ie(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}var je=we,Re=Se,Te=function(e,t,n,a){var i=n.keyedList?n.keyedList[n.index]:n.index;n.jobs[i]=function(e,t,n,a){var i;i=2==e.length?e(n,je(a)):e(n,t,je(a));return i}(t,i,e[i],function(e,t){i in n.jobs&&(delete n.jobs[i],e?Re(n):n.results[i]=t,a(e,n.results))})};var Oe=function(e,t){var n=!Array.isArray(e),a={index:0,keyedList:n||t?Object.keys(e):null,jobs:{},results:n?{}:[],size:n?Object.keys(e).length:e.length};t&&a.keyedList.sort(n?t:function(n,a){return t(e[n],e[a])});return a};var Ae=Se,Ce=we,De=function(e){if(!Object.keys(this.jobs).length)return;this.index=this.size,Ae(this),Ce(e)(null,this.results)};var Pe=Te,Ne=Oe,Me=De,Fe=function(e,t,n){var a=Ne(e);for(;a.index<(a.keyedList||e).length;)Pe(e,t,a,function(e,t){e?n(e,t):0!==Object.keys(a.jobs).length||n(null,a.results)}),a.index++;return Me.bind(a,n)};var Le={exports:{}},Je=Te,Ue=Oe,qe=De;function Ve(e,t){return e<t?-1:e>t?1:0}Le.exports=function(e,t,n,a){var i=Ue(e,n);return Je(e,t,i,function n(r,o){r?a(r,o):(i.index++,i.index<(i.keyedList||e).length?Je(e,t,i,n):a(null,i.results))}),qe.bind(i,a)},Le.exports.ascending=Ve,Le.exports.descending=function(e,t){return-1*Ve(e,t)};var Ge=Le.exports;var Be,ze,Ye={parallel:Fe,serial:function(e,t,n){return Ge(e,t,null,n)},serialOrdered:Le.exports},$e=Object,We=Error,He=EvalError,Qe=RangeError,Ze=ReferenceError,Xe=SyntaxError;function et(){return ze?Be:(ze=1,Be=TypeError)}var tt=URIError,nt=Math.abs,at=Math.floor,it=Math.max,rt=Math.min,ot=Math.pow,st=Math.round,lt=Number.isNaN||function(e){return e!=e},ct=Object.getOwnPropertyDescriptor;if(ct)try{ct([],"length")}catch(e){ct=null}var dt=ct,ut=Object.defineProperty||!1;if(ut)try{ut({},"a",{value:1})}catch(e){ut=!1}var pt,mt,ht,yt,ft,vt,bt,gt,_t=ut;function xt(){return mt?pt:(mt=1,pt=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(var a in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var i=Object.getOwnPropertySymbols(e);if(1!==i.length||i[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(e,t);if(42!==r.value||!0!==r.enumerable)return!1}return!0})}function kt(){return vt?ft:(vt=1,ft="undefined"!=typeof Reflect&&Reflect.getPrototypeOf||null)}function Et(){return gt?bt:(gt=1,bt=$e.getPrototypeOf||null)}var Kt,wt,St,It,jt,Rt,Tt,Ot,At,Ct,Dt,Pt,Nt,Mt,Ft=Object.prototype.toString,Lt=Math.max,Jt=function(e,t){for(var n=[],a=0;a<e.length;a+=1)n[a]=e[a];for(var i=0;i<t.length;i+=1)n[i+e.length]=t[i];return n},Ut=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==Ft.apply(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var n,a=function(e,t){for(var n=[],a=t||0,i=0;a<e.length;a+=1,i+=1)n[i]=e[a];return n}(arguments,1),i=Lt(0,t.length-a.length),r=[],o=0;o<i;o++)r[o]="$"+o;if(n=Function("binder","return function ("+function(e,t){for(var n="",a=0;a<e.length;a+=1)n+=e[a],a+1<e.length&&(n+=t);return n}(r,",")+"){ return binder.apply(this,arguments); }")(function(){if(this instanceof n){var i=t.apply(this,Jt(a,arguments));return Object(i)===i?i:this}return t.apply(e,Jt(a,arguments))}),t.prototype){var s=function(){};s.prototype=t.prototype,n.prototype=new s,s.prototype=null}return n},qt=Function.prototype.bind||Ut;function Vt(){return wt?Kt:(wt=1,Kt=Function.prototype.call)}function Gt(){return It?St:(It=1,St=Function.prototype.apply)}function Bt(){if(Ot)return Tt;Ot=1;var e=qt,t=Gt(),n=Vt(),a=Rt?jt:(Rt=1,jt="undefined"!=typeof Reflect&&Reflect&&Reflect.apply);return Tt=a||e.call(n,t)}function zt(){if(Pt)return Dt;Pt=1;var e,t=function(){if(Ct)return At;Ct=1;var e=qt,t=et(),n=Vt(),a=Bt();return At=function(i){if(i.length<1||"function"!=typeof i[0])throw new t("a function is required");return a(e,n,i)}}(),n=dt;try{e=[].__proto__===Array.prototype}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"ERR_PROTO_ACCESS"!==e.code)throw e}var a=!!e&&n&&n(Object.prototype,"__proto__"),i=Object,r=i.getPrototypeOf;return Dt=a&&"function"==typeof a.get?t([a.get]):"function"==typeof r&&function(e){return r(null==e?e:i(e))}}var Yt,$t=Function.prototype.call,Wt=Object.prototype.hasOwnProperty,Ht=qt.call($t,Wt),Qt=$e,Zt=We,Xt=He,en=Qe,tn=Ze,nn=Xe,an=et(),rn=tt,on=nt,sn=at,ln=it,cn=rt,dn=ot,un=st,pn=function(e){return lt(e)||0===e?e:e<0?-1:1},mn=Function,hn=function(e){try{return mn('"use strict"; return ('+e+").constructor;")()}catch(e){}},yn=dt,fn=_t,vn=function(){throw new an},bn=yn?function(){try{return vn}catch(e){try{return yn(arguments,"callee").get}catch(e){return vn}}}():vn,gn=function(){if(yt)return ht;yt=1;var e="undefined"!=typeof Symbol&&Symbol,t=xt();return ht=function(){return"function"==typeof e&&("function"==typeof Symbol&&("symbol"==typeof e("foo")&&("symbol"==typeof Symbol("bar")&&t())))}}()(),_n=function(){if(Mt)return Nt;Mt=1;var e=kt(),t=Et(),n=zt();return Nt=e?function(t){return e(t)}:t?function(e){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("getProto: not an object");return t(e)}:n?function(e){return n(e)}:null}(),xn=Et(),kn=kt(),En=Gt(),Kn=Vt(),wn={},Sn="undefined"!=typeof Uint8Array&&_n?_n(Uint8Array):Yt,In={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?Yt:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?Yt:ArrayBuffer,"%ArrayIteratorPrototype%":gn&&_n?_n([][Symbol.iterator]()):Yt,"%AsyncFromSyncIteratorPrototype%":Yt,"%AsyncFunction%":wn,"%AsyncGenerator%":wn,"%AsyncGeneratorFunction%":wn,"%AsyncIteratorPrototype%":wn,"%Atomics%":"undefined"==typeof Atomics?Yt:Atomics,"%BigInt%":"undefined"==typeof BigInt?Yt:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?Yt:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?Yt:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?Yt:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Zt,"%eval%":eval,"%EvalError%":Xt,"%Float16Array%":"undefined"==typeof Float16Array?Yt:Float16Array,"%Float32Array%":"undefined"==typeof Float32Array?Yt:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?Yt:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?Yt:FinalizationRegistry,"%Function%":mn,"%GeneratorFunction%":wn,"%Int8Array%":"undefined"==typeof Int8Array?Yt:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?Yt:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?Yt:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":gn&&_n?_n(_n([][Symbol.iterator]())):Yt,"%JSON%":"object"==typeof JSON?JSON:Yt,"%Map%":"undefined"==typeof Map?Yt:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&gn&&_n?_n((new Map)[Symbol.iterator]()):Yt,"%Math%":Math,"%Number%":Number,"%Object%":Qt,"%Object.getOwnPropertyDescriptor%":yn,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?Yt:Promise,"%Proxy%":"undefined"==typeof Proxy?Yt:Proxy,"%RangeError%":en,"%ReferenceError%":tn,"%Reflect%":"undefined"==typeof Reflect?Yt:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?Yt:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&gn&&_n?_n((new Set)[Symbol.iterator]()):Yt,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?Yt:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":gn&&_n?_n(""[Symbol.iterator]()):Yt,"%Symbol%":gn?Symbol:Yt,"%SyntaxError%":nn,"%ThrowTypeError%":bn,"%TypedArray%":Sn,"%TypeError%":an,"%Uint8Array%":"undefined"==typeof Uint8Array?Yt:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?Yt:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?Yt:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?Yt:Uint32Array,"%URIError%":rn,"%WeakMap%":"undefined"==typeof WeakMap?Yt:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?Yt:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?Yt:WeakSet,"%Function.prototype.call%":Kn,"%Function.prototype.apply%":En,"%Object.defineProperty%":fn,"%Object.getPrototypeOf%":xn,"%Math.abs%":on,"%Math.floor%":sn,"%Math.max%":ln,"%Math.min%":cn,"%Math.pow%":dn,"%Math.round%":un,"%Math.sign%":pn,"%Reflect.getPrototypeOf%":kn};if(_n)try{null.error}catch(e){var jn=_n(_n(e));In["%Error.prototype%"]=jn}var Rn,Tn,On=function e(t){var n;if("%AsyncFunction%"===t)n=hn("async function () {}");else if("%GeneratorFunction%"===t)n=hn("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=hn("async function* () {}");else if("%AsyncGenerator%"===t){var a=e("%AsyncGeneratorFunction%");a&&(n=a.prototype)}else if("%AsyncIteratorPrototype%"===t){var i=e("%AsyncGenerator%");i&&_n&&(n=_n(i.prototype))}return In[t]=n,n},An={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},Cn=qt,Dn=Ht,Pn=Cn.call(Kn,Array.prototype.concat),Nn=Cn.call(En,Array.prototype.splice),Mn=Cn.call(Kn,String.prototype.replace),Fn=Cn.call(Kn,String.prototype.slice),Ln=Cn.call(Kn,RegExp.prototype.exec),Jn=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,Un=/\\(\\)?/g,qn=function(e,t){var n,a=e;if(Dn(An,a)&&(a="%"+(n=An[a])[0]+"%"),Dn(In,a)){var i=In[a];if(i===wn&&(i=On(a)),void 0===i&&!t)throw new an("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:a,value:i}}throw new nn("intrinsic "+e+" does not exist!")};var Vn=function(e,t){if("string"!=typeof e||0===e.length)throw new an("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new an('"allowMissing" argument must be a boolean');if(null===Ln(/^%?[^%]*%?$/,e))throw new nn("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=function(e){var t=Fn(e,0,1),n=Fn(e,-1);if("%"===t&&"%"!==n)throw new nn("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new nn("invalid intrinsic syntax, expected opening `%`");var a=[];return Mn(e,Jn,function(e,t,n,i){a[a.length]=n?Mn(i,Un,"$1"):t||e}),a}(e),a=n.length>0?n[0]:"",i=qn("%"+a+"%",t),r=i.name,o=i.value,s=!1,l=i.alias;l&&(a=l[0],Nn(n,Pn([0,1],l)));for(var c=1,d=!0;c<n.length;c+=1){var u=n[c],p=Fn(u,0,1),m=Fn(u,-1);if(('"'===p||"'"===p||"`"===p||'"'===m||"'"===m||"`"===m)&&p!==m)throw new nn("property names with quotes must have matching quotes");if("constructor"!==u&&d||(s=!0),Dn(In,r="%"+(a+="."+u)+"%"))o=In[r];else if(null!=o){if(!(u in o)){if(!t)throw new an("base intrinsic for "+e+" exists, but the property is not available.");return}if(yn&&c+1>=n.length){var h=yn(o,u);o=(d=!!h)&&"get"in h&&!("originalValue"in h.get)?h.get:o[u]}else d=Dn(o,u),o=o[u];d&&!s&&(In[r]=o)}}return o},Gn=Vn("%Object.defineProperty%",!0),Bn=function(){if(Tn)return Rn;Tn=1;var e=xt();return Rn=function(){return e()&&!!Symbol.toStringTag}}()(),zn=Ht,Yn=et(),$n=Bn?Symbol.toStringTag:null,Wn=_e,Hn=t,Qn=a,Zn=i,Xn=r,ea=o.parse,ta=s,na=n.Stream,aa=l,ia=ke,ra=Ye,oa=function(e,t){var n=arguments.length>2&&!!arguments[2]&&arguments[2].force,a=arguments.length>2&&!!arguments[2]&&arguments[2].nonConfigurable;if(void 0!==n&&"boolean"!=typeof n||void 0!==a&&"boolean"!=typeof a)throw new Yn("if provided, the `overrideIfSet` and `nonConfigurable` options must be booleans");!$n||!n&&zn(e,$n)||(Gn?Gn(e,$n,{configurable:!a,enumerable:!1,value:t,writable:!1}):e[$n]=t)},sa=Ht,la=function(e,t){return Object.keys(t).forEach(function(n){e[n]=e[n]||t[n]}),e};function ca(e){if(!(this instanceof ca))return new ca(e);for(var t in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],Wn.call(this),e=e||{})this[t]=e[t]}Hn.inherits(ca,Wn),ca.LINE_BREAK="\r\n",ca.DEFAULT_CONTENT_TYPE="application/octet-stream",ca.prototype.append=function(e,t,n){"string"==typeof(n=n||{})&&(n={filename:n});var a=Wn.prototype.append.bind(this);if("number"!=typeof t&&null!=t||(t=String(t)),Array.isArray(t))this._error(new Error("Arrays are not supported."));else{var i=this._multiPartHeader(e,t,n),r=this._multiPartFooter();a(i),a(t),a(r),this._trackLength(i,t,n)}},ca.prototype._trackLength=function(e,t,n){var a=0;null!=n.knownLength?a+=Number(n.knownLength):Buffer.isBuffer(t)?a=t.length:"string"==typeof t&&(a=Buffer.byteLength(t)),this._valueLength+=a,this._overheadLength+=Buffer.byteLength(e)+ca.LINE_BREAK.length,t&&(t.path||t.readable&&sa(t,"httpVersion")||t instanceof na)&&(n.knownLength||this._valuesToMeasure.push(t))},ca.prototype._lengthRetriever=function(e,t){sa(e,"fd")?null!=e.end&&e.end!=1/0&&null!=e.start?t(null,e.end+1-(e.start?e.start:0)):ta.stat(e.path,function(n,a){if(n)t(n);else{var i=a.size-(e.start?e.start:0);t(null,i)}}):sa(e,"httpVersion")?t(null,Number(e.headers["content-length"])):sa(e,"httpModule")?(e.on("response",function(n){e.pause(),t(null,Number(n.headers["content-length"]))}),e.resume()):t("Unknown stream")},ca.prototype._multiPartHeader=function(e,t,n){if("string"==typeof n.header)return n.header;var a,i=this._getContentDisposition(t,n),r=this._getContentType(t,n),o="",s={"Content-Disposition":["form-data",'name="'+e+'"'].concat(i||[]),"Content-Type":[].concat(r||[])};for(var l in"object"==typeof n.header&&la(s,n.header),s)if(sa(s,l)){if(null==(a=s[l]))continue;Array.isArray(a)||(a=[a]),a.length&&(o+=l+": "+a.join("; ")+ca.LINE_BREAK)}return"--"+this.getBoundary()+ca.LINE_BREAK+o+ca.LINE_BREAK},ca.prototype._getContentDisposition=function(e,t){var n;if("string"==typeof t.filepath?n=Qn.normalize(t.filepath).replace(/\\/g,"/"):t.filename||e&&(e.name||e.path)?n=Qn.basename(t.filename||e&&(e.name||e.path)):e&&e.readable&&sa(e,"httpVersion")&&(n=Qn.basename(e.client._httpMessage.path||"")),n)return'filename="'+n+'"'},ca.prototype._getContentType=function(e,t){var n=t.contentType;return!n&&e&&e.name&&(n=ia.lookup(e.name)),!n&&e&&e.path&&(n=ia.lookup(e.path)),!n&&e&&e.readable&&sa(e,"httpVersion")&&(n=e.headers["content-type"]),n||!t.filepath&&!t.filename||(n=ia.lookup(t.filepath||t.filename)),!n&&e&&"object"==typeof e&&(n=ca.DEFAULT_CONTENT_TYPE),n},ca.prototype._multiPartFooter=function(){return function(e){var t=ca.LINE_BREAK;0===this._streams.length&&(t+=this._lastBoundary()),e(t)}.bind(this)},ca.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+ca.LINE_BREAK},ca.prototype.getHeaders=function(e){var t,n={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(t in e)sa(e,t)&&(n[t.toLowerCase()]=e[t]);return n},ca.prototype.setBoundary=function(e){if("string"!=typeof e)throw new TypeError("FormData boundary must be a string");this._boundary=e},ca.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},ca.prototype.getBuffer=function(){for(var e=new Buffer.alloc(0),t=this.getBoundary(),n=0,a=this._streams.length;n<a;n++)"function"!=typeof this._streams[n]&&(e=Buffer.isBuffer(this._streams[n])?Buffer.concat([e,this._streams[n]]):Buffer.concat([e,Buffer.from(this._streams[n])]),"string"==typeof this._streams[n]&&this._streams[n].substring(2,t.length+2)===t||(e=Buffer.concat([e,Buffer.from(ca.LINE_BREAK)])));return Buffer.concat([e,Buffer.from(this._lastBoundary())])},ca.prototype._generateBoundary=function(){this._boundary="--------------------------"+aa.randomBytes(12).toString("hex")},ca.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},ca.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},ca.prototype.getLength=function(e){var t=this._overheadLength+this._valueLength;this._streams.length&&(t+=this._lastBoundary().length),this._valuesToMeasure.length?ra.parallel(this._valuesToMeasure,this._lengthRetriever,function(n,a){n?e(n):(a.forEach(function(e){t+=e}),e(null,t))}):process.nextTick(e.bind(this,null,t))},ca.prototype.submit=function(e,t){var n,a,i={method:"post"};return"string"==typeof e?(e=ea(e),a=la({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},i)):(a=la(e,i)).port||(a.port="https:"===a.protocol?443:80),a.headers=this.getHeaders(e.headers),n="https:"===a.protocol?Xn.request(a):Zn.request(a),this.getLength(function(e,a){if(e&&"Unknown stream"!==e)this._error(e);else if(a&&n.setHeader("Content-Length",a),this.pipe(n),t){var i,r=function(e,a){return n.removeListener("error",r),n.removeListener("response",i),t.call(this,e,a)};i=r.bind(this,null),n.on("error",r),n.on("response",i)}}.bind(this)),n},ca.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},ca.prototype.toString=function(){return"[object FormData]"},oa(ca,"FormData");var da=ca;function ua(e){return de.isPlainObject(e)||de.isArray(e)}function pa(e){return de.endsWith(e,"[]")?e.slice(0,-2):e}function ma(e,t,n){return e?e.concat(t).map(function(e,t){return e=pa(e),!n&&t?"["+e+"]":e}).join(n?".":""):t}const ha=de.toFlatObject(de,{},null,function(e){return/^is[A-Z]/.test(e)});function ya(e,t,n){if(!de.isObject(e))throw new TypeError("target must be an object");t=t||new(da||FormData);const a=(n=de.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,function(e,t){return!de.isUndefined(t[e])})).metaTokens,i=n.visitor||c,r=n.dots,o=n.indexes,s=(n.Blob||"undefined"!=typeof Blob&&Blob)&&de.isSpecCompliantForm(t);if(!de.isFunction(i))throw new TypeError("visitor must be a function");function l(e){if(null===e)return"";if(de.isDate(e))return e.toISOString();if(!s&&de.isBlob(e))throw new ue("Blob is not supported. Use a Buffer instead.");return de.isArrayBuffer(e)||de.isTypedArray(e)?s&&"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}function c(e,n,i){let s=e;if(e&&!i&&"object"==typeof e)if(de.endsWith(n,"{}"))n=a?n:n.slice(0,-2),e=JSON.stringify(e);else if(de.isArray(e)&&function(e){return de.isArray(e)&&!e.some(ua)}(e)||(de.isFileList(e)||de.endsWith(n,"[]"))&&(s=de.toArray(e)))return n=pa(n),s.forEach(function(e,a){!de.isUndefined(e)&&null!==e&&t.append(!0===o?ma([n],a,r):null===o?n:n+"[]",l(e))}),!1;return!!ua(e)||(t.append(ma(i,n,r),l(e)),!1)}const d=[],u=Object.assign(ha,{defaultVisitor:c,convertValue:l,isVisitable:ua});if(!de.isObject(e))throw new TypeError("data must be an object");return function e(n,a){if(!de.isUndefined(n)){if(-1!==d.indexOf(n))throw Error("Circular reference detected in "+a.join("."));d.push(n),de.forEach(n,function(n,r){!0===(!(de.isUndefined(n)||null===n)&&i.call(t,n,de.isString(r)?r.trim():r,a,u))&&e(n,a?a.concat(r):[r])}),d.pop()}}(e),t}function fa(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(e){return t[e]})}function va(e,t){this._pairs=[],e&&ya(e,this,t)}const ba=va.prototype;function ga(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function _a(e,t,n){if(!t)return e;const a=n&&n.encode||ga,i=n&&n.serialize;let r;if(r=i?i(t,n):de.isURLSearchParams(t)?t.toString():new va(t,n).toString(a),r){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+r}return e}ba.append=function(e,t){this._pairs.push([e,t])},ba.toString=function(e){const t=e?function(t){return e.call(this,t,fa)}:fa;return this._pairs.map(function(e){return t(e[0])+"="+t(e[1])},"").join("&")};class xa{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){de.forEach(this.handlers,function(t){null!==t&&e(t)})}}var ka={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Ea={isNode:!0,classes:{URLSearchParams:o.URLSearchParams,FormData:da,Blob:"undefined"!=typeof Blob&&Blob||null},protocols:["http","https","file","data"]};function Ka(e){function t(e,n,a,i){let r=e[i++];const o=Number.isFinite(+r),s=i>=e.length;if(r=!r&&de.isArray(a)?a.length:r,s)return de.hasOwnProp(a,r)?a[r]=[a[r],n]:a[r]=n,!o;a[r]&&de.isObject(a[r])||(a[r]=[]);return t(e,n,a[r],i)&&de.isArray(a[r])&&(a[r]=function(e){const t={},n=Object.keys(e);let a;const i=n.length;let r;for(a=0;a<i;a++)r=n[a],t[r]=e[r];return t}(a[r])),!o}if(de.isFormData(e)&&de.isFunction(e.entries)){const n={};return de.forEachEntry(e,(e,a)=>{t(function(e){return de.matchAll(/\w+|\[(\w*)]/g,e).map(e=>"[]"===e[0]?"":e[1]||e[0])}(e),a,n,0)}),n}return null}const wa={"Content-Type":void 0};const Sa={transitional:ka,adapter:["xhr","http"],transformRequest:[function(e,t){const n=t.getContentType()||"",a=n.indexOf("application/json")>-1,i=de.isObject(e);i&&de.isHTMLForm(e)&&(e=new FormData(e));if(de.isFormData(e))return a&&a?JSON.stringify(Ka(e)):e;if(de.isArrayBuffer(e)||de.isBuffer(e)||de.isStream(e)||de.isFile(e)||de.isBlob(e))return e;if(de.isArrayBufferView(e))return e.buffer;if(de.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let r;if(i){if(n.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return ya(e,new Ea.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,a){return de.isBuffer(e)?(this.append(t,e.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((r=de.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return ya(r?{"files[]":e}:e,t&&new t,this.formSerializer)}}return i||a?(t.setContentType("application/json",!1),function(e,t,n){if(de.isString(e))try{return(t||JSON.parse)(e),de.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||Sa.transitional,n=t&&t.forcedJSONParsing,a="json"===this.responseType;if(e&&de.isString(e)&&(n&&!this.responseType||a)){const n=!(t&&t.silentJSONParsing)&&a;try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw ue.from(e,ue.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Ea.classes.FormData,Blob:Ea.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};de.forEach(["delete","get","head"],function(e){Sa.headers[e]={}}),de.forEach(["post","put","patch"],function(e){Sa.headers[e]=de.merge(wa)});const Ia=de.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);const ja=Symbol("internals");function Ra(e){return e&&String(e).trim().toLowerCase()}function Ta(e){return!1===e||null==e?e:de.isArray(e)?e.map(Ta):String(e)}function Oa(e,t,n,a,i){return de.isFunction(a)?a.call(this,t,n):(i&&(t=n),de.isString(t)?de.isString(a)?-1!==t.indexOf(a):de.isRegExp(a)?a.test(t):void 0:void 0)}class Aa{constructor(e){e&&this.set(e)}set(e,t,n){const a=this;function i(e,t,n){const i=Ra(t);if(!i)throw new Error("header name must be a non-empty string");const r=de.findKey(a,i);(!r||void 0===a[r]||!0===n||void 0===n&&!1!==a[r])&&(a[r||t]=Ta(e))}const r=(e,t)=>de.forEach(e,(e,n)=>i(e,n,t));return de.isPlainObject(e)||e instanceof this.constructor?r(e,t):de.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z]+$/.test(e.trim())?r((e=>{const t={};let n,a,i;return e&&e.split("\n").forEach(function(e){i=e.indexOf(":"),n=e.substring(0,i).trim().toLowerCase(),a=e.substring(i+1).trim(),!n||t[n]&&Ia[n]||("set-cookie"===n?t[n]?t[n].push(a):t[n]=[a]:t[n]=t[n]?t[n]+", "+a:a)}),t})(e),t):null!=e&&i(t,e,n),this}get(e,t){if(e=Ra(e)){const n=de.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let a;for(;a=n.exec(e);)t[a[1]]=a[2];return t}(e);if(de.isFunction(t))return t.call(this,e,n);if(de.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=Ra(e)){const n=de.findKey(this,e);return!(!n||void 0===this[n]||t&&!Oa(0,this[n],n,t))}return!1}delete(e,t){const n=this;let a=!1;function i(e){if(e=Ra(e)){const i=de.findKey(n,e);!i||t&&!Oa(0,n[i],i,t)||(delete n[i],a=!0)}}return de.isArray(e)?e.forEach(i):i(e),a}clear(e){const t=Object.keys(this);let n=t.length,a=!1;for(;n--;){const i=t[n];e&&!Oa(0,this[i],i,e,!0)||(delete this[i],a=!0)}return a}normalize(e){const t=this,n={};return de.forEach(this,(a,i)=>{const r=de.findKey(n,i);if(r)return t[r]=Ta(a),void delete t[i];const o=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,n)=>t.toUpperCase()+n)}(i):String(i).trim();o!==i&&delete t[i],t[o]=Ta(a),n[o]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return de.forEach(this,(n,a)=>{null!=n&&!1!==n&&(t[a]=e&&de.isArray(n)?n.join(", "):n)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const n=new this(e);return t.forEach(e=>n.set(e)),n}static accessor(e){const t=(this[ja]=this[ja]={accessors:{}}).accessors,n=this.prototype;function a(e){const a=Ra(e);t[a]||(!function(e,t){const n=de.toCamelCase(" "+t);["get","set","has"].forEach(a=>{Object.defineProperty(e,a+n,{value:function(e,n,i){return this[a].call(this,t,e,n,i)},configurable:!0})})}(n,e),t[a]=!0)}return de.isArray(e)?e.forEach(a):a(e),this}}function Ca(e,t){const n=this||Sa,a=t||n,i=Aa.from(a.headers);let r=a.data;return de.forEach(e,function(e){r=e.call(n,r,i.normalize(),t?t.status:void 0)}),i.normalize(),r}function Da(e){return!(!e||!e.__CANCEL__)}function Pa(e,t,n){ue.call(this,null==e?"canceled":e,ue.ERR_CANCELED,t,n),this.name="CanceledError"}function Na(e,t,n){const a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new ue("Request failed with status code "+n.status,[ue.ERR_BAD_REQUEST,ue.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}function Ma(e,t){return e&&!function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}(t)?function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}Aa.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),de.freezeMethods(Aa.prototype),de.freezeMethods(Aa),de.inherits(Pa,ue,{__CANCEL__:!0});var Fa=o.parse,La={ftp:21,gopher:70,http:80,https:443,ws:80,wss:443},Ja=String.prototype.endsWith||function(e){return e.length<=this.length&&-1!==this.indexOf(e,this.length-e.length)};function Ua(e){return process.env[e.toLowerCase()]||process.env[e.toUpperCase()]||""}var qa,Va,Ga,Ba,za=function(e){var t="string"==typeof e?Fa(e):e||{},n=t.protocol,a=t.host,i=t.port;if("string"!=typeof a||!a||"string"!=typeof n)return"";if(n=n.split(":",1)[0],!function(e,t){var n=(Ua("npm_config_no_proxy")||Ua("no_proxy")).toLowerCase();if(!n)return!0;if("*"===n)return!1;return n.split(/[,\s]/).every(function(n){if(!n)return!0;var a=n.match(/^(.+):(\d+)$/),i=a?a[1]:n,r=a?parseInt(a[2]):0;return!(!r||r===t)||(/^[.*]/.test(i)?("*"===i.charAt(0)&&(i=i.slice(1)),!Ja.call(e,i)):e!==i)})}(a=a.replace(/:\d*$/,""),i=parseInt(i)||La[n]||0))return"";var r=Ua("npm_config_"+n+"_proxy")||Ua(n+"_proxy")||Ua("npm_config_proxy")||Ua("all_proxy");return r&&-1===r.indexOf("://")&&(r=n+"://"+r),r},Ya={exports:{}},$a={exports:{}},Wa={exports:{}},Ha={exports:{}};function Qa(){if(Va)return qa;Va=1;var e=1e3,t=60*e,n=60*t,a=24*n,i=365.25*a;function r(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}return qa=function(o,s){s=s||{};var l=typeof o;if("string"===l&&o.length>0)return function(r){if((r=String(r)).length>100)return;var o=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(r);if(!o)return;var s=parseFloat(o[1]);switch((o[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*i;case"days":case"day":case"d":return s*a;case"hours":case"hour":case"hrs":case"hr":case"h":return s*n;case"minutes":case"minute":case"mins":case"min":case"m":return s*t;case"seconds":case"second":case"secs":case"sec":case"s":return s*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(o);if("number"===l&&!1===isNaN(o))return s.long?function(i){return r(i,a,"day")||r(i,n,"hour")||r(i,t,"minute")||r(i,e,"second")||i+" ms"}(o):function(i){if(i>=a)return Math.round(i/a)+"d";if(i>=n)return Math.round(i/n)+"h";if(i>=t)return Math.round(i/t)+"m";if(i>=e)return Math.round(i/e)+"s";return i+"ms"}(o);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(o))},qa}function Za(){return Ga||(Ga=1,function(e,t){var n;function a(e){function a(){if(a.enabled){var e=a,i=+new Date,r=i-(n||i);e.diff=r,e.prev=n,e.curr=i,n=i;for(var o=new Array(arguments.length),s=0;s<o.length;s++)o[s]=arguments[s];o[0]=t.coerce(o[0]),"string"!=typeof o[0]&&o.unshift("%O");var l=0;o[0]=o[0].replace(/%([a-zA-Z%])/g,function(n,a){if("%%"===n)return n;l++;var i=t.formatters[a];if("function"==typeof i){var r=o[l];n=i.call(e,r),o.splice(l,1),l--}return n}),t.formatArgs.call(e,o),(a.log||t.log||console.log.bind(console)).apply(e,o)}}return a.namespace=e,a.enabled=t.enabled(e),a.useColors=t.useColors(),a.color=function(e){var n,a=0;for(n in e)a=(a<<5)-a+e.charCodeAt(n),a|=0;return t.colors[Math.abs(a)%t.colors.length]}(e),"function"==typeof t.init&&t.init(a),a}(t=Ha.exports=a.debug=a.default=a).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),a=n.length,i=0;i<a;i++)n[i]&&("-"===(e=n[i].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=Qa(),t.names=[],t.skips=[],t.formatters={}}(0,Ha.exports)),Ha.exports}var Xa,ei,ti,ni={exports:{}};function ai(){return ei||(ei=1,function(e){"undefined"!=typeof process&&"renderer"===process.type?e.exports=(Ba||(Ba=1,function(e,t){function n(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=Wa.exports=Za()).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),n){var a="color: "+this.color;e.splice(1,0,a,"color: inherit");var i=0,r=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(i++,"%c"===e&&(r=i))}),e.splice(r,0,a)}},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=n,t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type)||"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(n())}(0,Wa.exports)),Wa.exports):e.exports=(Xa||(Xa=1,function(e,n){var a=d,i=t;(n=ni.exports=Za()).init=function(e){e.inspectOpts={};for(var t=Object.keys(n.inspectOpts),a=0;a<t.length;a++)e.inspectOpts[t[a]]=n.inspectOpts[t[a]]},n.log=function(){return o.write(i.format.apply(i,arguments)+"\n")},n.formatArgs=function(e){var t=this.namespace;if(this.useColors){var a=this.color,i="  [3"+a+";1m"+t+" [0m";e[0]=i+e[0].split("\n").join("\n"+i),e.push("[3"+a+"m+"+n.humanize(this.diff)+"[0m")}else e[0]=(new Date).toUTCString()+" "+t+" "+e[0]},n.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},n.load=l,n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):a.isatty(r)},n.colors=[6,2,3,4,5,1],n.inspectOpts=Object.keys(process.env).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,t){var n=t.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,t){return t.toUpperCase()}),a=process.env[t];return a=!!/^(yes|on|true|enabled)$/i.test(a)||!/^(no|off|false|disabled)$/i.test(a)&&("null"===a?null:Number(a)),e[n]=a,e},{});var r=parseInt(process.env.DEBUG_FD,10)||2;1!==r&&2!==r&&i.deprecate(function(){},"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();var o=1===r?process.stdout:2===r?process.stderr:function(e){var t;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":(t=new a.WriteStream(e))._type="tty",t._handle&&t._handle.unref&&t._handle.unref();break;case"FILE":(t=new s.SyncWriteStream(e,{autoClose:!1}))._type="fs";break;case"PIPE":case"TCP":(t=new u.Socket({fd:e,readable:!1,writable:!0})).readable=!1,t.read=null,t._type="pipe",t._handle&&t._handle.unref&&t._handle.unref();break;default:throw new Error("Implement me. Unknown stream file type!")}return t.fd=e,t._isStdio=!0,t}(r);function l(){return process.env.DEBUG}n.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},n.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts)},n.enable(l())}(0,ni.exports)),ni.exports)}($a)),$a.exports}var ii,ri,oi,si=o,li=si.URL,ci=i,di=r,ui=n.Writable,pi=c,mi=function(){if(!ti){try{ti=ai()("follow-redirects")}catch(e){}"function"!=typeof ti&&(ti=function(){})}ti.apply(null,arguments)};ii="undefined"!=typeof process,ri="undefined"!=typeof window&&"undefined"!=typeof document,oi=Di(Error.captureStackTrace),ii||!ri&&oi||console.warn("The follow-redirects package should be excluded from browser builds.");var hi=!1;try{pi(new li(""))}catch(e){hi="ERR_INVALID_URL"===e.code}var yi=["auth","host","hostname","href","path","pathname","port","protocol","query","search","hash"],fi=["abort","aborted","connect","error","socket","timeout"],vi=Object.create(null);fi.forEach(function(e){vi[e]=function(t,n,a){this._redirectable.emit(e,t,n,a)}});var bi=Oi("ERR_INVALID_URL","Invalid URL",TypeError),gi=Oi("ERR_FR_REDIRECTION_FAILURE","Redirected request failed"),_i=Oi("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded",gi),xi=Oi("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit"),ki=Oi("ERR_STREAM_WRITE_AFTER_END","write after end"),Ei=ui.prototype.destroy||Si;function Ki(e,t){ui.call(this),this._sanitizeOptions(e),this._options=e,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],t&&this.on("response",t);var n=this;this._onNativeResponse=function(e){try{n._processResponse(e)}catch(e){n.emit("error",e instanceof gi?e:new gi({cause:e}))}},this._performRequest()}function wi(e){var t={maxRedirects:21,maxBodyLength:10485760},n={};return Object.keys(e).forEach(function(a){var i=a+":",r=n[i]=e[a],o=t[a]=Object.create(r);Object.defineProperties(o,{request:{value:function(e,a,r){var o;return o=e,li&&o instanceof li?e=Ri(e):Ci(e)?e=Ri(Ii(e)):(r=a,a=ji(e),e={protocol:i}),Di(a)&&(r=a,a=null),(a=Object.assign({maxRedirects:t.maxRedirects,maxBodyLength:t.maxBodyLength},e,a)).nativeProtocols=n,Ci(a.host)||Ci(a.hostname)||(a.hostname="::1"),pi.equal(a.protocol,i,"protocol mismatch"),mi("options",a),new Ki(a,r)},configurable:!0,enumerable:!0,writable:!0},get:{value:function(e,t,n){var a=o.request(e,t,n);return a.end(),a},configurable:!0,enumerable:!0,writable:!0}})}),t}function Si(){}function Ii(e){var t;if(hi)t=new li(e);else if(!Ci((t=ji(si.parse(e))).protocol))throw new bi({input:e});return t}function ji(e){if(/^\[/.test(e.hostname)&&!/^\[[:0-9a-f]+\]$/i.test(e.hostname))throw new bi({input:e.href||e});if(/^\[/.test(e.host)&&!/^\[[:0-9a-f]+\](:\d+)?$/i.test(e.host))throw new bi({input:e.href||e});return e}function Ri(e,t){var n=t||{};for(var a of yi)n[a]=e[a];return n.hostname.startsWith("[")&&(n.hostname=n.hostname.slice(1,-1)),""!==n.port&&(n.port=Number(n.port)),n.path=n.search?n.pathname+n.search:n.pathname,n}function Ti(e,t){var n;for(var a in t)e.test(a)&&(n=t[a],delete t[a]);return null==n?void 0:String(n).trim()}function Oi(e,t,n){function a(n){Di(Error.captureStackTrace)&&Error.captureStackTrace(this,this.constructor),Object.assign(this,n||{}),this.code=e,this.message=this.cause?t+": "+this.cause.message:t}return a.prototype=new(n||Error),Object.defineProperties(a.prototype,{constructor:{value:a,enumerable:!1},name:{value:"Error ["+e+"]",enumerable:!1}}),a}function Ai(e,t){for(var n of fi)e.removeListener(n,vi[n]);e.on("error",Si),e.destroy(t)}function Ci(e){return"string"==typeof e||e instanceof String}function Di(e){return"function"==typeof e}Ki.prototype=Object.create(ui.prototype),Ki.prototype.abort=function(){Ai(this._currentRequest),this._currentRequest.abort(),this.emit("abort")},Ki.prototype.destroy=function(e){return Ai(this._currentRequest,e),Ei.call(this,e),this},Ki.prototype.write=function(e,t,n){if(this._ending)throw new ki;if(!Ci(e)&&("object"!=typeof(a=e)||!("length"in a)))throw new TypeError("data should be a string, Buffer or Uint8Array");var a;Di(t)&&(n=t,t=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:t}),this._currentRequest.write(e,t,n)):(this.emit("error",new xi),this.abort()):n&&n()},Ki.prototype.end=function(e,t,n){if(Di(e)?(n=e,e=t=null):Di(t)&&(n=t,t=null),e){var a=this,i=this._currentRequest;this.write(e,t,function(){a._ended=!0,i.end(null,null,n)}),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,n)},Ki.prototype.setHeader=function(e,t){this._options.headers[e]=t,this._currentRequest.setHeader(e,t)},Ki.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},Ki.prototype.setTimeout=function(e,t){var n=this;function a(t){t.setTimeout(e),t.removeListener("timeout",t.destroy),t.addListener("timeout",t.destroy)}function i(t){n._timeout&&clearTimeout(n._timeout),n._timeout=setTimeout(function(){n.emit("timeout"),r()},e),a(t)}function r(){n._timeout&&(clearTimeout(n._timeout),n._timeout=null),n.removeListener("abort",r),n.removeListener("error",r),n.removeListener("response",r),n.removeListener("close",r),t&&n.removeListener("timeout",t),n.socket||n._currentRequest.removeListener("socket",i)}return t&&this.on("timeout",t),this.socket?i(this.socket):this._currentRequest.once("socket",i),this.on("socket",a),this.on("abort",r),this.on("error",r),this.on("response",r),this.on("close",r),this},["flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach(function(e){Ki.prototype[e]=function(t,n){return this._currentRequest[e](t,n)}}),["aborted","connection","socket"].forEach(function(e){Object.defineProperty(Ki.prototype,e,{get:function(){return this._currentRequest[e]}})}),Ki.prototype._sanitizeOptions=function(e){if(e.headers||(e.headers={}),e.host&&(e.hostname||(e.hostname=e.host),delete e.host),!e.pathname&&e.path){var t=e.path.indexOf("?");t<0?e.pathname=e.path:(e.pathname=e.path.substring(0,t),e.search=e.path.substring(t))}},Ki.prototype._performRequest=function(){var e=this._options.protocol,t=this._options.nativeProtocols[e];if(!t)throw new TypeError("Unsupported protocol "+e);if(this._options.agents){var n=e.slice(0,-1);this._options.agent=this._options.agents[n]}var a=this._currentRequest=t.request(this._options,this._onNativeResponse);for(var i of(a._redirectable=this,fi))a.on(i,vi[i]);if(this._currentUrl=/^\//.test(this._options.path)?si.format(this._options):this._options.path,this._isRedirect){var r=0,o=this,s=this._requestBodyBuffers;!function e(t){if(a===o._currentRequest)if(t)o.emit("error",t);else if(r<s.length){var n=s[r++];a.finished||a.write(n.data,n.encoding,e)}else o._ended&&a.end()}()}},Ki.prototype._processResponse=function(e){var t=e.statusCode;this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:t});var n,a=e.headers.location;if(!a||!1===this._options.followRedirects||t<300||t>=400)return e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),void(this._requestBodyBuffers=[]);if(Ai(this._currentRequest),e.destroy(),++this._redirectCount>this._options.maxRedirects)throw new _i;var i=this._options.beforeRedirect;i&&(n=Object.assign({Host:e.req.getHeader("host")},this._options.headers));var r=this._options.method;((301===t||302===t)&&"POST"===this._options.method||303===t&&!/^(?:GET|HEAD)$/.test(this._options.method))&&(this._options.method="GET",this._requestBodyBuffers=[],Ti(/^content-/i,this._options.headers));var o,s,l=Ti(/^host$/i,this._options.headers),c=Ii(this._currentUrl),d=l||c.host,u=/^\w+:/.test(a)?this._currentUrl:si.format(Object.assign(c,{host:d})),p=(o=a,s=u,hi?new li(o,s):Ii(si.resolve(s,o)));if(mi("redirecting to",p.href),this._isRedirect=!0,Ri(p,this._options),(p.protocol!==c.protocol&&"https:"!==p.protocol||p.host!==d&&!function(e,t){pi(Ci(e)&&Ci(t));var n=e.length-t.length-1;return n>0&&"."===e[n]&&e.endsWith(t)}(p.host,d))&&Ti(/^(?:(?:proxy-)?authorization|cookie)$/i,this._options.headers),Di(i)){var m={headers:e.headers,statusCode:t},h={url:u,method:r,headers:n};i(this._options,m,h),this._sanitizeOptions(this._options)}this._performRequest()},Ya.exports=wi({http:ci,https:di}),Ya.exports.wrap=wi;const Pi="1.3.4";function Ni(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}const Mi=/^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;function Fi(e,t){e=e||10;const n=new Array(e),a=new Array(e);let i,r=0,o=0;return t=void 0!==t?t:1e3,function(s){const l=Date.now(),c=a[o];i||(i=l),n[r]=s,a[r]=l;let d=o,u=0;for(;d!==r;)u+=n[d++],d%=e;if(r=(r+1)%e,r===o&&(o=(o+1)%e),l-i<t)return;const p=c&&l-c;return p?Math.round(1e3*u/p):void 0}}const Li=Symbol("internals");class Ji extends n.Transform{constructor(e){super({readableHighWaterMark:(e=de.toFlatObject(e,{maxRate:0,chunkSize:65536,minChunkSize:100,timeWindow:500,ticksRate:2,samplesCount:15},null,(e,t)=>!de.isUndefined(t[e]))).chunkSize});const t=this,n=this[Li]={length:e.length,timeWindow:e.timeWindow,ticksRate:e.ticksRate,chunkSize:e.chunkSize,maxRate:e.maxRate,minChunkSize:e.minChunkSize,bytesSeen:0,isCaptured:!1,notifiedBytesLoaded:0,ts:Date.now(),bytes:0,onReadCallback:null},a=Fi(n.ticksRate*e.samplesCount,n.timeWindow);this.on("newListener",e=>{"progress"===e&&(n.isCaptured||(n.isCaptured=!0))});let i=0;n.updateProgress=function(e,t){let n=0;const a=1e3/t;let i=null;return function(t,r){const o=Date.now();if(t||o-n>a)return i&&(clearTimeout(i),i=null),n=o,e.apply(null,r);i||(i=setTimeout(()=>(i=null,n=Date.now(),e.apply(null,r)),a-(o-n)))}}(function(){const e=n.length,r=n.bytesSeen,o=r-i;if(!o||t.destroyed)return;const s=a(o);i=r,process.nextTick(()=>{t.emit("progress",{loaded:r,total:e,progress:e?r/e:void 0,bytes:o,rate:s||void 0,estimated:s&&e&&r<=e?(e-r)/s:void 0})})},n.ticksRate);const r=()=>{n.updateProgress(!0)};this.once("end",r),this.once("error",r)}_read(e){const t=this[Li];return t.onReadCallback&&t.onReadCallback(),super._read(e)}_transform(e,t,n){const a=this,i=this[Li],r=i.maxRate,o=this.readableHighWaterMark,s=i.timeWindow,l=r/(1e3/s),c=!1!==i.minChunkSize?Math.max(i.minChunkSize,.01*l):0;const d=(e,t)=>{const n=Buffer.byteLength(e);let d,u=null,p=o,m=0;if(r){const e=Date.now();(!i.ts||(m=e-i.ts)>=s)&&(i.ts=e,d=l-i.bytes,i.bytes=d<0?-d:0,m=0),d=l-i.bytes}if(r){if(d<=0)return setTimeout(()=>{t(null,e)},s-m);d<p&&(p=d)}p&&n>p&&n-p>c&&(u=e.subarray(p),e=e.subarray(0,p)),function(e,t){const n=Buffer.byteLength(e);i.bytesSeen+=n,i.bytes+=n,i.isCaptured&&i.updateProgress(),a.push(e)?process.nextTick(t):i.onReadCallback=()=>{i.onReadCallback=null,process.nextTick(t)}}(e,u?()=>{process.nextTick(t,null,u)}:t)};d(e,function e(t,a){if(t)return n(t);a?d(a,e):n(null)})}setLength(e){return this[Li].length=+e,this}}const{asyncIterator:Ui}=Symbol,qi=async function*(e){e.stream?yield*e.stream():e.arrayBuffer?yield await e.arrayBuffer():e[Ui]?yield*e[Ui]():yield e},Vi=de.ALPHABET.ALPHA_DIGIT+"-_",Gi=new t.TextEncoder,Bi="\r\n",zi=Gi.encode(Bi);class Yi{constructor(e,t){const{escapeName:n}=this.constructor,a=de.isString(t);let i=`Content-Disposition: form-data; name="${n(e)}"${!a&&t.name?`; filename="${n(t.name)}"`:""}${Bi}`;a?t=Gi.encode(String(t).replace(/\r?\n|\r\n?/g,Bi)):i+=`Content-Type: ${t.type||"application/octet-stream"}${Bi}`,this.headers=Gi.encode(i+Bi),this.contentLength=a?t.byteLength:t.size,this.size=this.headers.byteLength+this.contentLength+2,this.name=e,this.value=t}async*encode(){yield this.headers;const{value:e}=this;de.isTypedArray(e)?yield e:yield*qi(e),yield zi}static escapeName(e){return String(e).replace(/[\r\n"]/g,e=>({"\r":"%0D","\n":"%0A",'"':"%22"}[e]))}}class $i extends n.Transform{__transform(e,t,n){this.push(e),n()}_transform(e,t,n){if(0!==e.length&&(this._transform=this.__transform,120!==e[0])){const e=Buffer.alloc(2);e[0]=120,e[1]=156,this.push(e,t)}this.__transform(e,t,n)}}const Wi={flush:p.constants.Z_SYNC_FLUSH,finishFlush:p.constants.Z_SYNC_FLUSH},Hi={flush:p.constants.BROTLI_OPERATION_FLUSH,finishFlush:p.constants.BROTLI_OPERATION_FLUSH},Qi=de.isFunction(p.createBrotliDecompress),{http:Zi,https:Xi}=Ya.exports,er=/https:?/,tr=Ea.protocols.map(e=>e+":");function nr(e){e.beforeRedirects.proxy&&e.beforeRedirects.proxy(e),e.beforeRedirects.config&&e.beforeRedirects.config(e)}function ar(e,t,n){let a=t;if(!a&&!1!==a){const e=za(n);e&&(a=new URL(e))}if(a){if(a.username&&(a.auth=(a.username||"")+":"+(a.password||"")),a.auth){(a.auth.username||a.auth.password)&&(a.auth=(a.auth.username||"")+":"+(a.auth.password||""));const t=Buffer.from(a.auth,"utf8").toString("base64");e.headers["Proxy-Authorization"]="Basic "+t}e.headers.host=e.hostname+(e.port?":"+e.port:"");const t=a.hostname||a.host;e.hostname=t,e.host=t,e.port=a.port,e.path=n,a.protocol&&(e.protocol=a.protocol.includes(":")?a.protocol:`${a.protocol}:`)}e.beforeRedirects.proxy=function(e){ar(e,t,e.href)}}const ir="undefined"!=typeof process&&"process"===de.kindOf(process);var rr=ir&&function(e){return a=async function(a,o,s){let{data:l}=e;const{responseType:c,responseEncoding:d}=e,u=e.method.toUpperCase();let h,y,f=!1;const v=new m,b=()=>{e.cancelToken&&e.cancelToken.unsubscribe(g),e.signal&&e.signal.removeEventListener("abort",g),v.removeAllListeners()};function g(t){v.emit("abort",!t||t.type?new Pa(null,e,y):t)}s((e,t)=>{h=!0,t&&(f=!0,b())}),v.once("abort",o),(e.cancelToken||e.signal)&&(e.cancelToken&&e.cancelToken.subscribe(g),e.signal&&(e.signal.aborted?g():e.signal.addEventListener("abort",g)));const _=Ma(e.baseURL,e.url),x=new URL(_,"http://localhost"),k=x.protocol||tr[0];if("data:"===k){let t;if("GET"!==u)return Na(a,o,{status:405,statusText:"method not allowed",headers:{},config:e});try{t=function(e,t,n){const a=n&&n.Blob||Ea.classes.Blob,i=Ni(e);if(void 0===t&&a&&(t=!0),"data"===i){e=i.length?e.slice(i.length+1):e;const n=Mi.exec(e);if(!n)throw new ue("Invalid URL",ue.ERR_INVALID_URL);const r=n[1],o=n[2],s=n[3],l=Buffer.from(decodeURIComponent(s),o?"base64":"utf8");if(t){if(!a)throw new ue("Blob is not supported",ue.ERR_NOT_SUPPORT);return new a([l],{type:r})}return l}throw new ue("Unsupported protocol "+i,ue.ERR_NOT_SUPPORT)}(e.url,"blob"===c,{Blob:e.env&&e.env.Blob})}catch(t){throw ue.from(t,ue.ERR_BAD_REQUEST,e)}return"text"===c?(t=t.toString(d),d&&"utf8"!==d||(t=de.stripBOM(t))):"stream"===c&&(t=n.Readable.from(t)),Na(a,o,{data:t,status:200,statusText:"OK",headers:new Aa,config:e})}if(-1===tr.indexOf(k))return o(new ue("Unsupported protocol "+k,ue.ERR_BAD_REQUEST,e));const E=Aa.from(e.headers).normalize();E.set("User-Agent","axios/"+Pi,!1);const K=e.onDownloadProgress,w=e.onUploadProgress,S=e.maxRate;let I,j;if(de.isSpecCompliantForm(l)){const e=E.getContentType(/boundary=([-_\w\d]{10,70})/i);l=((e,t,a)=>{const{tag:i="form-data-boundary",size:r=25,boundary:o=i+"-"+de.generateString(r,Vi)}=a||{};if(!de.isFormData(e))throw TypeError("FormData instance required");if(o.length<1||o.length>70)throw Error("boundary must be 10-70 characters long");const s=Gi.encode("--"+o+Bi),l=Gi.encode("--"+o+"--"+Bi+Bi);let c=l.byteLength;const d=Array.from(e.entries()).map(([e,t])=>{const n=new Yi(e,t);return c+=n.size,n});c+=s.byteLength*d.length,c=de.toFiniteNumber(c);const u={"Content-Type":`multipart/form-data; boundary=${o}`};return Number.isFinite(c)&&(u["Content-Length"]=c),t&&t(u),n.Readable.from(async function*(){for(const e of d)yield s,yield*e.encode();yield l}())})(l,e=>{E.set(e)},{tag:`axios-${Pi}-boundary`,boundary:e&&e[1]||void 0})}else if(de.isFormData(l)&&de.isFunction(l.getHeaders)){if(E.set(l.getHeaders()),!E.hasContentLength())try{const e=await t.promisify(l.getLength).call(l);Number.isFinite(e)&&e>=0&&E.setContentLength(e)}catch(e){}}else if(de.isBlob(l))l.size&&E.setContentType(l.type||"application/octet-stream"),E.setContentLength(l.size||0),l=n.Readable.from(qi(l));else if(l&&!de.isStream(l)){if(Buffer.isBuffer(l));else if(de.isArrayBuffer(l))l=Buffer.from(new Uint8Array(l));else{if(!de.isString(l))return o(new ue("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",ue.ERR_BAD_REQUEST,e));l=Buffer.from(l,"utf-8")}if(E.setContentLength(l.length,!1),e.maxBodyLength>-1&&l.length>e.maxBodyLength)return o(new ue("Request body larger than maxBodyLength limit",ue.ERR_BAD_REQUEST,e))}const R=de.toFiniteNumber(E.getContentLength());let T,O;de.isArray(S)?(I=S[0],j=S[1]):I=j=S,l&&(w||I)&&(de.isStream(l)||(l=n.Readable.from(l,{objectMode:!1})),l=n.pipeline([l,new Ji({length:R,maxRate:de.toFiniteNumber(I)})],de.noop),w&&l.on("progress",e=>{w(Object.assign(e,{upload:!0}))})),e.auth&&(T=(e.auth.username||"")+":"+(e.auth.password||"")),!T&&x.username&&(T=x.username+":"+x.password),T&&E.delete("authorization");try{O=_a(x.pathname+x.search,e.params,e.paramsSerializer).replace(/^\?/,"")}catch(t){const n=new Error(t.message);return n.config=e,n.url=e.url,n.exists=!0,o(n)}E.set("Accept-Encoding","gzip, compress, deflate"+(Qi?", br":""),!1);const A={path:O,method:u,headers:E.toJSON(),agents:{http:e.httpAgent,https:e.httpsAgent},auth:T,protocol:k,beforeRedirect:nr,beforeRedirects:{}};let C;e.socketPath?A.socketPath=e.socketPath:(A.hostname=x.hostname,A.port=x.port,ar(A,e.proxy,k+"//"+x.hostname+(x.port?":"+x.port:"")+A.path));const D=er.test(A.protocol);if(A.agent=D?e.httpsAgent:e.httpAgent,e.transport?C=e.transport:0===e.maxRedirects?C=D?r:i:(e.maxRedirects&&(A.maxRedirects=e.maxRedirects),e.beforeRedirect&&(A.beforeRedirects.config=e.beforeRedirect),C=D?Xi:Zi),e.maxBodyLength>-1?A.maxBodyLength=e.maxBodyLength:A.maxBodyLength=1/0,e.insecureHTTPParser&&(A.insecureHTTPParser=e.insecureHTTPParser),y=C.request(A,function(t){if(y.destroyed)return;const i=[t],r=+t.headers["content-length"];if(K){const e=new Ji({length:de.toFiniteNumber(r),maxRate:de.toFiniteNumber(j)});K&&e.on("progress",e=>{K(Object.assign(e,{download:!0}))}),i.push(e)}let s=t;const l=t.req||y;if(!1!==e.decompress&&t.headers["content-encoding"])switch("HEAD"!==u&&204!==t.statusCode||delete t.headers["content-encoding"],t.headers["content-encoding"]){case"gzip":case"x-gzip":case"compress":case"x-compress":i.push(p.createUnzip(Wi)),delete t.headers["content-encoding"];break;case"deflate":i.push(new $i),i.push(p.createUnzip(Wi)),delete t.headers["content-encoding"];break;case"br":Qi&&(i.push(p.createBrotliDecompress(Hi)),delete t.headers["content-encoding"])}s=i.length>1?n.pipeline(i,de.noop):i[0];const m=n.finished(s,()=>{m(),b()}),h={status:t.statusCode,statusText:t.statusMessage,headers:new Aa(t.headers),config:e,request:l};if("stream"===c)h.data=s,Na(a,o,h);else{const t=[];let n=0;s.on("data",function(a){t.push(a),n+=a.length,e.maxContentLength>-1&&n>e.maxContentLength&&(f=!0,s.destroy(),o(new ue("maxContentLength size of "+e.maxContentLength+" exceeded",ue.ERR_BAD_RESPONSE,e,l)))}),s.on("aborted",function(){if(f)return;const t=new ue("maxContentLength size of "+e.maxContentLength+" exceeded",ue.ERR_BAD_RESPONSE,e,l);s.destroy(t),o(t)}),s.on("error",function(t){y.destroyed||o(ue.from(t,null,e,l))}),s.on("end",function(){try{let e=1===t.length?t[0]:Buffer.concat(t);"arraybuffer"!==c&&(e=e.toString(d),d&&"utf8"!==d||(e=de.stripBOM(e))),h.data=e}catch(t){o(ue.from(t,null,e,h.request,h))}Na(a,o,h)})}v.once("abort",e=>{s.destroyed||(s.emit("error",e),s.destroy())})}),v.once("abort",e=>{o(e),y.destroy(e)}),y.on("error",function(t){o(ue.from(t,null,e,y))}),y.on("socket",function(e){e.setKeepAlive(!0,6e4)}),e.timeout){const t=parseInt(e.timeout,10);if(isNaN(t))return void o(new ue("error trying to parse `config.timeout` to int",ue.ERR_BAD_OPTION_VALUE,e,y));y.setTimeout(t,function(){if(h)return;let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const n=e.transitional||ka;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),o(new ue(t,n.clarifyTimeoutError?ue.ETIMEDOUT:ue.ECONNABORTED,e,y)),g()})}if(de.isStream(l)){let t=!1,n=!1;l.on("end",()=>{t=!0}),l.once("error",e=>{n=!0,y.destroy(e)}),l.on("close",()=>{t||n||g(new Pa("Request stream has been aborted",e,y))}),l.pipe(y)}else y.end(l)},new Promise((e,t)=>{let n,i;const r=(e,t)=>{i||(i=!0,n&&n(e,t))},o=e=>{r(e,!0),t(e)};a(t=>{r(t),e(t)},o,e=>n=e).catch(o)});var a},or=Ea.isStandardBrowserEnv?{write:function(e,t,n,a,i,r){const o=[];o.push(e+"="+encodeURIComponent(t)),de.isNumber(n)&&o.push("expires="+new Date(n).toGMTString()),de.isString(a)&&o.push("path="+a),de.isString(i)&&o.push("domain="+i),!0===r&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},sr=Ea.isStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function a(n){let a=n;return e&&(t.setAttribute("href",a),a=t.href),t.setAttribute("href",a),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=a(window.location.href),function(e){const t=de.isString(e)?a(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0};function lr(e,t){let n=0;const a=Fi(50,250);return i=>{const r=i.loaded,o=i.lengthComputable?i.total:void 0,s=r-n,l=a(s);n=r;const c={loaded:r,total:o,progress:o?r/o:void 0,bytes:s,rate:l||void 0,estimated:l&&o&&r<=o?(o-r)/l:void 0,event:i};c[t?"download":"upload"]=!0,e(c)}}var cr="undefined"!=typeof XMLHttpRequest&&function(e){return new Promise(function(t,n){let a=e.data;const i=Aa.from(e.headers).normalize(),r=e.responseType;let o;function s(){e.cancelToken&&e.cancelToken.unsubscribe(o),e.signal&&e.signal.removeEventListener("abort",o)}de.isFormData(a)&&(Ea.isStandardBrowserEnv||Ea.isStandardBrowserWebWorkerEnv)&&i.setContentType(!1);let l=new XMLHttpRequest;if(e.auth){const t=e.auth.username||"",n=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";i.set("Authorization","Basic "+btoa(t+":"+n))}const c=Ma(e.baseURL,e.url);function d(){if(!l)return;const a=Aa.from("getAllResponseHeaders"in l&&l.getAllResponseHeaders());Na(function(e){t(e),s()},function(e){n(e),s()},{data:r&&"text"!==r&&"json"!==r?l.response:l.responseText,status:l.status,statusText:l.statusText,headers:a,config:e,request:l}),l=null}if(l.open(e.method.toUpperCase(),_a(c,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,"onloadend"in l?l.onloadend=d:l.onreadystatechange=function(){l&&4===l.readyState&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))&&setTimeout(d)},l.onabort=function(){l&&(n(new ue("Request aborted",ue.ECONNABORTED,e,l)),l=null)},l.onerror=function(){n(new ue("Network Error",ue.ERR_NETWORK,e,l)),l=null},l.ontimeout=function(){let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const a=e.transitional||ka;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new ue(t,a.clarifyTimeoutError?ue.ETIMEDOUT:ue.ECONNABORTED,e,l)),l=null},Ea.isStandardBrowserEnv){const t=(e.withCredentials||sr(c))&&e.xsrfCookieName&&or.read(e.xsrfCookieName);t&&i.set(e.xsrfHeaderName,t)}void 0===a&&i.setContentType(null),"setRequestHeader"in l&&de.forEach(i.toJSON(),function(e,t){l.setRequestHeader(t,e)}),de.isUndefined(e.withCredentials)||(l.withCredentials=!!e.withCredentials),r&&"json"!==r&&(l.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",lr(e.onDownloadProgress,!0)),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",lr(e.onUploadProgress)),(e.cancelToken||e.signal)&&(o=t=>{l&&(n(!t||t.type?new Pa(null,e,l):t),l.abort(),l=null)},e.cancelToken&&e.cancelToken.subscribe(o),e.signal&&(e.signal.aborted?o():e.signal.addEventListener("abort",o)));const u=Ni(c);u&&-1===Ea.protocols.indexOf(u)?n(new ue("Unsupported protocol "+u+":",ue.ERR_BAD_REQUEST,e)):l.send(a||null)})};const dr={http:rr,xhr:cr};de.forEach(dr,(e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(e){}Object.defineProperty(e,"adapterName",{value:t})}});var ur=e=>{e=de.isArray(e)?e:[e];const{length:t}=e;let n,a;for(let i=0;i<t&&(n=e[i],!(a=de.isString(n)?dr[n.toLowerCase()]:n));i++);if(!a){if(!1===a)throw new ue(`Adapter ${n} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(de.hasOwnProp(dr,n)?`Adapter '${n}' is not available in the build`:`Unknown adapter '${n}'`)}if(!de.isFunction(a))throw new TypeError("adapter is not a function");return a};function pr(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Pa(null,e)}function mr(e){pr(e),e.headers=Aa.from(e.headers),e.data=Ca.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1);return ur(e.adapter||Sa.adapter)(e).then(function(t){return pr(e),t.data=Ca.call(e,e.transformResponse,t),t.headers=Aa.from(t.headers),t},function(t){return Da(t)||(pr(e),t&&t.response&&(t.response.data=Ca.call(e,e.transformResponse,t.response),t.response.headers=Aa.from(t.response.headers))),Promise.reject(t)})}const hr=e=>e instanceof Aa?e.toJSON():e;function yr(e,t){t=t||{};const n={};function a(e,t,n){return de.isPlainObject(e)&&de.isPlainObject(t)?de.merge.call({caseless:n},e,t):de.isPlainObject(t)?de.merge({},t):de.isArray(t)?t.slice():t}function i(e,t,n){return de.isUndefined(t)?de.isUndefined(e)?void 0:a(void 0,e,n):a(e,t,n)}function r(e,t){if(!de.isUndefined(t))return a(void 0,t)}function o(e,t){return de.isUndefined(t)?de.isUndefined(e)?void 0:a(void 0,e):a(void 0,t)}function s(n,i,r){return r in t?a(n,i):r in e?a(void 0,n):void 0}const l={url:r,method:r,data:r,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,beforeRedirect:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:s,headers:(e,t)=>i(hr(e),hr(t),!0)};return de.forEach(Object.keys(e).concat(Object.keys(t)),function(a){const r=l[a]||i,o=r(e[a],t[a],a);de.isUndefined(o)&&r!==s||(n[a]=o)}),n}const fr={};["object","boolean","number","function","string","symbol"].forEach((e,t)=>{fr[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}});const vr={};fr.transitional=function(e,t,n){function a(e,t){return"[Axios v1.3.4] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,i,r)=>{if(!1===e)throw new ue(a(i," has been removed"+(t?" in "+t:"")),ue.ERR_DEPRECATED);return t&&!vr[i]&&(vr[i]=!0,console.warn(a(i," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,i,r)}};var br={assertOptions:function(e,t,n){if("object"!=typeof e)throw new ue("options must be an object",ue.ERR_BAD_OPTION_VALUE);const a=Object.keys(e);let i=a.length;for(;i-- >0;){const r=a[i],o=t[r];if(o){const t=e[r],n=void 0===t||o(t,r,e);if(!0!==n)throw new ue("option "+r+" must be "+n,ue.ERR_BAD_OPTION_VALUE);continue}if(!0!==n)throw new ue("Unknown option "+r,ue.ERR_BAD_OPTION)}},validators:fr};const gr=br.validators;class _r{constructor(e){this.defaults=e,this.interceptors={request:new xa,response:new xa}}request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},t=yr(this.defaults,t);const{transitional:n,paramsSerializer:a,headers:i}=t;let r;void 0!==n&&br.assertOptions(n,{silentJSONParsing:gr.transitional(gr.boolean),forcedJSONParsing:gr.transitional(gr.boolean),clarifyTimeoutError:gr.transitional(gr.boolean)},!1),void 0!==a&&br.assertOptions(a,{encode:gr.function,serialize:gr.function},!0),t.method=(t.method||this.defaults.method||"get").toLowerCase(),r=i&&de.merge(i.common,i[t.method]),r&&de.forEach(["delete","get","head","post","put","patch","common"],e=>{delete i[e]}),t.headers=Aa.concat(r,i);const o=[];let s=!0;this.interceptors.request.forEach(function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(s=s&&e.synchronous,o.unshift(e.fulfilled,e.rejected))});const l=[];let c;this.interceptors.response.forEach(function(e){l.push(e.fulfilled,e.rejected)});let d,u=0;if(!s){const e=[mr.bind(this),void 0];for(e.unshift.apply(e,o),e.push.apply(e,l),d=e.length,c=Promise.resolve(t);u<d;)c=c.then(e[u++],e[u++]);return c}d=o.length;let p=t;for(u=0;u<d;){const e=o[u++],t=o[u++];try{p=e(p)}catch(e){t.call(this,e);break}}try{c=mr.call(this,p)}catch(e){return Promise.reject(e)}for(u=0,d=l.length;u<d;)c=c.then(l[u++],l[u++]);return c}getUri(e){return _a(Ma((e=yr(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}de.forEach(["delete","get","head","options"],function(e){_r.prototype[e]=function(t,n){return this.request(yr(n||{},{method:e,url:t,data:(n||{}).data}))}}),de.forEach(["post","put","patch"],function(e){function t(t){return function(n,a,i){return this.request(yr(i||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:a}))}}_r.prototype[e]=t(),_r.prototype[e+"Form"]=t(!0)});class xr{constructor(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(e){t=e});const n=this;this.promise.then(e=>{if(!n._listeners)return;let t=n._listeners.length;for(;t-- >0;)n._listeners[t](e);n._listeners=null}),this.promise.then=e=>{let t;const a=new Promise(e=>{n.subscribe(e),t=e}).then(e);return a.cancel=function(){n.unsubscribe(t)},a},e(function(e,a,i){n.reason||(n.reason=new Pa(e,a,i),t(n.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new xr(function(t){e=t}),cancel:e}}}const kr={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(kr).forEach(([e,t])=>{kr[t]=e});const Er=function e(t){const n=new _r(t),a=A(_r.prototype.request,n);return de.extend(a,_r.prototype,n,{allOwnKeys:!0}),de.extend(a,n,null,{allOwnKeys:!0}),a.create=function(n){return e(yr(t,n))},a}(Sa);Er.Axios=_r,Er.CanceledError=Pa,Er.CancelToken=xr,Er.isCancel=Da,Er.VERSION=Pi,Er.toFormData=ya,Er.AxiosError=ue,Er.Cancel=Er.CanceledError,Er.all=function(e){return Promise.all(e)},Er.spread=function(e){return function(t){return e.apply(null,t)}},Er.isAxiosError=function(e){return de.isObject(e)&&!0===e.isAxiosError},Er.mergeConfig=yr,Er.AxiosHeaders=Aa,Er.formToJSON=e=>Ka(de.isHTMLForm(e)?new FormData(e):e),Er.HttpStatusCode=kr,Er.default=Er;var Kr=Er;const wr=async(e,t,n,a,i)=>{try{const{ItemsService:r}=e,o=new r(i,{schema:a,accountability:{admin:!0}});return await o.readByQuery({filter:t,fields:n})}catch(e){return e}};class Sr{constructor(e){this.value=void 0,this.next=null,this.value=e}}class Ir{constructor(){this.length=0,this.head=null,this.tail=null}push(e){const t=new Sr(e);return this.length?this.tail.next=t:this.head=t,this.tail=t,this.length+=1,t}shift(){if(this.length){const e=this.head;return this.head=this.head.next,this.length-=1,e}return null}}class jr{constructor(e=!1){this.ignoreErrors=e,this.queue=new Ir,this.pending=new Set,this.newPromise()}add(e){this.pending.add(e),e.then(t=>{this.pending.delete(e),0===this.queue.length&&this.resolvePromise(t),this.queue.push(t)}).catch(t=>{this.ignoreErrors&&this.queue.push(void 0),this.pending.delete(e),this.rejectPromise(t)})}async waitAll(){await Promise.all(this.pending)}numTotal(){return this.pending.size+this.queue.length}numPending(){return this.pending.size}numQueued(){return this.queue.length}resolvePromise(e){this.resolve(e),this.newPromise()}rejectPromise(e){this.reject(e),this.newPromise()}newPromise(){this.nextPromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}async wait(){return this.nextPromise}async fetch(){var e;if(0!==this.pending.size||0!==this.queue.length){for(;0===this.queue.length;)try{await this.wait()}catch(e){this.ignoreErrors||console.error("Unexpected Error in AsyncFifoQueue",e)}return null===(e=this.queue.shift())||void 0===e?void 0:e.value}}}class Rr{static normalize(e){return Number.isFinite(e)?{type:"fixed",delay:e}:e||void 0}static calculate(e,t,n,a,i){if(e){const r=function(e,t){if(e.type in Rr.builtinStrategies)return Rr.builtinStrategies[e.type](e.delay,e.jitter);if(t)return t;throw new Error(`Unknown backoff strategy ${e.type}.\n      If a custom backoff strategy is used, specify it when the queue is created.`)}(e,i);return r(t,e.type,n,a)}}}var Tr,Or,Ar,Cr,Dr,Pr;Rr.builtinStrategies={fixed:function(e,t=0){return function(){if(t>0){const n=e*(1-t);return Math.floor(Math.random()*e*t+n)}return e}},exponential:function(e,t=0){return function(n){if(t>0){const a=Math.round(Math.pow(2,n-1)*e),i=a*(1-t);return Math.floor(Math.random()*a*t+i)}return Math.round(Math.pow(2,n-1)*e)}}},function(e){e[e.Init=0]="Init",e[e.Start=1]="Start",e[e.Stop=2]="Stop",e[e.GetChildrenValuesResponse=3]="GetChildrenValuesResponse",e[e.GetIgnoredChildrenFailuresResponse=4]="GetIgnoredChildrenFailuresResponse"}(Tr||(Tr={})),function(e){e[e.JobNotExist=-1]="JobNotExist",e[e.JobLockNotExist=-2]="JobLockNotExist",e[e.JobNotInState=-3]="JobNotInState",e[e.JobPendingChildren=-4]="JobPendingChildren",e[e.ParentJobNotExist=-5]="ParentJobNotExist",e[e.JobLockMismatch=-6]="JobLockMismatch",e[e.ParentJobCannotBeReplaced=-7]="ParentJobCannotBeReplaced",e[e.JobBelongsToJobScheduler=-8]="JobBelongsToJobScheduler",e[e.JobFailedChildren=-9]="JobFailedChildren"}(Or||(Or={})),function(e){e[e.Completed=0]="Completed",e[e.Error=1]="Error",e[e.Failed=2]="Failed",e[e.InitFailed=3]="InitFailed",e[e.InitCompleted=4]="InitCompleted",e[e.Log=5]="Log",e[e.MoveToDelayed=6]="MoveToDelayed",e[e.MoveToWait=7]="MoveToWait",e[e.Progress=8]="Progress",e[e.Update=9]="Update",e[e.GetChildrenValues=10]="GetChildrenValues",e[e.GetIgnoredChildrenFailures=11]="GetIgnoredChildrenFailures"}(Ar||(Ar={})),function(e){e[e.ONE_MINUTE=1]="ONE_MINUTE",e[e.FIVE_MINUTES=5]="FIVE_MINUTES",e[e.FIFTEEN_MINUTES=15]="FIFTEEN_MINUTES",e[e.THIRTY_MINUTES=30]="THIRTY_MINUTES",e[e.ONE_HOUR=60]="ONE_HOUR",e[e.ONE_WEEK=10080]="ONE_WEEK",e[e.TWO_WEEKS=20160]="TWO_WEEKS",e[e.ONE_MONTH=80640]="ONE_MONTH"}(Cr||(Cr={})),function(e){e.QueueName="bullmq.queue.name",e.QueueOperation="bullmq.queue.operation",e.BulkCount="bullmq.job.bulk.count",e.BulkNames="bullmq.job.bulk.names",e.JobName="bullmq.job.name",e.JobId="bullmq.job.id",e.JobKey="bullmq.job.key",e.JobIds="bullmq.job.ids",e.DeduplicationKey="bullmq.job.deduplication.key",e.JobOptions="bullmq.job.options",e.JobProgress="bullmq.job.progress",e.QueueDrainDelay="bullmq.queue.drain.delay",e.QueueGrace="bullmq.queue.grace",e.QueueCleanLimit="bullmq.queue.clean.limit",e.QueueRateLimit="bullmq.queue.rate.limit",e.JobType="bullmq.job.type",e.QueueOptions="bullmq.queue.options",e.QueueEventMaxLength="bullmq.queue.event.max.length",e.WorkerOptions="bullmq.worker.options",e.WorkerName="bullmq.worker.name",e.WorkerId="bullmq.worker.id",e.WorkerRateLimit="bullmq.worker.rate.limit",e.WorkerDoNotWaitActive="bullmq.worker.do.not.wait.active",e.WorkerForceClose="bullmq.worker.force.close",e.WorkerStalledJobs="bullmq.worker.stalled.jobs",e.WorkerFailedJobs="bullmq.worker.failed.jobs",e.WorkerJobsToExtendLocks="bullmq.worker.jobs.to.extend.locks",e.JobFinishedTimestamp="bullmq.job.finished.timestamp",e.JobProcessedTimestamp="bullmq.job.processed.timestamp",e.JobResult="bullmq.job.result",e.JobFailedReason="bullmq.job.failed.reason",e.FlowName="bullmq.flow.name",e.JobSchedulerId="bullmq.job.scheduler.id"}(Dr||(Dr={})),function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(Pr||(Pr={}));const Nr={1:"Uncaught Fatal Exception",2:"Unused",3:"Internal JavaScript Parse Error",4:"Internal JavaScript Evaluation Failure",5:"Fatal Error",6:"Non-function Internal Exception Handler",7:"Internal Exception Handler Run-Time Failure",8:"Unused",9:"Invalid Argument",10:"Internal JavaScript Run-Time Failure",12:"Invalid Debug Argument",13:"Unfinished Top-Level Await"};class Mr extends m.EventEmitter{constructor(e,t,n={useWorkerThreads:!1}){super(),this.mainFile=e,this.processFile=t,this.opts=n,this._exitCode=null,this._signalCode=null,this._killed=!1}get pid(){if(this.childProcess)return this.childProcess.pid;if(this.worker)return Math.abs(this.worker.threadId);throw new Error("No child process or worker thread")}get exitCode(){return this._exitCode}get signalCode(){return this._signalCode}get killed(){return this.childProcess?this.childProcess.killed:this._killed}async init(){const e=await Lr(process.execArgv);let t;this.opts.useWorkerThreads?this.worker=t=new y.Worker(this.mainFile,Object.assign({execArgv:e,stdin:!0,stdout:!0,stderr:!0},this.opts.workerThreadsOptions?this.opts.workerThreadsOptions:{})):this.childProcess=t=h.fork(this.mainFile,[],Object.assign({execArgv:e,stdio:"pipe"},this.opts.workerForkOptions?this.opts.workerForkOptions:{})),t.on("exit",(e,n)=>{this._exitCode=e,n=void 0===n?null:n,this._signalCode=n,this._killed=!0,this.emit("exit",e,n),t.removeAllListeners(),this.removeAllListeners()}),t.on("error",(...e)=>this.emit("error",...e)),t.on("message",(...e)=>this.emit("message",...e)),t.on("close",(...e)=>this.emit("close",...e)),t.stdout.pipe(process.stdout),t.stderr.pipe(process.stderr),await this.initChild()}async send(e){return new Promise((t,n)=>{this.childProcess?this.childProcess.send(e,e=>{e?n(e):t()}):this.worker?t(this.worker.postMessage(e)):t()})}killProcess(e="SIGKILL"){this.childProcess?this.childProcess.kill(e):this.worker&&this.worker.terminate()}async kill(e="SIGKILL",t){if(this.hasProcessExited())return;const n=(a=this.childProcess||this.worker,new Promise(e=>{a.once("exit",()=>e())}));var a;if(this.killProcess(e),void 0!==t&&(0===t||isFinite(t))){const e=setTimeout(()=>{this.hasProcessExited()||this.killProcess("SIGKILL")},t);await n,clearTimeout(e)}await n}async initChild(){const e=new Promise((e,t)=>{const n=i=>{if(i.cmd===Ar.InitCompleted)e();else if(i.cmd===Ar.InitFailed){const e=new Error;e.stack=i.err.stack,e.message=i.err.message,t(e)}this.off("message",n),this.off("close",a)},a=(e,i)=>{e>128&&(e-=128);t(new Error(`Error initializing child: ${Nr[e]||`Unknown exit code ${e}`} and signal ${i}`)),this.off("message",n),this.off("close",a)};this.on("message",n),this.on("close",a)});await this.send({cmd:Tr.Init,value:this.processFile}),await e}hasProcessExited(){return!(null===this.exitCode&&!this.signalCode)}}const Fr=async()=>new Promise(e=>{const t=u.createServer();t.listen(0,()=>{const{port:n}=t.address();t.close(()=>e(n))})}),Lr=async e=>{const t=[],n=[];for(let a=0;a<e.length;a++){const i=e[a];if(-1===i.indexOf("--inspect"))t.push(i);else{const e=i.split("=")[0],t=await Fr();n.push(`${e}=${t}`)}}return t.concat(n)};class Jr{constructor({mainFile:e=k.join(process.cwd(),"dist/cjs/classes/main.js"),useWorkerThreads:t,workerForkOptions:n,workerThreadsOptions:a}){this.retained={},this.free={},this.opts={mainFile:e,useWorkerThreads:t,workerForkOptions:n,workerThreadsOptions:a}}async retain(e){let t=this.getFree(e).pop();if(t)return this.retained[t.pid]=t,t;t=new Mr(this.opts.mainFile,e,{useWorkerThreads:this.opts.useWorkerThreads,workerForkOptions:this.opts.workerForkOptions,workerThreadsOptions:this.opts.workerThreadsOptions}),t.on("exit",this.remove.bind(this,t));try{if(await t.init(),null!==t.exitCode||null!==t.signalCode)throw new Error("Child exited before it could be retained");return this.retained[t.pid]=t,t}catch(e){throw console.error(e),this.release(t),e}}release(e){delete this.retained[e.pid],this.getFree(e.processFile).push(e)}remove(e){delete this.retained[e.pid];const t=this.getFree(e.processFile),n=t.indexOf(e);n>-1&&t.splice(n,1)}async kill(e,t="SIGKILL"){return this.remove(e),e.kill(t,3e4)}async clean(){const e=Object.values(this.retained).concat(this.getAllFree());this.retained={},this.free={},await Promise.all(e.map(e=>this.kill(e,"SIGTERM")))}getFree(e){return this.free[e]=this.free[e]||[]}getAllFree(){return Object.values(this.free).reduce((e,t)=>e.concat(t),[])}}var Ur={exports:{}},qr={},Vr={},Gr={acl:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},append:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},asking:{arity:1,flags:["fast"],keyStart:0,keyStop:0,step:0},auth:{arity:-2,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},bgrewriteaof:{arity:1,flags:["admin","noscript","no_async_loading"],keyStart:0,keyStop:0,step:0},bgsave:{arity:-1,flags:["admin","noscript","no_async_loading"],keyStart:0,keyStop:0,step:0},bitcount:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},bitfield:{arity:-2,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},bitfield_ro:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},bitop:{arity:-4,flags:["write","denyoom"],keyStart:2,keyStop:-1,step:1},bitpos:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},blmove:{arity:6,flags:["write","denyoom","noscript","blocking"],keyStart:1,keyStop:2,step:1},blmpop:{arity:-5,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},blpop:{arity:-3,flags:["write","noscript","blocking"],keyStart:1,keyStop:-2,step:1},brpop:{arity:-3,flags:["write","noscript","blocking"],keyStart:1,keyStop:-2,step:1},brpoplpush:{arity:4,flags:["write","denyoom","noscript","blocking"],keyStart:1,keyStop:2,step:1},bzmpop:{arity:-5,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},bzpopmax:{arity:-3,flags:["write","noscript","blocking","fast"],keyStart:1,keyStop:-2,step:1},bzpopmin:{arity:-3,flags:["write","noscript","blocking","fast"],keyStart:1,keyStop:-2,step:1},client:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},cluster:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},command:{arity:-1,flags:["loading","stale"],keyStart:0,keyStop:0,step:0},config:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},copy:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},dbsize:{arity:1,flags:["readonly","fast"],keyStart:0,keyStop:0,step:0},debug:{arity:-2,flags:["admin","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},decr:{arity:2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},decrby:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},del:{arity:-2,flags:["write"],keyStart:1,keyStop:-1,step:1},discard:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},dump:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},echo:{arity:2,flags:["fast"],keyStart:0,keyStop:0,step:0},eval:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},eval_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},evalsha:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},evalsha_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},exec:{arity:1,flags:["noscript","loading","stale","skip_slowlog"],keyStart:0,keyStop:0,step:0},exists:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},expire:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},expireat:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},expiretime:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},failover:{arity:-1,flags:["admin","noscript","stale"],keyStart:0,keyStop:0,step:0},fcall:{arity:-3,flags:["noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},fcall_ro:{arity:-3,flags:["readonly","noscript","stale","skip_monitor","no_mandatory_keys","movablekeys"],keyStart:0,keyStop:0,step:0},flushall:{arity:-1,flags:["write"],keyStart:0,keyStop:0,step:0},flushdb:{arity:-1,flags:["write"],keyStart:0,keyStop:0,step:0},function:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},geoadd:{arity:-5,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},geodist:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},geohash:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},geopos:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},georadius:{arity:-6,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},georadius_ro:{arity:-6,flags:["readonly"],keyStart:1,keyStop:1,step:1},georadiusbymember:{arity:-5,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},georadiusbymember_ro:{arity:-5,flags:["readonly"],keyStart:1,keyStop:1,step:1},geosearch:{arity:-7,flags:["readonly"],keyStart:1,keyStop:1,step:1},geosearchstore:{arity:-8,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},get:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},getbit:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},getdel:{arity:2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},getex:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},getrange:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},getset:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hdel:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},hello:{arity:-1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},hexists:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hget:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hgetall:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hincrby:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hincrbyfloat:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hkeys:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hmget:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hmset:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hrandfield:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},hscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},hset:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hsetnx:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},hstrlen:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},hvals:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},incr:{arity:2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},incrby:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},incrbyfloat:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},info:{arity:-1,flags:["loading","stale"],keyStart:0,keyStop:0,step:0},keys:{arity:2,flags:["readonly"],keyStart:0,keyStop:0,step:0},lastsave:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},latency:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},lcs:{arity:-3,flags:["readonly"],keyStart:1,keyStop:2,step:1},lindex:{arity:3,flags:["readonly"],keyStart:1,keyStop:1,step:1},linsert:{arity:5,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},llen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},lmove:{arity:5,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},lmpop:{arity:-4,flags:["write","movablekeys"],keyStart:0,keyStop:0,step:0},lolwut:{arity:-1,flags:["readonly","fast"],keyStart:0,keyStop:0,step:0},lpop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},lpos:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},lpush:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},lpushx:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},lrange:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},lrem:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},lset:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},ltrim:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},memory:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},mget:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},migrate:{arity:-6,flags:["write","movablekeys"],keyStart:3,keyStop:3,step:1},module:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},monitor:{arity:1,flags:["admin","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},move:{arity:3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},mset:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:2},msetnx:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:2},multi:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},object:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},persist:{arity:2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpire:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpireat:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},pexpiretime:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},pfadd:{arity:-2,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},pfcount:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},pfdebug:{arity:3,flags:["write","denyoom","admin"],keyStart:2,keyStop:2,step:1},pfmerge:{arity:-2,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},pfselftest:{arity:1,flags:["admin"],keyStart:0,keyStop:0,step:0},ping:{arity:-1,flags:["fast"],keyStart:0,keyStop:0,step:0},psetex:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},psubscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},psync:{arity:-3,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},pttl:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},publish:{arity:3,flags:["pubsub","loading","stale","fast"],keyStart:0,keyStop:0,step:0},pubsub:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},punsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},quit:{arity:-1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},randomkey:{arity:1,flags:["readonly"],keyStart:0,keyStop:0,step:0},readonly:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},readwrite:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},rename:{arity:3,flags:["write"],keyStart:1,keyStop:2,step:1},renamenx:{arity:3,flags:["write","fast"],keyStart:1,keyStop:2,step:1},replconf:{arity:-1,flags:["admin","noscript","loading","stale","allow_busy"],keyStart:0,keyStop:0,step:0},replicaof:{arity:3,flags:["admin","noscript","stale","no_async_loading"],keyStart:0,keyStop:0,step:0},reset:{arity:1,flags:["noscript","loading","stale","fast","no_auth","allow_busy"],keyStart:0,keyStop:0,step:0},restore:{arity:-4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},"restore-asking":{arity:-4,flags:["write","denyoom","asking"],keyStart:1,keyStop:1,step:1},role:{arity:1,flags:["noscript","loading","stale","fast"],keyStart:0,keyStop:0,step:0},rpop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},rpoplpush:{arity:3,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},rpush:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},rpushx:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},sadd:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},save:{arity:1,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},scan:{arity:-2,flags:["readonly"],keyStart:0,keyStop:0,step:0},scard:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},script:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},sdiff:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sdiffstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},select:{arity:2,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},set:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setbit:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setex:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},setnx:{arity:3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},setrange:{arity:4,flags:["write","denyoom"],keyStart:1,keyStop:1,step:1},shutdown:{arity:-1,flags:["admin","noscript","loading","stale","no_multi","allow_busy"],keyStart:0,keyStop:0,step:0},sinter:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sintercard:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},sinterstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},sismember:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},slaveof:{arity:3,flags:["admin","noscript","stale","no_async_loading"],keyStart:0,keyStop:0,step:0},slowlog:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},smembers:{arity:2,flags:["readonly"],keyStart:1,keyStop:1,step:1},smismember:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},smove:{arity:4,flags:["write","fast"],keyStart:1,keyStop:2,step:1},sort:{arity:-2,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},sort_ro:{arity:-2,flags:["readonly","movablekeys"],keyStart:1,keyStop:1,step:1},spop:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},spublish:{arity:3,flags:["pubsub","loading","stale","fast"],keyStart:1,keyStop:1,step:1},srandmember:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},srem:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},sscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},ssubscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:1,keyStop:-1,step:1},strlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},subscribe:{arity:-2,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},substr:{arity:4,flags:["readonly"],keyStart:1,keyStop:1,step:1},sunion:{arity:-2,flags:["readonly"],keyStart:1,keyStop:-1,step:1},sunionstore:{arity:-3,flags:["write","denyoom"],keyStart:1,keyStop:-1,step:1},sunsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:1,keyStop:-1,step:1},swapdb:{arity:3,flags:["write","fast"],keyStart:0,keyStop:0,step:0},sync:{arity:1,flags:["admin","noscript","no_async_loading","no_multi"],keyStart:0,keyStop:0,step:0},time:{arity:1,flags:["loading","stale","fast"],keyStart:0,keyStop:0,step:0},touch:{arity:-2,flags:["readonly","fast"],keyStart:1,keyStop:-1,step:1},ttl:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},type:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},unlink:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:-1,step:1},unsubscribe:{arity:-1,flags:["pubsub","noscript","loading","stale"],keyStart:0,keyStop:0,step:0},unwatch:{arity:1,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:0,keyStop:0,step:0},wait:{arity:3,flags:["noscript"],keyStart:0,keyStop:0,step:0},watch:{arity:-2,flags:["noscript","loading","stale","fast","allow_busy"],keyStart:1,keyStop:-1,step:1},xack:{arity:-4,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xadd:{arity:-5,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},xautoclaim:{arity:-6,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xclaim:{arity:-6,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xdel:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},xgroup:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},xinfo:{arity:-2,flags:[],keyStart:0,keyStop:0,step:0},xlen:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},xpending:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},xrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},xread:{arity:-4,flags:["readonly","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},xreadgroup:{arity:-7,flags:["write","blocking","movablekeys"],keyStart:0,keyStop:0,step:0},xrevrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},xsetid:{arity:-3,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},xtrim:{arity:-4,flags:["write"],keyStart:1,keyStop:1,step:1},zadd:{arity:-4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},zcard:{arity:2,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zcount:{arity:4,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zdiff:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zdiffstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},zincrby:{arity:4,flags:["write","denyoom","fast"],keyStart:1,keyStop:1,step:1},zinter:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zintercard:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zinterstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1},zlexcount:{arity:4,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zmpop:{arity:-4,flags:["write","movablekeys"],keyStart:0,keyStop:0,step:0},zmscore:{arity:-3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zpopmax:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zpopmin:{arity:-2,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zrandmember:{arity:-2,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangebylex:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangebyscore:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrangestore:{arity:-5,flags:["write","denyoom"],keyStart:1,keyStop:2,step:1},zrank:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zrem:{arity:-3,flags:["write","fast"],keyStart:1,keyStop:1,step:1},zremrangebylex:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zremrangebyrank:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zremrangebyscore:{arity:4,flags:["write"],keyStart:1,keyStop:1,step:1},zrevrange:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrangebylex:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrangebyscore:{arity:-4,flags:["readonly"],keyStart:1,keyStop:1,step:1},zrevrank:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zscan:{arity:-3,flags:["readonly"],keyStart:1,keyStop:1,step:1},zscore:{arity:3,flags:["readonly","fast"],keyStart:1,keyStop:1,step:1},zunion:{arity:-3,flags:["readonly","movablekeys"],keyStart:0,keyStop:0,step:0},zunionstore:{arity:-4,flags:["write","denyoom","movablekeys"],keyStart:1,keyStop:1,step:1}};!function(e){var t=T&&T.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e,"__esModule",{value:!0}),e.getKeyIndexes=e.hasFlag=e.exists=e.list=void 0;const n=t(Gr);e.list=Object.keys(n.default);const a={};function i(e){"string"!=typeof e&&(e=String(e));const t=e.indexOf("->");return-1===t?e.length:t}e.list.forEach(e=>{a[e]=n.default[e].flags.reduce(function(e,t){return e[t]=!0,e},{})}),e.exists=function(e){return Boolean(n.default[e])},e.hasFlag=function(e,t){if(!a[e])throw new Error("Unknown command "+e);return Boolean(a[e][t])},e.getKeyIndexes=function(e,t,a){const r=n.default[e];if(!r)throw new Error("Unknown command "+e);if(!Array.isArray(t))throw new Error("Expect args to be an array");const o=[],s=Boolean(a&&a.parseExternalKey),l=(e,t)=>{const n=[],a=Number(e[t]);for(let e=0;e<a;e++)n.push(e+t+1);return n},c=(e,t,n)=>{for(let a=t;a<e.length-1;a+=1)if(String(e[a]).toLowerCase()===n.toLowerCase())return a+1;return null};switch(e){case"zunionstore":case"zinterstore":case"zdiffstore":o.push(0,...l(t,1));break;case"eval":case"evalsha":case"eval_ro":case"evalsha_ro":case"fcall":case"fcall_ro":case"blmpop":case"bzmpop":o.push(...l(t,1));break;case"sintercard":case"lmpop":case"zunion":case"zinter":case"zmpop":case"zintercard":case"zdiff":o.push(...l(t,0));break;case"georadius":{o.push(0);const e=c(t,5,"STORE");e&&o.push(e);const n=c(t,5,"STOREDIST");n&&o.push(n);break}case"georadiusbymember":{o.push(0);const e=c(t,4,"STORE");e&&o.push(e);const n=c(t,4,"STOREDIST");n&&o.push(n);break}case"sort":case"sort_ro":o.push(0);for(let e=1;e<t.length-1;e++){let n=t[e];if("string"!=typeof n)continue;const a=n.toUpperCase();"GET"===a?(e+=1,n=t[e],"#"!==n&&(s?o.push([e,i(n)]):o.push(e))):"BY"===a?(e+=1,s?o.push([e,i(t[e])]):o.push(e)):"STORE"===a&&(e+=1,o.push(e))}break;case"migrate":if(""===t[2])for(let e=5;e<t.length-1;e++){const n=t[e];if("string"==typeof n&&"KEYS"===n.toUpperCase()){for(let n=e+1;n<t.length;n++)o.push(n);break}}else o.push(2);break;case"xreadgroup":case"xread":for(let n="xread"===e?0:3;n<t.length-1;n++)if("STREAMS"===String(t[n]).toUpperCase()){for(let e=n+1;e<=n+(t.length-1-n)/2;e++)o.push(e);break}break;default:if(r.step>0){const e=r.keyStart-1,n=r.keyStop>0?r.keyStop:t.length+r.keyStop+1;for(let t=e;t<n;t+=r.step)o.push(t)}}return o}}(Vr);var Br={},zr={};!function(e){let t;function n(n,a){try{const e=t;return t=null,e.apply(this,arguments)}catch(t){return e.errorObj.e=t,e.errorObj}}Object.defineProperty(e,"__esModule",{value:!0}),e.tryCatch=e.errorObj=void 0,e.errorObj={e:{}},e.tryCatch=function(e){return t=e,n}}(zr),Object.defineProperty(Br,"__esModule",{value:!0});const Yr=zr;function $r(e){setTimeout(function(){throw e},0)}Br.default=function(e,t,n){return"function"==typeof t&&e.then(e=>{let a;a=void 0!==n&&Object(n).spread&&Array.isArray(e)?Yr.tryCatch(t).apply(void 0,[null].concat(e)):void 0===e?Yr.tryCatch(t)(null):Yr.tryCatch(t)(null,e),a===Yr.errorObj&&$r(a.e)},e=>{if(!e){const t=new Error(e+"");Object.assign(t,{cause:e}),e=t}const n=Yr.tryCatch(t)(e);n===Yr.errorObj&&$r(n.e)}),e};var Wr,Hr,Qr,Zr,Xr={};const eo=process.version.charCodeAt(1)<55&&46===process.version.charCodeAt(2)?function(){if(Hr)return Wr;Hr=1;const e=c,n=t;function a(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function i(t,n,a){e(n),e.strictEqual(typeof a,"number"),Object.defineProperty(this,"message",{value:t||"",configurable:!0,writable:!0});const i=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=i,this.offset=a,this.buffer=n}function r(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0});const t=Error.stackTraceLimit;Error.stackTraceLimit=2,Error.captureStackTrace(this,this.constructor),Error.stackTraceLimit=t}function o(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}function s(e){Object.defineProperty(this,"message",{value:e||"",configurable:!0,writable:!0}),Error.captureStackTrace(this,this.constructor)}return n.inherits(a,Error),Object.defineProperty(a.prototype,"name",{value:"RedisError",configurable:!0,writable:!0}),n.inherits(i,a),Object.defineProperty(i.prototype,"name",{value:"ParserError",configurable:!0,writable:!0}),n.inherits(r,a),Object.defineProperty(r.prototype,"name",{value:"ReplyError",configurable:!0,writable:!0}),n.inherits(o,a),Object.defineProperty(o.prototype,"name",{value:"AbortError",configurable:!0,writable:!0}),n.inherits(s,o),Object.defineProperty(s.prototype,"name",{value:"InterruptError",configurable:!0,writable:!0}),Wr={RedisError:a,ParserError:i,ReplyError:r,AbortError:o,InterruptError:s}}():function(){if(Zr)return Qr;Zr=1;const e=c;class t extends Error{get name(){return this.constructor.name}}class n extends t{get name(){return this.constructor.name}}return Qr={RedisError:t,ParserError:class extends t{constructor(t,n,a){e(n),e.strictEqual(typeof a,"number");const i=Error.stackTraceLimit;Error.stackTraceLimit=2,super(t),Error.stackTraceLimit=i,this.offset=a,this.buffer=n}get name(){return this.constructor.name}},ReplyError:class extends t{constructor(e){const t=Error.stackTraceLimit;Error.stackTraceLimit=2,super(e),Error.stackTraceLimit=t}get name(){return this.constructor.name}},AbortError:n,InterruptError:class extends n{get name(){return this.constructor.name}}},Qr}();var to=eo,no={},ao={exports:{}},io=[0,4129,8258,12387,16516,20645,24774,28903,33032,37161,41290,45419,49548,53677,57806,61935,4657,528,12915,8786,21173,17044,29431,25302,37689,33560,45947,41818,54205,50076,62463,58334,9314,13379,1056,5121,25830,29895,17572,21637,42346,46411,34088,38153,58862,62927,50604,54669,13907,9842,5649,1584,30423,26358,22165,18100,46939,42874,38681,34616,63455,59390,55197,51132,18628,22757,26758,30887,2112,6241,10242,14371,51660,55789,59790,63919,35144,39273,43274,47403,23285,19156,31415,27286,6769,2640,14899,10770,56317,52188,64447,60318,39801,35672,47931,43802,27814,31879,19684,23749,11298,15363,3168,7233,60846,64911,52716,56781,44330,48395,36200,40265,32407,28342,24277,20212,15891,11826,7761,3696,65439,61374,57309,53244,48923,44858,40793,36728,37256,33193,45514,41451,53516,49453,61774,57711,4224,161,12482,8419,20484,16421,28742,24679,33721,37784,41979,46042,49981,54044,58239,62302,689,4752,8947,13010,16949,21012,25207,29270,46570,42443,38312,34185,62830,58703,54572,50445,13538,9411,5280,1153,29798,25671,21540,17413,42971,47098,34713,38840,59231,63358,50973,55100,9939,14066,1681,5808,26199,30326,17941,22068,55628,51565,63758,59695,39368,35305,47498,43435,22596,18533,30726,26663,6336,2273,14466,10403,52093,56156,60223,64286,35833,39896,43963,48026,19061,23124,27191,31254,2801,6864,10931,14994,64814,60687,56684,52557,48554,44427,40424,36297,31782,27655,23652,19525,15522,11395,7392,3265,61215,65342,53085,57212,44955,49082,36825,40952,28183,32310,20053,24180,11923,16050,3793,7920],ro=ao.exports=function(e){for(var t,n=0,a=-1,i=0,r=0,o="string"==typeof e?function(e){for(var t,n=0,a=0,i=[],r=e.length;n<r;n++)(t=e.charCodeAt(n))<128?i[a++]=t:t<2048?(i[a++]=t>>6|192,i[a++]=63&t|128):55296==(64512&t)&&n+1<e.length&&56320==(64512&e.charCodeAt(n+1))?(t=65536+((1023&t)<<10)+(1023&e.charCodeAt(++n)),i[a++]=t>>18|240,i[a++]=t>>12&63|128,i[a++]=t>>6&63|128,i[a++]=63&t|128):(i[a++]=t>>12|224,i[a++]=t>>6&63|128,i[a++]=63&t|128);return i}(e):e,s=o.length;n<s;){if(t=o[n++],-1===a)123===t&&(a=n);else if(125!==t)r=io[255&(t^r>>8)]^r<<8;else if(n-1!==a)return 16383&r;i=io[255&(t^i>>8)]^i<<8}return 16383&i};ao.exports.generateMulti=function(e){for(var t=1,n=e.length,a=ro(e[0]);t<n;)if(ro(e[t++])!==a)return-1;return a};var oo={},so={},lo=9007199254740991,co="[object Arguments]",uo="[object Function]",po="[object GeneratorFunction]",mo=/^(?:0|[1-9]\d*)$/;function ho(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}var yo=Object.prototype,fo=yo.hasOwnProperty,vo=yo.toString,bo=yo.propertyIsEnumerable,go=Math.max;function _o(e,t){var n=Io(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&jo(e)}(e)&&fo.call(e,"callee")&&(!bo.call(e,"callee")||vo.call(e)==co)}(e)?function(e,t){for(var n=-1,a=Array(e);++n<e;)a[n]=t(n);return a}(e.length,String):[],a=n.length,i=!!a;for(var r in e)!t&&!fo.call(e,r)||i&&("length"==r||wo(r,a))||n.push(r);return n}function xo(e,t,n,a){return void 0===e||So(e,yo[n])&&!fo.call(a,n)?t:e}function ko(e,t,n){var a=e[t];fo.call(e,t)&&So(a,n)&&(void 0!==n||t in e)||(e[t]=n)}function Eo(e){if(!Ro(e))return function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}(e);var t,n,a,i=(n=(t=e)&&t.constructor,a="function"==typeof n&&n.prototype||yo,t===a),r=[];for(var o in e)("constructor"!=o||!i&&fo.call(e,o))&&r.push(o);return r}function Ko(e,t){return t=go(void 0===t?e.length-1:t,0),function(){for(var n=arguments,a=-1,i=go(n.length-t,0),r=Array(i);++a<i;)r[a]=n[t+a];a=-1;for(var o=Array(t+1);++a<t;)o[a]=n[a];return o[t]=r,ho(e,this,o)}}function wo(e,t){return!!(t=null==t?lo:t)&&("number"==typeof e||mo.test(e))&&e>-1&&e%1==0&&e<t}function So(e,t){return e===t||e!=e&&t!=t}var Io=Array.isArray;function jo(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=lo}(e.length)&&!function(e){var t=Ro(e)?vo.call(e):"";return t==uo||t==po}(e)}function Ro(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var To,Oo=(To=function(e,t,n,a){!function(e,t,n,a){n||(n={});for(var i=-1,r=t.length;++i<r;){var o=t[i],s=a?a(n[o],e[o],o,n,e):void 0;ko(n,o,void 0===s?e[o]:s)}}(t,function(e){return jo(e)?_o(e,!0):Eo(e)}(t),e,a)},Ko(function(e,t){var n=-1,a=t.length,i=a>1?t[a-1]:void 0,r=a>2?t[2]:void 0;for(i=To.length>3&&"function"==typeof i?(a--,i):void 0,r&&function(e,t,n){if(!Ro(n))return!1;var a=typeof t;return!!("number"==a?jo(n)&&wo(t,n.length):"string"==a&&t in n)&&So(n[t],e)}(t[0],t[1],r)&&(i=a<3?void 0:i,a=1),e=Object(e);++n<a;){var o=t[n];o&&To(e,o,n,i)}return e}));var Ao=Ko(function(e){return e.push(void 0,xo),ho(Oo,void 0,e)}),Co=9007199254740991,Do="[object Function]",Po="[object GeneratorFunction]",No=Object.prototype,Mo=No.hasOwnProperty,Fo=No.toString,Lo=No.propertyIsEnumerable;var Jo=function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=Co}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?Fo.call(e):"";return t==Do||t==Po}(e)}(e)}(e)&&Mo.call(e,"callee")&&(!Lo.call(e,"callee")||"[object Arguments]"==Fo.call(e))};Object.defineProperty(so,"__esModule",{value:!0}),so.isArguments=so.defaults=so.noop=void 0;const Uo=Ao;so.defaults=Uo;const qo=Jo;so.isArguments=qo,so.noop=function(){};var Vo,Go,Bo,zo,Yo,$o={},Wo={exports:{}},Ho={exports:{}};function Qo(){if(Go)return Vo;Go=1;var e=1e3,t=60*e,n=60*t,a=24*n,i=7*a,r=365.25*a;function o(e,t,n,a){var i=t>=1.5*n;return Math.round(e/n)+" "+a+(i?"s":"")}return Vo=function(s,l){l=l||{};var c=typeof s;if("string"===c&&s.length>0)return function(o){if((o=String(o)).length>100)return;var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(o);if(!s)return;var l=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return l*r;case"weeks":case"week":case"w":return l*i;case"days":case"day":case"d":return l*a;case"hours":case"hour":case"hrs":case"hr":case"h":return l*n;case"minutes":case"minute":case"mins":case"min":case"m":return l*t;case"seconds":case"second":case"secs":case"sec":case"s":return l*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return l;default:return}}(s);if("number"===c&&isFinite(s))return l.long?function(i){var r=Math.abs(i);if(r>=a)return o(i,r,a,"day");if(r>=n)return o(i,r,n,"hour");if(r>=t)return o(i,r,t,"minute");if(r>=e)return o(i,r,e,"second");return i+" ms"}(s):function(i){var r=Math.abs(i);if(r>=a)return Math.round(i/a)+"d";if(r>=n)return Math.round(i/n)+"h";if(r>=t)return Math.round(i/t)+"m";if(r>=e)return Math.round(i/e)+"s";return i+"ms"}(s);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(s))},Vo}function Zo(){if(zo)return Bo;return zo=1,Bo=function(e){function t(e){let a,i,r,o=null;function s(...e){if(!s.enabled)return;const n=s,i=Number(new Date),r=i-(a||i);n.diff=r,n.prev=a,n.curr=i,a=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let o=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(a,i)=>{if("%%"===a)return"%";o++;const r=t.formatters[i];if("function"==typeof r){const t=e[o];a=r.call(n,t),e.splice(o,1),o--}return a}),t.formatArgs.call(n,e);(n.log||t.log).apply(n,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=n,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==o?o:(i!==t.namespaces&&(i=t.namespaces,r=t.enabled(e)),r),set:e=>{o=e}}),"function"==typeof t.init&&t.init(s),s}function n(e,n){const a=t(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function a(e,t){let n=0,a=0,i=-1,r=0;for(;n<e.length;)if(a<t.length&&(t[a]===e[n]||"*"===t[a]))"*"===t[a]?(i=a,r=n,a++):(n++,a++);else{if(-1===i)return!1;a=i+1,r++,n=r}for(;a<t.length&&"*"===t[a];)a++;return a===t.length}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names,...t.skips.map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){t.save(e),t.namespaces=e,t.names=[],t.skips=[];const n=("string"==typeof e?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of n)"-"===e[0]?t.skips.push(e.slice(1)):t.names.push(e)},t.enabled=function(e){for(const n of t.skips)if(a(e,n))return!1;for(const n of t.names)if(a(e,n))return!0;return!1},t.humanize=Qo(),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{t[n]=e[n]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t},Bo}var Xo,es,ts,ns,as,is={exports:{}};function rs(){return es||(es=1,Xo=(e,t=process.argv)=>{const n=e.startsWith("-")?"":1===e.length?"-":"--",a=t.indexOf(n+e),i=t.indexOf("--");return-1!==a&&(-1===i||a<i)}),Xo}function os(){return as||(as=1,function(e,n){const a=d,i=t;n.init=function(e){e.inspectOpts={};const t=Object.keys(n.inspectOpts);for(let a=0;a<t.length;a++)e.inspectOpts[t[a]]=n.inspectOpts[t[a]]},n.log=function(...e){return process.stderr.write(i.formatWithOptions(n.inspectOpts,...e)+"\n")},n.formatArgs=function(t){const{namespace:a,useColors:i}=this;if(i){const n=this.color,i="[3"+(n<8?n:"8;5;"+n),r=`  ${i};1m${a} [0m`;t[0]=r+t[0].split("\n").join("\n"+r),t.push(i+"m+"+e.exports.humanize(this.diff)+"[0m")}else t[0]=function(){if(n.inspectOpts.hideDate)return"";return(new Date).toISOString()+" "}()+a+" "+t[0]},n.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},n.load=function(){return process.env.DEBUG},n.useColors=function(){return"colors"in n.inspectOpts?Boolean(n.inspectOpts.colors):a.isatty(process.stderr.fd)},n.destroy=i.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),n.colors=[6,2,3,4,5,1];try{const e=function(){if(ns)return ts;ns=1;const e=f,t=d,n=rs(),{env:a}=process;let i;function r(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function o(t,r){if(0===i)return 0;if(n("color=16m")||n("color=full")||n("color=truecolor"))return 3;if(n("color=256"))return 2;if(t&&!r&&void 0===i)return 0;const o=i||0;if("dumb"===a.TERM)return o;if("win32"===process.platform){const t=e.release().split(".");return Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if("CI"in a)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some(e=>e in a)||"codeship"===a.CI_NAME?1:o;if("TEAMCITY_VERSION"in a)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(a.TEAMCITY_VERSION)?1:0;if("truecolor"===a.COLORTERM)return 3;if("TERM_PROGRAM"in a){const e=parseInt((a.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(a.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(a.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(a.TERM)||"COLORTERM"in a?1:o}return n("no-color")||n("no-colors")||n("color=false")||n("color=never")?i=0:(n("color")||n("colors")||n("color=true")||n("color=always"))&&(i=1),"FORCE_COLOR"in a&&(i="true"===a.FORCE_COLOR?1:"false"===a.FORCE_COLOR?0:0===a.FORCE_COLOR.length?1:Math.min(parseInt(a.FORCE_COLOR,10),3)),ts={supportsColor:function(e){return r(o(e,e&&e.isTTY))},stdout:r(o(!0,t.isatty(1))),stderr:r(o(!0,t.isatty(2)))},ts}();e&&(e.stderr||e).level>=2&&(n.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}n.inspectOpts=Object.keys(process.env).filter(e=>/^debug_/i.test(e)).reduce((e,t)=>{const n=t.substring(6).toLowerCase().replace(/_([a-z])/g,(e,t)=>t.toUpperCase());let a=process.env[t];return a=!!/^(yes|on|true|enabled)$/i.test(a)||!/^(no|off|false|disabled)$/i.test(a)&&("null"===a?null:Number(a)),e[n]=a,e},{}),e.exports=Zo()(n);const{formatters:r}=e.exports;r.o=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts).split("\n").map(e=>e.trim()).join(" ")},r.O=function(e){return this.inspectOpts.colors=this.useColors,i.inspect(e,this.inspectOpts)}}(is,is.exports)),is.exports}!function(e){"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=(Yo||(Yo=1,function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,i=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(a++,"%c"===e&&(i=a))}),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")||t.storage.getItem("DEBUG")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=Zo()(t);const{formatters:n}=e.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}(Ho,Ho.exports)),Ho.exports):e.exports=os()}(Wo),Object.defineProperty($o,"__esModule",{value:!0}),$o.genRedactedString=$o.getStringValue=$o.MAX_ARGUMENT_LENGTH=void 0;const ss=Wo.exports;$o.MAX_ARGUMENT_LENGTH=200;function ls(e){if(null!==e)switch(typeof e){case"boolean":case"number":return;case"object":if(Buffer.isBuffer(e))return e.toString("hex");if(Array.isArray(e))return e.join(",");try{return JSON.stringify(e)}catch(e){return}case"string":return e}}function cs(e,t){const{length:n}=e;return n<=t?e:e.slice(0,t)+' ... <REDACTED full-length="'+n+'">'}$o.getStringValue=ls,$o.genRedactedString=cs,$o.default=function(e){const t=(0,ss.default)(`ioredis:${e}`);function n(...e){if(t.enabled){for(let t=1;t<e.length;t++){const n=ls(e[t]);"string"==typeof n&&n.length>200&&(e[t]=cs(n,200))}return t.apply(null,e)}}return Object.defineProperties(n,{namespace:{get:()=>t.namespace},enabled:{get:()=>t.enabled},destroy:{get:()=>t.destroy},log:{get:()=>t.log,set(e){t.log=e}}}),n};var ds={};Object.defineProperty(ds,"__esModule",{value:!0});const us="-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIJAKSVpiDswLcwMA0GCSqGSIb3DQEBBQUAMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTAeFw0xMzEwMDExMjE0NTVaFw0yMzA5MjkxMjE0NTVaMD4xFjAUBgNV\nBAoMDUdhcmFudGlhIERhdGExJDAiBgNVBAMMG1NTTCBDZXJ0aWZpY2F0aW9uIEF1\ndGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALZqkh/DczWP\nJnxnHLQ7QL0T4B4CDKWBKCcisriGbA6ZePWVNo4hfKQC6JrzfR+081NeD6VcWUiz\nrmd+jtPhIY4c+WVQYm5PKaN6DT1imYdxQw7aqO5j2KUCEh/cznpLxeSHoTxlR34E\nQwF28Wl3eg2vc5ct8LjU3eozWVk3gb7alx9mSA2SgmuX5lEQawl++rSjsBStemY2\nBDwOpAMXIrdEyP/cVn8mkvi/BDs5M5G+09j0gfhyCzRWMQ7Hn71u1eolRxwVxgi3\nTMn+/vTaFSqxKjgck6zuAYjBRPaHe7qLxHNr1So/Mc9nPy+3wHebFwbIcnUojwbp\n4nctkWbjb2cCAwEAAaNQME4wHQYDVR0OBBYEFP1whtcrydmW3ZJeuSoKZIKjze3w\nMB8GA1UdIwQYMBaAFP1whtcrydmW3ZJeuSoKZIKjze3wMAwGA1UdEwQFMAMBAf8w\nDQYJKoZIhvcNAQEFBQADggEBAG2erXhwRAa7+ZOBs0B6X57Hwyd1R4kfmXcs0rta\nlbPpvgULSiB+TCbf3EbhJnHGyvdCY1tvlffLjdA7HJ0PCOn+YYLBA0pTU/dyvrN6\nSu8NuS5yubnt9mb13nDGYo1rnt0YRfxN+8DM3fXIVr038A30UlPX2Ou1ExFJT0MZ\nuFKY6ZvLdI6/1cbgmguMlAhM+DhKyV6Sr5699LM3zqeI816pZmlREETYkGr91q7k\nBpXJu/dtHaGxg1ZGu6w/PCsYGUcECWENYD4VQPd8N32JjOfu6vEgoEAwfPP+3oGp\nZ4m3ewACcWOAenqflb+cQYC4PsF7qbXDmRaWrbKntOlZ3n0=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGMTCCBBmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwajELMAkGA1UEBhMCVVMx\nCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJzMS0w\nKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcN\nMTgwMjI1MTUzNzM3WhcNMjgwMjIzMTUzNzM3WjBfMQswCQYDVQQGEwJVUzELMAkG\nA1UECAwCQ0ExEjAQBgNVBAoMCVJlZGlzTGFiczEvMC0GA1UEAwwmUkNQIEludGVy\nbWVkaWF0ZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUA\nA4ICDwAwggIKAoICAQDf9dqbxc8Bq7Ctq9rWcxrGNKKHivqLAFpPq02yLPx6fsOv\nTq7GsDChAYBBc4v7Y2Ap9RD5Vs3dIhEANcnolf27QwrG9RMnnvzk8pCvp1o6zSU4\nVuOE1W66/O1/7e2rVxyrnTcP7UgK43zNIXu7+tiAqWsO92uSnuMoGPGpeaUm1jym\nhjWKtkAwDFSqvHY+XL5qDVBEjeUe+WHkYUg40cAXjusAqgm2hZt29c2wnVrxW25W\nP0meNlzHGFdA2AC5z54iRiqj57dTfBTkHoBczQxcyw6hhzxZQ4e5I5zOKjXXEhZN\nr0tA3YC14CTabKRus/JmZieyZzRgEy2oti64tmLYTqSlAD78pRL40VNoaSYetXLw\nhhNsXCHgWaY6d5bLOc/aIQMAV5oLvZQKvuXAF1IDmhPA+bZbpWipp0zagf1P1H3s\nUzsMdn2KM0ejzgotbtNlj5TcrVwpmvE3ktvUAuA+hi3FkVx1US+2Gsp5x4YOzJ7u\nP1WPk6ShF0JgnJH2ILdj6kttTWwFzH17keSFICWDfH/+kM+k7Y1v3EXMQXE7y0T9\nMjvJskz6d/nv+sQhY04xt64xFMGTnZjlJMzfQNi7zWFLTZnDD0lPowq7l3YiPoTT\nt5Xky83lu0KZsZBo0WlWaDG00gLVdtRgVbcuSWxpi5BdLb1kRab66JptWjxwXQID\nAQABo4HrMIHoMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHBzOi8vcmwtY2Etc2VydmVy\nLnJlZGlzbGFicy5jb20vdjEvY3JsMEYGCCsGAQUFBwEBBDowODA2BggrBgEFBQcw\nAYYqaHR0cHM6Ly9ybC1jYS1zZXJ2ZXIucmVkaXNsYWJzLmNvbS92MS9vY3NwMB0G\nA1UdDgQWBBQHar5OKvQUpP2qWt6mckzToeCOHDAfBgNVHSMEGDAWgBQi42wH6hM4\nL2sujEvLM0/u8lRXTzASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIB\nhjANBgkqhkiG9w0BAQsFAAOCAgEAirEn/iTsAKyhd+pu2W3Z5NjCko4NPU0EYUbr\nAP7+POK2rzjIrJO3nFYQ/LLuC7KCXG+2qwan2SAOGmqWst13Y+WHp44Kae0kaChW\nvcYLXXSoGQGC8QuFSNUdaeg3RbMDYFT04dOkqufeWVccoHVxyTSg9eD8LZuHn5jw\n7QDLiEECBmIJHk5Eeo2TAZrx4Yx6ufSUX5HeVjlAzqwtAqdt99uCJ/EL8bgpWbe+\nXoSpvUv0SEC1I1dCAhCKAvRlIOA6VBcmzg5Am12KzkqTul12/VEFIgzqu0Zy2Jbc\nAUPrYVu/+tOGXQaijy7YgwH8P8n3s7ZeUa1VABJHcxrxYduDDJBLZi+MjheUDaZ1\njQRHYevI2tlqeSBqdPKG4zBY5lS0GiAlmuze5oENt0P3XboHoZPHiqcK3VECgTVh\n/BkJcuudETSJcZDmQ8YfoKfBzRQNg2sv/hwvUv73Ss51Sco8GEt2lD8uEdib1Q6z\nzDT5lXJowSzOD5ZA9OGDjnSRL+2riNtKWKEqvtEG3VBJoBzu9GoxbAc7wIZLxmli\niF5a/Zf5X+UXD3s4TMmy6C4QZJpAA2egsSQCnraWO2ULhh7iXMysSkF/nzVfZn43\niqpaB8++9a37hWq14ZmOv0TJIDz//b2+KC4VFXWQ5W5QC6whsjT+OlG4p5ZYG0jo\n616pxqo=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFujCCA6KgAwIBAgIJAJ1aTT1lu2ScMA0GCSqGSIb3DQEBCwUAMGoxCzAJBgNV\nBAYTAlVTMQswCQYDVQQIDAJDQTELMAkGA1UEBwwCQ0ExEjAQBgNVBAoMCVJlZGlz\nTGFiczEtMCsGA1UEAwwkUmVkaXNMYWJzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9y\naXR5MB4XDTE4MDIyNTE1MjA0MloXDTM4MDIyMDE1MjA0MlowajELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgMAkNBMQswCQYDVQQHDAJDQTESMBAGA1UECgwJUmVkaXNMYWJz\nMS0wKwYDVQQDDCRSZWRpc0xhYnMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkw\nggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDLEjXy7YrbN5Waau5cd6g1\nG5C2tMmeTpZ0duFAPxNU4oE3RHS5gGiok346fUXuUxbZ6QkuzeN2/2Z+RmRcJhQY\nDm0ZgdG4x59An1TJfnzKKoWj8ISmoHS/TGNBdFzXV7FYNLBuqZouqePI6ReC6Qhl\npp45huV32Q3a6IDrrvx7Wo5ZczEQeFNbCeCOQYNDdTmCyEkHqc2AGo8eoIlSTutT\nULOC7R5gzJVTS0e1hesQ7jmqHjbO+VQS1NAL4/5K6cuTEqUl+XhVhPdLWBXJQ5ag\n54qhX4v+ojLzeU1R/Vc6NjMvVtptWY6JihpgplprN0Yh2556ewcXMeturcKgXfGJ\nxeYzsjzXerEjrVocX5V8BNrg64NlifzTMKNOOv4fVZszq1SIHR8F9ROrqiOdh8iC\nJpUbLpXH9hWCSEO6VRMB2xJoKu3cgl63kF30s77x7wLFMEHiwsQRKxooE1UhgS9K\n2sO4TlQ1eWUvFvHSTVDQDlGQ6zu4qjbOpb3Q8bQwoK+ai2alkXVR4Ltxe9QlgYK3\nStsnPhruzZGA0wbXdpw0bnM+YdlEm5ffSTpNIfgHeaa7Dtb801FtA71ZlH7A6TaI\nSIQuUST9EKmv7xrJyx0W1pGoPOLw5T029aTjnICSLdtV9bLwysrLhIYG5bnPq78B\ncS+jZHFGzD7PUVGQD01nOQIDAQABo2MwYTAdBgNVHQ4EFgQUIuNsB+oTOC9rLoxL\nyzNP7vJUV08wHwYDVR0jBBgwFoAUIuNsB+oTOC9rLoxLyzNP7vJUV08wDwYDVR0T\nAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAHfg\nz5pMNUAKdMzK1aS1EDdK9yKz4qicILz5czSLj1mC7HKDRy8cVADUxEICis++CsCu\nrYOvyCVergHQLREcxPq4rc5Nq1uj6J6649NEeh4WazOOjL4ZfQ1jVznMbGy+fJm3\n3Hoelv6jWRG9iqeJZja7/1s6YC6bWymI/OY1e4wUKeNHAo+Vger7MlHV+RuabaX+\nhSJ8bJAM59NCM7AgMTQpJCncrcdLeceYniGy5Q/qt2b5mJkQVkIdy4TPGGB+AXDJ\nD0q3I/JDRkDUFNFdeW0js7fHdsvCR7O3tJy5zIgEV/o/BCkmJVtuwPYOrw/yOlKj\nTY/U7ATAx9VFF6/vYEOMYSmrZlFX+98L6nJtwDqfLB5VTltqZ4H/KBxGE3IRSt9l\nFXy40U+LnXzhhW+7VBAvyYX8GEXhHkKU8Gqk1xitrqfBXY74xKgyUSTolFSfFVgj\nmcM/X4K45bka+qpkj7Kfv/8D4j6aZekwhN2ly6hhC1SmQ8qjMjpG/mrWOSSHZFmf\nybu9iD2AYHeIOkshIl6xYIa++Q/00/vs46IzAbQyriOi0XxlSMMVtPx0Q3isp+ji\nn8Mq9eOuxYOEQ4of8twUkUDd528iwGtEdwf0Q01UyT84S62N8AySl1ZBKXJz6W4F\nUhWfa/HQYOAPDdEjNgnVwLI23b8t0TozyCWw7q8h\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIEjzCCA3egAwIBAgIQe55B/ALCKJDZtdNT8kD6hTANBgkqhkiG9w0BAQsFADBM\nMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xv\nYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjAeFw0yMjAxMjYxMjAwMDBaFw0y\nNTAxMjYwMDAwMDBaMFgxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWdu\nIG52LXNhMS4wLAYDVQQDEyVHbG9iYWxTaWduIEF0bGFzIFIzIE9WIFRMUyBDQSAy\nMDIyIFEyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmGmg1LW9b7Lf\n8zDD83yBDTEkt+FOxKJZqF4veWc5KZsQj9HfnUS2e5nj/E+JImlGPsQuoiosLuXD\nBVBNAMcUFa11buFMGMeEMwiTmCXoXRrXQmH0qjpOfKgYc5gHG3BsRGaRrf7VR4eg\nofNMG9wUBw4/g/TT7+bQJdA4NfE7Y4d5gEryZiBGB/swaX6Jp/8MF4TgUmOWmalK\ndZCKyb4sPGQFRTtElk67F7vU+wdGcrcOx1tDcIB0ncjLPMnaFicagl+daWGsKqTh\ncounQb6QJtYHa91KvCfKWocMxQ7OIbB5UARLPmC4CJ1/f8YFm35ebfzAeULYdGXu\njE9CLor0OwIDAQABo4IBXzCCAVswDgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\nBBSH5Zq7a7B/t95GfJWkDBpA8HHqdjAfBgNVHSMEGDAWgBSP8Et/qC5FJK5NUPpj\nmove4t0bvDB7BggrBgEFBQcBAQRvMG0wLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3Nw\nMi5nbG9iYWxzaWduLmNvbS9yb290cjMwOwYIKwYBBQUHMAKGL2h0dHA6Ly9zZWN1\ncmUuZ2xvYmFsc2lnbi5jb20vY2FjZXJ0L3Jvb3QtcjMuY3J0MDYGA1UdHwQvMC0w\nK6ApoCeGJWh0dHA6Ly9jcmwuZ2xvYmFsc2lnbi5jb20vcm9vdC1yMy5jcmwwIQYD\nVR0gBBowGDAIBgZngQwBAgIwDAYKKwYBBAGgMgoBAjANBgkqhkiG9w0BAQsFAAOC\nAQEAKRic9/f+nmhQU/wz04APZLjgG5OgsuUOyUEZjKVhNGDwxGTvKhyXGGAMW2B/\n3bRi+aElpXwoxu3pL6fkElbX3B0BeS5LoDtxkyiVEBMZ8m+sXbocwlPyxrPbX6mY\n0rVIvnuUeBH8X0L5IwfpNVvKnBIilTbcebfHyXkPezGwz7E1yhUULjJFm2bt0SdX\ny+4X/WeiiYIv+fTVgZZgl+/2MKIsu/qdBJc3f3TvJ8nz+Eax1zgZmww+RSQWeOj3\n15Iw6Z5FX+NwzY/Ab+9PosR5UosSeq+9HhtaxZttXG1nVh+avYPGYddWmiMT90J5\nZgKnO/Fx2hBgTxhOTMYaD312kg==\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\nA1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\nZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\nMTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\nA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\nRgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\ngHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\nKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\nQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\nXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\nDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\nLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\nRUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\njjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\nmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\nMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\nWD9f\n-----END CERTIFICATE-----",ps={RedisCloudFixed:{ca:us},RedisCloudFlexible:{ca:us}};ds.default=ps,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.noop=e.defaults=e.Debug=e.zipMap=e.CONNECTION_CLOSED_ERROR_MSG=e.shuffle=e.sample=e.resolveTLSProfile=e.parseURL=e.optimizeErrorStack=e.toArg=e.convertMapToArray=e.convertObjectToArray=e.timeout=e.packObject=e.isInt=e.wrapMultiResult=e.convertBufferToString=void 0;const t=o,n=so;Object.defineProperty(e,"defaults",{enumerable:!0,get:function(){return n.defaults}}),Object.defineProperty(e,"noop",{enumerable:!0,get:function(){return n.noop}});const a=$o;e.Debug=a.default;const i=ds;function r(e){const t=parseFloat(e);return!isNaN(e)&&(0|t)===t}e.convertBufferToString=function e(t,n){if(t instanceof Buffer)return t.toString(n);if(Array.isArray(t)){const a=t.length,i=Array(a);for(let r=0;r<a;++r)i[r]=t[r]instanceof Buffer&&"utf8"===n?t[r].toString():e(t[r],n);return i}return t},e.wrapMultiResult=function(e){if(!e)return null;const t=[],n=e.length;for(let a=0;a<n;++a){const n=e[a];n instanceof Error?t.push([n]):t.push([null,n])}return t},e.isInt=r,e.packObject=function(e){const t={},n=e.length;for(let a=1;a<n;a+=2)t[e[a-1]]=e[a];return t},e.timeout=function(e,t){let n=null;const a=function(){n&&(clearTimeout(n),n=null,e.apply(this,arguments))};return n=setTimeout(a,t,new Error("timeout")),a},e.convertObjectToArray=function(e){const t=[],n=Object.keys(e);for(let a=0,i=n.length;a<i;a++)t.push(n[a],e[n[a]]);return t},e.convertMapToArray=function(e){const t=[];let n=0;return e.forEach(function(e,a){t[n]=a,t[n+1]=e,n+=2}),t},e.toArg=function(e){return null==e?"":String(e)},e.optimizeErrorStack=function(e,t,n){const a=t.split("\n");let i,r="";for(i=1;i<a.length&&-1!==a[i].indexOf(n);++i);for(let e=i;e<a.length;++e)r+="\n"+a[e];if(e.stack){const t=e.stack.indexOf("\n");e.stack=e.stack.slice(0,t)+r}return e},e.parseURL=function(e){if(r(e))return{port:e};let a=(0,t.parse)(e,!0,!0);a.slashes||"/"===e[0]||(e="//"+e,a=(0,t.parse)(e,!0,!0));const i=a.query||{},o={};if(a.auth){const e=a.auth.indexOf(":");o.username=-1===e?a.auth:a.auth.slice(0,e),o.password=-1===e?"":a.auth.slice(e+1)}if(a.pathname&&("redis:"===a.protocol||"rediss:"===a.protocol?a.pathname.length>1&&(o.db=a.pathname.slice(1)):o.path=a.pathname),a.host&&(o.host=a.hostname),a.port&&(o.port=a.port),"string"==typeof i.family){const e=Number.parseInt(i.family,10);Number.isNaN(e)||(o.family=e)}return(0,n.defaults)(o,i),o},e.resolveTLSProfile=function(e){let t=null==e?void 0:e.tls;"string"==typeof t&&(t={profile:t});const n=i.default[null==t?void 0:t.profile];return n&&(t=Object.assign({},n,t),delete t.profile,e=Object.assign({},e,{tls:t})),e},e.sample=function(e,t=0){const n=e.length;return t>=n?null:e[t+Math.floor(Math.random()*(n-t))]},e.shuffle=function(e){let t=e.length;for(;t>0;){const n=Math.floor(Math.random()*t);t--,[e[t],e[n]]=[e[n],e[t]]}return e},e.CONNECTION_CLOSED_ERROR_MSG="Connection is closed.",e.zipMap=function(e,t){const n=new Map;return e.forEach((e,a)=>{n.set(e,t[a])}),n}}(oo),Object.defineProperty(no,"__esModule",{value:!0});const ms=Vr,hs=ao.exports,ys=Br,fs=oo;class vs{constructor(e,t=[],n={},a){if(this.name=e,this.inTransaction=!1,this.isResolved=!1,this.transformed=!1,this.replyEncoding=n.replyEncoding,this.errorStack=n.errorStack,this.args=t.flat(),this.callback=a,this.initPromise(),n.keyPrefix){const e=n.keyPrefix instanceof Buffer;let t=e?n.keyPrefix:null;this._iterateKeys(a=>a instanceof Buffer?(null===t&&(t=Buffer.from(n.keyPrefix)),Buffer.concat([t,a])):e?Buffer.concat([n.keyPrefix,Buffer.from(String(a))]):n.keyPrefix+a)}n.readOnly&&(this.isReadOnly=!0)}static checkFlag(e,t){return!!this.getFlagMap()[e][t]}static setArgumentTransformer(e,t){this._transformer.argument[e]=t}static setReplyTransformer(e,t){this._transformer.reply[e]=t}static getFlagMap(){return this.flagMap||(this.flagMap=Object.keys(vs.FLAGS).reduce((e,t)=>(e[t]={},vs.FLAGS[t].forEach(n=>{e[t][n]=!0}),e),{})),this.flagMap}getSlot(){if(void 0===this.slot){const e=this.getKeys()[0];this.slot=null==e?null:hs(e)}return this.slot}getKeys(){return this._iterateKeys()}toWritable(e){let t;const n="*"+(this.args.length+1)+"\r\n$"+Buffer.byteLength(this.name)+"\r\n"+this.name+"\r\n";if(this.bufferMode){const e=new _s;e.push(n);for(let t=0;t<this.args.length;++t){const n=this.args[t];n instanceof Buffer?0===n.length?e.push("$0\r\n\r\n"):(e.push("$"+n.length+"\r\n"),e.push(n),e.push("\r\n")):e.push("$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n")}t=e.toBuffer()}else{t=n;for(let e=0;e<this.args.length;++e){const n=this.args[e];t+="$"+Buffer.byteLength(n)+"\r\n"+n+"\r\n"}}return t}stringifyArguments(){for(let e=0;e<this.args.length;++e){const t=this.args[e];"string"==typeof t||(t instanceof Buffer?this.bufferMode=!0:this.args[e]=(0,fs.toArg)(t))}}transformReply(e){this.replyEncoding&&(e=(0,fs.convertBufferToString)(e,this.replyEncoding));const t=vs._transformer.reply[this.name];return t&&(e=t(e)),e}setTimeout(e){this._commandTimeoutTimer||(this._commandTimeoutTimer=setTimeout(()=>{this.isResolved||this.reject(new Error("Command timed out"))},e))}initPromise(){const e=new Promise((e,t)=>{if(!this.transformed){this.transformed=!0;const e=vs._transformer.argument[this.name];e&&(this.args=e(this.args)),this.stringifyArguments()}this.resolve=this._convertValue(e),this.errorStack?this.reject=e=>{t((0,fs.optimizeErrorStack)(e,this.errorStack.stack,__dirname))}:this.reject=t});this.promise=(0,ys.default)(e,this.callback)}_iterateKeys(e=e=>e){if(void 0===this.keys&&(this.keys=[],(0,ms.exists)(this.name))){const t=(0,ms.getKeyIndexes)(this.name,this.args);for(const n of t)this.args[n]=e(this.args[n]),this.keys.push(this.args[n])}return this.keys}_convertValue(e){return t=>{try{const n=this._commandTimeoutTimer;n&&(clearTimeout(n),delete this._commandTimeoutTimer),e(this.transformReply(t)),this.isResolved=!0}catch(e){this.reject(e)}return this.promise}}}no.default=vs,vs.FLAGS={VALID_IN_SUBSCRIBER_MODE:["subscribe","psubscribe","unsubscribe","punsubscribe","ssubscribe","sunsubscribe","ping","quit"],VALID_IN_MONITOR_MODE:["monitor","auth"],ENTER_SUBSCRIBER_MODE:["subscribe","psubscribe","ssubscribe"],EXIT_SUBSCRIBER_MODE:["unsubscribe","punsubscribe","sunsubscribe"],WILL_DISCONNECT:["quit"]},vs._transformer={argument:{},reply:{}};const bs=function(e){if(1===e.length){if(e[0]instanceof Map)return(0,fs.convertMapToArray)(e[0]);if("object"==typeof e[0]&&null!==e[0])return(0,fs.convertObjectToArray)(e[0])}return e},gs=function(e){if(2===e.length){if(e[1]instanceof Map)return[e[0]].concat((0,fs.convertMapToArray)(e[1]));if("object"==typeof e[1]&&null!==e[1])return[e[0]].concat((0,fs.convertObjectToArray)(e[1]))}return e};vs.setArgumentTransformer("mset",bs),vs.setArgumentTransformer("msetnx",bs),vs.setArgumentTransformer("hset",gs),vs.setArgumentTransformer("hmset",gs),vs.setReplyTransformer("hgetall",function(e){if(Array.isArray(e)){const t={};for(let n=0;n<e.length;n+=2){const a=e[n],i=e[n+1];a in t?Object.defineProperty(t,a,{value:i,configurable:!0,enumerable:!0,writable:!0}):t[a]=i}return t}return e});class _s{constructor(){this.length=0,this.items=[]}push(e){this.length+=Buffer.byteLength(e),this.items.push(e)}toBuffer(){const e=Buffer.allocUnsafe(this.length);let t=0;for(const n of this.items){const a=Buffer.byteLength(n);Buffer.isBuffer(n)?n.copy(e,t):e.write(n,t,a),t+=a}return e}}var xs={};Object.defineProperty(xs,"__esModule",{value:!0});const ks=to;class Es extends ks.RedisError{constructor(e,t){super(e),this.lastNodeError=t,Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}xs.default=Es,Es.defaultMessage="Failed to refresh slots cache.";var Ks={};Object.defineProperty(Ks,"__esModule",{value:!0});const ws=n;class Ss extends ws.Readable{constructor(e){super(e),this.opt=e,this._redisCursor="0",this._redisDrained=!1}_read(){if(this._redisDrained)return void this.push(null);const e=[this._redisCursor];this.opt.key&&e.unshift(this.opt.key),this.opt.match&&e.push("MATCH",this.opt.match),this.opt.type&&e.push("TYPE",this.opt.type),this.opt.count&&e.push("COUNT",String(this.opt.count)),this.opt.noValues&&e.push("NOVALUES"),this.opt.redis[this.opt.command](e,(e,t)=>{e?this.emit("error",e):(this._redisCursor=t[0]instanceof Buffer?t[0].toString():t[0],"0"===this._redisCursor&&(this._redisDrained=!0),this.push(t[1]))})}close(){this._redisDrained=!0}}Ks.default=Ss;var Is={},js={},Rs={},Ts={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.executeWithAutoPipelining=e.getFirstValueInFlattenedArray=e.shouldUseAutoPipelining=e.notAllowedAutoPipelineCommands=e.kCallbacks=e.kExec=void 0;const t=so,n=ao.exports,a=Br;function i(t,n){if(t._runningAutoPipelines.has(n))return;if(!t._autoPipelines.has(n))return;t._runningAutoPipelines.add(n);const a=t._autoPipelines.get(n);t._autoPipelines.delete(n);const r=a[e.kCallbacks];a[e.kCallbacks]=null,a.exec(function(e,a){if(t._runningAutoPipelines.delete(n),e)for(let t=0;t<r.length;t++)process.nextTick(r[t],e);else for(let e=0;e<r.length;e++)process.nextTick(r[e],...a[e]);t._autoPipelines.has(n)&&i(t,n)})}function r(e){for(let n=0;n<e.length;n++){const a=e[n];if("string"==typeof a)return a;if(Array.isArray(a)||(0,t.isArguments)(a)){if(0===a.length)continue;return a[0]}const i=[a].flat();if(i.length>0)return i[0]}}e.kExec=Symbol("exec"),e.kCallbacks=Symbol("callbacks"),e.notAllowedAutoPipelineCommands=["auth","info","script","quit","cluster","pipeline","multi","subscribe","psubscribe","unsubscribe","unpsubscribe","select"],e.shouldUseAutoPipelining=function(t,n,a){return n&&t.options.enableAutoPipelining&&!t.isPipeline&&!e.notAllowedAutoPipelineCommands.includes(a)&&!t.options.autoPipeliningIgnoredCommands.includes(a)},e.getFirstValueInFlattenedArray=r,e.executeWithAutoPipelining=function o(s,l,c,d,u){if(s.isCluster&&!s.slots.length)return"wait"===s.status&&s.connect().catch(t.noop),(0,a.default)(new Promise(function(e,t){s.delayUntilReady(n=>{n?t(n):o(s,l,c,d,null).then(e,t)})}),u);const p=s.options.keyPrefix||"",m=s.isCluster?s.slots[n(`${p}${r(d)}`)].join(","):"main";if(!s._autoPipelines.has(m)){const t=s.pipeline();t[e.kExec]=!1,t[e.kCallbacks]=[],s._autoPipelines.set(m,t)}const h=s._autoPipelines.get(m);h[e.kExec]||(h[e.kExec]=!0,setImmediate(i,s,m));const y=new Promise(function(t,n){h[e.kCallbacks].push(function(e,a){e?n(e):t(a)}),"call"===l&&d.unshift(c),h[l](...d)});return(0,a.default)(y,u)}}(Ts);var Os={};Object.defineProperty(Os,"__esModule",{value:!0});const As=l,Cs=no,Ds=Br;Os.default=class{constructor(e,t=null,n="",a=!1){this.lua=e,this.numberOfKeys=t,this.keyPrefix=n,this.readOnly=a,this.sha=(0,As.createHash)("sha1").update(e).digest("hex");const i=this.sha,r=new WeakSet;this.Command=class extends Cs.default{toWritable(t){const n=this.reject;return this.reject=e=>{-1!==e.message.indexOf("NOSCRIPT")&&r.delete(t),n.call(this,e)},r.has(t)?"eval"===this.name&&(this.name="evalsha",this.args[0]=i):(r.add(t),this.name="eval",this.args[0]=e),super.toWritable(t)}}}execute(e,t,n,a){"number"==typeof this.numberOfKeys&&t.unshift(this.numberOfKeys),this.keyPrefix&&(n.keyPrefix=this.keyPrefix),this.readOnly&&(n.readOnly=!0);const i=new this.Command("evalsha",[this.sha,...t],n);return i.promise=i.promise.catch(a=>{if(-1===a.message.indexOf("NOSCRIPT"))throw a;const i=new this.Command("evalsha",[this.sha,...t],n);return(e.isPipeline?e.redis:e).sendCommand(i)}),(0,Ds.default)(i.promise,a),e.sendCommand(i)}},Object.defineProperty(Rs,"__esModule",{value:!0});const Ps=Vr,Ns=Ts,Ms=no,Fs=Os;class Ls{constructor(){this.options={},this.scriptsSet={},this.addedBuiltinSet=new Set}getBuiltinCommands(){return Js.slice(0)}createBuiltinCommand(e){return{string:Us(null,e,"utf8"),buffer:Us(null,e,null)}}addBuiltinCommand(e){this.addedBuiltinSet.add(e),this[e]=Us(e,e,"utf8"),this[e+"Buffer"]=Us(e+"Buffer",e,null)}defineCommand(e,t){const n=new Fs.default(t.lua,t.numberOfKeys,this.options.keyPrefix,t.readOnly);this.scriptsSet[e]=n,this[e]=qs(e,e,n,"utf8"),this[e+"Buffer"]=qs(e+"Buffer",e,n,null)}sendCommand(e,t,n){throw new Error('"sendCommand" is not implemented')}}const Js=Ps.list.filter(e=>"monitor"!==e);function Us(e,t,n){return void 0===n&&(n=t,t=null),function(...a){const i=t||a.shift();let r=a[a.length-1];"function"==typeof r?a.pop():r=void 0;const o={errorStack:this.options.showFriendlyErrorStack?new Error:void 0,keyPrefix:this.options.keyPrefix,replyEncoding:n};return(0,Ns.shouldUseAutoPipelining)(this,e,i)?(0,Ns.executeWithAutoPipelining)(this,e,i,a,r):this.sendCommand(new Ms.default(i,a,o,r))}}function qs(e,t,n,a){return function(...i){const r="function"==typeof i[i.length-1]?i.pop():void 0,o={replyEncoding:a};return this.options.showFriendlyErrorStack&&(o.errorStack=new Error),(0,Ns.shouldUseAutoPipelining)(this,e,t)?(0,Ns.executeWithAutoPipelining)(this,e,t,i,r):n.execute(this,i,o,r)}}Js.push("sentinel"),Js.forEach(function(e){Ls.prototype[e]=Us(e,e,"utf8"),Ls.prototype[e+"Buffer"]=Us(e+"Buffer",e,null)}),Ls.prototype.call=Us("call","utf8"),Ls.prototype.callBuffer=Us("callBuffer",null),Ls.prototype.send_command=Ls.prototype.call,Rs.default=Ls,Object.defineProperty(js,"__esModule",{value:!0});const Vs=ao.exports,Gs=Vr,Bs=Br,zs=t,Ys=no,$s=oo,Ws=Rs;class Hs extends Ws.default{constructor(e){super(),this.redis=e,this.isPipeline=!0,this.replyPending=0,this._queue=[],this._result=[],this._transactions=0,this._shaToScript={},this.isCluster="Cluster"===this.redis.constructor.name||this.redis.isCluster,this.options=e.options,Object.keys(e.scriptsSet).forEach(t=>{const n=e.scriptsSet[t];this._shaToScript[n.sha]=n,this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]}),e.addedBuiltinSet.forEach(t=>{this[t]=e[t],this[t+"Buffer"]=e[t+"Buffer"]}),this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t});const t=this;Object.defineProperty(this,"length",{get:function(){return t._queue.length}})}fillResult(e,t){if("exec"===this._queue[t].name&&Array.isArray(e[1])){const n=e[1].length;for(let a=0;a<n;a++){if(e[1][a]instanceof Error)continue;const i=this._queue[t-(n-a)];try{e[1][a]=i.transformReply(e[1][a])}catch(t){e[1][a]=t}}}if(this._result[t]=e,--this.replyPending)return;if(this.isCluster){let e,t=!0;for(let n=0;n<this._result.length;++n){const a=this._result[n][0],i=this._queue[n];if(a){if("exec"===i.name&&"EXECABORT Transaction discarded because of previous errors."===a.message)continue;if(e){if(e.name!==a.name||e.message!==a.message){t=!1;break}}else e={name:a.name,message:a.message}}else if(!i.inTransaction){if(!((0,Gs.exists)(i.name)&&(0,Gs.hasFlag)(i.name,"readonly"))){t=!1;break}}}if(e&&t){const t=this,n=e.message.split(" "),a=this._queue;let i=!1;this._queue=[];for(let e=0;e<a.length;++e){if(!("ASK"!==n[0]||i||"asking"===a[e].name||a[e-1]&&"asking"===a[e-1].name)){const e=new Ys.default("asking");e.ignore=!0,this.sendCommand(e)}a[e].initPromise(),this.sendCommand(a[e]),i=a[e].inTransaction}let r=!0;void 0===this.leftRedirections&&(this.leftRedirections={});const o=function(){t.exec()},s=this.redis;if(s.handleError(e,this.leftRedirections,{moved:function(e,a){t.preferKey=a,s.slots[n[1]]=[a],s._groupsBySlot[n[1]]=s._groupsIds[s.slots[n[1]].join(";")],s.refreshSlotsCache(),t.exec()},ask:function(e,n){t.preferKey=n,t.exec()},tryagain:o,clusterDown:o,connectionClosed:o,maxRedirections:()=>{r=!1},defaults:()=>{r=!1}}),r)return}}let n=0;for(let e=0;e<this._queue.length-n;++e)this._queue[e+n].ignore&&(n+=1),this._result[e]=this._result[e+n];this.resolve(this._result.slice(0,this._result.length-n))}sendCommand(e){this._transactions>0&&(e.inTransaction=!0);const t=this._queue.length;return e.pipelineIndex=t,e.promise.then(e=>{this.fillResult([null,e],t)}).catch(e=>{this.fillResult([e],t)}),this._queue.push(e),this}addBatch(e){let t,n,a;for(let i=0;i<e.length;++i)t=e[i],n=t[0],a=t.slice(1),this[n].apply(this,a);return this}}js.default=Hs;const Qs=Hs.prototype.multi;Hs.prototype.multi=function(){return this._transactions+=1,Qs.apply(this,arguments)};const Zs=Hs.prototype.execBuffer;Hs.prototype.execBuffer=(0,zs.deprecate)(function(){return this._transactions>0&&(this._transactions-=1),Zs.apply(this,arguments)},"Pipeline#execBuffer: Use Pipeline#exec instead"),Hs.prototype.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch($s.noop),e&&!this.nodeifiedPromise&&(this.nodeifiedPromise=!0,(0,Bs.default)(this.promise,e)),this.redis.delayUntilReady(t=>{t?this.reject(t):this.exec(e)}),this.promise;if(this._transactions>0)return this._transactions-=1,Zs.apply(this,arguments);let t;if(this.nodeifiedPromise||(this.nodeifiedPromise=!0,(0,Bs.default)(this.promise,e)),this._queue.length||this.resolve([]),this.isCluster){const e=[];for(let t=0;t<this._queue.length;t++){const n=this._queue[t].getKeys();if(n.length&&e.push(n[0]),n.length&&Vs.generateMulti(n)<0)return this.reject(new Error("All the keys in a pipeline command should belong to the same slot")),this.promise}if(e.length){if(t=function(e,t){const n=Vs(t[0]),a=e._groupsBySlot[n];for(let n=1;n<t.length;n++)if(e._groupsBySlot[Vs(t[n])]!==a)return-1;return n}(this.redis,e),t<0)return this.reject(new Error("All keys in the pipeline should belong to the same slots allocation group")),this.promise}else t=16384*Math.random()|0}const n=this;return function(){let e,a=n.replyPending=n._queue.length;n.isCluster&&(e={slot:t,redis:n.redis.connectionPool.nodes.all[n.preferKey]});let i,r="";const o={isPipeline:!0,destination:n.isCluster?e:{redis:n.redis},write(e){"string"!=typeof e?(i||(i=[]),r&&(i.push(Buffer.from(r,"utf8")),r=""),i.push(e)):r+=e,--a||(i?(r&&i.push(Buffer.from(r,"utf8")),o.destination.redis.stream.write(Buffer.concat(i))):o.destination.redis.stream.write(r),a=n._queue.length,r="",i=void 0)}};for(let t=0;t<n._queue.length;++t)n.redis.sendCommand(n._queue[t],o,e);n.promise}(),this.promise},Object.defineProperty(Is,"__esModule",{value:!0}),Is.addTransactionSupport=void 0;const Xs=oo,el=Br,tl=js;Is.addTransactionSupport=function(e){e.pipeline=function(e){const t=new tl.default(this);return Array.isArray(e)&&t.addBatch(e),t};const{multi:t}=e;e.multi=function(e,n){if(void 0!==n||Array.isArray(e)||(n=e,e=null),n&&!1===n.pipeline)return t.call(this);const a=new tl.default(this);a.multi(),Array.isArray(e)&&a.addBatch(e);const i=a.exec;a.exec=function(e){if(this.isCluster&&!this.redis.slots.length)return"wait"===this.redis.status&&this.redis.connect().catch(Xs.noop),(0,el.default)(new Promise((e,t)=>{this.redis.delayUntilReady(n=>{n?t(n):this.exec(a).then(e,t)})}),e);if(this._transactions>0&&i.call(a),this.nodeifiedPromise)return i.call(a);const t=i.call(a);return(0,el.default)(t.then(function(e){const t=e[e.length-1];if(void 0===t)throw new Error("Pipeline cannot be used to send any commands when the `exec()` has been called on it.");if(t[0]){t[0].previousErrors=[];for(let n=0;n<e.length-1;++n)e[n][0]&&t[0].previousErrors.push(e[n][0]);throw t[0]}return(0,Xs.wrapMultiResult)(t[1])}),e)};const{execBuffer:r}=a;return a.execBuffer=function(e){return this._transactions>0&&r.call(a),a.exec(e)},a};const{exec:n}=e;e.exec=function(e){return(0,el.default)(n.call(this).then(function(e){return Array.isArray(e)&&(e=(0,Xs.wrapMultiResult)(e)),e}),e)}};var nl={};Object.defineProperty(nl,"__esModule",{value:!0}),nl.default=function(e,t){Object.getOwnPropertyNames(t.prototype).forEach(n=>{Object.defineProperty(e.prototype,n,Object.getOwnPropertyDescriptor(t.prototype,n))})};var al={};Object.defineProperty(al,"__esModule",{value:!0}),al.DEFAULT_CLUSTER_OPTIONS=void 0;const il=v;al.DEFAULT_CLUSTER_OPTIONS={clusterRetryStrategy:e=>Math.min(100+2*e,2e3),enableOfflineQueue:!0,enableReadyCheck:!0,scaleReads:"master",maxRedirections:16,retryDelayOnMoved:0,retryDelayOnFailover:100,retryDelayOnClusterDown:100,retryDelayOnTryAgain:100,slotsRefreshTimeout:1e3,useSRVRecords:!1,resolveSrv:il.resolveSrv,dnsLookup:il.lookup,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[],shardedSubscribers:!1};var rl={},ol={};Object.defineProperty(ol,"__esModule",{value:!0}),ol.getConnectionName=ol.weightSrvRecords=ol.groupSrvRecords=ol.getUniqueHostnamesFromOptions=ol.normalizeNodeOptions=ol.nodeKeyToRedisOptions=ol.getNodeKey=void 0;const sl=oo,ll=u;var cl;function dl(){if(cl)return rl;cl=1,Object.defineProperty(rl,"__esModule",{value:!0});const e=ol,t=oo,n=wc(),a=(0,t.Debug)("cluster:subscriber");return rl.default=class{constructor(t,n,i=!1){this.connectionPool=t,this.emitter=n,this.isSharded=i,this.started=!1,this.subscriber=null,this.slotRange=[],this.onSubscriberEnd=()=>{this.started?(a("subscriber has disconnected, selecting a new one..."),this.selectSubscriber()):a("subscriber has disconnected, but ClusterSubscriber is not started, so not reconnecting.")},this.connectionPool.on("-node",(t,n)=>{this.started&&this.subscriber&&(0,e.getNodeKey)(this.subscriber.options)===n&&(a("subscriber has left, selecting a new one..."),this.selectSubscriber())}),this.connectionPool.on("+node",()=>{this.started&&!this.subscriber&&(a("a new node is discovered and there is no subscriber, selecting a new one..."),this.selectSubscriber())})}getInstance(){return this.subscriber}associateSlotRange(e){return this.isSharded&&(this.slotRange=e),this.slotRange}start(){this.started=!0,this.selectSubscriber(),a("started")}stop(){this.started=!1,this.subscriber&&(this.subscriber.disconnect(),this.subscriber=null)}isStarted(){return this.started}selectSubscriber(){const i=this.lastActiveSubscriber;i&&(i.off("end",this.onSubscriberEnd),i.disconnect()),this.subscriber&&(this.subscriber.off("end",this.onSubscriberEnd),this.subscriber.disconnect());const r=(0,t.sample)(this.connectionPool.getNodes());if(!r)return a("selecting subscriber failed since there is no node discovered in the cluster yet"),void(this.subscriber=null);const{options:o}=r;a("selected a subscriber %s:%s",o.host,o.port);let s="subscriber";this.isSharded&&(s="ssubscriber"),this.subscriber=new n.default({port:o.port,host:o.host,username:o.username,password:o.password,enableReadyCheck:!0,connectionName:(0,e.getConnectionName)(s,o.connectionName),lazyConnect:!0,tls:o.tls,retryStrategy:null}),this.subscriber.on("error",t.noop),this.subscriber.once("end",this.onSubscriberEnd);const l={subscribe:[],psubscribe:[],ssubscribe:[]};if(i){const e=i.condition||i.prevCondition;e&&e.subscriber&&(l.subscribe=e.subscriber.channels("subscribe"),l.psubscribe=e.subscriber.channels("psubscribe"),l.ssubscribe=e.subscriber.channels("ssubscribe"))}if(l.subscribe.length||l.psubscribe.length||l.ssubscribe.length){let e=0;for(const t of["subscribe","psubscribe","ssubscribe"]){const n=l[t];n.length&&(e+=1,a("%s %d channels",t,n.length),this.subscriber[t](n).then(()=>{--e||(this.lastActiveSubscriber=this.subscriber)}).catch(()=>{a("failed to %s %d channels",t,n.length)}))}}else this.lastActiveSubscriber=this.subscriber;for(const e of["message","messageBuffer"])this.subscriber.on(e,(t,n)=>{this.emitter.emit(e,t,n)});for(const e of["pmessage","pmessageBuffer"])this.subscriber.on(e,(t,n,a)=>{this.emitter.emit(e,t,n,a)});if(1==this.isSharded)for(const e of["smessage","smessageBuffer"])this.subscriber.on(e,(t,n)=>{this.emitter.emit(e,t,n)})}},rl}ol.getNodeKey=function(e){return e.port=e.port||6379,e.host=e.host||"127.0.0.1",e.host+":"+e.port},ol.nodeKeyToRedisOptions=function(e){const t=e.lastIndexOf(":");if(-1===t)throw new Error(`Invalid node key ${e}`);return{host:e.slice(0,t),port:Number(e.slice(t+1))}},ol.normalizeNodeOptions=function(e){return e.map(e=>{const t={};if("object"==typeof e)Object.assign(t,e);else if("string"==typeof e)Object.assign(t,(0,sl.parseURL)(e));else{if("number"!=typeof e)throw new Error("Invalid argument "+e);t.port=e}return"string"==typeof t.port&&(t.port=parseInt(t.port,10)),delete t.db,t.port||(t.port=6379),t.host||(t.host="127.0.0.1"),(0,sl.resolveTLSProfile)(t)})},ol.getUniqueHostnamesFromOptions=function(e){const t={};return e.forEach(e=>{t[e.host]=!0}),Object.keys(t).filter(e=>!(0,ll.isIP)(e))},ol.groupSrvRecords=function(e){const t={};for(const n of e)t.hasOwnProperty(n.priority)?(t[n.priority].totalWeight+=n.weight,t[n.priority].records.push(n)):t[n.priority]={totalWeight:n.weight,records:[n]};return t},ol.weightSrvRecords=function(e){if(1===e.records.length)return e.totalWeight=0,e.records.shift();const t=Math.floor(Math.random()*(e.totalWeight+e.records.length));let n=0;for(const[a,i]of e.records.entries())if(n+=1+i.weight,n>t)return e.totalWeight-=i.weight,e.records.splice(a,1),i},ol.getConnectionName=function(e,t){const n=`ioredis-cluster(${e})`;return t?`${n}:${t}`:n};var ul,pl={};function ml(){if(ul)return pl;ul=1,Object.defineProperty(pl,"__esModule",{value:!0});const e=m,t=oo,n=ol,a=wc(),i=(0,t.Debug)("cluster:connectionPool");let r=class extends e.EventEmitter{constructor(e){super(),this.redisOptions=e,this.nodes={all:{},master:{},slave:{}},this.specifiedOptions={}}getNodes(e="all"){const t=this.nodes[e];return Object.keys(t).map(e=>t[e])}getInstanceByKey(e){return this.nodes.all[e]}getSampleInstance(e){const n=Object.keys(this.nodes[e]),a=(0,t.sample)(n);return this.nodes[e][a]}addMasterNode(e){const t=(0,n.getNodeKey)(e.options),a=this.createRedisFromOptions(e,e.options.readOnly);return!e.options.readOnly&&(this.nodes.all[t]=a,this.nodes.master[t]=a,!0)}createRedisFromOptions(e,n){return new a.default((0,t.defaults)({retryStrategy:null,enableOfflineQueue:!0,readOnly:n},e,this.redisOptions,{lazyConnect:!0}))}findOrCreate(e,a=!1){const r=(0,n.getNodeKey)(e);let o;return a=Boolean(a),this.specifiedOptions[r]?Object.assign(e,this.specifiedOptions[r]):this.specifiedOptions[r]=e,this.nodes.all[r]?(o=this.nodes.all[r],o.options.readOnly!==a&&(o.options.readOnly=a,i("Change role of %s to %s",r,a?"slave":"master"),o[a?"readonly":"readwrite"]().catch(t.noop),a?(delete this.nodes.master[r],this.nodes.slave[r]=o):(delete this.nodes.slave[r],this.nodes.master[r]=o))):(i("Connecting to %s as %s",r,a?"slave":"master"),o=this.createRedisFromOptions(e,a),this.nodes.all[r]=o,this.nodes[a?"slave":"master"][r]=o,o.once("end",()=>{this.removeNode(r),this.emit("-node",o,r),Object.keys(this.nodes.all).length||this.emit("drain")}),this.emit("+node",o,r),o.on("error",function(e){this.emit("nodeError",e,r)})),o}reset(e){i("Reset with %O",e);const t={};e.forEach(e=>{const a=(0,n.getNodeKey)(e);e.readOnly&&t[a]||(t[a]=e)}),Object.keys(this.nodes.all).forEach(e=>{t[e]||(i("Disconnect %s because the node does not hold any slot",e),this.nodes.all[e].disconnect(),this.removeNode(e))}),Object.keys(t).forEach(e=>{const n=t[e];this.findOrCreate(n,n.readOnly)})}removeNode(e){const{nodes:t}=this;t.all[e]&&(i("Remove %s from the pool",e),delete t.all[e]),delete t.master[e],delete t.slave[e]}};return pl.default=r,pl}var hl={};function yl(e,t){t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(e)?this._fromArray(e):(this._capacityMask=3,this._list=new Array(4))}yl.prototype.peekAt=function(e){var t=e;if(t===(0|t)){var n=this.size();if(!(t>=n||t<-n))return t<0&&(t+=n),t=this._head+t&this._capacityMask,this._list[t]}},yl.prototype.get=function(e){return this.peekAt(e)},yl.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]},yl.prototype.peekFront=function(){return this.peek()},yl.prototype.peekBack=function(){return this.peekAt(-1)},Object.defineProperty(yl.prototype,"length",{get:function(){return this.size()}}),yl.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},yl.prototype.unshift=function(e){if(0===arguments.length)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},yl.prototype.shift=function(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}},yl.prototype.push=function(e){if(0===arguments.length)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)},yl.prototype.pop=function(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var n=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),n}},yl.prototype.removeOne=function(e){var t=e;if(t===(0|t)&&this._head!==this._tail){var n=this.size(),a=this._list.length;if(!(t>=n||t<-n)){t<0&&(t+=n),t=this._head+t&this._capacityMask;var i,r=this._list[t];if(e<n/2){for(i=e;i>0;i--)this._list[t]=this._list[t=t-1+a&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+a&this._capacityMask}else{for(i=n-1-e;i>0;i--)this._list[t]=this._list[t=t+1+a&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+a&this._capacityMask}return r}}},yl.prototype.remove=function(e,t){var n,a=e,i=t;if(a===(0|a)&&this._head!==this._tail){var r=this.size(),o=this._list.length;if(!(a>=r||a<-r||t<1)){if(a<0&&(a+=r),1===t||!t)return(n=new Array(1))[0]=this.removeOne(a),n;if(0===a&&a+t>=r)return n=this.toArray(),this.clear(),n;var s;for(a+t>r&&(t=r-a),n=new Array(t),s=0;s<t;s++)n[s]=this._list[this._head+a+s&this._capacityMask];if(a=this._head+a&this._capacityMask,e+t===r){for(this._tail=this._tail-t+o&this._capacityMask,s=t;s>0;s--)this._list[a=a+1+o&this._capacityMask]=void 0;return n}if(0===e){for(this._head=this._head+t+o&this._capacityMask,s=t-1;s>0;s--)this._list[a=a+1+o&this._capacityMask]=void 0;return n}if(a<r/2){for(this._head=this._head+e+t+o&this._capacityMask,s=e;s>0;s--)this.unshift(this._list[a=a-1+o&this._capacityMask]);for(a=this._head-1+o&this._capacityMask;i>0;)this._list[a=a-1+o&this._capacityMask]=void 0,i--;e<0&&(this._tail=a)}else{for(this._tail=a,a=a+t+o&this._capacityMask,s=r-(t+e);s>0;s--)this.push(this._list[a++]);for(a=this._tail;i>0;)this._list[a=a+1+o&this._capacityMask]=void 0,i--}return this._head<2&&this._tail>1e4&&this._tail<=o>>>2&&this._shrinkArray(),n}}},yl.prototype.splice=function(e,t){var n=e;if(n===(0|n)){var a=this.size();if(n<0&&(n+=a),!(n>a)){if(arguments.length>2){var i,r,o,s=arguments.length,l=this._list.length,c=2;if(!a||n<a/2){for(r=new Array(n),i=0;i<n;i++)r[i]=this._list[this._head+i&this._capacityMask];for(0===t?(o=[],n>0&&(this._head=this._head+n+l&this._capacityMask)):(o=this.remove(n,t),this._head=this._head+n+l&this._capacityMask);s>c;)this.unshift(arguments[--s]);for(i=n;i>0;i--)this.unshift(r[i-1])}else{var d=(r=new Array(a-(n+t))).length;for(i=0;i<d;i++)r[i]=this._list[this._head+n+t+i&this._capacityMask];for(0===t?(o=[],n!=a&&(this._tail=this._head+n+l&this._capacityMask)):(o=this.remove(n,t),this._tail=this._tail-d+l&this._capacityMask);c<s;)this.push(arguments[c++]);for(i=0;i<d;i++)this.push(r[i])}return o}return this.remove(n,t)}}},yl.prototype.clear=function(){this._list=new Array(this._list.length),this._head=0,this._tail=0},yl.prototype.isEmpty=function(){return this._head===this._tail},yl.prototype.toArray=function(){return this._copyArray(!1)},yl.prototype._fromArray=function(e){var t=e.length,n=this._nextPowerOf2(t);this._list=new Array(n),this._capacityMask=n-1,this._tail=t;for(var a=0;a<t;a++)this._list[a]=e[a]},yl.prototype._copyArray=function(e,t){var n=this._list,a=n.length,i=this.length;if((t|=i)==i&&this._head<this._tail)return this._list.slice(this._head,this._tail);var r,o=new Array(t),s=0;if(e||this._head>this._tail){for(r=this._head;r<a;r++)o[s++]=n[r];for(r=0;r<this._tail;r++)o[s++]=n[r]}else for(r=this._head;r<this._tail;r++)o[s++]=n[r];return o},yl.prototype._growArray=function(){if(0!=this._head){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1},yl.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1},yl.prototype._nextPowerOf2=function(e){var t=1<<Math.log(e)/Math.log(2)+1;return Math.max(t,4)};var fl=yl;Object.defineProperty(hl,"__esModule",{value:!0});const vl=fl,bl=(0,oo.Debug)("delayqueue");hl.default=class{constructor(){this.queues={},this.timeouts={}}push(e,t,n){const a=n.callback||process.nextTick;this.queues[e]||(this.queues[e]=new vl);this.queues[e].push(t),this.timeouts[e]||(this.timeouts[e]=setTimeout(()=>{a(()=>{this.timeouts[e]=null,this.execute(e)})},n.timeout))}execute(e){const t=this.queues[e];if(!t)return;const{length:n}=t;if(n)for(bl("send %d commands in %s queue",n,e),this.queues[e]=null;t.length>0;)t.shift()()}};var gl,_l,xl={};function kl(){if(_l)return Xr;_l=1,Object.defineProperty(Xr,"__esModule",{value:!0});const e=Vr,t=m,n=to,a=Br,i=no,r=xs,o=wc(),s=Ks,l=Is,c=oo,d=nl,u=Rs,p=al,h=dl(),y=ml(),f=hl,v=ol,b=fl,g=function(){if(gl)return xl;gl=1,Object.defineProperty(xl,"__esModule",{value:!0});const e=oo,t=dl(),n=ml(),a=ol,i=ao.exports,r=(0,e.Debug)("cluster:subscriberGroup");return xl.default=class{constructor(e){this.cluster=e,this.shardedSubscribers=new Map,this.clusterSlots=[],this.subscriberToSlotsIndex=new Map,this.channels=new Map,e.on("+node",e=>{this._addSubscriber(e)}),e.on("-node",e=>{this._removeSubscriber(e)}),e.on("refresh",()=>{this._refreshSlots(e)})}getResponsibleSubscriber(e){const t=this.clusterSlots[e][0];return this.shardedSubscribers.get(t)}addChannels(e){const t=i(e[0]);e.forEach(e=>{if(i(e)!=t)return-1});const n=this.channels.get(t);return n?this.channels.set(t,n.concat(e)):this.channels.set(t,e),[...this.channels.values()].flatMap(e=>e).length}removeChannels(e){const t=i(e[0]);e.forEach(e=>{if(i(e)!=t)return-1});const n=this.channels.get(t);if(n){const a=n.filter(t=>!e.includes(t));this.channels.set(t,a)}return[...this.channels.values()].flatMap(e=>e).length}stop(){for(const e of this.shardedSubscribers.values())e.stop()}start(){for(const e of this.shardedSubscribers.values())e.isStarted()||e.start()}_addSubscriber(e){const i=new n.default(e.options);if(i.addMasterNode(e)){const n=new t.default(i,this.cluster,!0),r=(0,a.getNodeKey)(e.options);return this.shardedSubscribers.set(r,n),n.start(),this._resubscribe(),this.cluster.emit("+subscriber"),n}return null}_removeSubscriber(e){const t=(0,a.getNodeKey)(e.options),n=this.shardedSubscribers.get(t);return n&&(n.stop(),this.shardedSubscribers.delete(t),this._resubscribe(),this.cluster.emit("-subscriber")),this.shardedSubscribers}_refreshSlots(e){if(!this._slotsAreEqual(e.slots)){r("Refreshing the slots of the subscriber group."),this.subscriberToSlotsIndex=new Map;for(let t=0;t<e.slots.length;t++){const n=e.slots[t][0];this.subscriberToSlotsIndex.has(n)||this.subscriberToSlotsIndex.set(n,[]),this.subscriberToSlotsIndex.get(n).push(Number(t))}return this._resubscribe(),this.clusterSlots=JSON.parse(JSON.stringify(e.slots)),this.cluster.emit("subscribersReady"),!0}return r("Nothing to refresh because the new cluster map is equal to the previous one."),!1}_resubscribe(){this.shardedSubscribers&&this.shardedSubscribers.forEach((e,t)=>{const n=this.subscriberToSlotsIndex.get(t);n&&(e.associateSlotRange(n),n.forEach(t=>{const n=e.getInstance(),a=this.channels.get(t);a&&a.length>0&&n&&(n.ssubscribe(a),n.on("ready",()=>{n.ssubscribe(a)}))}))})}_slotsAreEqual(e){return void 0!==this.clusterSlots&&JSON.stringify(this.clusterSlots)===JSON.stringify(e)}},xl}(),_=(0,c.Debug)("cluster"),x=new WeakSet;class k extends u.default{constructor(e,n={}){if(super(),this.slots=[],this._groupsIds={},this._groupsBySlot=Array(16384),this.isCluster=!0,this.retryAttempts=0,this.delayQueue=new f.default,this.offlineQueue=new b,this.isRefreshing=!1,this._refreshSlotsCacheCallbacks=[],this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this._readyDelayedCallbacks=[],this.connectionEpoch=0,t.EventEmitter.call(this),this.startupNodes=e,this.options=(0,c.defaults)({},n,p.DEFAULT_CLUSTER_OPTIONS,this.options),1==this.options.shardedSubscribers&&(this.shardedSubscribers=new g.default(this)),this.options.redisOptions&&this.options.redisOptions.keyPrefix&&!this.options.keyPrefix&&(this.options.keyPrefix=this.options.redisOptions.keyPrefix),"function"!=typeof this.options.scaleReads&&-1===["all","master","slave"].indexOf(this.options.scaleReads))throw new Error('Invalid option scaleReads "'+this.options.scaleReads+'". Expected "all", "master", "slave" or a custom function');this.connectionPool=new y.default(this.options.redisOptions),this.connectionPool.on("-node",(e,t)=>{this.emit("-node",e)}),this.connectionPool.on("+node",e=>{this.emit("+node",e)}),this.connectionPool.on("drain",()=>{this.setStatus("close")}),this.connectionPool.on("nodeError",(e,t)=>{this.emit("node error",e,t)}),this.subscriber=new h.default(this.connectionPool,this),this.options.scripts&&Object.entries(this.options.scripts).forEach(([e,t])=>{this.defineCommand(e,t)}),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch(e=>{_("connecting failed: %s",e)})}connect(){return new Promise((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));const a=++this.connectionEpoch;this.setStatus("connecting"),this.resolveStartupNodeHostnames().then(i=>{if(this.connectionEpoch!==a)return _("discard connecting after resolving startup nodes because epoch not match: %d != %d",a,this.connectionEpoch),void t(new n.RedisError("Connection is discarded because a new connection is made"));if("connecting"!==this.status)return _("discard connecting after resolving startup nodes because the status changed to %s",this.status),void t(new n.RedisError("Connection is aborted"));this.connectionPool.reset(i);const s=()=>{this.setStatus("ready"),this.retryAttempts=0,this.executeOfflineCommands(),this.resetNodesRefreshInterval(),e()};let l;const c=()=>{this.invokeReadyDelayedCallbacks(void 0),this.removeListener("close",l),this.manuallyClosing=!1,this.setStatus("connect"),this.options.enableReadyCheck?this.readyCheck((e,t)=>{e||t?(_("Ready check failed (%s). Reconnecting...",e||t),"connect"===this.status&&this.disconnect(!0)):s()}):s()};l=()=>{const e=new Error("None of startup nodes is available");this.removeListener("refresh",c),this.invokeReadyDelayedCallbacks(e),t(e)},this.once("refresh",c),this.once("close",l),this.once("close",this.handleCloseEvent.bind(this)),this.refreshSlotsCache(e=>{e&&e.message===r.default.defaultMessage&&(o.default.prototype.silentEmit.call(this,"error",e),this.connectionPool.reset([]))}),this.subscriber.start(),this.options.shardedSubscribers&&this.shardedSubscribers.start()}).catch(e=>{this.setStatus("close"),this.handleCloseEvent(e),this.invokeReadyDelayedCallbacks(e),t(e)})})}disconnect(e=!1){const t=this.status;this.setStatus("disconnecting"),e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null,_("Canceled reconnecting attempts")),this.clearNodesRefreshInterval(),this.subscriber.stop(),this.options.shardedSubscribers&&this.shardedSubscribers.stop(),"wait"===t?(this.setStatus("close"),this.handleCloseEvent()):this.connectionPool.reset([])}quit(e){const t=this.status;if(this.setStatus("disconnecting"),this.manuallyClosing=!0,this.reconnectTimeout&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),this.clearNodesRefreshInterval(),this.subscriber.stop(),this.options.shardedSubscribers&&this.shardedSubscribers.stop(),"wait"===t){const t=(0,a.default)(Promise.resolve("OK"),e);return setImmediate(function(){this.setStatus("close"),this.handleCloseEvent()}.bind(this)),t}return(0,a.default)(Promise.all(this.nodes().map(e=>e.quit().catch(e=>{if(e.message===c.CONNECTION_CLOSED_ERROR_MSG)return"OK";throw e}))).then(()=>"OK"),e)}duplicate(e=[],t={}){const n=e.length>0?e:this.startupNodes.slice(0),a=Object.assign({},this.options,t);return new k(n,a)}nodes(e="all"){if("all"!==e&&"master"!==e&&"slave"!==e)throw new Error('Invalid role "'+e+'". Expected "all", "master" or "slave"');return this.connectionPool.getNodes(e)}delayUntilReady(e){this._readyDelayedCallbacks.push(e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}refreshSlotsCache(e){if(e&&this._refreshSlotsCacheCallbacks.push(e),this.isRefreshing)return;this.isRefreshing=!0;const t=this,n=e=>{this.isRefreshing=!1;for(const t of this._refreshSlotsCacheCallbacks)t(e);this._refreshSlotsCacheCallbacks=[]},a=(0,c.shuffle)(this.connectionPool.getNodes());let i=null;!function e(o){if(o===a.length){const e=new r.default(r.default.defaultMessage,i);return n(e)}const s=a[o],l=`${s.options.host}:${s.options.port}`;_("getting slot cache from %s",l),t.getInfoFromNode(s,function(a){switch(t.status){case"close":case"end":return n(new Error("Cluster is disconnected."));case"disconnecting":return n(new Error("Cluster is disconnecting."))}a?(t.emit("node error",a,l),i=a,e(o+1)):(t.emit("refresh"),n())})}(0)}sendCommand(t,a,r){if("wait"===this.status&&this.connect().catch(c.noop),"end"===this.status)return t.reject(new Error(c.CONNECTION_CLOSED_ERROR_MSG)),t.promise;let o=this.options.scaleReads;if("master"!==o){t.isReadOnly||(0,e.exists)(t.name)&&(0,e.hasFlag)(t.name,"readonly")||(o="master")}let s=r?r.slot:t.getSlot();const l={},d=this;if(!r&&!x.has(t)){x.add(t);const e=t.reject;t.reject=function(n){const a=u.bind(null,!0);d.handleError(n,l,{moved:function(e,n){_("command %s is moved to %s",t.name,n),s=Number(e),d.slots[e]?d.slots[e][0]=n:d.slots[e]=[n],d._groupsBySlot[e]=d._groupsIds[d.slots[e].join(";")],d.connectionPool.findOrCreate(d.natMapper(n)),u(),_("refreshing slot caches... (triggered by MOVED error)"),d.refreshSlotsCache()},ask:function(e,n){_("command %s is required to ask %s:%s",t.name,n);const a=d.natMapper(n);d.connectionPool.findOrCreate(a),u(!1,`${a.host}:${a.port}`)},tryagain:a,clusterDown:a,connectionClosed:a,maxRedirections:function(n){e.call(t,n)},defaults:function(){e.call(t,n)}})}}function u(e,l){if("end"===d.status)return void t.reject(new n.AbortError("Cluster is ended."));let u;if("ready"===d.status||"cluster"===t.name){if(r&&r.redis)u=r.redis;else if(i.default.checkFlag("ENTER_SUBSCRIBER_MODE",t.name)||i.default.checkFlag("EXIT_SUBSCRIBER_MODE",t.name)){if(1!=d.options.shardedSubscribers||"ssubscribe"!=t.name&&"sunsubscribe"!=t.name)u=d.subscriber.getInstance();else{const e=d.shardedSubscribers.getResponsibleSubscriber(s);let a=-1;"ssubscribe"==t.name&&(a=d.shardedSubscribers.addChannels(t.getKeys())),"sunsubscribe"==t.name&&(a=d.shardedSubscribers.removeChannels(t.getKeys())),-1!==a?u=e.getInstance():t.reject(new n.AbortError("Can't add or remove the given channels. Are they in the same slot?"))}if(!u)return void t.reject(new n.AbortError("No subscriber for the cluster"))}else{if(!e){if("number"==typeof s&&d.slots[s]){const e=d.slots[s];if("function"==typeof o){const n=e.map(function(e){return d.connectionPool.getInstanceByKey(e)});u=o(n,t),Array.isArray(u)&&(u=(0,c.sample)(u)),u||(u=n[0])}else{let t;t="all"===o?(0,c.sample)(e):"slave"===o&&e.length>1?(0,c.sample)(e,1):e[0],u=d.connectionPool.getInstanceByKey(t)}}l&&(u=d.connectionPool.getInstanceByKey(l),u.asking())}u||(u=("function"==typeof o?null:d.connectionPool.getSampleInstance(o))||d.connectionPool.getSampleInstance("all"))}r&&!r.redis&&(r.redis=u)}u?u.sendCommand(t,a):d.options.enableOfflineQueue?d.offlineQueue.push({command:t,stream:a,node:r}):t.reject(new Error("Cluster isn't ready and enableOfflineQueue options is false"))}return u(),t.promise}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}handleError(e,t,n){if(void 0===t.value?t.value=this.options.maxRedirections:t.value-=1,t.value<=0)return void n.maxRedirections(new Error("Too many Cluster redirections. Last error: "+e));const a=e.message.split(" ");if("MOVED"===a[0]){const e=this.options.retryDelayOnMoved;e&&"number"==typeof e?this.delayQueue.push("moved",n.moved.bind(null,a[1],a[2]),{timeout:e}):n.moved(a[1],a[2])}else"ASK"===a[0]?n.ask(a[1],a[2]):"TRYAGAIN"===a[0]?this.delayQueue.push("tryagain",n.tryagain,{timeout:this.options.retryDelayOnTryAgain}):"CLUSTERDOWN"===a[0]&&this.options.retryDelayOnClusterDown>0?this.delayQueue.push("clusterdown",n.connectionClosed,{timeout:this.options.retryDelayOnClusterDown,callback:this.refreshSlotsCache.bind(this)}):e.message===c.CONNECTION_CLOSED_ERROR_MSG&&this.options.retryDelayOnFailover>0&&"ready"===this.status?this.delayQueue.push("failover",n.connectionClosed,{timeout:this.options.retryDelayOnFailover,callback:this.refreshSlotsCache.bind(this)}):n.defaults()}resetOfflineQueue(){this.offlineQueue=new b}clearNodesRefreshInterval(){this.slotsTimer&&(clearTimeout(this.slotsTimer),this.slotsTimer=null)}resetNodesRefreshInterval(){if(this.slotsTimer||!this.options.slotsRefreshInterval)return;const e=()=>{this.slotsTimer=setTimeout(()=>{_('refreshing slot caches... (triggered by "slotsRefreshInterval" option)'),this.refreshSlotsCache(()=>{e()})},this.options.slotsRefreshInterval)};e()}setStatus(e){_("status: %s -> %s",this.status||"[empty]",e),this.status=e,process.nextTick(()=>{this.emit(e)})}handleCloseEvent(e){let t;e&&_("closed because %s",e),this.manuallyClosing||"function"!=typeof this.options.clusterRetryStrategy||(t=this.options.clusterRetryStrategy.call(this,++this.retryAttempts,e)),"number"==typeof t?(this.setStatus("reconnecting"),this.reconnectTimeout=setTimeout(()=>{this.reconnectTimeout=null,_("Cluster is disconnected. Retrying after %dms",t),this.connect().catch(function(e){_("Got error %s when reconnecting. Ignoring...",e)})},t)):(this.setStatus("end"),this.flushQueue(new Error("None of startup nodes is available")))}flushQueue(e){let t;for(;t=this.offlineQueue.shift();)t.command.reject(e)}executeOfflineCommands(){if(this.offlineQueue.length){_("send %d commands in offline queue",this.offlineQueue.length);const e=this.offlineQueue;let t;for(this.resetOfflineQueue();t=e.shift();)this.sendCommand(t.command,t.stream,t.node)}}natMapper(e){const t="string"==typeof e?e:`${e.host}:${e.port}`;let n=null;return this.options.natMap&&"function"==typeof this.options.natMap?n=this.options.natMap(t):this.options.natMap&&"object"==typeof this.options.natMap&&(n=this.options.natMap[t]),n?(_("NAT mapping %s -> %O",t,n),Object.assign({},n)):"string"==typeof e?(0,v.nodeKeyToRedisOptions)(e):e}getInfoFromNode(e,t){if(!e)return t(new Error("Node is disconnected"));const n=e.duplicate({enableOfflineQueue:!0,enableReadyCheck:!1,retryStrategy:null,connectionName:(0,v.getConnectionName)("refresher",this.options.redisOptions&&this.options.redisOptions.connectionName)});n.on("error",c.noop),n.cluster("SLOTS",(0,c.timeout)((e,a)=>{if(n.disconnect(),e)return _("error encountered running CLUSTER.SLOTS: %s",e),t(e);if("disconnecting"===this.status||"close"===this.status||"end"===this.status)return _("ignore CLUSTER.SLOTS results (count: %d) since cluster status is %s",a.length,this.status),void t();const i=[];_("cluster slots result count: %d",a.length);for(let e=0;e<a.length;++e){const t=a[e],n=t[0],r=t[1],o=[];for(let e=2;e<t.length;e++){if(!t[e][0])continue;const n=this.natMapper({host:t[e][0],port:t[e][1]});n.readOnly=2!==e,i.push(n),o.push(n.host+":"+n.port)}_("cluster slots result [%d]: slots %d~%d served by %s",e,n,r,o);for(let e=n;e<=r;e++)this.slots[e]=o}this._groupsIds=Object.create(null);let r=0;for(let e=0;e<16384;e++){const t=(this.slots[e]||[]).join(";");t.length?(this._groupsIds[t]||(this._groupsIds[t]=++r),this._groupsBySlot[e]=this._groupsIds[t]):this._groupsBySlot[e]=void 0}this.connectionPool.reset(i),t()},this.options.slotsRefreshTimeout))}invokeReadyDelayedCallbacks(e){for(const t of this._readyDelayedCallbacks)process.nextTick(t,e);this._readyDelayedCallbacks=[]}readyCheck(e){this.cluster("INFO",(t,n)=>{if(t)return e(t);if("string"!=typeof n)return e();let a;const i=n.split("\r\n");for(let e=0;e<i.length;++e){const t=i[e].split(":");if("cluster_state"===t[0]){a=t[1];break}}"fail"===a?(_("cluster state not ok (%s)",a),e(null,a)):e()})}resolveSrv(e){return new Promise((t,n)=>{this.options.resolveSrv(e,(e,a)=>{if(e)return n(e);const i=this,r=(0,v.groupSrvRecords)(a),o=Object.keys(r).sort((e,t)=>parseInt(e)-parseInt(t));!function e(a){if(!o.length)return n(a);const s=o[0],l=r[s],c=(0,v.weightSrvRecords)(l);l.records.length||o.shift(),i.dnsLookup(c.name).then(e=>t({host:e,port:c.port}),e)}()})})}dnsLookup(e){return new Promise((t,n)=>{this.options.dnsLookup(e,(a,i)=>{a?(_("failed to resolve hostname %s to IP: %s",e,a.message),n(a)):(_("resolved hostname %s to IP %s",e,i),t(i))})})}async resolveStartupNodeHostnames(){if(!Array.isArray(this.startupNodes)||0===this.startupNodes.length)throw new Error("`startupNodes` should contain at least one node.");const e=(0,v.normalizeNodeOptions)(this.startupNodes),t=(0,v.getUniqueHostnamesFromOptions)(e);if(0===t.length)return e;const n=await Promise.all(t.map((this.options.useSRVRecords?this.resolveSrv:this.dnsLookup).bind(this))),a=(0,c.zipMap)(t,n);return e.map(e=>{const t=a.get(e.host);return t?this.options.useSRVRecords?Object.assign({},e,t):Object.assign({},e,{host:t}):e})}createScanStream(e,{key:t,options:n={}}){return new s.default({objectMode:!0,key:t,redis:this,command:e,...n})}}return(0,d.default)(k,t.EventEmitter),(0,l.addTransactionSupport)(k.prototype),Xr.default=k,Xr}var El={},Kl={},wl={};Object.defineProperty(wl,"__esModule",{value:!0});const Sl=(0,oo.Debug)("AbstractConnector");wl.default=class{constructor(e){this.connecting=!1,this.disconnectTimeout=e}check(e){return!0}disconnect(){if(this.connecting=!1,this.stream){const e=this.stream,t=setTimeout(()=>{Sl("stream %s:%s still open, destroying it",e.remoteAddress,e.remotePort),e.destroy()},this.disconnectTimeout);e.on("close",()=>clearTimeout(t)),e.end()}}},Object.defineProperty(Kl,"__esModule",{value:!0});const Il=u,jl=b,Rl=oo,Tl=wl;class Ol extends Tl.default{constructor(e){super(e.disconnectTimeout),this.options=e}connect(e){const{options:t}=this;let n;return this.connecting=!0,"path"in t&&t.path?n={path:t.path}:(n={},"port"in t&&null!=t.port&&(n.port=t.port),"host"in t&&null!=t.host&&(n.host=t.host),"family"in t&&null!=t.family&&(n.family=t.family)),t.tls&&Object.assign(n,t.tls),new Promise((e,a)=>{process.nextTick(()=>{if(this.connecting){try{t.tls?this.stream=(0,jl.connect)(n):this.stream=(0,Il.createConnection)(n)}catch(e){return void a(e)}this.stream.once("error",e=>{this.firstError=e}),e(this.stream)}else a(new Error(Rl.CONNECTION_CLOSED_ERROR_MSG))})})}}Kl.default=Ol;var Al={},Cl={};function Dl(e,t){return(e.host||"127.0.0.1")===(t.host||"127.0.0.1")&&(e.port||26379)===(t.port||26379)}Object.defineProperty(Cl,"__esModule",{value:!0});Cl.default=class{constructor(e){this.cursor=0,this.sentinels=e.slice(0)}next(){const e=this.cursor>=this.sentinels.length;return{done:e,value:e?void 0:this.sentinels[this.cursor++]}}reset(e){e&&this.sentinels.length>1&&1!==this.cursor&&this.sentinels.unshift(...this.sentinels.splice(this.cursor-1)),this.cursor=0}add(e){for(let t=0;t<this.sentinels.length;t++)if(Dl(e,this.sentinels[t]))return!1;return this.sentinels.push(e),!0}toString(){return`${JSON.stringify(this.sentinels)} @${this.cursor}`}};var Pl={};Object.defineProperty(Pl,"__esModule",{value:!0}),Pl.FailoverDetector=void 0;const Nl=(0,oo.Debug)("FailoverDetector"),Ml="+switch-master";var Fl,Ll;function Jl(){if(Fl)return Al;Fl=1,Object.defineProperty(Al,"__esModule",{value:!0}),Al.SentinelIterator=void 0;const e=u,t=oo,n=b,a=Cl;Al.SentinelIterator=a.default;const i=wl,r=wc(),o=Pl,s=(0,t.Debug)("SentinelConnector");let l=class extends i.default{constructor(e){if(super(e.disconnectTimeout),this.options=e,this.emitter=null,this.failoverDetector=null,!this.options.sentinels.length)throw new Error("Requires at least one sentinel to connect to.");if(!this.options.name)throw new Error("Requires the name of master.");this.sentinelIterator=new a.default(this.options.sentinels)}check(e){const t=!e.role||this.options.role===e.role;return t||(s("role invalid, expected %s, but got %s",this.options.role,e.role),this.sentinelIterator.next(),this.sentinelIterator.next(),this.sentinelIterator.reset(!0)),t}disconnect(){super.disconnect(),this.failoverDetector&&this.failoverDetector.cleanup()}connect(a){let i;this.connecting=!0,this.retryAttempts=0;const r=async()=>{const o=this.sentinelIterator.next();if(o.done){this.sentinelIterator.reset(!1);const e="function"==typeof this.options.sentinelRetryStrategy?this.options.sentinelRetryStrategy(++this.retryAttempts):null;let t="number"!=typeof e?"All sentinels are unreachable and retry is disabled.":`All sentinels are unreachable. Retrying from scratch after ${e}ms.`;i&&(t+=` Last error: ${i.message}`),s(t);const n=new Error(t);if("number"==typeof e)return a("error",n),await new Promise(t=>setTimeout(t,e)),r();throw n}let l=null,c=null;try{l=await this.resolve(o.value)}catch(e){c=e}if(!this.connecting)throw new Error(t.CONNECTION_CLOSED_ERROR_MSG);const d=o.value.host+":"+o.value.port;if(l)return s("resolved: %s:%s from sentinel %s",l.host,l.port,d),this.options.enableTLSForSentinelMode&&this.options.tls?(Object.assign(l,this.options.tls),this.stream=(0,n.connect)(l),this.stream.once("secureConnect",this.initFailoverDetector.bind(this))):(this.stream=(0,e.createConnection)(l),this.stream.once("connect",this.initFailoverDetector.bind(this))),this.stream.once("error",e=>{this.firstError=e}),this.stream;{const e=c?"failed to connect to sentinel "+d+" because "+c.message:"connected to sentinel "+d+" successfully, but got an invalid reply: "+l;return s(e),a("sentinelError",new Error(e)),c&&(i=c),r()}};return r()}async updateSentinels(e){if(!this.options.updateSentinels)return;const n=await e.sentinel("sentinels",this.options.name);Array.isArray(n)&&(n.map(t.packObject).forEach(e=>{if(-1===(e.flags?e.flags.split(","):[]).indexOf("disconnected")&&e.ip&&e.port){const t=this.sentinelNatResolve(c(e));this.sentinelIterator.add(t)&&s("adding sentinel %s:%s",t.host,t.port)}}),s("Updated internal sentinels: %s",this.sentinelIterator))}async resolveMaster(e){const t=await e.sentinel("get-master-addr-by-name",this.options.name);return await this.updateSentinels(e),this.sentinelNatResolve(Array.isArray(t)?{host:t[0],port:Number(t[1])}:null)}async resolveSlave(e){const n=await e.sentinel("slaves",this.options.name);if(!Array.isArray(n))return null;const a=n.map(t.packObject).filter(e=>e.flags&&!e.flags.match(/(disconnected|s_down|o_down)/));return this.sentinelNatResolve(function(e,n){if(0===e.length)return null;let a;if("function"==typeof n)a=n(e);else if(null!==n&&"object"==typeof n){const t=Array.isArray(n)?n:[n];t.sort((e,t)=>(e.prio||(e.prio=1),t.prio||(t.prio=1),e.prio<t.prio?-1:e.prio>t.prio?1:0));for(let n=0;n<t.length;n++){for(let i=0;i<e.length;i++){const r=e[i];if(r.ip===t[n].ip&&r.port===t[n].port){a=r;break}}if(a)break}}a||(a=(0,t.sample)(e));return c(a)}(a,this.options.preferredSlaves))}sentinelNatResolve(e){if(!e||!this.options.natMap)return e;const t=`${e.host}:${e.port}`;let n=e;return"function"==typeof this.options.natMap?n=this.options.natMap(t)||e:"object"==typeof this.options.natMap&&(n=this.options.natMap[t]||e),n}connectToSentinel(e,t){return new r.default({port:e.port||26379,host:e.host,username:this.options.sentinelUsername||null,password:this.options.sentinelPassword||null,family:e.family||("path"in this.options&&this.options.path?void 0:this.options.family),tls:this.options.sentinelTLS,retryStrategy:null,enableReadyCheck:!1,connectTimeout:this.options.connectTimeout,commandTimeout:this.options.sentinelCommandTimeout,...t})}async resolve(e){const t=this.connectToSentinel(e);t.on("error",d);try{return"slave"===this.options.role?await this.resolveSlave(t):await this.resolveMaster(t)}finally{t.disconnect()}}async initFailoverDetector(){var e;if(!this.options.failoverDetector)return;this.sentinelIterator.reset(!0);const t=[];for(;t.length<this.options.sentinelMaxConnections;){const{done:e,value:n}=this.sentinelIterator.next();if(e)break;const a=this.connectToSentinel(n,{lazyConnect:!0,retryStrategy:this.options.sentinelReconnectStrategy});a.on("reconnecting",()=>{var e;null===(e=this.emitter)||void 0===e||e.emit("sentinelReconnecting")}),t.push({address:n,client:a})}this.sentinelIterator.reset(!1),this.failoverDetector&&this.failoverDetector.cleanup(),this.failoverDetector=new o.FailoverDetector(this,t),await this.failoverDetector.subscribe(),null===(e=this.emitter)||void 0===e||e.emit("failoverSubscribed")}};function c(e){return{host:e.ip,port:Number(e.port)}}function d(){}return Al.default=l,Al}Pl.FailoverDetector=class{constructor(e,t){this.isDisconnected=!1,this.connector=e,this.sentinels=t}cleanup(){this.isDisconnected=!0;for(const e of this.sentinels)e.client.disconnect()}async subscribe(){Nl("Starting FailoverDetector");const e=[];for(const t of this.sentinels){const n=t.client.subscribe(Ml).catch(e=>{Nl("Failed to subscribe to failover messages on sentinel %s:%s (%s)",t.address.host||"127.0.0.1",t.address.port||26739,e.message)});e.push(n),t.client.on("message",e=>{this.isDisconnected||e!==Ml||this.disconnect()})}await Promise.all(e)}disconnect(){this.isDisconnected=!0,Nl("Failover detected, disconnecting"),this.connector.disconnect()}};var Ul={},ql={},Vl={};Object.defineProperty(Vl,"__esModule",{value:!0});const Gl=to;class Bl extends Gl.AbortError{constructor(e){super(`Reached the max retries per request limit (which is ${e}). Refer to "maxRetriesPerRequest" option for details.`),Error.captureStackTrace(this,this.constructor)}get name(){return this.constructor.name}}Vl.default=Bl,Object.defineProperty(ql,"__esModule",{value:!0}),ql.MaxRetriesPerRequestError=void 0;const zl=Vl;ql.MaxRetriesPerRequestError=zl.default;var Yl={},$l={exports:{}};const Wl=g.Buffer,Hl=new(0,_.StringDecoder),Ql=to,Zl=Ql.ReplyError,Xl=Ql.ParserError;var ec=Wl.allocUnsafe(32768),tc=0,nc=null,ac=0,ic=0;function rc(e){const t=e.offset,n=e.buffer,a=n.length-1;for(var i=t;i<a;)if(13===n[i++])return e.offset=i+1,!0===e.optionReturnBuffers?e.buffer.slice(t,i-1):e.buffer.toString("utf8",t,i-1)}function oc(e){const t=e.buffer.length-1;for(var n=e.offset,a=0;n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,a;a=10*a+(t-48)}}function sc(e,t,n){e.arrayCache.push(t),e.arrayPos.push(n)}function lc(e){const t=e.arrayCache.pop();var n=e.arrayPos.pop();if(e.arrayCache.length){const a=lc(e);if(void 0===a)return void sc(e,t,n);t[n++]=a}return cc(e,t,n)}function cc(e,t,n){const a=e.buffer.length;for(;n<t.length;){const i=e.offset;if(e.offset>=a)return void sc(e,t,n);const r=dc(e,e.buffer[e.offset++]);if(void 0===r)return e.arrayCache.length||e.bufferCache.length||(e.offset=i),void sc(e,t,n);t[n]=r,n++}return t}function dc(e,t){switch(t){case 36:return function(e){const t=oc(e);if(void 0===t)return;if(t<0)return null;const n=e.offset+t;if(n+2>e.buffer.length)return e.bigStrSize=n+2,e.totalChunkSize=e.buffer.length,void e.bufferCache.push(e.buffer);const a=e.offset;return e.offset=n+2,!0===e.optionReturnBuffers?e.buffer.slice(a,n):e.buffer.toString("utf8",a,n)}(e);case 43:return rc(e);case 42:return function(e){const t=oc(e);if(void 0===t)return;return t<0?null:cc(e,new Array(t),0)}(e);case 58:return function(e){return!0===e.optionStringNumbers?function(e){const t=e.buffer.length-1;var n=e.offset,a=0,i="";for(45===e.buffer[n]&&(i+="-",n++);n<t;){var r=e.buffer[n++];if(13===r)return e.offset=n+1,0!==a&&(i+=a),i;a>429496728?(i+=10*a+(r-48),a=0):48===r&&0===a?i+=0:a=10*a+(r-48)}}(e):function(e){const t=e.buffer.length-1;var n=e.offset,a=0,i=1;for(45===e.buffer[n]&&(i=-1,n++);n<t;){const t=e.buffer[n++];if(13===t)return e.offset=n+1,i*a;a=10*a+(t-48)}}(e)}(e);case 45:return function(e){var t=rc(e);if(void 0!==t)return!0===e.optionReturnBuffers&&(t=t.toString()),new Zl(t)}(e);default:return function(e,t){const n=new Xl("Protocol error, got "+JSON.stringify(String.fromCharCode(t))+" as reply type byte",JSON.stringify(e.buffer),e.offset);e.buffer=null,e.returnFatalError(n)}(e,t)}}function uc(){if(ec.length>51200)if(1===ac||ic>2*ac){const e=Math.floor(ec.length/10),t=e<tc?tc:e;tc=0,ec=ec.slice(t,ec.length)}else ic++,ac--;else clearInterval(nc),ac=0,ic=0,nc=null}function pc(e){const t=e.bufferCache,n=e.offset,a=e.bigStrSize-n-2;var i=t.length,r=e.bigStrSize-e.totalChunkSize;if(e.offset=r,r<=2){if(2===i)return t[0].slice(n,t[0].length+r-2);i--,r=t[t.length-2].length+r}!function(e){if(ec.length<e+tc){const t=e>78643200?2:3;tc>116391936&&(tc=52428800),ec=Wl.allocUnsafe(e*t+tc),tc=0,ac++,null===nc&&(nc=setInterval(uc,50))}}(a);const o=tc;t[0].copy(ec,o,n,t[0].length),tc+=t[0].length-n;for(var s=1;s<i-1;s++)t[s].copy(ec,tc),tc+=t[s].length;return t[s].copy(ec,tc,0,r-2),tc+=r-2,ec.slice(o,tc)}var mc=class{constructor(e){if(!e)throw new TypeError("Options are mandatory.");if("function"!=typeof e.returnError||"function"!=typeof e.returnReply)throw new TypeError("The returnReply and returnError options have to be functions.");this.setReturnBuffers(!!e.returnBuffers),this.setStringNumbers(!!e.stringNumbers),this.returnError=e.returnError,this.returnFatalError=e.returnFatalError||e.returnError,this.returnReply=e.returnReply,this.reset()}reset(){this.offset=0,this.buffer=null,this.bigStrSize=0,this.totalChunkSize=0,this.bufferCache=[],this.arrayCache=[],this.arrayPos=[]}setReturnBuffers(e){if("boolean"!=typeof e)throw new TypeError("The returnBuffers argument has to be a boolean");this.optionReturnBuffers=e}setStringNumbers(e){if("boolean"!=typeof e)throw new TypeError("The stringNumbers argument has to be a boolean");this.optionStringNumbers=e}execute(e){if(null===this.buffer)this.buffer=e,this.offset=0;else if(0===this.bigStrSize){const t=this.buffer.length,n=t-this.offset,a=Wl.allocUnsafe(n+e.length);if(this.buffer.copy(a,0,this.offset,t),e.copy(a,n,0,e.length),this.buffer=a,this.offset=0,this.arrayCache.length){const e=lc(this);if(void 0===e)return;this.returnReply(e)}}else{if(!(this.totalChunkSize+e.length>=this.bigStrSize))return this.bufferCache.push(e),void(this.totalChunkSize+=e.length);this.bufferCache.push(e);var t=this.optionReturnBuffers?pc(this):function(e){const t=e.bufferCache,n=e.offset;var a=t.length,i=e.bigStrSize-e.totalChunkSize;if(e.offset=i,i<=2){if(2===a)return t[0].toString("utf8",n,t[0].length+i-2);a--,i=t[t.length-2].length+i}for(var r=Hl.write(t[0].slice(n)),o=1;o<a-1;o++)r+=Hl.write(t[o]);return r+Hl.end(t[o].slice(0,i-2))}(this);if(this.bigStrSize=0,this.bufferCache=[],this.buffer=e,this.arrayCache.length&&(this.arrayCache[0][this.arrayPos[0]++]=t,void 0===(t=lc(this))))return;this.returnReply(t)}for(;this.offset<this.buffer.length;){const e=this.offset,t=this.buffer[this.offset++],n=dc(this,t);if(void 0===n)return void(this.arrayCache.length||this.bufferCache.length||(this.offset=e));45===t?this.returnError(n):this.returnReply(n)}this.buffer=null}};$l.exports=mc;var hc={};Object.defineProperty(hc,"__esModule",{value:!0});function yc(e){return"unsubscribe"===e?"subscribe":"punsubscribe"===e?"psubscribe":"sunsubscribe"===e?"ssubscribe":e}hc.default=class{constructor(){this.set={subscribe:{},psubscribe:{},ssubscribe:{}}}add(e,t){this.set[yc(e)][t]=!0}del(e,t){delete this.set[yc(e)][t]}channels(e){return Object.keys(this.set[yc(e)])}isEmpty(){return 0===this.channels("subscribe").length&&0===this.channels("psubscribe").length&&0===this.channels("ssubscribe").length}},Object.defineProperty(Yl,"__esModule",{value:!0});const fc=no,vc=$l.exports,bc=hc,gc=(0,oo.Debug)("dataHandler");Yl.default=class{constructor(e,t){this.redis=e;const n=new vc({stringNumbers:t.stringNumbers,returnBuffers:!0,returnError:e=>{this.returnError(e)},returnFatalError:e=>{this.returnFatalError(e)},returnReply:e=>{this.returnReply(e)}});e.stream.prependListener("data",e=>{n.execute(e)}),e.stream.resume()}returnFatalError(e){e.message+=". Please report this.",this.redis.recoverFromFatalError(e,e,{offlineQueue:!1})}returnError(e){const t=this.shiftCommand(e);t&&(e.command={name:t.command.name,args:t.command.args},this.redis.handleReconnection(e,t))}returnReply(e){if(this.handleMonitorReply(e))return;if(this.handleSubscriberReply(e))return;const t=this.shiftCommand(e);t&&(fc.default.checkFlag("ENTER_SUBSCRIBER_MODE",t.command.name)?(this.redis.condition.subscriber=new bc.default,this.redis.condition.subscriber.add(t.command.name,e[1].toString()),xc(t.command,e[2])||this.redis.commandQueue.unshift(t)):fc.default.checkFlag("EXIT_SUBSCRIBER_MODE",t.command.name)?kc(t.command,e[2])||this.redis.commandQueue.unshift(t):t.command.resolve(e))}handleSubscriberReply(e){if(!this.redis.condition.subscriber)return!1;const t=Array.isArray(e)?e[0].toString():null;switch(gc('receive reply "%s" in subscriber mode',t),t){case"message":this.redis.listeners("message").length>0&&this.redis.emit("message",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("messageBuffer",e[1],e[2]);break;case"pmessage":{const t=e[1].toString();this.redis.listeners("pmessage").length>0&&this.redis.emit("pmessage",t,e[2].toString(),e[3].toString()),this.redis.emit("pmessageBuffer",t,e[2],e[3]);break}case"smessage":this.redis.listeners("smessage").length>0&&this.redis.emit("smessage",e[1].toString(),e[2]?e[2].toString():""),this.redis.emit("smessageBuffer",e[1],e[2]);break;case"ssubscribe":case"subscribe":case"psubscribe":{const n=e[1].toString();this.redis.condition.subscriber.add(t,n);const a=this.shiftCommand(e);if(!a)return;xc(a.command,e[2])||this.redis.commandQueue.unshift(a);break}case"sunsubscribe":case"unsubscribe":case"punsubscribe":{const n=e[1]?e[1].toString():null;n&&this.redis.condition.subscriber.del(t,n);const a=e[2];0===Number(a)&&(this.redis.condition.subscriber=!1);const i=this.shiftCommand(e);if(!i)return;kc(i.command,a)||this.redis.commandQueue.unshift(i);break}default:{const t=this.shiftCommand(e);if(!t)return;t.command.resolve(e)}}return!0}handleMonitorReply(e){if("monitoring"!==this.redis.status)return!1;const t=e.toString();if("OK"===t)return!1;const n=t.indexOf(" "),a=t.slice(0,n),i=t.indexOf('"'),r=t.slice(i+1,-1).split('" "').map(e=>e.replace(/\\"/g,'"')),o=t.slice(n+2,i-2).split(" ");return this.redis.emit("monitor",a,r,o[1],o[0]),!0}shiftCommand(e){const t=this.redis.commandQueue.shift();if(!t){const t=new Error("Command queue state error. If you can reproduce this, please report it."+(e instanceof Error?` Last error: ${e.message}`:` Last reply: ${e.toString()}`));return this.redis.emit("error",t),null}return t}};const _c=new WeakMap;function xc(e,t){let n=_c.has(e)?_c.get(e):e.args.length;return n-=1,n<=0?(e.resolve(t),_c.delete(e),!0):(_c.set(e,n),!1)}function kc(e,t){let n=_c.has(e)?_c.get(e):e.args.length;return 0===n?0===Number(t)&&(_c.delete(e),e.resolve(t),!0):(n-=1,n<=0?(e.resolve(t),!0):(_c.set(e,n),!1))}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.readyHandler=e.errorHandler=e.closeHandler=e.connectHandler=void 0;const t=to,n=no,a=ql,i=oo,r=Yl,o=(0,i.Debug)("connection");function s(e){const n=new t.AbortError("Command aborted due to connection close");return n.command={name:e.name,args:e.args},n}e.connectHandler=function(t){return function(){t.setStatus("connect"),t.resetCommandQueue();let n=!1;const{connectionEpoch:a}=t;t.condition.auth&&t.auth(t.condition.auth,function(e){a===t.connectionEpoch&&e&&(-1!==e.message.indexOf("no password is set")?console.warn("[WARN] Redis server does not require a password, but a password was supplied."):-1!==e.message.indexOf("without any password configured for the default user")?console.warn("[WARN] This Redis server's `default` user does not require a password, but a password was supplied"):-1!==e.message.indexOf("wrong number of arguments for 'auth' command")?console.warn("[ERROR] The server returned \"wrong number of arguments for 'auth' command\". You are probably passing both username and password to Redis version 5 or below. You should only pass the 'password' option for Redis version 5 and under."):(n=!0,t.recoverFromFatalError(e,e)))}),t.condition.select&&t.select(t.condition.select).catch(e=>{t.silentEmit("error",e)}),t.options.enableReadyCheck||e.readyHandler(t)(),new r.default(t,{stringNumbers:t.options.stringNumbers}),t.options.enableReadyCheck&&t._readyCheck(function(i,r){a===t.connectionEpoch&&(i?n||t.recoverFromFatalError(new Error("Ready check failed: "+i.message),i):t.connector.check(r)?e.readyHandler(t)():t.disconnect(!0))})}},e.closeHandler=function(e){return function(){const n=e.status;if(e.setStatus("close"),e.commandQueue.length&&function(e){var t;let n=0;for(let a=0;a<e.length;){const i=null===(t=e.peekAt(a))||void 0===t?void 0:t.command,r=i.pipelineIndex;void 0!==r&&0!==r||(n=0),void 0===r||r===n++?a++:(e.remove(a,1),i.reject(s(i)))}}(e.commandQueue),e.offlineQueue.length&&function(e){var t;for(let n=0;n<e.length;){const a=null===(t=e.peekAt(n))||void 0===t?void 0:t.command;if("multi"===a.name)break;if("exec"===a.name){e.remove(n,1),a.reject(s(a));break}a.inTransaction?(e.remove(n,1),a.reject(s(a))):n++}}(e.offlineQueue),"ready"===n&&(e.prevCondition||(e.prevCondition=e.condition),e.commandQueue.length&&(e.prevCommandQueue=e.commandQueue)),e.manuallyClosing)return e.manuallyClosing=!1,o("skip reconnecting since the connection is manually closed."),t();if("function"!=typeof e.options.retryStrategy)return o("skip reconnecting because `retryStrategy` is not a function"),t();const r=e.options.retryStrategy(++e.retryAttempts);if("number"!=typeof r)return o("skip reconnecting because `retryStrategy` doesn't return a number"),t();o("reconnect in %sms",r),e.setStatus("reconnecting",r),e.reconnectTimeout=setTimeout(function(){e.reconnectTimeout=null,e.connect().catch(i.noop)},r);const{maxRetriesPerRequest:l}=e.options;if("number"==typeof l)if(l<0)o("maxRetriesPerRequest is negative, ignoring...");else{0===e.retryAttempts%(l+1)&&(o("reach maxRetriesPerRequest limitation, flushing command queue..."),e.flushQueue(new a.MaxRetriesPerRequestError(l)))}};function t(){e.setStatus("end"),e.flushQueue(new Error(i.CONNECTION_CLOSED_ERROR_MSG))}},e.errorHandler=function(e){return function(t){o("error: %s",t),e.silentEmit("error",t)}},e.readyHandler=function(e){return function(){if(e.setStatus("ready"),e.retryAttempts=0,e.options.monitor){e.call("monitor").then(()=>e.setStatus("monitoring"),t=>e.emit("error",t));const{sendCommand:t}=e;return e.sendCommand=function(a){return n.default.checkFlag("VALID_IN_MONITOR_MODE",a.name)?t.call(e,a):(a.reject(new Error("Connection is in monitoring mode, can't process commands.")),a.promise)},void e.once("close",function(){delete e.sendCommand})}const t=e.prevCondition?e.prevCondition.select:e.condition.select;if(e.options.connectionName&&(o("set the connection name [%s]",e.options.connectionName),e.client("setname",e.options.connectionName).catch(i.noop)),e.options.readOnly&&(o("set the connection to readonly mode"),e.readonly().catch(i.noop)),e.prevCondition){const n=e.prevCondition;if(e.prevCondition=null,n.subscriber&&e.options.autoResubscribe){e.condition.select!==t&&(o("connect to db [%d]",t),e.select(t));const a=n.subscriber.channels("subscribe");a.length&&(o("subscribe %d channels",a.length),e.subscribe(a));const i=n.subscriber.channels("psubscribe");i.length&&(o("psubscribe %d channels",i.length),e.psubscribe(i));const r=n.subscriber.channels("ssubscribe");r.length&&(o("ssubscribe %d channels",r.length),e.ssubscribe(r))}}if(e.prevCommandQueue)if(e.options.autoResendUnfulfilledCommands)for(o("resend %d unfulfilled commands",e.prevCommandQueue.length);e.prevCommandQueue.length>0;){const t=e.prevCommandQueue.shift();t.select!==e.condition.select&&"select"!==t.command.name&&e.select(t.select),e.sendCommand(t.command,t.stream)}else e.prevCommandQueue=null;if(e.offlineQueue.length){o("send %d commands in offline queue",e.offlineQueue.length);const t=e.offlineQueue;for(e.resetOfflineQueue();t.length>0;){const n=t.shift();n.select!==e.condition.select&&"select"!==n.command.name&&e.select(n.select),e.sendCommand(n.command,n.stream)}}e.condition.select!==t&&(o("connect to db [%d]",t),e.select(t))}}}(Ul);var Ec,Kc={};function wc(){if(Ec)return qr;Ec=1,Object.defineProperty(qr,"__esModule",{value:!0});const e=Vr,t=m,n=Br,a=kl(),i=no,r=function(){if(Ll)return El;Ll=1,Object.defineProperty(El,"__esModule",{value:!0}),El.SentinelConnector=El.StandaloneConnector=void 0;const e=Kl;El.StandaloneConnector=e.default;const t=Jl();return El.SentinelConnector=t.default,El}(),o=Jl(),s=Ul,l=Kc,c=Ks,d=Is,u=oo,p=nl,h=Rs,y=so,f=fl,v=(0,u.Debug)("redis");let b=class a extends h.default{constructor(e,n,a){if(super(),this.status="wait",this.isCluster=!1,this.reconnectTimeout=null,this.connectionEpoch=0,this.retryAttempts=0,this.manuallyClosing=!1,this._autoPipelines=new Map,this._runningAutoPipelines=new Set,this.parseOptions(e,n,a),t.EventEmitter.call(this),this.resetCommandQueue(),this.resetOfflineQueue(),this.options.Connector)this.connector=new this.options.Connector(this.options);else if(this.options.sentinels){const e=new o.default(this.options);e.emitter=this,this.connector=e}else this.connector=new r.StandaloneConnector(this.options);this.options.scripts&&Object.entries(this.options.scripts).forEach(([e,t])=>{this.defineCommand(e,t)}),this.options.lazyConnect?this.setStatus("wait"):this.connect().catch(y.noop)}static createClient(...e){return new a(...e)}get autoPipelineQueueSize(){let e=0;for(const t of this._autoPipelines.values())e+=t.length;return e}connect(e){const t=new Promise((e,t)=>{if("connecting"===this.status||"connect"===this.status||"ready"===this.status)return void t(new Error("Redis is already connecting/connected"));this.connectionEpoch+=1,this.setStatus("connecting");const{options:a}=this;this.condition={select:a.db,auth:a.username?[a.username,a.password]:a.password,subscriber:!1};const i=this;(0,n.default)(this.connector.connect(function(e,t){i.silentEmit(e,t)}),function(n,r){if(n)return i.flushQueue(n),i.silentEmit("error",n),t(n),void i.setStatus("end");let o=a.tls?"secureConnect":"connect";if("sentinels"in a&&a.sentinels&&!a.enableTLSForSentinelMode&&(o="connect"),i.stream=r,a.noDelay&&r.setNoDelay(!0),"number"==typeof a.keepAlive&&(r.connecting?r.once(o,()=>{r.setKeepAlive(!0,a.keepAlive)}):r.setKeepAlive(!0,a.keepAlive)),r.connecting){if(r.once(o,s.connectHandler(i)),a.connectTimeout){let e=!1;r.setTimeout(a.connectTimeout,function(){if(e)return;r.setTimeout(0),r.destroy();const t=new Error("connect ETIMEDOUT");t.errorno="ETIMEDOUT",t.code="ETIMEDOUT",t.syscall="connect",s.errorHandler(i)(t)}),r.once(o,function(){e=!0,r.setTimeout(0)})}}else if(r.destroyed){const e=i.connector.firstError;e&&process.nextTick(()=>{s.errorHandler(i)(e)}),process.nextTick(s.closeHandler(i))}else process.nextTick(s.connectHandler(i));r.destroyed||(r.once("error",s.errorHandler(i)),r.once("close",s.closeHandler(i)));const l=function(){i.removeListener("close",c),e()};var c=function(){i.removeListener("ready",l),t(new Error(u.CONNECTION_CLOSED_ERROR_MSG))};i.once("ready",l),i.once("close",c)})});return(0,n.default)(t,e)}disconnect(e=!1){e||(this.manuallyClosing=!0),this.reconnectTimeout&&!e&&(clearTimeout(this.reconnectTimeout),this.reconnectTimeout=null),"wait"===this.status?s.closeHandler(this)():this.connector.disconnect()}end(){this.disconnect()}duplicate(e){return new a({...this.options,...e})}get mode(){var e;return this.options.monitor?"monitor":(null===(e=this.condition)||void 0===e?void 0:e.subscriber)?"subscriber":"normal"}monitor(e){const t=this.duplicate({monitor:!0,lazyConnect:!1});return(0,n.default)(new Promise(function(e,n){t.once("error",n),t.once("monitoring",function(){e(t)})}),e)}sendCommand(t,n){var a,r;if("wait"===this.status&&this.connect().catch(y.noop),"end"===this.status)return t.reject(new Error(u.CONNECTION_CLOSED_ERROR_MSG)),t.promise;if((null===(a=this.condition)||void 0===a?void 0:a.subscriber)&&!i.default.checkFlag("VALID_IN_SUBSCRIBER_MODE",t.name))return t.reject(new Error("Connection in subscriber mode, only subscriber commands may be used")),t.promise;"number"==typeof this.options.commandTimeout&&t.setTimeout(this.options.commandTimeout);let o="ready"===this.status||!n&&"connect"===this.status&&(0,e.exists)(t.name)&&(0,e.hasFlag)(t.name,"loading");if(this.stream&&this.stream.writable?this.stream._writableState&&this.stream._writableState.ended&&(o=!1):o=!1,o)v.enabled&&v("write command[%s]: %d -> %s(%o)",this._getDescription(),null===(r=this.condition)||void 0===r?void 0:r.select,t.name,t.args),n?"isPipeline"in n&&n.isPipeline?n.write(t.toWritable(n.destination.redis.stream)):n.write(t.toWritable(n)):this.stream.write(t.toWritable(this.stream)),this.commandQueue.push({command:t,stream:n,select:this.condition.select}),i.default.checkFlag("WILL_DISCONNECT",t.name)&&(this.manuallyClosing=!0),void 0!==this.options.socketTimeout&&void 0===this.socketTimeoutTimer&&this.setSocketTimeout();else{if(!this.options.enableOfflineQueue)return t.reject(new Error("Stream isn't writeable and enableOfflineQueue options is false")),t.promise;if("quit"===t.name&&0===this.offlineQueue.length)return this.disconnect(),t.resolve(Buffer.from("OK")),t.promise;v.enabled&&v("queue command[%s]: %d -> %s(%o)",this._getDescription(),this.condition.select,t.name,t.args),this.offlineQueue.push({command:t,stream:n,select:this.condition.select})}if("select"===t.name&&(0,u.isInt)(t.args[0])){const e=parseInt(t.args[0],10);this.condition.select!==e&&(this.condition.select=e,this.emit("select",e),v("switch to db [%d]",this.condition.select))}return t.promise}setSocketTimeout(){this.socketTimeoutTimer=setTimeout(()=>{this.stream.destroy(new Error(`Socket timeout. Expecting data, but didn't receive any in ${this.options.socketTimeout}ms.`)),this.socketTimeoutTimer=void 0},this.options.socketTimeout),this.stream.once("data",()=>{clearTimeout(this.socketTimeoutTimer),this.socketTimeoutTimer=void 0,0!==this.commandQueue.length&&this.setSocketTimeout()})}scanStream(e){return this.createScanStream("scan",{options:e})}scanBufferStream(e){return this.createScanStream("scanBuffer",{options:e})}sscanStream(e,t){return this.createScanStream("sscan",{key:e,options:t})}sscanBufferStream(e,t){return this.createScanStream("sscanBuffer",{key:e,options:t})}hscanStream(e,t){return this.createScanStream("hscan",{key:e,options:t})}hscanBufferStream(e,t){return this.createScanStream("hscanBuffer",{key:e,options:t})}zscanStream(e,t){return this.createScanStream("zscan",{key:e,options:t})}zscanBufferStream(e,t){return this.createScanStream("zscanBuffer",{key:e,options:t})}silentEmit(e,t){let n;if("error"===e){if(n=t,"end"===this.status)return;if(this.manuallyClosing&&n instanceof Error&&(n.message===u.CONNECTION_CLOSED_ERROR_MSG||"connect"===n.syscall||"read"===n.syscall))return}return this.listeners(e).length>0?this.emit.apply(this,arguments):(n&&n instanceof Error&&console.error("[ioredis] Unhandled error event:",n.stack),!1)}recoverFromFatalError(e,t,n){this.flushQueue(t,n),this.silentEmit("error",t),this.disconnect(!0)}handleReconnection(e,t){var n;let a=!1;switch(this.options.reconnectOnError&&(a=this.options.reconnectOnError(e)),a){case 1:case!0:"reconnecting"!==this.status&&this.disconnect(!0),t.command.reject(e);break;case 2:"reconnecting"!==this.status&&this.disconnect(!0),(null===(n=this.condition)||void 0===n?void 0:n.select)!==t.select&&"select"!==t.command.name&&this.select(t.select),this.sendCommand(t.command);break;default:t.command.reject(e)}}_getDescription(){let e;return e="path"in this.options&&this.options.path?this.options.path:this.stream&&this.stream.remoteAddress&&this.stream.remotePort?this.stream.remoteAddress+":"+this.stream.remotePort:"host"in this.options&&this.options.host?this.options.host+":"+this.options.port:"",this.options.connectionName&&(e+=` (${this.options.connectionName})`),e}resetCommandQueue(){this.commandQueue=new f}resetOfflineQueue(){this.offlineQueue=new f}parseOptions(...e){const t={};let n=!1;for(let a=0;a<e.length;++a){const i=e[a];if(null!=i)if("object"==typeof i)(0,y.defaults)(t,i);else if("string"==typeof i)(0,y.defaults)(t,(0,u.parseURL)(i)),i.startsWith("rediss://")&&(n=!0);else{if("number"!=typeof i)throw new Error("Invalid argument "+i);t.port=i}}n&&(0,y.defaults)(t,{tls:!0}),(0,y.defaults)(t,a.defaultOptions),"string"==typeof t.port&&(t.port=parseInt(t.port,10)),"string"==typeof t.db&&(t.db=parseInt(t.db,10)),this.options=(0,u.resolveTLSProfile)(t)}setStatus(e,t){v.enabled&&v("status[%s]: %s -> %s",this._getDescription(),this.status||"[empty]",e),this.status=e,process.nextTick(this.emit.bind(this,e,t))}createScanStream(e,{key:t,options:n={}}){return new c.default({objectMode:!0,key:t,redis:this,command:e,...n})}flushQueue(e,t){let n;if((t=(0,y.defaults)({},t,{offlineQueue:!0,commandQueue:!0})).offlineQueue)for(;n=this.offlineQueue.shift();)n.command.reject(e);if(t.commandQueue&&this.commandQueue.length>0)for(this.stream&&this.stream.removeAllListeners("data");n=this.commandQueue.shift();)n.command.reject(e)}_readyCheck(e){const t=this;this.info(function(n,a){if(n)return n.message&&n.message.includes("NOPERM")?(console.warn(`Skipping the ready check because INFO command fails: "${n.message}". You can disable ready check with "enableReadyCheck". More: https://github.com/luin/ioredis/wiki/Disable-ready-check.`),e(null,{})):e(n);if("string"!=typeof a)return e(null,a);const i={},r=a.split("\r\n");for(let e=0;e<r.length;++e){const[t,...n]=r[e].split(":"),a=n.join(":");a&&(i[t]=a)}if(i.loading&&"0"!==i.loading){const n=1e3*(i.loading_eta_seconds||1),a=t.options.maxLoadingRetryTime&&t.options.maxLoadingRetryTime<n?t.options.maxLoadingRetryTime:n;v("Redis server still loading, trying again in "+a+"ms"),setTimeout(function(){t._readyCheck(e)},a)}else e(null,i)}).catch(y.noop)}};return b.Cluster=a.default,b.Command=i.default,b.defaultOptions=l.DEFAULT_REDIS_OPTIONS,(0,p.default)(b,t.EventEmitter),(0,d.addTransactionSupport)(b.prototype),qr.default=b,qr}Object.defineProperty(Kc,"__esModule",{value:!0}),Kc.DEFAULT_REDIS_OPTIONS=void 0,Kc.DEFAULT_REDIS_OPTIONS={port:6379,host:"localhost",family:4,connectTimeout:1e4,disconnectTimeout:2e3,retryStrategy:function(e){return Math.min(50*e,2e3)},keepAlive:0,noDelay:!0,connectionName:null,sentinels:null,name:null,role:"master",sentinelRetryStrategy:function(e){return Math.min(10*e,1e3)},sentinelReconnectStrategy:function(){return 6e4},natMap:null,enableTLSForSentinelMode:!1,updateSentinels:!0,failoverDetector:!1,username:null,password:null,db:0,enableOfflineQueue:!0,enableReadyCheck:!0,autoResubscribe:!0,autoResendUnfulfilledCommands:!0,lazyConnect:!1,keyPrefix:"",reconnectOnError:null,readOnly:!1,stringNumbers:!1,maxRetriesPerRequest:20,maxLoadingRetryTime:1e4,enableAutoPipelining:!1,autoPipeliningIgnoredCommands:[],sentinelMaxConnections:10},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.print=t.ReplyError=t.SentinelIterator=t.SentinelConnector=t.AbstractConnector=t.Pipeline=t.ScanStream=t.Command=t.Cluster=t.Redis=t.default=void 0,t=e.exports=wc().default;var n=wc();Object.defineProperty(t,"default",{enumerable:!0,get:function(){return n.default}});var a=wc();Object.defineProperty(t,"Redis",{enumerable:!0,get:function(){return a.default}});var i=kl();Object.defineProperty(t,"Cluster",{enumerable:!0,get:function(){return i.default}});var r=no;Object.defineProperty(t,"Command",{enumerable:!0,get:function(){return r.default}});var o=Ks;Object.defineProperty(t,"ScanStream",{enumerable:!0,get:function(){return o.default}});var s=js;Object.defineProperty(t,"Pipeline",{enumerable:!0,get:function(){return s.default}});var l=wl;Object.defineProperty(t,"AbstractConnector",{enumerable:!0,get:function(){return l.default}});var c=Jl();Object.defineProperty(t,"SentinelConnector",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(t,"SentinelIterator",{enumerable:!0,get:function(){return c.SentinelIterator}}),t.ReplyError=to.ReplyError,Object.defineProperty(t,"Promise",{get:()=>(console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used."),Promise),set(e){console.warn("ioredis v5 does not support plugging third-party Promise library anymore. Native Promise will be used.")}}),t.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)}}(Ur,Ur.exports);var Sc,Ic,jc,Rc=O(Ur.exports);try{Sc=new TextDecoder}catch(e){}var Tc,Oc,Ac,Cc,Dc,Pc=0,Nc={},Mc=0,Fc=0,Lc=[],Jc={useRecords:!1,mapsAsObjects:!0};class Uc{}const qc=new Uc;qc.name="MessagePack 0xC1";var Vc=!1,Gc=2;try{new Function("")}catch(e){Gc=1/0}class Bc{constructor(e){e&&(!1===e.useRecords&&void 0===e.mapsAsObjects&&(e.mapsAsObjects=!0),e.sequential&&!1!==e.trusted&&(e.trusted=!0,e.structures||0==e.useRecords||(e.structures=[],e.maxSharedStructures||(e.maxSharedStructures=0))),e.structures?e.structures.sharedLength=e.structures.length:e.getStructures&&((e.structures=[]).uninitialized=!0,e.structures.sharedLength=0),e.int64AsNumber&&(e.int64AsType="number")),Object.assign(this,e)}unpack(e,t){if(Ic)return _d(()=>(xd(),this?this.unpack(e,t):Bc.prototype.unpack.call(Jc,e,t)));e.buffer||e.constructor!==ArrayBuffer||(e="undefined"!=typeof Buffer?Buffer.from(e):new Uint8Array(e)),"object"==typeof t?(jc=t.end||e.length,Pc=t.start||0):(Pc=0,jc=t>-1?t:e.length),Fc=0,Oc=null,Ac=null,Ic=e;try{Dc=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch(t){if(Ic=null,e instanceof Uint8Array)throw t;throw new Error("Source must be a Uint8Array or Buffer but was a "+(e&&"object"==typeof e?e.constructor.name:typeof e))}if(this instanceof Bc){if(Nc=this,this.structures)return Tc=this.structures,zc(t);(!Tc||Tc.length>0)&&(Tc=[])}else Nc=Jc,(!Tc||Tc.length>0)&&(Tc=[]);return zc(t)}unpackMultiple(e,t){let n,a=0;try{Vc=!0;let i=e.length,r=this?this.unpack(e,i):Ed.unpack(e,i);if(!t){for(n=[r];Pc<i;)a=Pc,n.push(zc());return n}if(!1===t(r,a,Pc))return;for(;Pc<i;)if(a=Pc,!1===t(zc(),a,Pc))return}catch(e){throw e.lastPosition=a,e.values=n,e}finally{Vc=!1,xd()}}_mergeStructures(e,t){e=e||[],Object.isFrozen(e)&&(e=e.map(e=>e.slice(0)));for(let t=0,n=e.length;t<n;t++){let n=e[t];n&&(n.isShared=!0,t>=32&&(n.highByte=t-32>>5))}e.sharedLength=e.length;for(let n in t||[])if(n>=0){let a=e[n],i=t[n];i&&(a&&((e.restoreStructures||(e.restoreStructures=[]))[n]=a),e[n]=i)}return this.structures=e}decode(e,t){return this.unpack(e,t)}}function zc(e){try{if(!Nc.trusted&&!Vc){let e=Tc.sharedLength||0;e<Tc.length&&(Tc.length=e)}let e;if(Nc.randomAccessStructure&&Ic[Pc]<64&&Ic[Pc],e=$c(),Ac&&(Pc=Ac.postBundlePosition,Ac=null),Vc&&(Tc.restoreStructures=null),Pc==jc)Tc&&Tc.restoreStructures&&Yc(),Tc=null,Ic=null,Cc&&(Cc=null);else{if(Pc>jc)throw new Error("Unexpected end of MessagePack data");if(!Vc){let t;try{t=JSON.stringify(e,(e,t)=>"bigint"==typeof t?`${t}n`:t).slice(0,100)}catch(e){t="(JSON view not available "+e+")"}throw new Error("Data read, but end of buffer not reached "+t)}}return e}catch(e){throw Tc&&Tc.restoreStructures&&Yc(),xd(),(e instanceof RangeError||e.message.startsWith("Unexpected end of buffer")||Pc>jc)&&(e.incomplete=!0),e}}function Yc(){for(let e in Tc.restoreStructures)Tc[e]=Tc.restoreStructures[e];Tc.restoreStructures=null}function $c(){let e=Ic[Pc++];if(e<160){if(e<128){if(e<64)return e;{let t=Tc[63&e]||Nc.getStructures&&Zc()[63&e];return t?(t.read||(t.read=Hc(t,63&e)),t.read()):e}}if(e<144){if(e-=128,Nc.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=md();"__proto__"===e&&(e="__proto_"),t[e]=$c()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set($c(),$c());return t}}{e-=144;let t=new Array(e);for(let n=0;n<e;n++)t[n]=$c();return Nc.freezeData?Object.freeze(t):t}}if(e<192){let t=e-160;if(Fc>=Pc)return Oc.slice(Pc-Mc,(Pc+=t)-Mc);if(0==Fc&&jc<140){let e=t<16?ld(t):sd(t);if(null!=e)return e}return Xc(t)}{let t;switch(e){case 192:return null;case 193:return Ac?(t=$c(),t>0?Ac[1].slice(Ac.position1,Ac.position1+=t):Ac[0].slice(Ac.position0,Ac.position0-=t)):qc;case 194:return!1;case 195:return!0;case 196:if(t=Ic[Pc++],void 0===t)throw new Error("Unexpected end of buffer");return dd(t);case 197:return t=Dc.getUint16(Pc),Pc+=2,dd(t);case 198:return t=Dc.getUint32(Pc),Pc+=4,dd(t);case 199:return ud(Ic[Pc++]);case 200:return t=Dc.getUint16(Pc),Pc+=2,ud(t);case 201:return t=Dc.getUint32(Pc),Pc+=4,ud(t);case 202:if(t=Dc.getFloat32(Pc),Nc.useFloat32>2){let e=kd[(127&Ic[Pc])<<1|Ic[Pc+1]>>7];return Pc+=4,(e*t+(t>0?.5:-.5)|0)/e}return Pc+=4,t;case 203:return t=Dc.getFloat64(Pc),Pc+=8,t;case 204:return Ic[Pc++];case 205:return t=Dc.getUint16(Pc),Pc+=2,t;case 206:return t=Dc.getUint32(Pc),Pc+=4,t;case 207:return"number"===Nc.int64AsType?(t=4294967296*Dc.getUint32(Pc),t+=Dc.getUint32(Pc+4)):"string"===Nc.int64AsType?t=Dc.getBigUint64(Pc).toString():"auto"===Nc.int64AsType?(t=Dc.getBigUint64(Pc),t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=Dc.getBigUint64(Pc),Pc+=8,t;case 208:return Dc.getInt8(Pc++);case 209:return t=Dc.getInt16(Pc),Pc+=2,t;case 210:return t=Dc.getInt32(Pc),Pc+=4,t;case 211:return"number"===Nc.int64AsType?(t=4294967296*Dc.getInt32(Pc),t+=Dc.getUint32(Pc+4)):"string"===Nc.int64AsType?t=Dc.getBigInt64(Pc).toString():"auto"===Nc.int64AsType?(t=Dc.getBigInt64(Pc),t>=BigInt(-2)<<BigInt(52)&&t<=BigInt(2)<<BigInt(52)&&(t=Number(t))):t=Dc.getBigInt64(Pc),Pc+=8,t;case 212:if(t=Ic[Pc++],114==t)return yd(63&Ic[Pc++]);{let e=Lc[t];if(e)return e.read?(Pc++,e.read($c())):e.noBuffer?(Pc++,e()):e(Ic.subarray(Pc,++Pc));throw new Error("Unknown extension "+t)}case 213:return t=Ic[Pc],114==t?(Pc++,yd(63&Ic[Pc++],Ic[Pc++])):ud(2);case 214:return ud(4);case 215:return ud(8);case 216:return ud(16);case 217:return t=Ic[Pc++],Fc>=Pc?Oc.slice(Pc-Mc,(Pc+=t)-Mc):ed(t);case 218:return t=Dc.getUint16(Pc),Fc>=(Pc+=2)?Oc.slice(Pc-Mc,(Pc+=t)-Mc):td(t);case 219:return t=Dc.getUint32(Pc),Fc>=(Pc+=4)?Oc.slice(Pc-Mc,(Pc+=t)-Mc):nd(t);case 220:return t=Dc.getUint16(Pc),Pc+=2,id(t);case 221:return t=Dc.getUint32(Pc),Pc+=4,id(t);case 222:return t=Dc.getUint16(Pc),Pc+=2,rd(t);case 223:return t=Dc.getUint32(Pc),Pc+=4,rd(t);default:if(e>=224)return e-256;if(void 0===e){let e=new Error("Unexpected end of MessagePack data");throw e.incomplete=!0,e}throw new Error("Unknown MessagePack token "+e)}}}const Wc=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function Hc(e,t){function n(){if(n.count++>Gc){let n=e.read=new Function("r","return function(){return "+(Nc.freezeData?"Object.freeze":"")+"({"+e.map(e=>"__proto__"===e?"__proto_:r()":Wc.test(e)?e+":r()":"["+JSON.stringify(e)+"]:r()").join(",")+"})}")($c);return 0===e.highByte&&(e.read=Qc(t,e.read)),n()}let a={};for(let t=0,n=e.length;t<n;t++){let n=e[t];"__proto__"===n&&(n="__proto_"),a[n]=$c()}return Nc.freezeData?Object.freeze(a):a}return n.count=0,0===e.highByte?Qc(t,n):n}const Qc=(e,t)=>function(){let n=Ic[Pc++];if(0===n)return t();let a=e<32?-(e+(n<<5)):e+(n<<5),i=Tc[a]||Zc()[a];if(!i)throw new Error("Record id is not defined for "+a);return i.read||(i.read=Hc(i,e)),i.read()};function Zc(){let e=_d(()=>(Ic=null,Nc.getStructures()));return Tc=Nc._mergeStructures(e,Tc)}var Xc=ad,ed=ad,td=ad,nd=ad;function ad(e){let t;if(e<16&&(t=ld(e)))return t;if(e>64&&Sc)return Sc.decode(Ic.subarray(Pc,Pc+=e));const n=Pc+e,a=[];for(t="";Pc<n;){const e=Ic[Pc++];if(128&e)if(192==(224&e)){const t=63&Ic[Pc++];a.push((31&e)<<6|t)}else if(224==(240&e)){const t=63&Ic[Pc++],n=63&Ic[Pc++];a.push((31&e)<<12|t<<6|n)}else if(240==(248&e)){let t=(7&e)<<18|(63&Ic[Pc++])<<12|(63&Ic[Pc++])<<6|63&Ic[Pc++];t>65535&&(t-=65536,a.push(t>>>10&1023|55296),t=56320|1023&t),a.push(t)}else a.push(e);else a.push(e);a.length>=4096&&(t+=od.apply(String,a),a.length=0)}return a.length>0&&(t+=od.apply(String,a)),t}function id(e){let t=new Array(e);for(let n=0;n<e;n++)t[n]=$c();return Nc.freezeData?Object.freeze(t):t}function rd(e){if(Nc.mapsAsObjects){let t={};for(let n=0;n<e;n++){let e=md();"__proto__"===e&&(e="__proto_"),t[e]=$c()}return t}{let t=new Map;for(let n=0;n<e;n++)t.set($c(),$c());return t}}var od=String.fromCharCode;function sd(e){let t=Pc,n=new Array(e);for(let a=0;a<e;a++){const e=Ic[Pc++];if((128&e)>0)return void(Pc=t);n[a]=e}return od.apply(String,n)}function ld(e){if(e<4){if(e<2){if(0===e)return"";{let e=Ic[Pc++];return(128&e)>1?void(Pc-=1):od(e)}}{let t=Ic[Pc++],n=Ic[Pc++];if((128&t)>0||(128&n)>0)return void(Pc-=2);if(e<3)return od(t,n);let a=Ic[Pc++];return(128&a)>0?void(Pc-=3):od(t,n,a)}}{let t=Ic[Pc++],n=Ic[Pc++],a=Ic[Pc++],i=Ic[Pc++];if((128&t)>0||(128&n)>0||(128&a)>0||(128&i)>0)return void(Pc-=4);if(e<6){if(4===e)return od(t,n,a,i);{let e=Ic[Pc++];return(128&e)>0?void(Pc-=5):od(t,n,a,i,e)}}if(e<8){let r=Ic[Pc++],o=Ic[Pc++];if((128&r)>0||(128&o)>0)return void(Pc-=6);if(e<7)return od(t,n,a,i,r,o);let s=Ic[Pc++];return(128&s)>0?void(Pc-=7):od(t,n,a,i,r,o,s)}{let r=Ic[Pc++],o=Ic[Pc++],s=Ic[Pc++],l=Ic[Pc++];if((128&r)>0||(128&o)>0||(128&s)>0||(128&l)>0)return void(Pc-=8);if(e<10){if(8===e)return od(t,n,a,i,r,o,s,l);{let e=Ic[Pc++];return(128&e)>0?void(Pc-=9):od(t,n,a,i,r,o,s,l,e)}}if(e<12){let c=Ic[Pc++],d=Ic[Pc++];if((128&c)>0||(128&d)>0)return void(Pc-=10);if(e<11)return od(t,n,a,i,r,o,s,l,c,d);let u=Ic[Pc++];return(128&u)>0?void(Pc-=11):od(t,n,a,i,r,o,s,l,c,d,u)}{let c=Ic[Pc++],d=Ic[Pc++],u=Ic[Pc++],p=Ic[Pc++];if((128&c)>0||(128&d)>0||(128&u)>0||(128&p)>0)return void(Pc-=12);if(e<14){if(12===e)return od(t,n,a,i,r,o,s,l,c,d,u,p);{let e=Ic[Pc++];return(128&e)>0?void(Pc-=13):od(t,n,a,i,r,o,s,l,c,d,u,p,e)}}{let m=Ic[Pc++],h=Ic[Pc++];if((128&m)>0||(128&h)>0)return void(Pc-=14);if(e<15)return od(t,n,a,i,r,o,s,l,c,d,u,p,m,h);let y=Ic[Pc++];return(128&y)>0?void(Pc-=15):od(t,n,a,i,r,o,s,l,c,d,u,p,m,h,y)}}}}}function cd(){let e,t=Ic[Pc++];if(t<192)e=t-160;else switch(t){case 217:e=Ic[Pc++];break;case 218:e=Dc.getUint16(Pc),Pc+=2;break;case 219:e=Dc.getUint32(Pc),Pc+=4;break;default:throw new Error("Expected string")}return ad(e)}function dd(e){return Nc.copyBuffers?Uint8Array.prototype.slice.call(Ic,Pc,Pc+=e):Ic.subarray(Pc,Pc+=e)}function ud(e){let t=Ic[Pc++];if(Lc[t]){let n;return Lc[t](Ic.subarray(Pc,n=Pc+=e),e=>{Pc=e;try{return $c()}finally{Pc=n}})}throw new Error("Unknown extension type "+t)}var pd=new Array(4096);function md(){let e=Ic[Pc++];if(!(e>=160&&e<192))return Pc--,hd($c());if(e-=160,Fc>=Pc)return Oc.slice(Pc-Mc,(Pc+=e)-Mc);if(!(0==Fc&&jc<180))return Xc(e);let t,n=4095&(e<<5^(e>1?Dc.getUint16(Pc):e>0?Ic[Pc]:0)),a=pd[n],i=Pc,r=Pc+e-3,o=0;if(a&&a.bytes==e){for(;i<r;){if(t=Dc.getUint32(i),t!=a[o++]){i=1879048192;break}i+=4}for(r+=3;i<r;)if(t=Ic[i++],t!=a[o++]){i=1879048192;break}if(i===r)return Pc=i,a.string;r-=3,i=Pc}for(a=[],pd[n]=a,a.bytes=e;i<r;)t=Dc.getUint32(i),a.push(t),i+=4;for(r+=3;i<r;)t=Ic[i++],a.push(t);let s=e<16?ld(e):sd(e);return a.string=null!=s?s:Xc(e)}function hd(e){if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e||"bigint"==typeof e)return e.toString();if(null==e)return e+"";if(Nc.allowArraysInMapKeys&&Array.isArray(e)&&e.flat().every(e=>["string","number","boolean","bigint"].includes(typeof e)))return e.flat().toString();throw new Error("Invalid property type for record: "+typeof e)}const yd=(e,t)=>{let n=$c().map(hd),a=e;void 0!==t&&(e=e<32?-((t<<5)+e):(t<<5)+e,n.highByte=t);let i=Tc[e];return i&&(i.isShared||Vc)&&((Tc.restoreStructures||(Tc.restoreStructures=[]))[e]=i),Tc[e]=n,n.read=Hc(n,a),n.read()};Lc[0]=()=>{},Lc[0].noBuffer=!0,Lc[66]=e=>{let t=e.byteLength%8||8,n=BigInt(128&e[0]?e[0]-256:e[0]);for(let a=1;a<t;a++)n<<=BigInt(8),n+=BigInt(e[a]);if(e.byteLength!==t){let a=new DataView(e.buffer,e.byteOffset,e.byteLength),i=(e,t)=>{let n=t-e;if(n<=40){let n=a.getBigUint64(e);for(let i=e+8;i<t;i+=8)n<<=BigInt(64n),n|=a.getBigUint64(i);return n}let r=e+(n>>4<<3),o=i(e,r),s=i(r,t);return o<<BigInt(8*(t-r))|s};n=n<<BigInt(8*(a.byteLength-t))|i(t,a.byteLength)}return n};let fd={Error:Error,EvalError:EvalError,RangeError:RangeError,ReferenceError:ReferenceError,SyntaxError:SyntaxError,TypeError:TypeError,URIError:URIError,AggregateError:"function"==typeof AggregateError?AggregateError:null};Lc[101]=()=>{let e=$c();if(!fd[e[0]]){let t=Error(e[1],{cause:e[2]});return t.name=e[0],t}return fd[e[0]](e[1],{cause:e[2]})},Lc[105]=e=>{if(!1===Nc.structuredClone)throw new Error("Structured clone extension is disabled");let t=Dc.getUint32(Pc-4);Cc||(Cc=new Map);let n,a=Ic[Pc];n=a>=144&&a<160||220==a||221==a?[]:a>=128&&a<144||222==a||223==a?new Map:(a>=199&&a<=201||a>=212&&a<=216)&&115===Ic[Pc+1]?new Set:{};let i={target:n};Cc.set(t,i);let r=$c();if(!i.used)return i.target=r;if(Object.assign(n,r),n instanceof Map)for(let[e,t]of r.entries())n.set(e,t);if(n instanceof Set)for(let e of Array.from(r))n.add(e);return n},Lc[112]=e=>{if(!1===Nc.structuredClone)throw new Error("Structured clone extension is disabled");let t=Dc.getUint32(Pc-4),n=Cc.get(t);return n.used=!0,n.target},Lc[115]=()=>new Set($c());const vd=["Int8","Uint8","Uint8Clamped","Int16","Uint16","Int32","Uint32","Float32","Float64","BigInt64","BigUint64"].map(e=>e+"Array");let bd="object"==typeof globalThis?globalThis:window;Lc[116]=e=>{let t=e[0],n=Uint8Array.prototype.slice.call(e,1).buffer,a=vd[t];if(!a){if(16===t)return n;if(17===t)return new DataView(n);throw new Error("Could not find typed array for code "+t)}return new bd[a](n)},Lc[120]=()=>{let e=$c();return new RegExp(e[0],e[1])};const gd=[];function _d(e){let t=jc,n=Pc,a=Mc,i=Fc,r=Oc,o=Cc,s=Ac,l=new Uint8Array(Ic.slice(0,jc)),c=Tc,d=Tc.slice(0,Tc.length),u=Nc,p=Vc,m=e();return jc=t,Pc=n,Mc=a,Fc=i,Oc=r,Cc=o,Ac=s,Ic=l,Vc=p,(Tc=c).splice(0,Tc.length,...d),Nc=u,Dc=new DataView(Ic.buffer,Ic.byteOffset,Ic.byteLength),m}function xd(){Ic=null,Cc=null,Tc=null}Lc[98]=e=>{let t=(e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3],n=Pc;return Pc+=t-e.length,Ac=gd,(Ac=[cd(),cd()]).position0=0,Ac.position1=0,Ac.postBundlePosition=Pc,Pc=n,$c()},Lc[255]=e=>4==e.length?new Date(1e3*(16777216*e[0]+(e[1]<<16)+(e[2]<<8)+e[3])):8==e.length?new Date(((e[0]<<22)+(e[1]<<14)+(e[2]<<6)+(e[3]>>2))/1e6+1e3*(4294967296*(3&e[3])+16777216*e[4]+(e[5]<<16)+(e[6]<<8)+e[7])):12==e.length?new Date(((e[0]<<24)+(e[1]<<16)+(e[2]<<8)+e[3])/1e6+1e3*((128&e[4]?-281474976710656:0)+1099511627776*e[6]+4294967296*e[7]+16777216*e[8]+(e[9]<<16)+(e[10]<<8)+e[11])):new Date("invalid");const kd=new Array(147);for(let e=0;e<256;e++)kd[e]=+("1e"+Math.floor(45.15-.30103*e));var Ed=new Bc({useRecords:!1});Ed.unpack,Ed.unpackMultiple,Ed.unpack;let Kd,wd,Sd,Id=new Float32Array(1);new Uint8Array(Id.buffer,0,4);try{Kd=new TextEncoder}catch(e){}const jd="undefined"!=typeof Buffer,Rd=jd?function(e){return Buffer.allocUnsafeSlow(e)}:Uint8Array,Td=jd?Buffer:Uint8Array,Od=jd?4294967296:2144337920;let Ad,Cd,Dd,Pd,Nd=0,Md=null;const Fd=/[\u0080-\uFFFF]/,Ld=Symbol("record-id");class Jd extends Bc{constructor(e){let t,n,a,i;super(e),this.offset=0;let r=Td.prototype.utf8Write?function(e,t){return Ad.utf8Write(e,t,Ad.byteLength-t)}:!(!Kd||!Kd.encodeInto)&&function(e,t){return Kd.encodeInto(e,Ad.subarray(t)).written},o=this;e||(e={});let s=e&&e.sequential,l=e.structures||e.saveStructures,c=e.maxSharedStructures;if(null==c&&(c=l?32:0),c>8160)throw new Error("Maximum maxSharedStructure is 8160");e.structuredClone&&null==e.moreTypes&&(this.moreTypes=!0);let d=e.maxOwnStructures;null==d&&(d=l?32:64),this.structures||0==e.useRecords||(this.structures=[]);let u=c>32||d+c>64,p=c+64,m=c+d+64;if(m>8256)throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");let h=[],y=0,f=0;this.pack=this.encode=function(e,r){if(Ad||(Ad=new Rd(8192),Dd=Ad.dataView||(Ad.dataView=new DataView(Ad.buffer,0,8192)),Nd=0),Pd=Ad.length-10,Pd-Nd<2048?(Ad=new Rd(Ad.length),Dd=Ad.dataView||(Ad.dataView=new DataView(Ad.buffer,0,Ad.length)),Pd=Ad.length-10,Nd=0):Nd=Nd+7&2147483640,t=Nd,r&$d&&(Nd+=255&r),i=o.structuredClone?new Map:null,o.bundleStrings&&"string"!=typeof e?(Md=[],Md.size=1/0):Md=null,a=o.structures,a){a.uninitialized&&(a=o._mergeStructures(o.getStructures()));let e=a.sharedLength||0;if(e>c)throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to "+a.sharedLength);if(!a.transitions){a.transitions=Object.create(null);for(let t=0;t<e;t++){let e=a[t];if(!e)continue;let n,i=a.transitions;for(let t=0,a=e.length;t<a;t++){let a=e[t];n=i[a],n||(n=i[a]=Object.create(null)),i=n}i[Ld]=t+64}this.lastNamedStructuresLength=e}s||(a.nextId=e+64)}let l;n&&(n=!1);try{o.randomAccessStructure&&e&&e.constructor&&e.constructor===Object?I(e):g(e);let n=Md;if(Md&&Gd(t,g,0),i&&i.idsToInsert){let e=i.idsToInsert.sort((e,t)=>e.offset>t.offset?1:-1),a=e.length,r=-1;for(;n&&a>0;){let i=e[--a].offset+t;i<n.stringsPosition+t&&-1===r&&(r=0),i>n.position+t?r>=0&&(r+=6):(r>=0&&(Dd.setUint32(n.position+t,Dd.getUint32(n.position+t)+r),r=-1),n=n.previous,a++)}r>=0&&n&&Dd.setUint32(n.position+t,Dd.getUint32(n.position+t)+r),Nd+=6*e.length,Nd>Pd&&K(Nd),o.offset=Nd;let s=function(e,t){let n,a=6*t.length,i=e.length-a;for(;n=t.pop();){let t=n.offset,r=n.id;e.copyWithin(t+a,t,i),a-=6;let o=t+a;e[o++]=214,e[o++]=105,e[o++]=r>>24,e[o++]=r>>16&255,e[o++]=r>>8&255,e[o++]=255&r,i=t}return e}(Ad.subarray(t,Nd),e);return i=null,s}return o.offset=Nd,r&zd?(Ad.start=t,Ad.end=Nd,Ad):Ad.subarray(t,Nd)}catch(e){throw l=e,e}finally{if(a&&(v(),n&&o.saveStructures)){let n=a.sharedLength||0,i=Ad.subarray(t,Nd),s=function(e,t){return e.isCompatible=e=>{let n=!e||(t.lastNamedStructuresLength||0)===e.length;return n||t._mergeStructures(e),n},e}(a,o);if(!l)return!1===o.saveStructures(s,s.isCompatible)?o.pack(e,r):(o.lastNamedStructuresLength=n,Ad.length>1073741824&&(Ad=null),i)}Ad.length>1073741824&&(Ad=null),r&Yd&&(Nd=t)}};const v=()=>{f<10&&f++;let e=a.sharedLength||0;if(a.length>e&&!s&&(a.length=e),y>1e4)a.transitions=null,f=0,y=0,h.length>0&&(h=[]);else if(h.length>0&&!s){for(let e=0,t=h.length;e<t;e++)h[e][Ld]=0;h=[]}},b=e=>{var t=e.length;t<16?Ad[Nd++]=144|t:t<65536?(Ad[Nd++]=220,Ad[Nd++]=t>>8,Ad[Nd++]=255&t):(Ad[Nd++]=221,Dd.setUint32(Nd,t),Nd+=4);for(let n=0;n<t;n++)g(e[n])},g=e=>{Nd>Pd&&(Ad=K(Nd));var n,a=typeof e;if("string"===a){let a,i=e.length;if(Md&&i>=4&&i<4096){if((Md.size+=i)>21760){let e,n,a=(Md[0]?3*Md[0].length+Md[1].length:0)+10;Nd+a>Pd&&(Ad=K(Nd+a)),Md.position?(n=Md,Ad[Nd]=200,Nd+=3,Ad[Nd++]=98,e=Nd-t,Nd+=4,Gd(t,g,0),Dd.setUint16(e+t-3,Nd-t-e)):(Ad[Nd++]=214,Ad[Nd++]=98,e=Nd-t,Nd+=4),Md=["",""],Md.previous=n,Md.size=0,Md.position=e}let n=Fd.test(e);return Md[n?0:1]+=e,Ad[Nd++]=193,void g(n?-i:i)}a=i<32?1:i<256?2:i<65536?3:5;let o=3*i;if(Nd+o>Pd&&(Ad=K(Nd+o)),i<64||!r){let t,r,o,s=Nd+a;for(t=0;t<i;t++)r=e.charCodeAt(t),r<128?Ad[s++]=r:r<2048?(Ad[s++]=r>>6|192,Ad[s++]=63&r|128):55296==(64512&r)&&56320==(64512&(o=e.charCodeAt(t+1)))?(r=65536+((1023&r)<<10)+(1023&o),t++,Ad[s++]=r>>18|240,Ad[s++]=r>>12&63|128,Ad[s++]=r>>6&63|128,Ad[s++]=63&r|128):(Ad[s++]=r>>12|224,Ad[s++]=r>>6&63|128,Ad[s++]=63&r|128);n=s-Nd-a}else n=r(e,Nd+a);n<32?Ad[Nd++]=160|n:n<256?(a<2&&Ad.copyWithin(Nd+2,Nd+1,Nd+1+n),Ad[Nd++]=217,Ad[Nd++]=n):n<65536?(a<3&&Ad.copyWithin(Nd+3,Nd+2,Nd+2+n),Ad[Nd++]=218,Ad[Nd++]=n>>8,Ad[Nd++]=255&n):(a<5&&Ad.copyWithin(Nd+5,Nd+3,Nd+3+n),Ad[Nd++]=219,Dd.setUint32(Nd,n),Nd+=4),Nd+=n}else if("number"===a)if(e>>>0===e)e<32||e<128&&!1===this.useRecords||e<64&&!this.randomAccessStructure?Ad[Nd++]=e:e<256?(Ad[Nd++]=204,Ad[Nd++]=e):e<65536?(Ad[Nd++]=205,Ad[Nd++]=e>>8,Ad[Nd++]=255&e):(Ad[Nd++]=206,Dd.setUint32(Nd,e),Nd+=4);else if((e|0)===e)e>=-32?Ad[Nd++]=256+e:e>=-128?(Ad[Nd++]=208,Ad[Nd++]=e+256):e>=-32768?(Ad[Nd++]=209,Dd.setInt16(Nd,e),Nd+=2):(Ad[Nd++]=210,Dd.setInt32(Nd,e),Nd+=4);else{let t;if((t=this.useFloat32)>0&&e<4294967296&&e>=-2147483648){let n;if(Ad[Nd++]=202,Dd.setFloat32(Nd,e),t<4||((n=e*kd[(127&Ad[Nd])<<1|Ad[Nd+1]>>7])|0)===n)return void(Nd+=4);Nd--}Ad[Nd++]=203,Dd.setFloat64(Nd,e),Nd+=8}else if("object"===a||"function"===a)if(e){if(i){let n=i.get(e);if(n){if(!n.id){let e=i.idsToInsert||(i.idsToInsert=[]);n.id=e.push(n)}return Ad[Nd++]=214,Ad[Nd++]=112,Dd.setUint32(Nd,n.id),void(Nd+=4)}i.set(e,{offset:Nd-t})}let r=e.constructor;if(r===Object)E(e);else if(r===Array)b(e);else if(r===Map)if(this.mapAsEmptyObject)Ad[Nd++]=128;else{(n=e.size)<16?Ad[Nd++]=128|n:n<65536?(Ad[Nd++]=222,Ad[Nd++]=n>>8,Ad[Nd++]=255&n):(Ad[Nd++]=223,Dd.setUint32(Nd,n),Nd+=4);for(let[t,n]of e)g(t),g(n)}else{for(let t=0,n=wd.length;t<n;t++){if(e instanceof Sd[t]){let n=wd[t];if(n.write){n.type&&(Ad[Nd++]=212,Ad[Nd++]=n.type,Ad[Nd++]=0);let t=n.write.call(this,e);return void(t===e?Array.isArray(e)?b(e):E(e):g(t))}let a,i=Ad,r=Dd,o=Nd;Ad=null;try{a=n.pack.call(this,e,e=>(Ad=i,i=null,Nd+=e,Nd>Pd&&K(Nd),{target:Ad,targetView:Dd,position:Nd-e}),g)}finally{i&&(Ad=i,Dd=r,Nd=o,Pd=Ad.length-10)}return void(a&&(a.length+Nd>Pd&&K(a.length+Nd),Nd=Vd(a,Ad,Nd,n.type)))}}if(Array.isArray(e))b(e);else{if(e.toJSON){const t=e.toJSON();if(t!==e)return g(t)}if("function"===a)return g(this.writeFunction&&this.writeFunction(e));E(e)}}}else Ad[Nd++]=192;else if("boolean"===a)Ad[Nd++]=e?195:194;else if("bigint"===a){if(e<0x8000000000000000&&e>=-0x8000000000000000)Ad[Nd++]=211,Dd.setBigInt64(Nd,e);else if(e<0x10000000000000000&&e>0)Ad[Nd++]=207,Dd.setBigUint64(Nd,e);else{if(!this.largeBigIntToFloat){if(this.largeBigIntToString)return g(e.toString());if(this.useBigIntExtension||this.moreTypes){let t,n=e<0?BigInt(-1):BigInt(0);if(e>>BigInt(65536)===n){let a=BigInt(0x10000000000000000)-BigInt(1),i=[];for(;i.push(e&a),e>>BigInt(63)!==n;)e>>=BigInt(64);t=new Uint8Array(new BigUint64Array(i).buffer),t.reverse()}else{let n=e<0,a=(n?~e:e).toString(16);if(a.length%2?a="0"+a:parseInt(a.charAt(0),16)>=8&&(a="00"+a),jd)t=Buffer.from(a,"hex");else{t=new Uint8Array(a.length/2);for(let e=0;e<t.length;e++)t[e]=parseInt(a.slice(2*e,2*e+2),16)}if(n)for(let e=0;e<t.length;e++)t[e]=~t[e]}return t.length+Nd>Pd&&K(t.length+Nd),void(Nd=Vd(t,Ad,Nd,66))}throw new RangeError(e+" was too large to fit in MessagePack 64-bit integer format, use useBigIntExtension, or set largeBigIntToFloat to convert to float-64, or set largeBigIntToString to convert to string")}Ad[Nd++]=203,Dd.setFloat64(Nd,Number(e))}Nd+=8}else{if("undefined"!==a)throw new Error("Unknown type: "+a);this.encodeUndefinedAsNil?Ad[Nd++]=192:(Ad[Nd++]=212,Ad[Nd++]=0,Ad[Nd++]=0)}},_=this.variableMapSize||this.coercibleKeyAsNumber||this.skipValues?e=>{let t;if(this.skipValues){t=[];for(let n in e)"function"==typeof e.hasOwnProperty&&!e.hasOwnProperty(n)||this.skipValues.includes(e[n])||t.push(n)}else t=Object.keys(e);let n,a=t.length;if(a<16?Ad[Nd++]=128|a:a<65536?(Ad[Nd++]=222,Ad[Nd++]=a>>8,Ad[Nd++]=255&a):(Ad[Nd++]=223,Dd.setUint32(Nd,a),Nd+=4),this.coercibleKeyAsNumber)for(let i=0;i<a;i++){n=t[i];let a=Number(n);g(isNaN(a)?n:a),g(e[n])}else for(let i=0;i<a;i++)g(n=t[i]),g(e[n])}:e=>{Ad[Nd++]=222;let n=Nd-t;Nd+=2;let a=0;for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&(g(t),g(e[t]),a++);if(a>65535)throw new Error('Object is too large to serialize with fast 16-bit map size, use the "variableMapSize" option to serialize this object');Ad[n+++t]=a>>8,Ad[n+t]=255&a},x=!1===this.useRecords?_:e.progressiveRecords&&!u?e=>{let n,i,r=a.transitions||(a.transitions=Object.create(null)),o=Nd++-t;for(let s in e)if("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(s)){if(n=r[s],n)r=n;else{let l=Object.keys(e),c=r;r=a.transitions;let d=0;for(let e=0,t=l.length;e<t;e++){let t=l[e];n=r[t],n||(n=r[t]=Object.create(null),d++),r=n}o+t+1==Nd?(Nd--,w(r,l,d)):S(r,l,o,d),i=!0,r=c[s]}g(e[s])}if(!i){let n=r[Ld];n?Ad[o+t]=n:S(r,Object.keys(e),o,0)}}:e=>{let t,n=a.transitions||(a.transitions=Object.create(null)),i=0;for(let a in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(a))&&(t=n[a],t||(t=n[a]=Object.create(null),i++),n=t);let r=n[Ld];r?r>=96&&u?(Ad[Nd++]=96+(31&(r-=96)),Ad[Nd++]=r>>5):Ad[Nd++]=r:w(n,n.__keys__||Object.keys(e),i);for(let t in e)("function"!=typeof e.hasOwnProperty||e.hasOwnProperty(t))&&g(e[t])},k="function"==typeof this.useRecords&&this.useRecords,E=k?e=>{k(e)?x(e):_(e)}:x,K=e=>{let n;if(e>16777216){if(e-t>Od)throw new Error("Packed buffer would be larger than maximum buffer size");n=Math.min(Od,4096*Math.round(Math.max((e-t)*(e>67108864?1.25:2),4194304)/4096))}else n=1+(Math.max(e-t<<2,Ad.length-1)>>12)<<12;let a=new Rd(n);return Dd=a.dataView||(a.dataView=new DataView(a.buffer,0,n)),e=Math.min(e,Ad.length),Ad.copy?Ad.copy(a,0,t,e):a.set(Ad.slice(t,e)),Nd-=t,t=0,Pd=a.length-10,Ad=a},w=(e,t,i)=>{let r=a.nextId;r||(r=64),r<p&&this.shouldShareStructure&&!this.shouldShareStructure(t)?(r=a.nextOwnId,r<m||(r=p),a.nextOwnId=r+1):(r>=m&&(r=p),a.nextId=r+1);let o=t.highByte=r>=96&&u?r-96>>5:-1;e[Ld]=r,e.__keys__=t,a[r-64]=t,r<p?(t.isShared=!0,a.sharedLength=r-63,n=!0,o>=0?(Ad[Nd++]=96+(31&r),Ad[Nd++]=o):Ad[Nd++]=r):(o>=0?(Ad[Nd++]=213,Ad[Nd++]=114,Ad[Nd++]=96+(31&r),Ad[Nd++]=o):(Ad[Nd++]=212,Ad[Nd++]=114,Ad[Nd++]=r),i&&(y+=f*i),h.length>=d&&(h.shift()[Ld]=0),h.push(e),g(t))},S=(e,n,a,i)=>{let r=Ad,o=Nd,s=Pd,l=t;Ad=Cd,Nd=0,t=0,Ad||(Cd=Ad=new Rd(8192)),Pd=Ad.length-10,w(e,n,i),Cd=Ad;let c=Nd;if(Ad=r,Nd=o,Pd=s,t=l,c>1){let e=Nd+c-1;e>Pd&&K(e);let n=a+t;Ad.copyWithin(n+c,n+1,Nd),Ad.set(Cd.slice(0,c),n),Nd=e}else Ad[a+t]=Cd[0]},I=e=>{let i=undefined(e,Ad,t,Nd,a,K,(e,t,a)=>{if(a)return n=!0;Nd=t;let i=Ad;return g(e),v(),i!==Ad?{position:Nd,targetView:Dd,target:Ad}:Nd},this);if(0===i)return E(e);Nd=i}}useBuffer(e){Ad=e,Ad.dataView||(Ad.dataView=new DataView(Ad.buffer,Ad.byteOffset,Ad.byteLength)),Dd=Ad.dataView,Nd=0}set position(e){Nd=e}get position(){return Nd}clearSharedData(){this.structures&&(this.structures=[]),this.typedStructs&&(this.typedStructs=[])}}function Ud(e,t,n,a){let i=e.byteLength;if(i+1<256){var{target:r,position:o}=n(4+i);r[o++]=199,r[o++]=i+1}else if(i+1<65536){var{target:r,position:o}=n(5+i);r[o++]=200,r[o++]=i+1>>8,r[o++]=i+1&255}else{var{target:r,position:o,targetView:s}=n(7+i);r[o++]=201,s.setUint32(o,i+1),o+=4}r[o++]=116,r[o++]=t,e.buffer||(e=new Uint8Array(e)),r.set(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),o)}function qd(e,t){let n=e.byteLength;var a,i;if(n<256){var{target:a,position:i}=t(n+2);a[i++]=196,a[i++]=n}else if(n<65536){var{target:a,position:i}=t(n+3);a[i++]=197,a[i++]=n>>8,a[i++]=255&n}else{var{target:a,position:i,targetView:r}=t(n+5);a[i++]=198,r.setUint32(i,n),i+=4}a.set(e,i)}function Vd(e,t,n,a){let i=e.length;switch(i){case 1:t[n++]=212;break;case 2:t[n++]=213;break;case 4:t[n++]=214;break;case 8:t[n++]=215;break;case 16:t[n++]=216;break;default:i<256?(t[n++]=199,t[n++]=i):i<65536?(t[n++]=200,t[n++]=i>>8,t[n++]=255&i):(t[n++]=201,t[n++]=i>>24,t[n++]=i>>16&255,t[n++]=i>>8&255,t[n++]=255&i)}return t[n++]=a,t.set(e,n),n+=i}function Gd(e,t,n){if(Md.length>0){Dd.setUint32(Md.position+e,Nd+n-Md.position-e),Md.stringsPosition=Nd-e;let a=Md;Md=null,t(a[0]),t(a[1])}}Sd=[Date,Set,Error,RegExp,ArrayBuffer,Object.getPrototypeOf(Uint8Array.prototype).constructor,DataView,Uc],wd=[{pack(e,t,n){let a=e.getTime()/1e3;if((this.useTimestamp32||0===e.getMilliseconds())&&a>=0&&a<4294967296){let{target:e,targetView:n,position:i}=t(6);e[i++]=214,e[i++]=255,n.setUint32(i,a)}else if(a>0&&a<4294967296){let{target:n,targetView:i,position:r}=t(10);n[r++]=215,n[r++]=255,i.setUint32(r,4e6*e.getMilliseconds()+(a/1e3/4294967296|0)),i.setUint32(r+4,a)}else if(isNaN(a)){if(this.onInvalidDate)return t(0),n(this.onInvalidDate());let{target:e,targetView:a,position:i}=t(3);e[i++]=212,e[i++]=255,e[i++]=255}else{let{target:n,targetView:i,position:r}=t(15);n[r++]=199,n[r++]=12,n[r++]=255,i.setUint32(r,1e6*e.getMilliseconds()),i.setBigInt64(r+4,BigInt(Math.floor(a)))}}},{pack(e,t,n){if(this.setAsEmptyObject)return t(0),n({});let a=Array.from(e),{target:i,position:r}=t(this.moreTypes?3:0);this.moreTypes&&(i[r++]=212,i[r++]=115,i[r++]=0),n(a)}},{pack(e,t,n){let{target:a,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(a[i++]=212,a[i++]=101,a[i++]=0),n([e.name,e.message,e.cause])}},{pack(e,t,n){let{target:a,position:i}=t(this.moreTypes?3:0);this.moreTypes&&(a[i++]=212,a[i++]=120,a[i++]=0),n([e.source,e.flags])}},{pack(e,t){this.moreTypes?Ud(e,16,t):qd(jd?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let n=e.constructor;n!==Td&&this.moreTypes?Ud(e,vd.indexOf(n.name),t):qd(e,t)}},{pack(e,t){this.moreTypes?Ud(e,17,t):qd(jd?Buffer.from(e):new Uint8Array(e),t)}},{pack(e,t){let{target:n,position:a}=t(1);n[a]=193}}];let Bd=new Jd({useRecords:!1});Bd.pack,Bd.pack;const zd=512,Yd=1024,$d=2048,Wd="5.56.5",Hd=new Jd({useRecords:!1,encodeUndefinedAsNil:!0}).pack;class Qd{constructor(e){this.queue=e,this.version=Wd;const t=this.queue.keys;this.moveToFinishedKeys=[t.wait,t.active,t.prioritized,t.events,t.stalled,t.limiter,t.delayed,t.paused,t.meta,t.pc,void 0,void 0,void 0,void 0]}execCommand(e,t,n){return e[`${t}:${this.version}`](n)}async isJobInList(e,t){const n=await this.queue.client;let a;return a=Pm(this.queue.redisVersion,"6.0.6")?await this.execCommand(n,"isJobInList",[e,t]):await n.lpos(e,t),Number.isInteger(a)}addDelayedJobArgs(e,t,n){const a=this.queue.keys,i=[a.marker,a.meta,a.id,a.delayed,a.completed,a.events];return i.push(Hd(n),e.data,t),i}addDelayedJob(e,t,n,a){const i=this.addDelayedJobArgs(t,n,a);return this.execCommand(e,"addDelayedJob",i)}addPrioritizedJobArgs(e,t,n){const a=this.queue.keys,i=[a.marker,a.meta,a.id,a.prioritized,a.delayed,a.completed,a.active,a.events,a.pc];return i.push(Hd(n),e.data,t),i}addPrioritizedJob(e,t,n,a){const i=this.addPrioritizedJobArgs(t,n,a);return this.execCommand(e,"addPrioritizedJob",i)}addParentJobArgs(e,t,n){const a=this.queue.keys,i=[a.meta,a.id,a.delayed,a.completed,a.events];return i.push(Hd(n),e.data,t),i}addParentJob(e,t,n,a){const i=this.addParentJobArgs(t,n,a);return this.execCommand(e,"addParentJob",i)}addStandardJobArgs(e,t,n){const a=this.queue.keys,i=[a.wait,a.paused,a.meta,a.id,a.completed,a.delayed,a.active,a.events,a.marker];return i.push(Hd(n),e.data,t),i}addStandardJob(e,t,n,a){const i=this.addStandardJobArgs(t,n,a);return this.execCommand(e,"addStandardJob",i)}async addJob(e,t,n,a,i={}){const r=this.queue.keys,o=t.parent,s=[r[""],void 0!==a?a:"",t.name,t.timestamp,t.parentKey||null,i.waitChildrenKey||null,i.parentDependenciesKey||null,o,t.repeatJobKey,t.deduplicationId?`${r.de}:${t.deduplicationId}`:null];let l,c;if(n.repeat){const e=Object.assign({},n.repeat);e.startDate&&(e.startDate=+new Date(e.startDate)),e.endDate&&(e.endDate=+new Date(e.endDate)),l=Hd(Object.assign(Object.assign({},n),{repeat:e}))}else l=Hd(n);if(c=i.waitChildrenKey?await this.addParentJob(e,t,l,s):"number"==typeof n.delay&&n.delay>0?await this.addDelayedJob(e,t,l,s):n.priority?await this.addPrioritizedJob(e,t,l,s):await this.addStandardJob(e,t,l,s),c<0)throw this.finishedErrors({code:c,parentKey:i.parentKey,command:"addJob"});return c}pauseArgs(e){let t="wait",n="paused";e||(t="paused",n="wait");const a=[t,n,"meta","prioritized"].map(e=>this.queue.toKey(e));a.push(this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.marker);const i=[e?"paused":"resumed"];return a.concat(i)}async pause(e){const t=await this.queue.client,n=this.pauseArgs(e);return this.execCommand(t,"pause",n)}addRepeatableJobArgs(e,t,n,a){const i=this.queue.keys,r=[i.repeat,i.delayed],o=[t,Hd(n),a,e,i[""]];return r.concat(o)}async addRepeatableJob(e,t,n,a){const i=await this.queue.client,r=this.addRepeatableJobArgs(e,t,n,a);return this.execCommand(i,"addRepeatableJob",r)}async addJobScheduler(e,t,n,a,i,r,o){const s=await this.queue.client,l=this.queue.keys,c=[l.repeat,l.delayed,l.wait,l.paused,l.meta,l.prioritized,l.marker,l.id,l.events,l.pc,l.active],d=[t,Hd(i),e,n,Hd(a),Hd(r),Date.now(),l[""],o?this.queue.toKey(o):""];return this.execCommand(s,"addJobScheduler",c.concat(d))}async updateRepeatableJobMillis(e,t,n,a){const i=[this.queue.keys.repeat,n,t,a];return this.execCommand(e,"updateRepeatableJobMillis",i)}async updateJobSchedulerNextMillis(e,t,n,a,i){const r=await this.queue.client,o=this.queue.keys,s=[o.repeat,o.delayed,o.wait,o.paused,o.meta,o.prioritized,o.marker,o.id,o.events,o.pc,i?this.queue.toKey(i):"",o.active],l=[t,e,n,Hd(a),Date.now(),o[""],i];return this.execCommand(r,"updateJobScheduler",s.concat(l))}removeRepeatableArgs(e,t,n){const a=this.queue.keys,i=[a.repeat,a.delayed,a.events],r=[e,this.getRepeatConcatOptions(t,n),n,a[""]];return i.concat(r)}getRepeatConcatOptions(e,t){return t&&t.split(":").length>2?t:e}async removeRepeatable(e,t,n){const a=await this.queue.client,i=this.removeRepeatableArgs(e,t,n);return this.execCommand(a,"removeRepeatable",i)}async removeJobScheduler(e){const t=await this.queue.client,n=this.queue.keys,a=[n.repeat,n.delayed,n.events],i=[e,n[""]];return this.execCommand(t,"removeJobScheduler",a.concat(i))}removeArgs(e,t){const n=[e,"repeat"].map(e=>this.queue.toKey(e)),a=[e,t?1:0,this.queue.toKey("")];return n.concat(a)}async remove(e,t){const n=await this.queue.client,a=this.removeArgs(e,t),i=await this.execCommand(n,"removeJob",a);if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"removeJob"});return i}async removeUnprocessedChildren(e){const t=await this.queue.client,n=[this.queue.toKey(e),this.queue.keys.meta,this.queue.toKey(""),e];await this.execCommand(t,"removeUnprocessedChildren",n)}async extendLock(e,t,n,a){a=a||await this.queue.client;const i=[this.queue.toKey(e)+":lock",this.queue.keys.stalled,t,n,e];return this.execCommand(a,"extendLock",i)}async extendLocks(e,t,n){const a=await this.queue.client,i=[this.queue.keys.stalled,this.queue.toKey(""),Hd(t),Hd(e),n];return this.execCommand(a,"extendLocks",i)}async updateData(e,t){const n=await this.queue.client,a=[this.queue.toKey(e.id)],i=JSON.stringify(t),r=await this.execCommand(n,"updateData",a.concat([i]));if(r<0)throw this.finishedErrors({code:r,jobId:e.id,command:"updateData"})}async updateProgress(e,t){const n=await this.queue.client,a=[this.queue.toKey(e),this.queue.keys.events,this.queue.keys.meta],i=JSON.stringify(t),r=await this.execCommand(n,"updateProgress",a.concat([e,i]));if(r<0)throw this.finishedErrors({code:r,jobId:e,command:"updateProgress"})}async addLog(e,t,n){const a=await this.queue.client,i=[this.queue.toKey(e),this.queue.toKey(e)+":logs"],r=await this.execCommand(a,"addLog",i.concat([e,t,n||""]));if(r<0)throw this.finishedErrors({code:r,jobId:e,command:"addLog"});return r}moveToFinishedArgs(e,t,n,a,i,r,o,s=!0,l){var c,d,u,p,m,h,y;const f=this.queue.keys,v=this.queue.opts,b="completed"===i?v.removeOnComplete:v.removeOnFail,g=this.queue.toKey(`metrics:${i}`),_=this.moveToFinishedKeys;_[10]=f[i],_[11]=this.queue.toKey(null!==(c=e.id)&&void 0!==c?c:""),_[12]=g,_[13]=this.queue.keys.marker;const x=this.getKeepJobs(a,b),k=[e.id,o,n,void 0===t?"null":t,i,!s||this.queue.closing?0:1,f[""],Hd({token:r,name:v.name,keepJobs:x,limiter:v.limiter,lockDuration:v.lockDuration,attempts:e.opts.attempts,maxMetricsSize:(null===(d=v.metrics)||void 0===d?void 0:d.maxDataPoints)?null===(u=v.metrics)||void 0===u?void 0:u.maxDataPoints:"",fpof:!!(null===(p=e.opts)||void 0===p?void 0:p.failParentOnFailure),cpof:!!(null===(m=e.opts)||void 0===m?void 0:m.continueParentOnFailure),idof:!!(null===(h=e.opts)||void 0===h?void 0:h.ignoreDependencyOnFailure),rdof:!!(null===(y=e.opts)||void 0===y?void 0:y.removeDependencyOnFailure)}),l?Hd(Em(l)):void 0];return _.concat(k)}getKeepJobs(e,t){return void 0===e?t||{count:e?0:-1}:"object"==typeof e?e:"number"==typeof e?{count:e}:{count:e?0:-1}}async moveToFinished(e,t){const n=await this.queue.client,a=await this.execCommand(n,"moveToFinished",t);if(a<0)throw this.finishedErrors({code:a,jobId:e,command:"moveToFinished",state:"active"});if(void 0!==a)return Zd(a)}drainArgs(e){const t=this.queue.keys,n=[t.wait,t.paused,t.delayed,t.prioritized,t.repeat],a=[t[""],e?"1":"0"];return n.concat(a)}async drain(e){const t=await this.queue.client,n=this.drainArgs(e);return this.execCommand(t,"drain",n)}removeChildDependencyArgs(e,t){const n=[this.queue.keys[""]],a=[this.queue.toKey(e),t];return n.concat(a)}async removeChildDependency(e,t){const n=await this.queue.client,a=this.removeChildDependencyArgs(e,t),i=await this.execCommand(n,"removeChildDependency",a);switch(i){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:i,jobId:e,parentKey:t,command:"removeChildDependency"})}}getRangesArgs(e,t,n,a){const i=this.queue.keys,r=e.map(e=>"waiting"===e?"wait":e),o=[t,n,a?"1":"0",...r];return[i[""]].concat(o)}async getRanges(e,t=0,n=1,a=!1){const i=await this.queue.client,r=this.getRangesArgs(e,t,n,a);return await this.execCommand(i,"getRanges",r)}getCountsArgs(e){const t=this.queue.keys,n=e.map(e=>"waiting"===e?"wait":e),a=[...n];return[t[""]].concat(a)}async getCounts(e){const t=await this.queue.client,n=this.getCountsArgs(e);return await this.execCommand(t,"getCounts",n)}getCountsPerPriorityArgs(e){const t=e;return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized].concat(t)}async getCountsPerPriority(e){const t=await this.queue.client,n=this.getCountsPerPriorityArgs(e);return await this.execCommand(t,"getCountsPerPriority",n)}getDependencyCountsArgs(e,t){const n=t;return[`${e}:processed`,`${e}:dependencies`,`${e}:failed`,`${e}:unsuccessful`].map(e=>this.queue.toKey(e)).concat(n)}async getDependencyCounts(e,t){const n=await this.queue.client,a=this.getDependencyCountsArgs(e,t);return await this.execCommand(n,"getDependencyCounts",a)}moveToCompletedArgs(e,t,n,a,i=!1){const r=Date.now();return this.moveToFinishedArgs(e,t,"returnvalue",n,"completed",a,r,i)}moveToFailedArgs(e,t,n,a,i=!1,r){const o=Date.now();return this.moveToFinishedArgs(e,t,"failedReason",n,"failed",a,o,i,r)}async isFinished(e,t=!1){const n=await this.queue.client,a=["completed","failed",e].map(e=>this.queue.toKey(e));return this.execCommand(n,"isFinished",a.concat([e,t?"1":""]))}async getState(e){const t=await this.queue.client,n=["completed","failed","delayed","active","wait","paused","waiting-children","prioritized"].map(e=>this.queue.toKey(e));return Pm(this.queue.redisVersion,"6.0.6")?this.execCommand(t,"getState",n.concat([e])):this.execCommand(t,"getStateV2",n.concat([e]))}async changeDelay(e,t){const n=await this.queue.client,a=this.changeDelayArgs(e,t),i=await this.execCommand(n,"changeDelay",a);if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"changeDelay",state:"delayed"})}changeDelayArgs(e,t){const n=Date.now();return[this.queue.keys.delayed,this.queue.keys.meta,this.queue.keys.marker,this.queue.keys.events].concat([t,JSON.stringify(n),e,this.queue.toKey(e)])}async changePriority(e,t=0,n=!1){const a=await this.queue.client,i=this.changePriorityArgs(e,t,n),r=await this.execCommand(a,"changePriority",i);if(r<0)throw this.finishedErrors({code:r,jobId:e,command:"changePriority"})}changePriorityArgs(e,t=0,n=!1){return[this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.marker].concat([t,this.queue.toKey(""),e,n?1:0])}moveToDelayedArgs(e,t,n,a,i={}){const r=this.queue.keys;return[r.marker,r.active,r.prioritized,r.delayed,this.queue.toKey(e),r.events,r.meta,r.stalled].concat([this.queue.keys[""],t,e,n,a,i.skipAttempt?"1":"0",i.fieldsToUpdate?Hd(Em(i.fieldsToUpdate)):void 0])}moveToWaitingChildrenArgs(e,t,n){const a=Date.now(),i=Om(n.child);return["active","waiting-children",e,`${e}:dependencies`,`${e}:unsuccessful`,"stalled","failed","events"].map(e=>this.queue.toKey(e)).concat([t,null!=i?i:"",JSON.stringify(a),e,this.queue.toKey("")])}isMaxedArgs(){const e=this.queue.keys;return[e.meta,e.active]}async isMaxed(){const e=await this.queue.client,t=this.isMaxedArgs();return!!await this.execCommand(e,"isMaxed",t)}async moveToDelayed(e,t,n,a="0",i={}){const r=await this.queue.client,o=this.moveToDelayedArgs(e,t,a,n,i),s=await this.execCommand(r,"moveToDelayed",o);if(s<0)throw this.finishedErrors({code:s,jobId:e,command:"moveToDelayed",state:"active"})}async moveToWaitingChildren(e,t,n={}){const a=await this.queue.client,i=this.moveToWaitingChildrenArgs(e,t,n),r=await this.execCommand(a,"moveToWaitingChildren",i);switch(r){case 0:return!0;case 1:return!1;default:throw this.finishedErrors({code:r,jobId:e,command:"moveToWaitingChildren",state:"active"})}}getRateLimitTtlArgs(e){return[this.queue.keys.limiter].concat([null!=e?e:"0"])}async getRateLimitTtl(e){const t=await this.queue.client,n=this.getRateLimitTtlArgs(e);return this.execCommand(t,"getRateLimitTtl",n)}async cleanJobsInSet(e,t,n=0){const a=await this.queue.client;return this.execCommand(a,"cleanJobsInSet",[this.queue.toKey(e),this.queue.toKey("events"),this.queue.toKey("repeat"),this.queue.toKey(""),t,n,e])}getJobSchedulerArgs(e){return[this.queue.keys.repeat].concat([e])}async getJobScheduler(e){const t=await this.queue.client,n=this.getJobSchedulerArgs(e);return this.execCommand(t,"getJobScheduler",n)}retryJobArgs(e,t,n,a={}){const i=(t?"R":"L")+"PUSH";return[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.paused,this.queue.toKey(e),this.queue.keys.meta,this.queue.keys.events,this.queue.keys.delayed,this.queue.keys.prioritized,this.queue.keys.pc,this.queue.keys.marker,this.queue.keys.stalled].concat([this.queue.toKey(""),Date.now(),i,e,n,a.fieldsToUpdate?Hd(Em(a.fieldsToUpdate)):void 0])}async retryJob(e,t,n="0",a={}){const i=await this.queue.client,r=this.retryJobArgs(e,t,n,a),o=await this.execCommand(i,"retryJob",r);if(o<0)throw this.finishedErrors({code:o,jobId:e,command:"retryJob",state:"active"})}moveJobsToWaitArgs(e,t,n){const a=[t,n,e];return[this.queue.toKey(""),this.queue.keys.events,this.queue.toKey(e),this.queue.toKey("wait"),this.queue.toKey("paused"),this.queue.keys.meta,this.queue.keys.active,this.queue.keys.marker].concat(a)}async retryJobs(e="failed",t=1e3,n=(new Date).getTime()){const a=await this.queue.client,i=this.moveJobsToWaitArgs(e,t,n);return this.execCommand(a,"moveJobsToWait",i)}async promoteJobs(e=1e3){const t=await this.queue.client,n=this.moveJobsToWaitArgs("delayed",e,Number.MAX_VALUE);return this.execCommand(t,"moveJobsToWait",n)}async reprocessJob(e,t){const n=await this.queue.client,a=[this.queue.toKey(e.id),this.queue.keys.events,this.queue.toKey(t),this.queue.keys.wait,this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.active,this.queue.keys.marker],i=[e.id,(e.opts.lifo?"R":"L")+"PUSH","failed"===t?"failedReason":"returnvalue",t],r=await this.execCommand(n,"reprocessJob",a.concat(i));if(1!==r)throw this.finishedErrors({code:r,jobId:e.id,command:"reprocessJob",state:t})}async moveToActive(e,t,n){const a=this.queue.opts,i=this.queue.keys,r=[i.wait,i.active,i.prioritized,i.events,i.stalled,i.limiter,i.delayed,i.paused,i.meta,i.pc,i.marker],o=[i[""],Date.now(),Hd({token:t,lockDuration:a.lockDuration,limiter:a.limiter,name:n})];return Zd(await this.execCommand(e,"moveToActive",r.concat(o)))}async promote(e){const t=await this.queue.client,n=[this.queue.keys.delayed,this.queue.keys.wait,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.prioritized,this.queue.keys.active,this.queue.keys.pc,this.queue.keys.events,this.queue.keys.marker],a=[this.queue.toKey(""),e],i=await this.execCommand(t,"promote",n.concat(a));if(i<0)throw this.finishedErrors({code:i,jobId:e,command:"promote",state:"delayed"})}moveStalledJobsToWaitArgs(){const e=this.queue.opts,t=[this.queue.keys.stalled,this.queue.keys.wait,this.queue.keys.active,this.queue.keys["stalled-check"],this.queue.keys.meta,this.queue.keys.paused,this.queue.keys.marker,this.queue.keys.events],n=[e.maxStalledCount,this.queue.toKey(""),Date.now(),e.stalledInterval];return t.concat(n)}async moveStalledJobsToWait(){const e=await this.queue.client,t=this.moveStalledJobsToWaitArgs();return this.execCommand(e,"moveStalledJobsToWait",t)}async moveJobFromActiveToWait(e,t="0"){const n=await this.queue.client,a=[this.queue.keys.active,this.queue.keys.wait,this.queue.keys.stalled,this.queue.keys.paused,this.queue.keys.meta,this.queue.keys.limiter,this.queue.keys.prioritized,this.queue.keys.marker,this.queue.keys.events],i=[e,t,this.queue.toKey(e)],r=await this.execCommand(n,"moveJobFromActiveToWait",a.concat(i));if(r<0)throw this.finishedErrors({code:r,jobId:e,command:"moveJobFromActiveToWait",state:"active"});return r}async obliterate(e){const t=await this.queue.client,n=[this.queue.keys.meta,this.queue.toKey("")],a=[e.count,e.force?"force":null],i=await this.execCommand(t,"obliterate",n.concat(a));if(i<0)switch(i){case-1:throw new Error("Cannot obliterate non-paused queue");case-2:throw new Error("Cannot obliterate queue with active jobs")}return i}async paginate(e,t){const n=await this.queue.client,a=[e],i=t.end>=0?t.end-t.start+1:1/0;let r,o,s,l="0",c=0,d=[],u=[];do{const e=[t.start+d.length,t.end,l,c,5];t.fetchJobs&&e.push(1),[l,c,r,o,s]=await this.execCommand(n,"paginate",a.concat(e)),d=d.concat(r),s&&s.length&&(u=u.concat(s.map(km)))}while("0"!=l&&d.length<i);if(d.length&&Array.isArray(d[0])){const e=[];for(let t=0;t<d.length;t++){const[n,a]=d[t];try{e.push({id:n,v:JSON.parse(a)})}catch(t){e.push({id:n,err:t.message})}}return{cursor:l,items:e,total:o,jobs:u}}return{cursor:l,items:d.map(e=>({id:e})),total:o,jobs:u}}finishedErrors({code:e,jobId:t,parentKey:n,command:a,state:i}){switch(e){case Or.JobNotExist:return new Error(`Missing key for job ${t}. ${a}`);case Or.JobLockNotExist:return new Error(`Missing lock for job ${t}. ${a}`);case Or.JobNotInState:return new Error(`Job ${t} is not in the ${i} state. ${a}`);case Or.JobPendingChildren:return new Error(`Job ${t} has pending dependencies. ${a}`);case Or.ParentJobNotExist:return new Error(`Missing key for parent job ${n}. ${a}`);case Or.JobLockMismatch:return new Error(`Lock mismatch for job ${t}. Cmd ${a} from ${i}`);case Or.ParentJobCannotBeReplaced:return new Error(`The parent job ${n} cannot be replaced. ${a}`);case Or.JobBelongsToJobScheduler:return new Error(`Job ${t} belongs to a job scheduler and cannot be removed directly. ${a}`);case Or.JobFailedChildren:return new Error(`Job ${t} has failed children. ${a}`);default:return new Error(`Unknown code ${e} error for ${t}. ${a}`)}}}function Zd(e){if(e){const t=[null,e[1],e[2],e[3]];return e[0]&&(t[0]=km(e[0])),t}return[]}var Xd={exports:{}};var eu={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER||9007199254740991,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2};var tu="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};!function(e,t){const{MAX_SAFE_COMPONENT_LENGTH:n,MAX_SAFE_BUILD_LENGTH:a,MAX_LENGTH:i}=eu,r=tu,o=(t=e.exports={}).re=[],s=t.safeRe=[],l=t.src=[],c=t.safeSrc=[],d=t.t={};let u=0;const p="[a-zA-Z0-9-]",m=[["\\s",1],["\\d",i],[p,a]],h=(e,t,n)=>{const a=(e=>{for(const[t,n]of m)e=e.split(`${t}*`).join(`${t}{0,${n}}`).split(`${t}+`).join(`${t}{1,${n}}`);return e})(t),i=u++;r(e,i,t),d[e]=i,l[i]=t,c[i]=a,o[i]=new RegExp(t,n?"g":void 0),s[i]=new RegExp(a,n?"g":void 0)};h("NUMERICIDENTIFIER","0|[1-9]\\d*"),h("NUMERICIDENTIFIERLOOSE","\\d+"),h("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${p}*`),h("MAINVERSION",`(${l[d.NUMERICIDENTIFIER]})\\.(${l[d.NUMERICIDENTIFIER]})\\.(${l[d.NUMERICIDENTIFIER]})`),h("MAINVERSIONLOOSE",`(${l[d.NUMERICIDENTIFIERLOOSE]})\\.(${l[d.NUMERICIDENTIFIERLOOSE]})\\.(${l[d.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASEIDENTIFIER",`(?:${l[d.NONNUMERICIDENTIFIER]}|${l[d.NUMERICIDENTIFIER]})`),h("PRERELEASEIDENTIFIERLOOSE",`(?:${l[d.NONNUMERICIDENTIFIER]}|${l[d.NUMERICIDENTIFIERLOOSE]})`),h("PRERELEASE",`(?:-(${l[d.PRERELEASEIDENTIFIER]}(?:\\.${l[d.PRERELEASEIDENTIFIER]})*))`),h("PRERELEASELOOSE",`(?:-?(${l[d.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${l[d.PRERELEASEIDENTIFIERLOOSE]})*))`),h("BUILDIDENTIFIER",`${p}+`),h("BUILD",`(?:\\+(${l[d.BUILDIDENTIFIER]}(?:\\.${l[d.BUILDIDENTIFIER]})*))`),h("FULLPLAIN",`v?${l[d.MAINVERSION]}${l[d.PRERELEASE]}?${l[d.BUILD]}?`),h("FULL",`^${l[d.FULLPLAIN]}$`),h("LOOSEPLAIN",`[v=\\s]*${l[d.MAINVERSIONLOOSE]}${l[d.PRERELEASELOOSE]}?${l[d.BUILD]}?`),h("LOOSE",`^${l[d.LOOSEPLAIN]}$`),h("GTLT","((?:<|>)?=?)"),h("XRANGEIDENTIFIERLOOSE",`${l[d.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),h("XRANGEIDENTIFIER",`${l[d.NUMERICIDENTIFIER]}|x|X|\\*`),h("XRANGEPLAIN",`[v=\\s]*(${l[d.XRANGEIDENTIFIER]})(?:\\.(${l[d.XRANGEIDENTIFIER]})(?:\\.(${l[d.XRANGEIDENTIFIER]})(?:${l[d.PRERELEASE]})?${l[d.BUILD]}?)?)?`),h("XRANGEPLAINLOOSE",`[v=\\s]*(${l[d.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[d.XRANGEIDENTIFIERLOOSE]})(?:\\.(${l[d.XRANGEIDENTIFIERLOOSE]})(?:${l[d.PRERELEASELOOSE]})?${l[d.BUILD]}?)?)?`),h("XRANGE",`^${l[d.GTLT]}\\s*${l[d.XRANGEPLAIN]}$`),h("XRANGELOOSE",`^${l[d.GTLT]}\\s*${l[d.XRANGEPLAINLOOSE]}$`),h("COERCEPLAIN",`(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?`),h("COERCE",`${l[d.COERCEPLAIN]}(?:$|[^\\d])`),h("COERCEFULL",l[d.COERCEPLAIN]+`(?:${l[d.PRERELEASE]})?`+`(?:${l[d.BUILD]})?(?:$|[^\\d])`),h("COERCERTL",l[d.COERCE],!0),h("COERCERTLFULL",l[d.COERCEFULL],!0),h("LONETILDE","(?:~>?)"),h("TILDETRIM",`(\\s*)${l[d.LONETILDE]}\\s+`,!0),t.tildeTrimReplace="$1~",h("TILDE",`^${l[d.LONETILDE]}${l[d.XRANGEPLAIN]}$`),h("TILDELOOSE",`^${l[d.LONETILDE]}${l[d.XRANGEPLAINLOOSE]}$`),h("LONECARET","(?:\\^)"),h("CARETTRIM",`(\\s*)${l[d.LONECARET]}\\s+`,!0),t.caretTrimReplace="$1^",h("CARET",`^${l[d.LONECARET]}${l[d.XRANGEPLAIN]}$`),h("CARETLOOSE",`^${l[d.LONECARET]}${l[d.XRANGEPLAINLOOSE]}$`),h("COMPARATORLOOSE",`^${l[d.GTLT]}\\s*(${l[d.LOOSEPLAIN]})$|^$`),h("COMPARATOR",`^${l[d.GTLT]}\\s*(${l[d.FULLPLAIN]})$|^$`),h("COMPARATORTRIM",`(\\s*)${l[d.GTLT]}\\s*(${l[d.LOOSEPLAIN]}|${l[d.XRANGEPLAIN]})`,!0),t.comparatorTrimReplace="$1$2$3",h("HYPHENRANGE",`^\\s*(${l[d.XRANGEPLAIN]})\\s+-\\s+(${l[d.XRANGEPLAIN]})\\s*$`),h("HYPHENRANGELOOSE",`^\\s*(${l[d.XRANGEPLAINLOOSE]})\\s+-\\s+(${l[d.XRANGEPLAINLOOSE]})\\s*$`),h("STAR","(<|>)?=?\\s*\\*"),h("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),h("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}(Xd,Xd.exports);const nu=Object.freeze({loose:!0}),au=Object.freeze({});var iu=e=>e?"object"!=typeof e?nu:e:au;const ru=/^[0-9]+$/,ou=(e,t)=>{const n=ru.test(e),a=ru.test(t);return n&&a&&(e=+e,t=+t),e===t?0:n&&!a?-1:a&&!n?1:e<t?-1:1};var su={compareIdentifiers:ou,rcompareIdentifiers:(e,t)=>ou(t,e)};const lu=tu,{MAX_LENGTH:cu,MAX_SAFE_INTEGER:du}=eu,{safeRe:uu,t:pu}=Xd.exports,mu=iu,{compareIdentifiers:hu}=su;var yu=class e{constructor(t,n){if(n=mu(n),t instanceof e){if(t.loose===!!n.loose&&t.includePrerelease===!!n.includePrerelease)return t;t=t.version}else if("string"!=typeof t)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof t}".`);if(t.length>cu)throw new TypeError(`version is longer than ${cu} characters`);lu("SemVer",t,n),this.options=n,this.loose=!!n.loose,this.includePrerelease=!!n.includePrerelease;const a=t.trim().match(n.loose?uu[pu.LOOSE]:uu[pu.FULL]);if(!a)throw new TypeError(`Invalid Version: ${t}`);if(this.raw=t,this.major=+a[1],this.minor=+a[2],this.patch=+a[3],this.major>du||this.major<0)throw new TypeError("Invalid major version");if(this.minor>du||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>du||this.patch<0)throw new TypeError("Invalid patch version");a[4]?this.prerelease=a[4].split(".").map(e=>{if(/^[0-9]+$/.test(e)){const t=+e;if(t>=0&&t<du)return t}return e}):this.prerelease=[],this.build=a[5]?a[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(t){if(lu("SemVer.compare",this.version,this.options,t),!(t instanceof e)){if("string"==typeof t&&t===this.version)return 0;t=new e(t,this.options)}return t.version===this.version?0:this.compareMain(t)||this.comparePre(t)}compareMain(t){return t instanceof e||(t=new e(t,this.options)),hu(this.major,t.major)||hu(this.minor,t.minor)||hu(this.patch,t.patch)}comparePre(t){if(t instanceof e||(t=new e(t,this.options)),this.prerelease.length&&!t.prerelease.length)return-1;if(!this.prerelease.length&&t.prerelease.length)return 1;if(!this.prerelease.length&&!t.prerelease.length)return 0;let n=0;do{const e=this.prerelease[n],a=t.prerelease[n];if(lu("prerelease compare",n,e,a),void 0===e&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===e)return-1;if(e!==a)return hu(e,a)}while(++n)}compareBuild(t){t instanceof e||(t=new e(t,this.options));let n=0;do{const e=this.build[n],a=t.build[n];if(lu("build compare",n,e,a),void 0===e&&void 0===a)return 0;if(void 0===a)return 1;if(void 0===e)return-1;if(e!==a)return hu(e,a)}while(++n)}inc(e,t,n){if(e.startsWith("pre")){if(!t&&!1===n)throw new Error("invalid increment argument: identifier is empty");if(t){const e=`-${t}`.match(this.options.loose?uu[pu.PRERELEASELOOSE]:uu[pu.PRERELEASE]);if(!e||e[1]!==t)throw new Error(`invalid identifier: ${t}`)}}switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,n);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,n);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,n),this.inc("pre",t,n);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",t,n),this.inc("pre",t,n);break;case"release":if(0===this.prerelease.length)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{const e=Number(n)?1:0;if(0===this.prerelease.length)this.prerelease=[e];else{let a=this.prerelease.length;for(;--a>=0;)"number"==typeof this.prerelease[a]&&(this.prerelease[a]++,a=-2);if(-1===a){if(t===this.prerelease.join(".")&&!1===n)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(e)}}if(t){let a=[t,e];!1===n&&(a=[t]),0===hu(this.prerelease[0],t)?isNaN(this.prerelease[1])&&(this.prerelease=a):this.prerelease=a}break}default:throw new Error(`invalid increment argument: ${e}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};const fu=yu;var vu=(e,t,n=!1)=>{if(e instanceof fu)return e;try{return new fu(e,t)}catch(e){if(!n)return null;throw e}};const bu=vu;var gu=(e,t)=>{const n=bu(e,t);return n?n.version:null};const _u=vu;var xu=(e,t)=>{const n=_u(e.trim().replace(/^[=v]+/,""),t);return n?n.version:null};const ku=yu;var Eu=(e,t,n,a,i)=>{"string"==typeof n&&(i=a,a=n,n=void 0);try{return new ku(e instanceof ku?e.version:e,n).inc(t,a,i).version}catch(e){return null}};const Ku=vu;var wu=(e,t)=>{const n=Ku(e,null,!0),a=Ku(t,null,!0),i=n.compare(a);if(0===i)return null;const r=i>0,o=r?n:a,s=r?a:n,l=!!o.prerelease.length;if(!!s.prerelease.length&&!l){if(!s.patch&&!s.minor)return"major";if(0===s.compareMain(o))return s.minor&&!s.patch?"minor":"patch"}const c=l?"pre":"";return n.major!==a.major?c+"major":n.minor!==a.minor?c+"minor":n.patch!==a.patch?c+"patch":"prerelease"};const Su=yu;var Iu=(e,t)=>new Su(e,t).major;const ju=yu;var Ru=(e,t)=>new ju(e,t).minor;const Tu=yu;var Ou=(e,t)=>new Tu(e,t).patch;const Au=vu;var Cu=(e,t)=>{const n=Au(e,t);return n&&n.prerelease.length?n.prerelease:null};const Du=yu;var Pu=(e,t,n)=>new Du(e,n).compare(new Du(t,n));const Nu=Pu;var Mu=(e,t,n)=>Nu(t,e,n);const Fu=Pu;var Lu=(e,t)=>Fu(e,t,!0);const Ju=yu;var Uu=(e,t,n)=>{const a=new Ju(e,n),i=new Ju(t,n);return a.compare(i)||a.compareBuild(i)};const qu=Uu;var Vu=(e,t)=>e.sort((e,n)=>qu(e,n,t));const Gu=Uu;var Bu=(e,t)=>e.sort((e,n)=>Gu(n,e,t));const zu=Pu;var Yu=(e,t,n)=>zu(e,t,n)>0;const $u=Pu;var Wu=(e,t,n)=>$u(e,t,n)<0;const Hu=Pu;var Qu=(e,t,n)=>0===Hu(e,t,n);const Zu=Pu;var Xu=(e,t,n)=>0!==Zu(e,t,n);const ep=Pu;var tp=(e,t,n)=>ep(e,t,n)>=0;const np=Pu;var ap=(e,t,n)=>np(e,t,n)<=0;const ip=Qu,rp=Xu,op=Yu,sp=tp,lp=Wu,cp=ap;var dp=(e,t,n,a)=>{switch(t){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e===n;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof n&&(n=n.version),e!==n;case"":case"=":case"==":return ip(e,n,a);case"!=":return rp(e,n,a);case">":return op(e,n,a);case">=":return sp(e,n,a);case"<":return lp(e,n,a);case"<=":return cp(e,n,a);default:throw new TypeError(`Invalid operator: ${t}`)}};const up=yu,pp=vu,{safeRe:mp,t:hp}=Xd.exports;var yp=(e,t)=>{if(e instanceof up)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let n=null;if((t=t||{}).rtl){const a=t.includePrerelease?mp[hp.COERCERTLFULL]:mp[hp.COERCERTL];let i;for(;(i=a.exec(e))&&(!n||n.index+n[0].length!==e.length);)n&&i.index+i[0].length===n.index+n[0].length||(n=i),a.lastIndex=i.index+i[1].length+i[2].length;a.lastIndex=-1}else n=e.match(t.includePrerelease?mp[hp.COERCEFULL]:mp[hp.COERCE]);if(null===n)return null;const a=n[2],i=n[3]||"0",r=n[4]||"0",o=t.includePrerelease&&n[5]?`-${n[5]}`:"",s=t.includePrerelease&&n[6]?`+${n[6]}`:"";return pp(`${a}.${i}.${r}${o}${s}`,t)};var fp,vp,bp,gp,_p=class{constructor(){this.max=1e3,this.map=new Map}get(e){const t=this.map.get(e);return void 0===t?void 0:(this.map.delete(e),this.map.set(e,t),t)}delete(e){return this.map.delete(e)}set(e,t){if(!this.delete(e)&&void 0!==t){if(this.map.size>=this.max){const e=this.map.keys().next().value;this.delete(e)}this.map.set(e,t)}return this}};function xp(){if(vp)return fp;vp=1;const e=/\s+/g;class t{constructor(n,r){if(r=a(r),n instanceof t)return n.loose===!!r.loose&&n.includePrerelease===!!r.includePrerelease?n:new t(n.raw,r);if(n instanceof i)return this.raw=n.value,this.set=[[n]],this.formatted=void 0,this;if(this.options=r,this.loose=!!r.loose,this.includePrerelease=!!r.includePrerelease,this.raw=n.trim().replace(e," "),this.set=this.raw.split("||").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter(e=>!h(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&y(e[0])){this.set=[e];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let e=0;e<this.set.length;e++){e>0&&(this.formatted+="||");const t=this.set[e];for(let e=0;e<t.length;e++)e>0&&(this.formatted+=" "),this.formatted+=t[e].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(e){const t=((this.options.includePrerelease&&p)|(this.options.loose&&m))+":"+e,a=n.get(t);if(a)return a;const o=this.options.loose,y=o?s[l.HYPHENRANGELOOSE]:s[l.HYPHENRANGE];e=e.replace(y,I(this.options.includePrerelease)),r("hyphen replace",e),e=e.replace(s[l.COMPARATORTRIM],c),r("comparator trim",e),e=e.replace(s[l.TILDETRIM],d),r("tilde trim",e),e=e.replace(s[l.CARETTRIM],u),r("caret trim",e);let f=e.split(" ").map(e=>v(e,this.options)).join(" ").split(/\s+/).map(e=>S(e,this.options));o&&(f=f.filter(e=>(r("loose invalid filter",e,this.options),!!e.match(s[l.COMPARATORLOOSE])))),r("range list",f);const b=new Map,g=f.map(e=>new i(e,this.options));for(const e of g){if(h(e))return[e];b.set(e.value,e)}b.size>1&&b.has("")&&b.delete("");const _=[...b.values()];return n.set(t,_),_}intersects(e,n){if(!(e instanceof t))throw new TypeError("a Range is required");return this.set.some(t=>f(t,n)&&e.set.some(e=>f(e,n)&&t.every(t=>e.every(e=>t.intersects(e,n)))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new o(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(j(this.set[t],e,this.options))return!0;return!1}}fp=t;const n=new _p,a=iu,i=kp(),r=tu,o=yu,{safeRe:s,t:l,comparatorTrimReplace:c,tildeTrimReplace:d,caretTrimReplace:u}=Xd.exports,{FLAG_INCLUDE_PRERELEASE:p,FLAG_LOOSE:m}=eu,h=e=>"<0.0.0-0"===e.value,y=e=>""===e.value,f=(e,t)=>{let n=!0;const a=e.slice();let i=a.pop();for(;n&&a.length;)n=a.every(e=>i.intersects(e,t)),i=a.pop();return n},v=(e,t)=>(r("comp",e,t),e=x(e,t),r("caret",e),e=g(e,t),r("tildes",e),e=E(e,t),r("xrange",e),e=w(e,t),r("stars",e),e),b=e=>!e||"x"===e.toLowerCase()||"*"===e,g=(e,t)=>e.trim().split(/\s+/).map(e=>_(e,t)).join(" "),_=(e,t)=>{const n=t.loose?s[l.TILDELOOSE]:s[l.TILDE];return e.replace(n,(t,n,a,i,o)=>{let s;return r("tilde",e,t,n,a,i,o),b(n)?s="":b(a)?s=`>=${n}.0.0 <${+n+1}.0.0-0`:b(i)?s=`>=${n}.${a}.0 <${n}.${+a+1}.0-0`:o?(r("replaceTilde pr",o),s=`>=${n}.${a}.${i}-${o} <${n}.${+a+1}.0-0`):s=`>=${n}.${a}.${i} <${n}.${+a+1}.0-0`,r("tilde return",s),s})},x=(e,t)=>e.trim().split(/\s+/).map(e=>k(e,t)).join(" "),k=(e,t)=>{r("caret",e,t);const n=t.loose?s[l.CARETLOOSE]:s[l.CARET],a=t.includePrerelease?"-0":"";return e.replace(n,(t,n,i,o,s)=>{let l;return r("caret",e,t,n,i,o,s),b(n)?l="":b(i)?l=`>=${n}.0.0${a} <${+n+1}.0.0-0`:b(o)?l="0"===n?`>=${n}.${i}.0${a} <${n}.${+i+1}.0-0`:`>=${n}.${i}.0${a} <${+n+1}.0.0-0`:s?(r("replaceCaret pr",s),l="0"===n?"0"===i?`>=${n}.${i}.${o}-${s} <${n}.${i}.${+o+1}-0`:`>=${n}.${i}.${o}-${s} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${o}-${s} <${+n+1}.0.0-0`):(r("no pr"),l="0"===n?"0"===i?`>=${n}.${i}.${o}${a} <${n}.${i}.${+o+1}-0`:`>=${n}.${i}.${o}${a} <${n}.${+i+1}.0-0`:`>=${n}.${i}.${o} <${+n+1}.0.0-0`),r("caret return",l),l})},E=(e,t)=>(r("replaceXRanges",e,t),e.split(/\s+/).map(e=>K(e,t)).join(" ")),K=(e,t)=>{e=e.trim();const n=t.loose?s[l.XRANGELOOSE]:s[l.XRANGE];return e.replace(n,(n,a,i,o,s,l)=>{r("xRange",e,n,a,i,o,s,l);const c=b(i),d=c||b(o),u=d||b(s),p=u;return"="===a&&p&&(a=""),l=t.includePrerelease?"-0":"",c?n=">"===a||"<"===a?"<0.0.0-0":"*":a&&p?(d&&(o=0),s=0,">"===a?(a=">=",d?(i=+i+1,o=0,s=0):(o=+o+1,s=0)):"<="===a&&(a="<",d?i=+i+1:o=+o+1),"<"===a&&(l="-0"),n=`${a+i}.${o}.${s}${l}`):d?n=`>=${i}.0.0${l} <${+i+1}.0.0-0`:u&&(n=`>=${i}.${o}.0${l} <${i}.${+o+1}.0-0`),r("xRange return",n),n})},w=(e,t)=>(r("replaceStars",e,t),e.trim().replace(s[l.STAR],"")),S=(e,t)=>(r("replaceGTE0",e,t),e.trim().replace(s[t.includePrerelease?l.GTE0PRE:l.GTE0],"")),I=e=>(t,n,a,i,r,o,s,l,c,d,u,p)=>`${n=b(a)?"":b(i)?`>=${a}.0.0${e?"-0":""}`:b(r)?`>=${a}.${i}.0${e?"-0":""}`:o?`>=${n}`:`>=${n}${e?"-0":""}`} ${l=b(c)?"":b(d)?`<${+c+1}.0.0-0`:b(u)?`<${c}.${+d+1}.0-0`:p?`<=${c}.${d}.${u}-${p}`:e?`<${c}.${d}.${+u+1}-0`:`<=${l}`}`.trim(),j=(e,t,n)=>{for(let n=0;n<e.length;n++)if(!e[n].test(t))return!1;if(t.prerelease.length&&!n.includePrerelease){for(let n=0;n<e.length;n++)if(r(e[n].semver),e[n].semver!==i.ANY&&e[n].semver.prerelease.length>0){const a=e[n].semver;if(a.major===t.major&&a.minor===t.minor&&a.patch===t.patch)return!0}return!1}return!0};return fp}function kp(){if(gp)return bp;gp=1;const e=Symbol("SemVer ANY");class t{static get ANY(){return e}constructor(a,i){if(i=n(i),a instanceof t){if(a.loose===!!i.loose)return a;a=a.value}a=a.trim().split(/\s+/).join(" "),o("comparator",a,i),this.options=i,this.loose=!!i.loose,this.parse(a),this.semver===e?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}parse(t){const n=this.options.loose?a[i.COMPARATORLOOSE]:a[i.COMPARATOR],r=t.match(n);if(!r)throw new TypeError(`Invalid comparator: ${t}`);this.operator=void 0!==r[1]?r[1]:"","="===this.operator&&(this.operator=""),r[2]?this.semver=new s(r[2],this.options.loose):this.semver=e}toString(){return this.value}test(t){if(o("Comparator.test",t,this.options.loose),this.semver===e||t===e)return!0;if("string"==typeof t)try{t=new s(t,this.options)}catch(e){return!1}return r(t,this.operator,this.semver,this.options)}intersects(e,a){if(!(e instanceof t))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new l(e.value,a).test(this.value):""===e.operator?""===e.value||new l(this.value,a).test(e.semver):(!(a=n(a)).includePrerelease||"<0.0.0-0"!==this.value&&"<0.0.0-0"!==e.value)&&(!(!a.includePrerelease&&(this.value.startsWith("<0.0.0")||e.value.startsWith("<0.0.0")))&&(!(!this.operator.startsWith(">")||!e.operator.startsWith(">"))||(!(!this.operator.startsWith("<")||!e.operator.startsWith("<"))||(!(this.semver.version!==e.semver.version||!this.operator.includes("=")||!e.operator.includes("="))||(!!(r(this.semver,"<",e.semver,a)&&this.operator.startsWith(">")&&e.operator.startsWith("<"))||!!(r(this.semver,">",e.semver,a)&&this.operator.startsWith("<")&&e.operator.startsWith(">")))))))}}bp=t;const n=iu,{safeRe:a,t:i}=Xd.exports,r=dp,o=tu,s=yu,l=xp();return bp}const Ep=xp();var Kp=(e,t,n)=>{try{t=new Ep(t,n)}catch(e){return!1}return t.test(e)};const wp=xp();var Sp=(e,t)=>new wp(e,t).set.map(e=>e.map(e=>e.value).join(" ").trim().split(" "));const Ip=yu,jp=xp();var Rp=(e,t,n)=>{let a=null,i=null,r=null;try{r=new jp(t,n)}catch(e){return null}return e.forEach(e=>{r.test(e)&&(a&&-1!==i.compare(e)||(a=e,i=new Ip(a,n)))}),a};const Tp=yu,Op=xp();var Ap=(e,t,n)=>{let a=null,i=null,r=null;try{r=new Op(t,n)}catch(e){return null}return e.forEach(e=>{r.test(e)&&(a&&1!==i.compare(e)||(a=e,i=new Tp(a,n)))}),a};const Cp=yu,Dp=xp(),Pp=Yu;var Np=(e,t)=>{e=new Dp(e,t);let n=new Cp("0.0.0");if(e.test(n))return n;if(n=new Cp("0.0.0-0"),e.test(n))return n;n=null;for(let t=0;t<e.set.length;++t){const a=e.set[t];let i=null;a.forEach(e=>{const t=new Cp(e.semver.version);switch(e.operator){case">":0===t.prerelease.length?t.patch++:t.prerelease.push(0),t.raw=t.format();case"":case">=":i&&!Pp(t,i)||(i=t);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}}),!i||n&&!Pp(n,i)||(n=i)}return n&&e.test(n)?n:null};const Mp=xp();var Fp=(e,t)=>{try{return new Mp(e,t).range||"*"}catch(e){return null}};const Lp=yu,Jp=kp(),{ANY:Up}=Jp,qp=xp(),Vp=Kp,Gp=Yu,Bp=Wu,zp=ap,Yp=tp;var $p=(e,t,n,a)=>{let i,r,o,s,l;switch(e=new Lp(e,a),t=new qp(t,a),n){case">":i=Gp,r=zp,o=Bp,s=">",l=">=";break;case"<":i=Bp,r=Yp,o=Gp,s="<",l="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(Vp(e,t,a))return!1;for(let n=0;n<t.set.length;++n){const c=t.set[n];let d=null,u=null;if(c.forEach(e=>{e.semver===Up&&(e=new Jp(">=0.0.0")),d=d||e,u=u||e,i(e.semver,d.semver,a)?d=e:o(e.semver,u.semver,a)&&(u=e)}),d.operator===s||d.operator===l)return!1;if((!u.operator||u.operator===s)&&r(e,u.semver))return!1;if(u.operator===l&&o(e,u.semver))return!1}return!0};const Wp=$p;var Hp=(e,t,n)=>Wp(e,t,">",n);const Qp=$p;var Zp=(e,t,n)=>Qp(e,t,"<",n);const Xp=xp();var em=(e,t,n)=>(e=new Xp(e,n),t=new Xp(t,n),e.intersects(t,n));const tm=Kp,nm=Pu;const am=xp(),im=kp(),{ANY:rm}=im,om=Kp,sm=Pu,lm=[new im(">=0.0.0-0")],cm=[new im(">=0.0.0")],dm=(e,t,n)=>{if(e===t)return!0;if(1===e.length&&e[0].semver===rm){if(1===t.length&&t[0].semver===rm)return!0;e=n.includePrerelease?lm:cm}if(1===t.length&&t[0].semver===rm){if(n.includePrerelease)return!0;t=cm}const a=new Set;let i,r,o,s,l,c,d;for(const t of e)">"===t.operator||">="===t.operator?i=um(i,t,n):"<"===t.operator||"<="===t.operator?r=pm(r,t,n):a.add(t.semver);if(a.size>1)return null;if(i&&r){if(o=sm(i.semver,r.semver,n),o>0)return null;if(0===o&&(">="!==i.operator||"<="!==r.operator))return null}for(const e of a){if(i&&!om(e,String(i),n))return null;if(r&&!om(e,String(r),n))return null;for(const a of t)if(!om(e,String(a),n))return!1;return!0}let u=!(!r||n.includePrerelease||!r.semver.prerelease.length)&&r.semver,p=!(!i||n.includePrerelease||!i.semver.prerelease.length)&&i.semver;u&&1===u.prerelease.length&&"<"===r.operator&&0===u.prerelease[0]&&(u=!1);for(const e of t){if(d=d||">"===e.operator||">="===e.operator,c=c||"<"===e.operator||"<="===e.operator,i)if(p&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===p.major&&e.semver.minor===p.minor&&e.semver.patch===p.patch&&(p=!1),">"===e.operator||">="===e.operator){if(s=um(i,e,n),s===e&&s!==i)return!1}else if(">="===i.operator&&!om(i.semver,String(e),n))return!1;if(r)if(u&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===u.major&&e.semver.minor===u.minor&&e.semver.patch===u.patch&&(u=!1),"<"===e.operator||"<="===e.operator){if(l=pm(r,e,n),l===e&&l!==r)return!1}else if("<="===r.operator&&!om(r.semver,String(e),n))return!1;if(!e.operator&&(r||i)&&0!==o)return!1}return!(i&&c&&!r&&0!==o)&&(!(r&&d&&!i&&0!==o)&&(!p&&!u))},um=(e,t,n)=>{if(!e)return t;const a=sm(e.semver,t.semver,n);return a>0?e:a<0||">"===t.operator&&">="===e.operator?t:e},pm=(e,t,n)=>{if(!e)return t;const a=sm(e.semver,t.semver,n);return a<0?e:a>0||"<"===t.operator&&"<="===e.operator?t:e};var mm=(e,t,n={})=>{if(e===t)return!0;e=new am(e,n),t=new am(t,n);let a=!1;e:for(const i of e.set){for(const e of t.set){const t=dm(i,e,n);if(a=a||null!==t,t)continue e}if(a)return!1}return!0};const hm=Xd.exports,ym=eu,fm=yu,vm=su,bm=(e,t,n)=>{const a=[];let i=null,r=null;const o=e.sort((e,t)=>nm(e,t,n));for(const e of o){tm(e,t,n)?(r=e,i||(i=e)):(r&&a.push([i,r]),r=null,i=null)}i&&a.push([i,null]);const s=[];for(const[e,t]of a)e===t?s.push(e):t||e!==o[0]?t?e===o[0]?s.push(`<=${t}`):s.push(`${e} - ${t}`):s.push(`>=${e}`):s.push("*");const l=s.join(" || "),c="string"==typeof t.raw?t.raw:String(t);return l.length<c.length?l:t};var gm={parse:vu,valid:gu,clean:xu,inc:Eu,diff:wu,major:Iu,minor:Ru,patch:Ou,prerelease:Cu,compare:Pu,rcompare:Mu,compareLoose:Lu,compareBuild:Uu,sort:Vu,rsort:Bu,gt:Yu,lt:Wu,eq:Qu,neq:Xu,gte:tp,lte:ap,cmp:dp,coerce:yp,Comparator:kp(),Range:xp(),satisfies:Kp,toComparators:Sp,maxSatisfying:Rp,minSatisfying:Ap,minVersion:Np,validRange:Fp,outside:$p,gtr:Hp,ltr:Zp,intersects:em,simplifyRange:bm,subset:mm,SemVer:fm,re:hm.re,src:hm.src,tokens:hm.t,SEMVER_SPEC_VERSION:ym.SEMVER_SPEC_VERSION,RELEASE_TYPES:ym.RELEASE_TYPES,compareIdentifiers:vm.compareIdentifiers,rcompareIdentifiers:vm.rcompareIdentifiers};const _m={value:null};function xm(e,t,n){try{return e.apply(t,n)}catch(e){return _m.value=e,_m}}function km(e){const t={};for(let n=0;n<e.length;n+=2)t[e[n]]=e[n+1];return t}function Em(e){const t=[];for(const n in e)Object.prototype.hasOwnProperty.call(e,n)&&void 0!==e[n]&&(t[t.length]=n,t[t.length]=e[n]);return t}function Km(e,t){return new Promise(n=>{let a;const i=()=>{null==t||t.signal.removeEventListener("abort",i),clearTimeout(a),n()};a=setTimeout(i,e),null==t||t.signal.addEventListener("abort",i)})}function wm(e,t){const n=e.getMaxListeners();e.setMaxListeners(n+t)}const Sm={de:"deduplication",fpof:"failParentOnFailure",cpof:"continueParentOnFailure",idof:"ignoreDependencyOnFailure",kl:"keepLogs",rdof:"removeDependencyOnFailure"},Im=Object.assign(Object.assign({},(jm=Sm,Object.entries(jm).reduce((e,[t,n])=>(e[n]=t,e),{}))),{debounce:"de"});var jm;function Rm(e){if(!e)return!1;return["connect","disconnect","duplicate"].every(t=>"function"==typeof e[t])}function Tm(e,t){wm(e,-t)}function Om(e){if(e)return`${e.queue}:${e.id}`}const Am=/ERR unknown command ['`]\s*client\s*['`]/;function Cm(e){const t=`${e.message}`;return t!==oo.CONNECTION_CLOSED_ERROR_MSG&&!t.includes("ECONNREFUSED")}const Dm=e=>new Qd({keys:e.keys,client:e.client,get redisVersion(){return e.redisVersion},toKey:e.toKey,opts:e.opts,closing:e.closing}),Pm=(e,t)=>{const n=gm.valid(gm.coerce(e));return gm.lt(n,t)},Nm=e=>{const t={};for(const n of Object.entries(e))t[n[0]]=JSON.parse(n[1]);return t};var Mm;!function(e){e[e.Idle=0]="Idle",e[e.Started=1]="Started",e[e.Terminating=2]="Terminating",e[e.Errored=3]="Errored"}(Mm||(Mm={}));class Fm extends Error{constructor(e="bullmq:movedToDelayed"){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}const Lm="bullmq:rateLimitExceeded";class Jm extends Error{constructor(e=Lm){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class Um extends Error{constructor(e="bullmq:unrecoverable"){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class qm extends Error{constructor(e="bullmq:movedToWaitingChildren"){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class Vm extends Error{constructor(e="bullmq:movedToWait"){super(e),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}let Gm;const Bm=new Uint8Array(16);function zm(){if(!Gm&&(Gm="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Gm))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Gm(Bm)}const Ym=[];for(let e=0;e<256;++e)Ym.push((e+256).toString(16).slice(1));var $m={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function Wm(e,t,n){if($m.randomUUID&&!t&&!e)return $m.randomUUID();const a=(e=e||{}).random||(e.rng||zm)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return function(e,t=0){return Ym[e[t+0]]+Ym[e[t+1]]+Ym[e[t+2]]+Ym[e[t+3]]+"-"+Ym[e[t+4]]+Ym[e[t+5]]+"-"+Ym[e[t+6]]+Ym[e[t+7]]+"-"+Ym[e[t+8]]+Ym[e[t+9]]+"-"+Ym[e[t+10]]+Ym[e[t+11]]+Ym[e[t+12]]+Ym[e[t+13]]+Ym[e[t+14]]+Ym[e[t+15]]}(a)}function Hm(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(a=Object.getOwnPropertySymbols(e);i<a.length;i++)t.indexOf(a[i])<0&&Object.prototype.propertyIsEnumerable.call(e,a[i])&&(n[a[i]]=e[a[i]])}return n}"function"==typeof SuppressedError&&SuppressedError;const Qm=t.debuglog("bull"),Zm=2**21;class Xm{constructor(e,t,n,a={},i){this.queue=e,this.name=t,this.data=n,this.opts=a,this.id=i,this.progress=0,this.returnvalue=null,this.stacktrace=null,this.delay=0,this.priority=0,this.attemptsStarted=0,this.attemptsMade=0,this.stalledCounter=0;const r=this.opts,{repeatJobKey:o}=r,s=Hm(r,["repeatJobKey"]);this.opts=Object.assign({attempts:0},s),this.delay=this.opts.delay,this.priority=this.opts.priority||0,this.repeatJobKey=o,this.timestamp=a.timestamp?a.timestamp:Date.now(),this.opts.backoff=Rr.normalize(a.backoff),this.parentKey=Om(a.parent),a.parent&&(this.parent={id:a.parent.id,queueKey:a.parent.queue},a.failParentOnFailure&&(this.parent.fpof=!0),a.removeDependencyOnFailure&&(this.parent.rdof=!0),a.ignoreDependencyOnFailure&&(this.parent.idof=!0),a.continueParentOnFailure&&(this.parent.cpof=!0)),this.debounceId=a.debounce?a.debounce.id:void 0,this.deduplicationId=a.deduplication?a.deduplication.id:this.debounceId,this.toKey=e.toKey.bind(e),this.createScripts(),this.queueQualifiedName=e.qualifiedName}static async create(e,t,n,a){const i=await e.client,r=new this(e,t,n,a,a&&a.jobId);return r.id=await r.addJob(i,{parentKey:r.parentKey,parentDependenciesKey:r.parentKey?`${r.parentKey}:dependencies`:""}),r}static async createBulk(e,t){const n=await e.client,a=t.map(t=>{var n;return new this(e,t.name,t.data,t.opts,null===(n=t.opts)||void 0===n?void 0:n.jobId)}),i=n.pipeline();for(const e of a)e.addJob(i,{parentKey:e.parentKey,parentDependenciesKey:e.parentKey?`${e.parentKey}:dependencies`:""});const r=await i.exec();for(let e=0;e<r.length;++e){const[t,n]=r[e];if(t)throw t;a[e].id=n}return a}static fromJSON(e,t,n){const a=JSON.parse(t.data||"{}"),i=Xm.optsFromJSON(t.opts),r=new this(e,t.name,a,i,t.id||n);return r.progress=JSON.parse(t.progress||"0"),r.delay=parseInt(t.delay),r.priority=parseInt(t.priority),r.timestamp=parseInt(t.timestamp),t.finishedOn&&(r.finishedOn=parseInt(t.finishedOn)),t.processedOn&&(r.processedOn=parseInt(t.processedOn)),t.rjk&&(r.repeatJobKey=t.rjk),t.deid&&(r.debounceId=t.deid,r.deduplicationId=t.deid),t.failedReason&&(r.failedReason=t.failedReason),r.attemptsStarted=parseInt(t.ats||"0"),r.attemptsMade=parseInt(t.attemptsMade||t.atm||"0"),r.stalledCounter=parseInt(t.stc||"0"),t.defa&&(r.deferredFailure=t.defa),r.stacktrace=function(e){const t=xm(JSON.parse,JSON,[e]);return t!==_m&&t instanceof Array?t:[]}(t.stacktrace),"string"==typeof t.returnvalue&&(r.returnvalue=eh(t.returnvalue)),t.parentKey&&(r.parentKey=t.parentKey),t.parent&&(r.parent=JSON.parse(t.parent)),t.pb&&(r.processedBy=t.pb),t.nrjid&&(r.nextRepeatableJobId=t.nrjid),r}createScripts(){this.scripts=Dm(this.queue)}static optsFromJSON(e,t=Sm){const n=JSON.parse(e||"{}"),a=Object.entries(n),i={};for(const e of a){const[n,a]=e;t[n]?i[t[n]]=a:"tm"===n?i.telemetry=Object.assign(Object.assign({},i.telemetry),{metadata:a}):"omc"===n?i.telemetry=Object.assign(Object.assign({},i.telemetry),{omitContext:a}):i[n]=a}return i}static async fromId(e,t){if(t){const n=await e.client,a=await n.hgetall(e.toKey(t));return function(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(a)?void 0:this.fromJSON(e,a,t)}}static addJobLog(e,t,n,a){return e.scripts.addLog(t,n,a)}toJSON(){return Hm(this,["queue","scripts"])}asJSON(){return function(e){const t={};for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}({id:this.id,name:this.name,data:JSON.stringify(void 0===this.data?{}:this.data),opts:Xm.optsAsJSON(this.opts),parent:this.parent?Object.assign({},this.parent):void 0,parentKey:this.parentKey,progress:this.progress,attemptsMade:this.attemptsMade,attemptsStarted:this.attemptsStarted,stalledCounter:this.stalledCounter,finishedOn:this.finishedOn,processedOn:this.processedOn,timestamp:this.timestamp,failedReason:JSON.stringify(this.failedReason),stacktrace:JSON.stringify(this.stacktrace),debounceId:this.debounceId,deduplicationId:this.deduplicationId,repeatJobKey:this.repeatJobKey,returnvalue:JSON.stringify(this.returnvalue),nrjid:this.nextRepeatableJobId})}static optsAsJSON(e={},t=Im){const n=Object.entries(e),a={};for(const[e,i]of n)if(void 0!==i)if(e in t){a[t[e]]=i}else"telemetry"===e?(a.tm=i.metadata,a.omc=i.omitContext):a[e]=i;return a}asJSONSandbox(){return Object.assign(Object.assign({},this.asJSON()),{queueName:this.queueName,prefix:this.prefix})}updateData(e){return this.data=e,this.scripts.updateData(this,e)}async updateProgress(e){this.progress=e,await this.scripts.updateProgress(this.id,e),this.queue.emit("progress",this,e)}async log(e){return Xm.addJobLog(this.queue,this.id,e,this.opts.keepLogs)}async removeChildDependency(){return!!await this.scripts.removeChildDependency(this.id,this.parentKey)&&(this.parent=void 0,this.parentKey=void 0,!0)}async clearLogs(e){const t=await this.queue.client,n=this.toKey(this.id)+":logs";e?await t.ltrim(n,-e,-1):await t.del(n)}async remove({removeChildren:e=!0}={}){await this.queue.waitUntilReady();const t=this.queue,n=this;if(!await this.scripts.remove(n.id,e))throw new Error(`Job ${this.id} could not be removed because it is locked by another worker`);t.emit("removed",n)}async removeUnprocessedChildren(){const e=this.id;await this.scripts.removeUnprocessedChildren(e)}extendLock(e,t){return this.scripts.extendLock(this.id,e,t)}async moveToCompleted(e,t,n=!0){return this.queue.trace(Pr.INTERNAL,"complete",this.queue.name,async(a,i)=>{var r,o;null===(o=null===(r=this.opts)||void 0===r?void 0:r.telemetry)||void 0===o||o.omitContext,await this.queue.waitUntilReady(),this.returnvalue=e||void 0;const s=xm(JSON.stringify,JSON,[e]);if(s===_m)throw _m.value;const l=this.scripts.moveToCompletedArgs(this,s,this.opts.removeOnComplete,t,n),c=await this.scripts.moveToFinished(this.id,l);return this.finishedOn=l[this.scripts.moveToFinishedKeys.length+1],this.attemptsMade+=1,c})}moveToWait(e){return this.scripts.moveJobFromActiveToWait(this.id,e)}async shouldRetryJob(e){if(this.attemptsMade+1<this.opts.attempts&&!this.discarded&&!(e instanceof Um||"UnrecoverableError"==e.name)){const t=this.queue.opts,n=await Rr.calculate(this.opts.backoff,this.attemptsMade+1,e,this,t.settings&&t.settings.backoffStrategy);return[-1!=n,-1==n?0:n]}return[!1,0]}async moveToFailed(e,t,n=!1){this.failedReason=null==e?void 0:e.message;const[a,i]=await this.shouldRetryJob(e);return this.queue.trace(Pr.INTERNAL,this.getSpanOperation(a,i),this.queue.name,async(r,o)=>{var s,l;let c,d;!(null===(l=null===(s=this.opts)||void 0===s?void 0:s.telemetry)||void 0===l?void 0:l.omitContext)&&o&&(c=o),this.updateStacktrace(e);const u={failedReason:this.failedReason,stacktrace:JSON.stringify(this.stacktrace),tm:c};let p;if(a)d=i?await this.scripts.moveToDelayed(this.id,Date.now(),i,t,{fieldsToUpdate:u}):await this.scripts.retryJob(this.id,this.opts.lifo,t,{fieldsToUpdate:u});else{const e=this.scripts.moveToFailedArgs(this,this.failedReason,this.opts.removeOnFail,t,n,u);d=await this.scripts.moveToFinished(this.id,e),p=e[this.scripts.moveToFinishedKeys.length+1]}return p&&"number"==typeof p&&(this.finishedOn=p),i&&"number"==typeof i&&(this.delay=i),this.attemptsMade+=1,d})}getSpanOperation(e,t){return e?t?"delay":"retry":"fail"}isCompleted(){return this.isInZSet("completed")}isFailed(){return this.isInZSet("failed")}isDelayed(){return this.isInZSet("delayed")}isWaitingChildren(){return this.isInZSet("waiting-children")}isActive(){return this.isInList("active")}async isWaiting(){return await this.isInList("wait")||await this.isInList("paused")}get queueName(){return this.queue.name}get prefix(){return this.queue.opts.prefix}getState(){return this.scripts.getState(this.id)}async changeDelay(e){await this.scripts.changeDelay(this.id,e),this.delay=e}async changePriority(e){await this.scripts.changePriority(this.id,e.priority,e.lifo),this.priority=e.priority||0}async getChildrenValues(){const e=await this.queue.client,t=await e.hgetall(this.toKey(`${this.id}:processed`));if(t)return Nm(t)}async getIgnoredChildrenFailures(){return(await this.queue.client).hgetall(this.toKey(`${this.id}:failed`))}async getFailedChildrenValues(){return(await this.queue.client).hgetall(this.toKey(`${this.id}:failed`))}async getDependencies(e={}){const t=(await this.queue.client).multi();if(e.processed||e.unprocessed||e.ignored||e.failed){const n={cursor:0,count:20},a=[];if(e.processed){a.push("processed");const i=Object.assign(Object.assign({},n),e.processed);t.hscan(this.toKey(`${this.id}:processed`),i.cursor,"COUNT",i.count)}if(e.unprocessed){a.push("unprocessed");const i=Object.assign(Object.assign({},n),e.unprocessed);t.sscan(this.toKey(`${this.id}:dependencies`),i.cursor,"COUNT",i.count)}if(e.ignored){a.push("ignored");const i=Object.assign(Object.assign({},n),e.ignored);t.hscan(this.toKey(`${this.id}:failed`),i.cursor,"COUNT",i.count)}let i;if(e.failed){a.push("failed");const r=Object.assign(Object.assign({},n),e.failed);i=r.cursor+r.count,t.zrange(this.toKey(`${this.id}:unsuccessful`),r.cursor,r.count-1)}const r=await t.exec();let o,s,l,c,d,u,p;return a.forEach((e,t)=>{switch(e){case"processed":{o=r[t][1][0];const e=r[t][1][1],n={};for(let t=0;t<e.length;++t)t%2&&(n[e[t-1]]=JSON.parse(e[t]));s=n;break}case"failed":d=r[t][1];break;case"ignored":{u=r[t][1][0];const e=r[t][1][1],n={};for(let t=0;t<e.length;++t)t%2&&(n[e[t-1]]=e[t]);p=n;break}case"unprocessed":l=r[t][1][0],c=r[t][1][1]}}),Object.assign(Object.assign(Object.assign(Object.assign({},o?{processed:s,nextProcessedCursor:Number(o)}:{}),u?{ignored:p,nextIgnoredCursor:Number(u)}:{}),i?{failed:d,nextFailedCursor:i}:{}),l?{unprocessed:c,nextUnprocessedCursor:Number(l)}:{})}{t.hgetall(this.toKey(`${this.id}:processed`)),t.smembers(this.toKey(`${this.id}:dependencies`)),t.hgetall(this.toKey(`${this.id}:failed`)),t.zrange(this.toKey(`${this.id}:unsuccessful`),0,-1);const[[e,n],[a,i],[r,o],[s,l]]=await t.exec();return{processed:Nm(n),unprocessed:i,failed:l,ignored:o}}}async getDependenciesCount(e={}){const t=[];Object.entries(e).forEach(([e,n])=>{n&&t.push(e)});const n=t.length?t:["processed","unprocessed","ignored","failed"],a=await this.scripts.getDependencyCounts(this.id,n),i={};return a.forEach((e,t)=>{i[`${n[t]}`]=e||0}),i}async waitUntilFinished(e,t){await this.queue.waitUntilReady();const n=this.id;return new Promise(async(a,i)=>{let r;function o(e){d(),a(e.returnvalue)}function s(e){d(),i(new Error(e.failedReason||e))}t&&(r=setTimeout(()=>s(`Job wait ${this.name} timed out before finishing, no finish notification arrived after ${t}ms (id=${n})`),t));const l=`completed:${n}`,c=`failed:${n}`;e.on(l,o),e.on(c,s),this.queue.on("closing",s);const d=()=>{clearInterval(r),e.removeListener(l,o),e.removeListener(c,s),this.queue.removeListener("closing",s)};await e.waitUntilReady();const[u,p]=await this.scripts.isFinished(n,!0);0!=u&&(-1==u||2==u?s({failedReason:p}):o({returnvalue:eh(p)}))})}async moveToDelayed(e,t){const n=Date.now(),a=e-n,i=a>0?a:0,r=await this.scripts.moveToDelayed(this.id,n,i,t,{skipAttempt:!0});return this.delay=i,r}async moveToWaitingChildren(e,t={}){return await this.scripts.moveToWaitingChildren(this.id,e,t)}async promote(){const e=this.id;await this.scripts.promote(e),this.delay=0}retry(e="failed"){return this.failedReason=null,this.finishedOn=null,this.processedOn=null,this.returnvalue=null,this.scripts.reprocessJob(this,e)}discard(){this.discarded=!0}async isInZSet(e){const t=await this.queue.client;return null!==await t.zscore(this.queue.toKey(e),this.id)}async isInList(e){return this.scripts.isJobInList(this.queue.toKey(e),this.id)}addJob(e,t){const n=this.asJSON();return this.validateOptions(n),this.scripts.addJob(e,n,n.opts,this.id,t)}validateOptions(e){var t;var n;if(this.opts.sizeLimit&&(n=e.data,Buffer.byteLength(n,"utf8")>this.opts.sizeLimit))throw new Error(`The size of job ${this.name} exceeds the limit ${this.opts.sizeLimit} bytes`);if(this.opts.delay&&this.opts.repeat&&!(null===(t=this.opts.repeat)||void 0===t?void 0:t.count))throw new Error("Delay and repeat options could not be used together");const a=["removeDependencyOnFailure","failParentOnFailure","continueParentOnFailure","ignoreDependencyOnFailure"].filter(e=>this.opts[e]);if(a.length>1){const e=a.join(", ");throw new Error(`The following options cannot be used together: ${e}`)}if(`${parseInt(this.id,10)}`===this.id)throw new Error("Custom Ids cannot be integers");if(this.opts.priority){if(Math.trunc(this.opts.priority)!==this.opts.priority)throw new Error("Priority should not be float");if(this.opts.priority>Zm)throw new Error("Priority should be between 0 and 2097152")}if("object"==typeof this.opts.backoff&&"number"==typeof this.opts.backoff.jitter&&(this.opts.backoff.jitter<0||this.opts.backoff.jitter>1))throw new Error("Jitter should be between 0 and 1")}updateStacktrace(e){this.stacktrace=this.stacktrace||[],(null==e?void 0:e.stack)&&(this.stacktrace.push(e.stack),0===this.opts.stackTraceLimit?this.stacktrace=[]:this.opts.stackTraceLimit&&(this.stacktrace=this.stacktrace.slice(-this.opts.stackTraceLimit)))}}function eh(e){const t=xm(JSON.parse,JSON,[e]);if(t!==_m)return t;Qm("corrupted returnvalue: "+e,t)}class th{constructor(e="bull"){this.prefix=e}getKeys(e){const t={};return["","active","wait","waiting-children","paused","id","delayed","prioritized","stalled-check","completed","failed","stalled","repeat","limiter","meta","events","pc","marker","de"].forEach(n=>{t[n]=this.toKey(e,n)}),t}toKey(e,t){return`${this.getQueueQualifiedName(e)}:${t}`}getQueueQualifiedName(e){return`${this.prefix}:${e}`}}const nh={name:"addDelayedJob",content:'--[[\n  Adds a delayed job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - computes timestamp.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'delayed\'\n      KEYS[5] \'completed\'\n      KEYS[6] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (use custom instead of one generated automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n          x [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal delayedKey = KEYS[4]\nlocal completedKey = KEYS[5]\nlocal eventsKey = KEYS[6]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, delayedKey, deduplicationKey,\n  eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n    opts, timestamp, parentKey, parentData, repeatJobKey)\naddDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, KEYS[1], delay)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:6},ah={name:"addJobScheduler",content:'--[[\n  Adds a job scheduler, i.e. a job factory that creates jobs based on a given schedule (repeat options).\n    Input:\n      KEYS[1]  \'repeat\' key\n      KEYS[2]  \'delayed\' key\n      KEYS[3]  \'wait\' key\n      KEYS[4]  \'paused\' key\n      KEYS[5]  \'meta\' key\n      KEYS[6]  \'prioritized\' key\n      KEYS[7]  \'marker\' key\n      KEYS[8]  \'id\' key\n      KEYS[9]  \'events\' key\n      KEYS[10] \'pc\' priority counter\n      KEYS[11] \'active\' key\n      ARGV[1] next milliseconds\n      ARGV[2] msgpacked options\n            [1]  name\n            [2]  tz?\n            [3]  patten?\n            [4]  endDate?\n            [5]  every?\n      ARGV[3] jobs scheduler id\n      ARGV[4] Json stringified template data\n      ARGV[5] mspacked template opts\n      ARGV[6] msgpacked delayed opts\n      ARGV[7] timestamp\n      ARGV[8] prefix key\n      ARGV[9] producer key\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal waitKey = KEYS[3]\nlocal pausedKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal prioritizedKey = KEYS[6]\nlocal eventsKey = KEYS[9]\nlocal nextMillis = ARGV[1]\nlocal jobSchedulerId = ARGV[3]\nlocal templateOpts = cmsgpack.unpack(ARGV[5])\nlocal prefixKey = ARGV[8]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\nlocal function addJobFromScheduler(jobKey, jobId, rawOpts, waitKey, pausedKey, activeKey, metaKey, \n  prioritizedKey, priorityCounter, delayedKey, markerKey, eventsKey, name, maxEvents, timestamp,\n  data, jobSchedulerId)\n  local opts = cmsgpack.unpack(rawOpts)\n  local delay, priority = storeJob(eventsKey, jobKey, jobId, name, data,\n    opts, timestamp, nil, nil, jobSchedulerId)\n  if delay ~= 0 then\n    addDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, markerKey, delay)\n  else\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n    -- Standard or priority add\n    if priority == 0 then\n      local pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\n      addJobInTargetList(target, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n      -- Priority add\n      addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounter, isPausedOrMaxed)\n    end\n    -- Emit waiting event\n    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents,  "*", "event", "waiting", "jobId", jobId)\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Function to store a job scheduler\n]]\nlocal function storeJobScheduler(schedulerId, schedulerKey, repeatKey, nextMillis, opts,\n  templateData, templateOpts)\n  rcall("ZADD", repeatKey, nextMillis, schedulerId)\n  local optionalValues = {}\n  if opts[\'tz\'] then\n    table.insert(optionalValues, "tz")\n    table.insert(optionalValues, opts[\'tz\'])\n  end\n  if opts[\'limit\'] then\n    table.insert(optionalValues, "limit")\n    table.insert(optionalValues, opts[\'limit\'])\n  end\n  if opts[\'pattern\'] then\n    table.insert(optionalValues, "pattern")\n    table.insert(optionalValues, opts[\'pattern\'])\n  end\n  if opts[\'endDate\'] then\n    table.insert(optionalValues, "endDate")\n    table.insert(optionalValues, opts[\'endDate\'])\n  end\n  if opts[\'every\'] then\n    table.insert(optionalValues, "every")\n    table.insert(optionalValues, opts[\'every\'])\n  end\n  if opts[\'offset\'] then\n    table.insert(optionalValues, "offset")\n    table.insert(optionalValues, opts[\'offset\'])\n  end\n  local jsonTemplateOpts = cjson.encode(templateOpts)\n  if jsonTemplateOpts and jsonTemplateOpts ~= \'{}\' then\n    table.insert(optionalValues, "opts")\n    table.insert(optionalValues, jsonTemplateOpts)\n  end\n  if templateData and templateData ~= \'{}\' then\n    table.insert(optionalValues, "data")\n    table.insert(optionalValues, templateData)\n  end\n  rcall("DEL", schedulerKey) -- remove all attributes and then re-insert new ones\n  rcall("HMSET", schedulerKey, "name", opts[\'name\'], "ic", 1, unpack(optionalValues))\nend\n-- If we are overriding a repeatable job we must delete the delayed job for\n-- the next iteration.\nlocal schedulerKey = repeatKey .. ":" .. jobSchedulerId\nlocal nextDelayedJobKey = schedulerKey .. ":" .. nextMillis\nlocal nextDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. nextMillis\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal function removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey, jobId,\n    metaKey, eventsKey)\n    if rcall("ZSCORE", delayedKey, jobId) then\n        removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n        rcall("ZREM", delayedKey, jobId)\n        return true\n    elseif rcall("ZSCORE", prioritizedKey, jobId) then\n        removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n        rcall("ZREM", prioritizedKey, jobId)\n        return true\n    else\n        local pausedOrWaitKey = waitKey\n        if isQueuePaused(metaKey) then\n            pausedOrWaitKey = pausedKey\n        end\n        if rcall("LREM", pausedOrWaitKey, 1, jobId) > 0 then\n            removeJob(jobId, true, prefixKey, true --[[remove debounce key]] )\n            return true\n        end\n    end\n    return false\nend\nif rcall("EXISTS", nextDelayedJobKey) == 1 then\n    if not removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey,\n        nextDelayedJobId, metaKey, eventsKey) then\n        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n            "duplicated", "jobId", nextDelayedJobId)\n        return nextDelayedJobId .. "" -- convert to string\n    end\nend\nlocal prevMillis = rcall("ZSCORE", repeatKey, jobSchedulerId)\nif prevMillis then    \n    local currentJobId = "repeat:" .. jobSchedulerId .. ":" .. prevMillis\n    local currentDelayedJobKey = schedulerKey .. ":" .. prevMillis\n    if currentJobId ~= nextDelayedJobId and rcall("EXISTS", currentDelayedJobKey) == 1 then\n        removeJobFromScheduler(prefixKey, delayedKey, prioritizedKey, waitKey, pausedKey,\n            currentJobId, metaKey, eventsKey)\n    end\nend\nlocal schedulerOpts = cmsgpack.unpack(ARGV[2])\nstoreJobScheduler(jobSchedulerId, schedulerKey, repeatKey, nextMillis, schedulerOpts, ARGV[4], templateOpts)\nrcall("INCR", KEYS[8])\naddJobFromScheduler(nextDelayedJobKey, nextDelayedJobId, ARGV[6], waitKey, pausedKey,\n    KEYS[11], metaKey, prioritizedKey, KEYS[10], delayedKey, KEYS[7], eventsKey,\n    schedulerOpts[\'name\'], maxEvents, ARGV[7], ARGV[4], jobSchedulerId)\nif ARGV[9] ~= "" then\n    rcall("HSET", ARGV[9], "nrjid", nextDelayedJobId)\nend\nreturn nextDelayedJobId .. "" -- convert to string\n',keys:11},ih={name:"addLog",content:'--[[\n  Add job log\n  Input:\n    KEYS[1] job id key\n    KEYS[2] job logs key\n    ARGV[1] id\n    ARGV[2] log\n    ARGV[3] keepLogs\n  Output:\n    -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n  local logCount = rcall("RPUSH", KEYS[2], ARGV[2])\n  if ARGV[3] ~= \'\' then\n    local keepLogs = tonumber(ARGV[3])\n    rcall("LTRIM", KEYS[2], -keepLogs, -1)\n    return math.min(keepLogs, logCount)\n  end\n  return logCount\nelse\n  return -1\nend\n',keys:2},rh={name:"addParentJob",content:'--[[\n  Adds a parent job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - adds the job to the waiting-children zset\n    Input:\n      KEYS[1] \'meta\'\n      KEYS[2] \'id\'\n      KEYS[3] \'delayed\'\n      KEYS[4] \'completed\'\n      KEYS[5] events stream key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal metaKey = KEYS[1]\nlocal idKey = KEYS[2]\nlocal completedKey = KEYS[4]\nlocal eventsKey = KEYS[5]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[3],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal waitChildrenKey = args[6]\nrcall("ZADD", waitChildrenKey, timestamp, jobId)\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n      "waiting-children", "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:5},oh={name:"addPrioritizedJob",content:'--[[\n  Adds a priotitized job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'marker\',\n      KEYS[2] \'meta\'\n      KEYS[3] \'id\'\n      KEYS[4] \'prioritized\'\n      KEYS[5] \'delayed\'\n      KEYS[6] \'completed\'\n      KEYS[7] \'active\'\n      KEYS[8] events stream key\n      KEYS[9] \'pc\' priority counter\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]] \nlocal metaKey = KEYS[2]\nlocal idKey = KEYS[3]\nlocal priorityKey = KEYS[4]\nlocal completedKey = KEYS[6]\nlocal activeKey = KEYS[7]\nlocal eventsKey = KEYS[8]\nlocal priorityCounterKey = KEYS[9]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", idKey)\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, completedKey, eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[5],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nlocal delay, priority = storeJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2],\n                                 opts, timestamp, parentKey, parentData,\n                                 repeatJobKey)\n-- Add the job to the prioritized set\nlocal isPausedOrMaxed = isQueuePausedOrMaxed(metaKey, activeKey)\naddJobWithPriority( KEYS[1], priorityKey, priority, jobId, priorityCounterKey, isPausedOrMaxed)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:9},sh={name:"addRepeatableJob",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      KEYS[2] \'delayed\' key\n      ARGV[1] next milliseconds\n      ARGV[2] msgpacked options\n            [1]  name\n            [2]  tz?\n            [3]  patten?\n            [4]  endDate?\n            [5]  every?\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      ARGV[4] custom key\n      ARGV[5] prefix key\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal nextMillis = ARGV[1]\nlocal legacyCustomKey = ARGV[3]\nlocal customKey = ARGV[4]\nlocal prefixKey = ARGV[5]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function storeRepeatableJob(repeatKey, customKey, nextMillis, rawOpts)\n  rcall("ZADD", repeatKey, nextMillis, customKey)\n  local opts = cmsgpack.unpack(rawOpts)\n  local optionalValues = {}\n  if opts[\'tz\'] then\n    table.insert(optionalValues, "tz")\n    table.insert(optionalValues, opts[\'tz\'])\n  end\n  if opts[\'pattern\'] then\n    table.insert(optionalValues, "pattern")\n    table.insert(optionalValues, opts[\'pattern\'])\n  end\n  if opts[\'endDate\'] then\n    table.insert(optionalValues, "endDate")\n    table.insert(optionalValues, opts[\'endDate\'])\n  end\n  if opts[\'every\'] then\n    table.insert(optionalValues, "every")\n    table.insert(optionalValues, opts[\'every\'])\n  end\n  rcall("HMSET", repeatKey .. ":" .. customKey, "name", opts[\'name\'],\n    unpack(optionalValues))\n  return customKey\nend\n-- If we are overriding a repeatable job we must delete the delayed job for\n-- the next iteration.\nlocal prevMillis = rcall("ZSCORE", repeatKey, customKey)\nif prevMillis then\n  local delayedJobId =  "repeat:" .. customKey .. ":" .. prevMillis\n  local nextDelayedJobId =  repeatKey .. ":" .. customKey .. ":" .. nextMillis\n  if rcall("ZSCORE", delayedKey, delayedJobId)\n   and rcall("EXISTS", nextDelayedJobId) ~= 1 then\n    removeJob(delayedJobId, true, prefixKey, true --[[remove debounce key]])\n    rcall("ZREM", delayedKey, delayedJobId)\n  end\nend\n-- Keep backwards compatibility with old repeatable jobs (<= 3.0.0)\nif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n  return storeRepeatableJob(repeatKey, legacyCustomKey, nextMillis, ARGV[2])\nend\nreturn storeRepeatableJob(repeatKey, customKey, nextMillis, ARGV[2])\n',keys:2},lh={name:"addStandardJob",content:'--[[\n  Adds a job to the queue by doing the following:\n    - Increases the job counter if needed.\n    - Creates a new job key with the job data.\n    - if delayed:\n      - computes timestamp.\n      - adds to delayed zset.\n      - Emits a global event \'delayed\' if the job is delayed.\n    - if not delayed\n      - Adds the jobId to the wait/paused list in one of three ways:\n         - LIFO\n         - FIFO\n         - prioritized.\n      - Adds the job to the "added" list so that workers gets notified.\n    Input:\n      KEYS[1] \'wait\',\n      KEYS[2] \'paused\'\n      KEYS[3] \'meta\'\n      KEYS[4] \'id\'\n      KEYS[5] \'completed\'\n      KEYS[6] \'delayed\'\n      KEYS[7] \'active\'\n      KEYS[8] events stream key\n      KEYS[9] marker key\n      ARGV[1] msgpacked arguments array\n            [1]  key prefix,\n            [2]  custom id (will not generate one automatically)\n            [3]  name\n            [4]  timestamp\n            [5]  parentKey?\n            [6]  waitChildrenKey key.\n            [7]  parent dependencies key.\n            [8]  parent? {id, queueKey}\n            [9]  repeat job key\n            [10] deduplication key\n      ARGV[2] Json stringified job data\n      ARGV[3] msgpacked options\n      Output:\n        jobId  - OK\n        -5     - Missing parent key\n]]\nlocal eventsKey = KEYS[8]\nlocal jobId\nlocal jobIdKey\nlocal rcall = redis.call\nlocal args = cmsgpack.unpack(ARGV[1])\nlocal data = ARGV[2]\nlocal opts = cmsgpack.unpack(ARGV[3])\nlocal parentKey = args[5]\nlocal parent = args[8]\nlocal repeatJobKey = args[9]\nlocal deduplicationKey = args[10]\nlocal parentData\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to debounce a job.\n]]\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function deduplicateJob(deduplicationOpts, jobId, delayedKey, deduplicationKey, eventsKey, maxEvents,\n    prefix)\n    local deduplicationId = deduplicationOpts and deduplicationOpts[\'id\']\n    if deduplicationId then\n        local ttl = deduplicationOpts[\'ttl\']\n        if deduplicationOpts[\'replace\'] and ttl and ttl > 0 then\n            local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n            if currentDebounceJobId then\n                if rcall("ZREM", delayedKey, currentDebounceJobId) > 0 then\n                    removeJobKeys(prefix .. currentDebounceJobId)\n                    rcall("XADD", eventsKey, "*", "event", "removed", "jobId", currentDebounceJobId,\n                        "prev", "delayed")\n                    if deduplicationOpts[\'extend\'] then\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'KEEPTTL\')\n                    end\n                    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                        jobId, "deduplicationId", deduplicationId, "deduplicatedJobId", currentDebounceJobId)\n                    return\n                else\n                    return currentDebounceJobId\n                end\n            else\n                rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                return\n            end\n        else\n            local ttl = deduplicationOpts[\'ttl\']\n            local deduplicationKeyExists\n            if ttl then\n                if deduplicationOpts[\'extend\'] then\n                    local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                    if currentDebounceJobId then\n                        rcall(\'SET\', deduplicationKey, currentDebounceJobId, \'PX\', ttl)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced",\n                            "jobId", currentDebounceJobId, "debounceId", deduplicationId)\n                        rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                            currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                        return currentDebounceJobId\n                    else\n                        rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl)\n                        return\n                    end\n                else\n                    deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'PX\', ttl, \'NX\')\n                end\n            else\n                deduplicationKeyExists = not rcall(\'SET\', deduplicationKey, jobId, \'NX\')\n            end\n            if deduplicationKeyExists then\n                local currentDebounceJobId = rcall(\'GET\', deduplicationKey)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "debounced", "jobId",\n                    currentDebounceJobId, "debounceId", deduplicationId)\n                rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "deduplicated", "jobId",\n                    currentDebounceJobId, "deduplicationId", deduplicationId, "deduplicatedJobId", jobId)\n                return currentDebounceJobId\n            end\n        end\n    end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to handle the case when job is duplicated.\n]]\n-- Includes\n--[[\n    This function is used to update the parent\'s dependencies if the job\n    is already completed and about to be ignored. The parent must get its\n    dependencies updated to avoid the parent job being stuck forever in \n    the waiting-children state.\n]]\n-- Includes\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\nlocal function updateExistingJobsParent(parentKey, parent, parentData,\n                                        parentDependenciesKey, completedKey,\n                                        jobIdKey, jobId, timestamp)\n    if parentKey ~= nil then\n        if rcall("ZSCORE", completedKey, jobId) then\n            local returnvalue = rcall("HGET", jobIdKey, "returnvalue")\n            updateParentDepsIfNeeded(parentKey, parent[\'queueKey\'],\n                                     parentDependenciesKey, parent[\'id\'],\n                                     jobIdKey, returnvalue, timestamp)\n        else\n            if parentDependenciesKey ~= nil then\n                rcall("SADD", parentDependenciesKey, jobIdKey)\n            end\n        end\n        rcall("HMSET", jobIdKey, "parentKey", parentKey, "parent", parentData)\n    end\nend\nlocal function handleDuplicatedJob(jobKey, jobId, currentParentKey, currentParent,\n  parentData, parentDependenciesKey, completedKey, eventsKey, maxEvents, timestamp)\n  local existedParentKey = rcall("HGET", jobKey, "parentKey")\n  if not existedParentKey or existedParentKey == currentParentKey then\n    updateExistingJobsParent(currentParentKey, currentParent, parentData,\n      parentDependenciesKey, completedKey, jobKey,\n      jobId, timestamp)\n  else\n    if currentParentKey ~= nil and currentParentKey ~= existedParentKey\n      and (rcall("EXISTS", existedParentKey) == 1) then\n      return -7\n    end\n  end\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n    "duplicated", "jobId", jobId)\n  return jobId .. "" -- convert to string\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\nif parentKey ~= nil then\n    if rcall("EXISTS", parentKey) ~= 1 then return -5 end\n    parentData = cjson.encode(parent)\nend\nlocal jobCounter = rcall("INCR", KEYS[4])\nlocal metaKey = KEYS[3]\nlocal maxEvents = getOrSetMaxEvents(metaKey)\nlocal parentDependenciesKey = args[7]\nlocal timestamp = args[4]\nif args[2] == "" then\n    jobId = jobCounter\n    jobIdKey = args[1] .. jobId\nelse\n    jobId = args[2]\n    jobIdKey = args[1] .. jobId\n    if rcall("EXISTS", jobIdKey) == 1 then\n        return handleDuplicatedJob(jobIdKey, jobId, parentKey, parent,\n            parentData, parentDependenciesKey, KEYS[5], eventsKey,\n            maxEvents, timestamp)\n    end\nend\nlocal deduplicationJobId = deduplicateJob(opts[\'de\'], jobId, KEYS[6],\n  deduplicationKey, eventsKey, maxEvents, args[1])\nif deduplicationJobId then\n  return deduplicationJobId\nend\n-- Store the job.\nstoreJob(eventsKey, jobIdKey, jobId, args[3], ARGV[2], opts, timestamp,\n         parentKey, parentData, repeatJobKey)\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[7], KEYS[1], KEYS[2])\n-- LIFO or FIFO\nlocal pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\naddJobInTargetList(target, KEYS[9], pushCmd, isPausedOrMaxed, jobId)\n-- Emit waiting event\nrcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId)\n-- Check if this job is a child of another job, if so add it to the parents dependencies\nif parentDependenciesKey ~= nil then\n    rcall("SADD", parentDependenciesKey, jobIdKey)\nend\nreturn jobId .. "" -- convert to string\n',keys:9},ch={name:"changeDelay",content:'--[[\n  Change job delay when it is in delayed set.\n  Input:\n    KEYS[1] delayed key\n    KEYS[2] meta key\n    KEYS[3] marker key\n    KEYS[4] events stream\n    ARGV[1] delay\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] job key\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in delayed set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nif rcall("EXISTS", ARGV[4]) == 1 then\n  local jobId = ARGV[3]\n  local delay = tonumber(ARGV[1])\n  local score, delayedTimestamp = getDelayedScore(KEYS[1], ARGV[2], delay)\n  local numRemovedElements = rcall("ZREM", KEYS[1], jobId)\n  if numRemovedElements < 1 then\n    return -3\n  end\n  rcall("HSET", ARGV[4], "delay", delay)\n  rcall("ZADD", KEYS[1], score, jobId)\n  local maxEvents = getOrSetMaxEvents(KEYS[2])\n  rcall("XADD", KEYS[4], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(KEYS[3], KEYS[1])\n  return 0\nelse\n  return -1\nend',keys:4},dh={name:"changePriority",content:'--[[\n  Change job priority\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] \'active\'\n    KEYS[6] \'pc\' priority counter\n    KEYS[7] \'marker\'\n    ARGV[1] priority value\n    ARGV[2] prefix key\n    ARGV[3] job id\n    ARGV[4] lifo\n    Output:\n       0  - OK\n      -1  - Missing job\n]]\nlocal jobId = ARGV[3]\nlocal jobKey = ARGV[2] .. jobId\nlocal priority = tonumber(ARGV[1])\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\nlocal function reAddJobWithNewPriority( prioritizedKey, markerKey, targetKey,\n    priorityCounter, lifo, priority, jobId, isPausedOrMaxed)\n    if priority == 0 then\n        local pushCmd = lifo and \'RPUSH\' or \'LPUSH\'\n        addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n        if lifo then\n            pushBackJobWithPriority(prioritizedKey, priority, jobId)\n        else\n            addJobWithPriority(markerKey, prioritizedKey, priority, jobId,\n                priorityCounter, isPausedOrMaxed)\n        end\n    end\nend\nif rcall("EXISTS", jobKey) == 1 then\n    local metaKey = KEYS[3]\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[5], KEYS[1], KEYS[2])\n    local prioritizedKey = KEYS[4]\n    local priorityCounterKey = KEYS[6]\n    local markerKey = KEYS[7]\n    -- Re-add with the new priority\n    if rcall("ZREM", prioritizedKey, jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    elseif rcall("LREM", target, -1, jobId) > 0 then\n        reAddJobWithNewPriority( prioritizedKey, markerKey, target,\n            priorityCounterKey, ARGV[4] == \'1\', priority, jobId, isPausedOrMaxed)\n    end\n    rcall("HSET", jobKey, "priority", priority)\n    return 0\nelse\n    return -1\nend\n',keys:7},uh={name:"cleanJobsInSet",content:'--[[\n  Remove jobs from the specific set.\n  Input:\n    KEYS[1]  set key,\n    KEYS[2]  events stream key\n    KEYS[3]  repeat key\n    ARGV[1]  jobKey prefix\n    ARGV[2]  timestamp\n    ARGV[3]  limit the number of jobs to be removed. 0 is unlimited\n    ARGV[4]  set name, can be any of \'wait\', \'active\', \'paused\', \'delayed\', \'completed\', or \'failed\'\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[3]\nlocal rangeStart = 0\nlocal rangeEnd = -1\nlocal limit = tonumber(ARGV[3])\n-- If we\'re only deleting _n_ items, avoid retrieving all items\n-- for faster performance\n--\n-- Start from the tail of the list, since that\'s where oldest elements\n-- are generally added for FIFO lists\nif limit > 0 then\n  rangeStart = -1 - limit + 1\n  rangeEnd = -1\nend\n-- Includes\n--[[\n  Function to clean job list.\n  Returns jobIds and deleted count number.\n]]\n-- Includes\n--[[\n  Function to get the latest saved timestamp.\n]]\nlocal function getTimestamp(jobKey, attributes)\n  if #attributes == 1 then\n    return rcall("HGET", jobKey, attributes[1])\n  end\n  local jobTs\n  for _, ts in ipairs(rcall("HMGET", jobKey, unpack(attributes))) do\n    if (ts) then\n      jobTs = ts\n      break\n    end\n  end\n  return jobTs\nend\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function cleanList(listKey, jobKeyPrefix, rangeStart, rangeEnd,\n  timestamp, isWaiting, jobSchedulersKey)\n  local jobs = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  local deleted = {}\n  local deletedCount = 0\n  local jobTS\n  local deletionMarker = \'\'\n  local jobIdsLen = #jobs\n  for i, job in ipairs(jobs) do\n    if limit > 0 and deletedCount >= limit then\n      break\n    end\n    local jobKey = jobKeyPrefix .. job\n    if (isWaiting or rcall("EXISTS", jobKey .. ":lock") == 0) and\n      not isJobSchedulerJob(job, jobKey, jobSchedulersKey) then\n      -- Find the right timestamp of the job to compare to maxTimestamp:\n      -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n      -- * processedOn represents when the job was last attempted, but it doesn\'t get populated until\n      --   the job is first tried\n      -- * timestamp is the original job submission time\n      -- Fetch all three of these (in that order) and use the first one that is set so that we\'ll leave jobs\n      -- that have been active within the grace period:\n      jobTS = getTimestamp(jobKey, {"finishedOn", "processedOn", "timestamp"})\n      if (not jobTS or jobTS <= timestamp) then\n        -- replace the entry with a deletion marker; the actual deletion will\n        -- occur at the end of the script\n        rcall("LSET", listKey, rangeEnd - jobIdsLen + i, deletionMarker)\n        removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]])\n        deletedCount = deletedCount + 1\n        table.insert(deleted, job)\n      end\n    end\n  end\n  rcall("LREM", listKey, 0, deletionMarker)\n  return {deleted, deletedCount}\nend\n--[[\n  Function to clean job set.\n  Returns jobIds and deleted count number.\n]] \n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  We use ZRANGEBYSCORE to make the case where we\'re deleting a limited number\n  of items in a sorted set only run a single iteration. If we simply used\n  ZRANGE, we may take a long time traversing through jobs that are within the\n  grace period.\n]]\nlocal function getJobsInZset(zsetKey, rangeEnd, limit)\n  if limit > 0 then\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd, "LIMIT", 0, limit)\n  else\n    return rcall("ZRANGEBYSCORE", zsetKey, 0, rangeEnd)\n  end\nend\nlocal function cleanSet(\n    setKey,\n    jobKeyPrefix,\n    rangeEnd,\n    timestamp,\n    limit,\n    attributes,\n    isFinished,\n    jobSchedulersKey)\n    local jobs = getJobsInZset(setKey, rangeEnd, limit)\n    local deleted = {}\n    local deletedCount = 0\n    local jobTS\n    for i, job in ipairs(jobs) do\n        if limit > 0 and deletedCount >= limit then\n            break\n        end\n        local jobKey = jobKeyPrefix .. job\n        -- Extract a Job Scheduler Id from jobId ("repeat:job-scheduler-id:millis") \n        -- and check if it is in the scheduled jobs\n        if not (jobSchedulersKey and isJobSchedulerJob(job, jobKey, jobSchedulersKey)) then\n            if isFinished then\n                removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]] )\n                deletedCount = deletedCount + 1\n                table.insert(deleted, job)\n            else\n                -- * finishedOn says when the job was completed, but it isn\'t set unless the job has actually completed\n                jobTS = getTimestamp(jobKey, attributes)\n                if (not jobTS or jobTS <= timestamp) then\n                    removeJob(job, true, jobKeyPrefix, true --[[remove debounce key]] )\n                    deletedCount = deletedCount + 1\n                    table.insert(deleted, job)\n                end\n            end\n        end\n    end\n    if (#deleted > 0) then\n        for from, to in batches(#deleted, 7000) do\n            rcall("ZREM", setKey, unpack(deleted, from, to))\n        end\n    end\n    return {deleted, deletedCount}\nend\nlocal result\nif ARGV[4] == "active" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], false --[[ hasFinished ]],\n                      repeatKey)\nelseif ARGV[4] == "delayed" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"processedOn", "timestamp"}, false  --[[ hasFinished ]], repeatKey)\nelseif ARGV[4] == "prioritized" then\n  rangeEnd = "+inf"\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"timestamp"}, false  --[[ hasFinished ]], repeatKey)\nelseif ARGV[4] == "wait" or ARGV[4] == "paused" then\n  result = cleanList(KEYS[1], ARGV[1], rangeStart, rangeEnd, ARGV[2], true --[[ hasFinished ]],\n                      repeatKey)\nelse\n  rangeEnd = ARGV[2]\n  -- No need to pass repeat key as in that moment job won\'t be related to a job scheduler\n  result = cleanSet(KEYS[1], ARGV[1], rangeEnd, ARGV[2], limit,\n                    {"finishedOn"}, true  --[[ hasFinished ]])\nend\nrcall("XADD", KEYS[2], "*", "event", "cleaned", "count", result[2])\nreturn result[1]\n',keys:3},ph={name:"drain",content:'--[[\n  Drains the queue, removes all jobs that are waiting\n  or delayed, but not active, completed or failed\n  Input:\n    KEYS[1] \'wait\',\n    KEYS[2] \'paused\'\n    KEYS[3] \'delayed\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] \'jobschedulers\' (repeat)\n    ARGV[1]  queue key prefix\n    ARGV[2]  should clean delayed jobs\n]]\nlocal rcall = redis.call\nlocal queueBaseKey = ARGV[1]\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to filter out jobs to ignore from a table.\n]]\nlocal function filterOutJobsToIgnore(jobs, jobsToIgnore)\n  local filteredJobs = {}\n  for i = 1, #jobs do\n    if not jobsToIgnore[jobs[i]] then\n      table.insert(filteredJobs, jobs[i])\n    end\n  end\n  return filteredJobs\nend\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getListItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getZSetItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\n-- We must not remove delayed jobs if they are associated to a job scheduler.\nlocal scheduledJobs = {}\nlocal jobSchedulers = rcall("ZRANGE", KEYS[5], 0, -1, "WITHSCORES")\n-- For every job scheduler, get the current delayed job id.\nfor i = 1, #jobSchedulers, 2 do\n    local jobSchedulerId = jobSchedulers[i]\n    local jobSchedulerMillis = jobSchedulers[i + 1]\n    local delayedJobId = "repeat:" .. jobSchedulerId .. ":" .. jobSchedulerMillis\n    scheduledJobs[delayedJobId] = true\nend\nremoveListJobs(KEYS[1], true, queueBaseKey, 0, scheduledJobs) -- wait\nremoveListJobs(KEYS[2], true, queueBaseKey, 0, scheduledJobs) -- paused\nif ARGV[2] == "1" then\n  removeZSetJobs(KEYS[3], true, queueBaseKey, 0, scheduledJobs) -- delayed\nend\nremoveZSetJobs(KEYS[4], true, queueBaseKey, 0, scheduledJobs) -- prioritized\n',keys:5},mh={name:"extendLock",content:'--[[\n  Extend lock and removes the job from the stalled set.\n  Input:\n    KEYS[1] \'lock\',\n    KEYS[2] \'stalled\'\n    ARGV[1]  token\n    ARGV[2]  lock duration in milliseconds\n    ARGV[3]  jobid\n  Output:\n    "1" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  --   if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2], "XX") then\n  if rcall("SET", KEYS[1], ARGV[1], "PX", ARGV[2]) then\n    rcall("SREM", KEYS[2], ARGV[3])\n    return 1\n  end\nend\nreturn 0\n',keys:2},hh={name:"extendLocks",content:'--[[\n  Extend locks for multiple jobs and remove them from the stalled set if successful.\n  Return the list of job IDs for which the operation failed.\n  KEYS[1] = stalledKey\n  ARGV[1] = baseKey\n  ARGV[2] = tokens\n  ARGV[3] = jobIds\n  ARGV[4] = lockDuration (ms)\n  Output:\n    An array of failed job IDs. If empty, all succeeded.\n]]\nlocal rcall = redis.call\nlocal stalledKey = KEYS[1]\nlocal baseKey = ARGV[1]\nlocal tokens = cmsgpack.unpack(ARGV[2])\nlocal jobIds = cmsgpack.unpack(ARGV[3])\nlocal lockDuration = ARGV[4]\nlocal jobCount = #jobIds\nlocal failedJobs = {}\nfor i = 1, jobCount, 1 do\n    local lockKey = baseKey .. jobIds[i] .. \':lock\'\n    local jobId = jobIds[i]\n    local token = tokens[i]\n    local currentToken = rcall("GET", lockKey)\n    if currentToken == token then\n        local setResult = rcall("SET", lockKey, token, "PX", lockDuration)\n        if setResult then\n            rcall("SREM", stalledKey, jobId)\n        else\n            table.insert(failedJobs, jobId)\n        end\n    else\n        table.insert(failedJobs, jobId)\n    end\nend\nreturn failedJobs\n',keys:1},yh={name:"getCounts",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1...] types\n]]\nlocal rcall = redis.call;\nlocal prefix = KEYS[1]\nlocal results = {}\nfor i = 1, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        results[#results+1] = count-1\n      else\n        results[#results+1] = 0\n      end\n    else\n      results[#results+1] = rcall("LLEN", stateKey)\n    end\n  elseif ARGV[i] == "active" then\n    results[#results+1] = rcall("LLEN", stateKey)\n  else\n    results[#results+1] = rcall("ZCARD", stateKey)\n  end\nend\nreturn results\n',keys:1},fh={name:"getCountsPerPriority",content:'--[[\n  Get counts per provided states\n    Input:\n      KEYS[1] wait key\n      KEYS[2] paused key\n      KEYS[3] meta key\n      KEYS[4] prioritized key\n      ARGV[1...] priorities\n]]\nlocal rcall = redis.call\nlocal results = {}\nlocal waitKey = KEYS[1]\nlocal pausedKey = KEYS[2]\nlocal prioritizedKey = KEYS[4]\n-- Includes\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\nfor i = 1, #ARGV do\n  local priority = tonumber(ARGV[i])\n  if priority == 0 then\n    if isQueuePaused(KEYS[3]) then\n      results[#results+1] = rcall("LLEN", pausedKey)\n    else\n      results[#results+1] = rcall("LLEN", waitKey)\n    end\n  else\n    results[#results+1] = rcall("ZCOUNT", prioritizedKey,\n      priority * 0x100000000, (priority + 1)  * 0x100000000 - 1)\n  end\nend\nreturn results\n',keys:4},vh={name:"getDependencyCounts",content:'--[[\n  Get counts per child states\n    Input:\n      KEYS[1]    processed key\n      KEYS[2]    unprocessed key\n      KEYS[3]    ignored key\n      KEYS[4]    failed key\n      ARGV[1...] types\n]]\nlocal rcall = redis.call;\nlocal processedKey = KEYS[1]\nlocal unprocessedKey = KEYS[2]\nlocal ignoredKey = KEYS[3]\nlocal failedKey = KEYS[4]\nlocal results = {}\nfor i = 1, #ARGV do\n  if ARGV[i] == "processed" then\n    results[#results+1] = rcall("HLEN", processedKey)\n  elseif ARGV[i] == "unprocessed" then\n    results[#results+1] = rcall("SCARD", unprocessedKey)\n  elseif ARGV[i] == "ignored" then\n    results[#results+1] = rcall("HLEN", ignoredKey)\n  else\n    results[#results+1] = rcall("ZCARD", failedKey)\n  end\nend\nreturn results\n',keys:4},bh={name:"getJobScheduler",content:'--[[\n  Get job scheduler record.\n  Input:\n    KEYS[1] \'repeat\' key\n    ARGV[1] id\n]]\nlocal rcall = redis.call\nlocal jobSchedulerKey = KEYS[1] .. ":" .. ARGV[1]\nlocal score = rcall("ZSCORE", KEYS[1], ARGV[1])\nif score then\n  return {rcall("HGETALL", jobSchedulerKey), score} -- get job data\nend\nreturn {nil, nil}\n',keys:1},gh={name:"getRanges",content:'--[[\n  Get job ids per provided states\n    Input:\n      KEYS[1]    \'prefix\'\n      ARGV[1]    start\n      ARGV[2]    end\n      ARGV[3]    asc\n      ARGV[4...] types\n]]\nlocal rcall = redis.call\nlocal prefix = KEYS[1]\nlocal rangeStart = tonumber(ARGV[1])\nlocal rangeEnd = tonumber(ARGV[2])\nlocal asc = ARGV[3]\nlocal results = {}\nlocal function getRangeInList(listKey, asc, rangeStart, rangeEnd, results)\n  if asc == "1" then\n    local modifiedRangeStart\n    local modifiedRangeEnd\n    if rangeStart == -1 then\n      modifiedRangeStart = 0\n    else\n      modifiedRangeStart = -(rangeStart + 1)\n    end\n    if rangeEnd == -1 then\n      modifiedRangeEnd = 0\n    else\n      modifiedRangeEnd = -(rangeEnd + 1)\n    end\n    results[#results+1] = rcall("LRANGE", listKey,\n      modifiedRangeEnd,\n      modifiedRangeStart)\n  else\n    results[#results+1] = rcall("LRANGE", listKey, rangeStart, rangeEnd)\n  end\nend\nfor i = 4, #ARGV do\n  local stateKey = prefix .. ARGV[i]\n  if ARGV[i] == "wait" or ARGV[i] == "paused" then\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local marker = rcall("LINDEX", stateKey, -1)\n    if marker and string.sub(marker, 1, 2) == "0:" then\n      local count = rcall("LLEN", stateKey)\n      if count > 1 then\n        rcall("RPOP", stateKey)\n        getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n      else\n        results[#results+1] = {}\n      end\n    else\n      getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n    end\n  elseif ARGV[i] == "active" then\n    getRangeInList(stateKey, asc, rangeStart, rangeEnd, results)\n  else\n    if asc == "1" then\n      results[#results+1] = rcall("ZRANGE", stateKey, rangeStart, rangeEnd)\n    else\n      results[#results+1] = rcall("ZREVRANGE", stateKey, rangeStart, rangeEnd)\n    end\n  end\nend\nreturn results\n',keys:1},_h={name:"getRateLimitTtl",content:'--[[\n  Get rate limit ttl\n    Input:\n      KEYS[1] \'limiter\'\n      ARGV[1] maxJobs\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\nlocal rateLimiterKey = KEYS[1]\nif ARGV[1] ~= "0" then\n  return getRateLimitTTL(tonumber(ARGV[1]), rateLimiterKey)\nelse\n  return rcall("PTTL", rateLimiterKey)\nend\n',keys:1},xh={name:"getState",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'prioritized\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) then\n  return "prioritized"\nend\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal active_items = rcall("LRANGE", KEYS[4] , 0, -1)\nif checkItemInList(active_items, ARGV[1]) ~= nil then\n  return "active"\nend\nlocal wait_items = rcall("LRANGE", KEYS[5] , 0, -1)\nif checkItemInList(wait_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nlocal paused_items = rcall("LRANGE", KEYS[6] , 0, -1)\nif checkItemInList(paused_items, ARGV[1]) ~= nil then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7], ARGV[1]) then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8},kh={name:"getStateV2",content:'--[[\n  Get a job state\n  Input: \n    KEYS[1] \'completed\' key,\n    KEYS[2] \'failed\' key\n    KEYS[3] \'delayed\' key\n    KEYS[4] \'active\' key\n    KEYS[5] \'wait\' key\n    KEYS[6] \'paused\' key\n    KEYS[7] \'waiting-children\' key\n    KEYS[8] \'prioritized\' key\n    ARGV[1] job id\n  Output:\n    \'completed\'\n    \'failed\'\n    \'delayed\'\n    \'active\'\n    \'waiting\'\n    \'waiting-children\'\n    \'unknown\'\n]]\nlocal rcall = redis.call\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  return "completed"\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  return "failed"\nend\nif rcall("ZSCORE", KEYS[3], ARGV[1]) then\n  return "delayed"\nend\nif rcall("ZSCORE", KEYS[8], ARGV[1]) then\n  return "prioritized"\nend\nif rcall("LPOS", KEYS[4] , ARGV[1]) then\n  return "active"\nend\nif rcall("LPOS", KEYS[5] , ARGV[1]) then\n  return "waiting"\nend\nif rcall("LPOS", KEYS[6] , ARGV[1]) then\n  return "waiting"\nend\nif rcall("ZSCORE", KEYS[7] , ARGV[1]) then\n  return "waiting-children"\nend\nreturn "unknown"\n',keys:8},Eh={name:"isFinished",content:'--[[\n  Checks if a job is finished (.i.e. is in the completed or failed set)\n  Input: \n    KEYS[1] completed key\n    KEYS[2] failed key\n    KEYS[3] job key\n    ARGV[1] job id\n    ARGV[2] return value?\n  Output:\n    0 - Not finished.\n    1 - Completed.\n    2 - Failed.\n   -1 - Missing job. \n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[3]) ~= 1 then\n  if ARGV[2] == "1" then\n    return {-1,"Missing key for job " .. KEYS[3] .. ". isFinished"}\n  end  \n  return -1\nend\nif rcall("ZSCORE", KEYS[1], ARGV[1]) then\n  if ARGV[2] == "1" then\n    local returnValue = rcall("HGET", KEYS[3], "returnvalue")\n    return {1,returnValue}\n  end\n  return 1\nend\nif rcall("ZSCORE", KEYS[2], ARGV[1]) then\n  if ARGV[2] == "1" then\n    local failedReason = rcall("HGET", KEYS[3], "failedReason")\n    return {2,failedReason}\n  end\n  return 2\nend\nif ARGV[2] == "1" then\n  return {0}\nend\nreturn 0\n',keys:3},Kh={name:"isJobInList",content:'--[[\n  Checks if job is in a given list.\n  Input:\n    KEYS[1]\n    ARGV[1]\n  Output:\n    1 if element found in the list.\n]]\n-- Includes\n--[[\n  Functions to check if a item belongs to a list.\n]]\nlocal function checkItemInList(list, item)\n  for _, v in pairs(list) do\n    if v == item then\n      return 1\n    end\n  end\n  return nil\nend\nlocal items = redis.call("LRANGE", KEYS[1] , 0, -1)\nreturn checkItemInList(items, ARGV[1])\n',keys:1},wh={name:"isMaxed",content:'--[[\n  Checks if queue is maxed.\n  Input:\n    KEYS[1] meta key\n    KEYS[2] active key\n  Output:\n    1 if element found in the list.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to check if queue is maxed or not.\n]]\nlocal function isQueueMaxed(queueMetaKey, activeKey)\n  local maxConcurrency = rcall("HGET", queueMetaKey, "concurrency")\n  if maxConcurrency then\n    local activeCount = rcall("LLEN", activeKey)\n    if activeCount >= tonumber(maxConcurrency) then\n      return true\n    end\n  end\n  return false\nend\nreturn isQueueMaxed(KEYS[1], KEYS[2])\n',keys:2},Sh={name:"moveJobFromActiveToWait",content:'--[[\n  Function to move job from active state to wait.\n  Input:\n    KEYS[1]  active key\n    KEYS[2]  wait key\n    KEYS[3]  stalled key\n    KEYS[4]  paused key\n    KEYS[5]  meta key\n    KEYS[6]  limiter key\n    KEYS[7]  prioritized key\n    KEYS[8]  marker key\n    KEYS[9] event key\n    ARGV[1] job id\n    ARGV[2] lock token\n    ARGV[3] job id key\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to push back job considering priority in front of same prioritized jobs.\n]]\nlocal function pushBackJobWithPriority(prioritizedKey, priority, jobId)\n  -- in order to put it at front of same prioritized jobs\n  -- we consider prioritized counter as 0\n  local score = priority * 0x100000000\n  rcall("ZADD", prioritizedKey, score, jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal jobId = ARGV[1]\nlocal token = ARGV[2]\nlocal jobKey = ARGV[3]\nif rcall("EXISTS", jobKey) == 0 then\n  return -1\nend\nlocal errorCode = removeLock(jobKey, KEYS[3], token, jobId)\nif errorCode < 0 then\n  return errorCode\nend\nlocal metaKey = KEYS[5]\nlocal removed = rcall("LREM", KEYS[1], 1, jobId)\nif removed > 0 then\n  local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[1], KEYS[2], KEYS[4])\n  local priority = tonumber(rcall("HGET", ARGV[3], "priority")) or 0\n  if priority > 0 then\n    pushBackJobWithPriority(KEYS[7], priority, jobId)\n  else\n    addJobInTargetList(target, KEYS[8], "RPUSH", isPausedOrMaxed, jobId)\n  end\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  -- Emit waiting event\n  rcall("XADD", KEYS[9], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n    "jobId", jobId, "prev", "active")\nend\nlocal pttl = rcall("PTTL", KEYS[6])\nif pttl > 0 then\n  return pttl\nelse\n  return 0\nend\n',keys:9},Ih={name:"moveJobsToWait",content:'--[[\n  Move completed, failed or delayed jobs to wait.\n  Note: Does not support jobs with priorities.\n  Input:\n    KEYS[1] base key\n    KEYS[2] events stream\n    KEYS[3] state key (failed, completed, delayed)\n    KEYS[4] \'wait\'\n    KEYS[5] \'paused\'\n    KEYS[6] \'meta\'\n    KEYS[7] \'active\'\n    KEYS[8] \'marker\'\n    ARGV[1] count\n    ARGV[2] timestamp\n    ARGV[3] prev state\n  Output:\n    1  means the operation is not completed\n    0  means the operation is completed\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal timestamp = tonumber(ARGV[2])\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal metaKey = KEYS[6]\nlocal target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[7], KEYS[4], KEYS[5])\nlocal jobs = rcall(\'ZRANGEBYSCORE\', KEYS[3], 0, timestamp, \'LIMIT\', 0, maxCount)\nif (#jobs > 0) then\n    if ARGV[3] == "failed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "failedReason")\n        end\n    elseif ARGV[3] == "completed" then\n        for i, key in ipairs(jobs) do\n            local jobKey = KEYS[1] .. key\n            rcall("HDEL", jobKey, "finishedOn", "processedOn", "returnvalue")\n        end\n    end\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    for i, key in ipairs(jobs) do\n        -- Emit waiting event\n        rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event",\n              "waiting", "jobId", key, "prev", ARGV[3]);\n    end\n    for from, to in batches(#jobs, 7000) do\n        rcall("ZREM", KEYS[3], unpack(jobs, from, to))\n        rcall("LPUSH", target, unpack(jobs, from, to))\n    end\n    addBaseMarkerIfNeeded(KEYS[8], isPausedOrMaxed)\nend\nmaxCount = maxCount - #jobs\nif (maxCount <= 0) then return 1 end\nreturn 0\n',keys:8},jh={name:"moveStalledJobsToWait",content:'--[[\n  Move stalled jobs to wait.\n    Input:\n      KEYS[1] \'stalled\' (SET)\n      KEYS[2] \'wait\',   (LIST)\n      KEYS[3] \'active\', (LIST)\n      KEYS[4] \'stalled-check\', (KEY)\n      KEYS[5] \'meta\', (KEY)\n      KEYS[6] \'paused\', (LIST)\n      KEYS[7] \'marker\'\n      KEYS[8] \'event stream\' (STREAM)\n      ARGV[1]  Max stalled job count\n      ARGV[2]  queue.toKey(\'\')\n      ARGV[3]  timestamp\n      ARGV[4]  max check time\n    Events:\n      \'stalled\' with stalled job id.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\nlocal stalledKey = KEYS[1]\nlocal waitKey = KEYS[2]\nlocal activeKey = KEYS[3]\nlocal stalledCheckKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal pausedKey = KEYS[6]\nlocal markerKey = KEYS[7]\nlocal eventStreamKey = KEYS[8]\nlocal maxStalledJobCount = tonumber(ARGV[1])\nlocal queueKeyPrefix = ARGV[2]\nlocal timestamp = ARGV[3]\nlocal maxCheckTime = ARGV[4]\nif rcall("EXISTS", stalledCheckKey) == 1 then\n    return {}\nend\nrcall("SET", stalledCheckKey, timestamp, "PX", maxCheckTime)\n-- Trim events before emiting them to avoid trimming events emitted in this script\ntrimEvents(metaKey, eventStreamKey)\n-- Move all stalled jobs to wait\nlocal stalling = rcall(\'SMEMBERS\', stalledKey)\nlocal stalled = {}\nif (#stalling > 0) then\n    rcall(\'DEL\', stalledKey)\n    -- Remove from active list\n    for i, jobId in ipairs(stalling) do\n        -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n        if string.sub(jobId, 1, 2) == "0:" then\n            -- If the jobId is a delay marker ID we just remove it.\n            rcall("LREM", activeKey, 1, jobId)\n        else\n            local jobKey = queueKeyPrefix .. jobId\n            -- Check that the lock is also missing, then we can handle this job as really stalled.\n            if (rcall("EXISTS", jobKey .. ":lock") == 0) then\n                --  Remove from the active queue.\n                local removed = rcall("LREM", activeKey, 1, jobId)\n                if (removed > 0) then\n                    -- If this job has been stalled too many times, such as if it crashes the worker, then fail it.\n                    local stalledCount = rcall("HINCRBY", jobKey, "stc", 1)\n                    if stalledCount > maxStalledJobCount then\n                        local jobAttributes = rcall("HMGET", jobKey, "opts", "parent")\n                        local rawOpts = jobAttributes[1]\n                        local rawParentData = jobAttributes[2]\n                        local opts = cjson.decode(rawOpts)\n                        local failedReason = "job stalled more than allowable limit"\n                        rcall("HSET", jobKey, "defa", failedReason)\n                    end\n                    local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n                    -- Move the job back to the wait queue, to immediately be picked up by a waiting worker.\n                    addJobInTargetList(target, markerKey, "RPUSH", isPausedOrMaxed, jobId)\n                    rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId", jobId, \'prev\', \'active\')\n                    -- Emit the stalled event\n                    rcall("XADD", eventStreamKey, "*", "event", "stalled", "jobId", jobId)\n                    table.insert(stalled, jobId)\n                end\n            end\n        end\n    end\nend\n-- Mark potentially stalled jobs\nlocal active = rcall(\'LRANGE\', activeKey, 0, -1)\nif (#active > 0) then\n    for from, to in batches(#active, 7000) do\n        rcall(\'SADD\', stalledKey, unpack(active, from, to))\n    end\nend\nreturn stalled\n',keys:8},Rh={name:"moveToActive",content:'--[[\n  Move next job to be processed to active, lock it and fetch its data. The job\n  may be delayed, in that case we need to move it to the delayed set instead.\n  This operation guarantees that the worker owns the job during the lock\n  expiration time. The worker is responsible of keeping the lock fresh\n  so that no other worker picks this job again.\n  Input:\n    KEYS[1] wait key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] stream events key\n    KEYS[5] stalled key\n    -- Rate limiting\n    KEYS[6] rate limiter key\n    KEYS[7] delayed key\n    -- Delayed jobs\n    KEYS[8] paused key\n    KEYS[9] meta key\n    KEYS[10] pc priority counter\n    -- Marker\n    KEYS[11] marker key\n    -- Arguments\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] opts\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n    opts - name - worker name\n]]\nlocal rcall = redis.call\nlocal waitKey = KEYS[1]\nlocal activeKey = KEYS[2]\nlocal eventStreamKey = KEYS[4]\nlocal rateLimiterKey = KEYS[6]\nlocal delayedKey = KEYS[7]\nlocal opts = cmsgpack.unpack(ARGV[3])\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPrioritizedToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, markerKey, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  addBaseMarkerIfNeeded(markerKey, false)\n  -- rate limit delay must be 0 in this case to prevent adding more delay\n  -- when job that is moved to active needs to be processed\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[9], activeKey, waitKey, KEYS[8])\n-- Check if there are delayed jobs that we can move to wait.\nlocal markerKey = KEYS[11]\npromoteDelayedJobs(delayedKey, markerKey, target, KEYS[3], eventStreamKey, ARGV[1],\n                   ARGV[2], KEYS[10], isPausedOrMaxed)\nlocal maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\nlocal expireTime = getRateLimitTTL(maxJobs, rateLimiterKey)\n-- Check if we are rate limited first.\nif expireTime > 0 then return {0, 0, expireTime, 0} end\n-- paused or maxed queue\nif isPausedOrMaxed then return {0, 0, 0, 0} end\n-- no job ID, try non-blocking move from wait to active\nlocal jobId = rcall("RPOPLPUSH", waitKey, activeKey)\n-- Markers in waitlist DEPRECATED in v5: Will be completely removed in v6.\nif jobId and string.sub(jobId, 1, 2) == "0:" then\n    rcall("LREM", activeKey, 1, jobId)\n    jobId = rcall("RPOPLPUSH", waitKey, activeKey)\nend\nif jobId then\n    return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                   maxJobs, markerKey, opts)\nelse\n    jobId = moveJobFromPrioritizedToActive(KEYS[3], activeKey, KEYS[10])\n    if jobId then\n        return prepareJobForProcessing(ARGV[1], rateLimiterKey, eventStreamKey, jobId, ARGV[2],\n                                       maxJobs, markerKey, opts)\n    end\nend\n-- Return the timestamp for the next delayed job if any.\nlocal nextTimestamp = getNextDelayedTimestamp(delayedKey)\nif nextTimestamp ~= nil then return {0, 0, 0, nextTimestamp} end\nreturn {0, 0, 0, 0}\n',keys:11},Th={name:"moveToDelayed",content:'--[[\n  Moves job from active to delayed set.\n  Input:\n    KEYS[1] marker key\n    KEYS[2] active key\n    KEYS[3] prioritized key\n    KEYS[4] delayed key\n    KEYS[5] job key\n    KEYS[6] events stream\n    KEYS[7] meta key\n    KEYS[8] stalled key\n    ARGV[1] key prefix\n    ARGV[2] timestamp\n    ARGV[3] the id of the job\n    ARGV[4] queue token\n    ARGV[5] delay value\n    ARGV[6] skip attempt\n    ARGV[7] optional job fields to update\n  Output:\n    0 - OK\n   -1 - Missing job.\n   -3 - Job not in active set.\n  Events:\n    - delayed key.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal jobKey = KEYS[5]\nlocal metaKey = KEYS[7]\nlocal token = ARGV[4] \nif rcall("EXISTS", jobKey) == 1 then\n    local errorCode = removeLock(jobKey, KEYS[8], token, ARGV[3])\n    if errorCode < 0 then\n        return errorCode\n    end\n    updateJobFields(jobKey, ARGV[7])\n    local delayedKey = KEYS[4]\n    local jobId = ARGV[3]\n    local delay = tonumber(ARGV[5])\n    local score, delayedTimestamp = getDelayedScore(delayedKey, ARGV[2], delay)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if numRemovedElements < 1 then return -3 end\n    if ARGV[6] == "0" then\n        rcall("HINCRBY", jobKey, "atm", 1)\n    end\n    rcall("HSET", jobKey, "delay", ARGV[5])\n    local maxEvents = getOrSetMaxEvents(metaKey)\n    rcall("ZADD", delayedKey, score, jobId)\n    rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n          "jobId", jobId, "delay", delayedTimestamp)\n    -- Check if we need to push a marker job to wake up sleeping workers.\n    local markerKey = KEYS[1]\n    addDelayMarkerIfNeeded(markerKey, delayedKey)\n    return 0\nelse\n    return -1\nend\n',keys:8},Oh={name:"moveToFinished",content:'--[[\n  Move job from active to a finished status (completed o failed)\n  A job can only be moved to completed if it was active.\n  The job must be locked before it can be moved to a finished status,\n  and the lock must be released in this script.\n    Input:\n      KEYS[1] wait key\n      KEYS[2] active key\n      KEYS[3] prioritized key\n      KEYS[4] event stream key\n      KEYS[5] stalled key\n      -- Rate limiting\n      KEYS[6] rate limiter key\n      KEYS[7] delayed key\n      KEYS[8] paused key\n      KEYS[9] meta key\n      KEYS[10] pc priority counter\n      KEYS[11] completed/failed key\n      KEYS[12] jobId key\n      KEYS[13] metrics key\n      KEYS[14] marker key\n      ARGV[1]  jobId\n      ARGV[2]  timestamp\n      ARGV[3]  msg property returnvalue / failedReason\n      ARGV[4]  return value / failed reason\n      ARGV[5]  target (completed/failed)\n      ARGV[6]  fetch next?\n      ARGV[7]  keys prefix\n      ARGV[8]  opts\n      ARGV[9]  job fields to update\n      opts - token - lock token\n      opts - keepJobs\n      opts - lockDuration - lock duration in milliseconds\n      opts - attempts max attempts\n      opts - maxMetricsSize\n      opts - fpof - fail parent on fail\n      opts - cpof - continue parent on fail\n      opts - idof - ignore dependency on fail\n      opts - rdof - remove dependency on fail\n      opts - name - worker name\n    Output:\n      0 OK\n      -1 Missing key.\n      -2 Missing lock.\n      -3 Job not in active set\n      -4 Job has pending children\n      -6 Lock is not owned by this client\n      -9 Job has failed children\n    Events:\n      \'completed/failed\'\n]]\nlocal rcall = redis.call\n--- Includes\n--[[\n  Functions to collect metrics based on a current and previous count of jobs.\n  Granualarity is fixed at 1 minute.\n]]\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\nlocal function collectMetrics(metaKey, dataPointsList, maxDataPoints,\n                                 timestamp)\n    -- Increment current count\n    local count = rcall("HINCRBY", metaKey, "count", 1) - 1\n    -- Compute how many data points we need to add to the list, N.\n    local prevTS = rcall("HGET", metaKey, "prevTS")\n    if not prevTS then\n        -- If prevTS is nil, set it to the current timestamp\n        rcall("HSET", metaKey, "prevTS", timestamp, "prevCount", 0)\n        return\n    end\n    local N = math.min(math.floor(timestamp / 60000) - math.floor(prevTS / 60000), tonumber(maxDataPoints))\n    if N > 0 then\n        local delta = count - rcall("HGET", metaKey, "prevCount")\n        -- If N > 1, add N-1 zeros to the list\n        if N > 1 then\n            local points = {}\n            points[1] = delta\n            for i = 2, N do\n                points[i] = 0\n            end\n            for from, to in batches(#points, 7000) do\n                rcall("LPUSH", dataPointsList, unpack(points, from, to))\n            end\n        else\n            -- LPUSH delta to the list\n            rcall("LPUSH", dataPointsList, delta)\n        end\n        -- LTRIM to keep list to its max size\n        rcall("LTRIM", dataPointsList, 0, maxDataPoints - 1)\n        -- update prev count with current count\n        rcall("HSET", metaKey, "prevCount", count, "prevTS", timestamp)\n    end\nend\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\n--[[\n  Function to get current rate limit ttl.\n]]\nlocal function getRateLimitTTL(maxJobs, rateLimiterKey)\n  if maxJobs and maxJobs <= tonumber(rcall("GET", rateLimiterKey) or 0) then\n    local pttl = rcall("PTTL", rateLimiterKey)\n    if pttl == 0 then\n      rcall("DEL", rateLimiterKey)\n    end\n    if pttl > 0 then\n      return pttl\n    end\n  end\n  return 0\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to move job from prioritized state to active.\n]]\nlocal function moveJobFromPrioritizedToActive(priorityKey, activeKey, priorityCounterKey)\n  local prioritizedJob = rcall("ZPOPMIN", priorityKey)\n  if #prioritizedJob > 0 then\n    rcall("LPUSH", activeKey, prioritizedJob[1])\n    return prioritizedJob[1]\n  else\n    rcall("DEL", priorityCounterKey)\n  end\nend\n--[[\n  Function to recursively move from waitingChildren to failed.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\n--[[\n  Functions to remove jobs when removeOnFail option is provided.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Functions to remove jobs by max age.\n]]\n-- Includes\nlocal function removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix,\n  shouldRemoveDebounceKey)\n  local start = timestamp - maxAge * 1000\n  local jobIds = rcall("ZREVRANGEBYSCORE", targetSet, start, "-inf")\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYSCORE", targetSet, "-inf", start)\nend\n--[[\n  Functions to remove jobs by max count.\n]]\n-- Includes\nlocal function removeJobsByMaxCount(maxCount, targetSet, prefix)\n  local start = maxCount\n  local jobIds = rcall("ZREVRANGE", targetSet, start, -1)\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYRANK", targetSet, 0, -(maxCount + 1))\nend\nlocal function removeJobsOnFail(queueKeyPrefix, failedKey, jobId, opts, timestamp)\n  local removeOnFailType = type(opts["removeOnFail"])\n  if removeOnFailType == "number" then\n    removeJobsByMaxCount(opts["removeOnFail"],\n                        failedKey, queueKeyPrefix)\n  elseif removeOnFailType == "boolean" then\n    if opts["removeOnFail"] then\n      removeJob(jobId, false, queueKeyPrefix,\n                false --[[remove debounce key]])\n      rcall("ZREM", failedKey, jobId)\n    end\n  elseif removeOnFailType ~= "nil" then\n    local maxAge = opts["removeOnFail"]["age"]\n    local maxCount = opts["removeOnFail"]["count"]\n    if maxAge ~= nil then\n      removeJobsByMaxAge(timestamp, maxAge,\n                        failedKey, queueKeyPrefix)\n    end\n    if maxCount ~= nil and maxCount > 0 then\n      removeJobsByMaxCount(maxCount, failedKey,\n                            queueKeyPrefix)\n    end\n  end \nend\nlocal moveParentToFailedIfNeeded = function (parentQueueKey, parentKey, parentId, jobIdKey, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    local parentDelayedKey = parentQueueKey .. ":delayed"\n    local parentPrioritizedKey = parentQueueKey .. ":prioritized"\n    local parentWaitingChildrenOrDelayedKey\n    local prevState\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentWaitingChildrenKey\n      prevState = "waiting-children"\n    elseif rcall("ZSCORE", parentDelayedKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentDelayedKey\n      prevState = "delayed"\n      rcall("HSET", parentKey, "delay", 0)\n    end\n    if parentWaitingChildrenOrDelayedKey then\n      rcall("ZREM", parentWaitingChildrenOrDelayedKey, parentId)\n      local parentQueuePrefix = parentQueueKey .. ":"\n      local parentFailedKey = parentQueueKey .. ":failed"\n      local deferredFailure = "child " .. jobIdKey .. " failed"\n      rcall("HSET", parentKey, "defa", deferredFailure)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    else\n      if not rcall("ZSCORE", parentQueueKey .. ":failed", parentId) then\n        local deferredFailure = "child " .. jobIdKey .. " failed"\n        rcall("HSET", parentKey, "defa", deferredFailure)\n      end\n    end\n  end\nend\nlocal moveChildFromDependenciesIfNeeded = function (rawParentData, childKey, failedReason, timestamp)\n  if rawParentData then\n    local parentData = cjson.decode(rawParentData)\n    local parentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n    local parentDependenciesChildrenKey = parentKey .. ":dependencies"\n    if parentData[\'fpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentUnsuccesssfulChildrenKey = parentKey .. ":unsuccessful"\n        rcall("ZADD", parentUnsuccesssfulChildrenKey, timestamp, childKey)\n        moveParentToFailedIfNeeded(\n          parentData[\'queueKey\'],\n          parentKey,\n          parentData[\'id\'],\n          childKey,\n          timestamp\n        )\n      end\n    elseif parentData[\'cpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentFailedChildrenKey = parentKey .. ":failed"\n        rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        moveParentToWaitIfNeeded(parentData[\'queueKey\'], parentKey, parentData[\'id\'], timestamp)\n      end\n    elseif parentData[\'idof\'] or parentData[\'rdof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        moveParentToWaitIfNoPendingDependencies(parentData[\'queueKey\'], parentDependenciesChildrenKey,\n          parentKey, parentData[\'id\'], timestamp)\n        if parentData[\'idof\'] then\n          local parentFailedChildrenKey = parentKey .. ":failed"\n          rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        end\n      end\n    end\n  end\nend\n--[[\n  Function to move job from wait state to active.\n  Input:\n    opts - token - lock token\n    opts - lockDuration\n    opts - limiter\n]]\n-- Includes\nlocal function prepareJobForProcessing(keyPrefix, rateLimiterKey, eventStreamKey,\n    jobId, processedOn, maxJobs, markerKey, opts)\n  local jobKey = keyPrefix .. jobId\n  -- Check if we need to perform rate limiting.\n  if maxJobs then\n    local jobCounter = tonumber(rcall("INCR", rateLimiterKey))\n    if jobCounter == 1 then\n      local limiterDuration = opts[\'limiter\'] and opts[\'limiter\'][\'duration\']\n      local integerDuration = math.floor(math.abs(limiterDuration))\n      rcall("PEXPIRE", rateLimiterKey, integerDuration)\n    end\n  end\n  local lockKey = jobKey .. \':lock\'\n  -- get a lock\n  if opts[\'token\'] ~= "0" then\n    rcall("SET", lockKey, opts[\'token\'], "PX", opts[\'lockDuration\'])\n  end\n  local optionalValues = {}\n  if opts[\'name\'] then\n    -- Set "processedBy" field to the worker name\n    table.insert(optionalValues, "pb")\n    table.insert(optionalValues, opts[\'name\'])\n  end\n  rcall("XADD", eventStreamKey, "*", "event", "active", "jobId", jobId, "prev", "waiting")\n  rcall("HMSET", jobKey, "processedOn", processedOn, unpack(optionalValues))\n  rcall("HINCRBY", jobKey, "ats", 1)\n  addBaseMarkerIfNeeded(markerKey, false)\n  -- rate limit delay must be 0 in this case to prevent adding more delay\n  -- when job that is moved to active needs to be processed\n  return {rcall("HGETALL", jobKey), jobId, 0, 0} -- get job data\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is moved to completed or failed states.\n]]\nlocal function removeDeduplicationKeyIfNeededOnFinalization(prefixKey,\n  deduplicationId, jobId)\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local pttl = rcall("PTTL", deduplicationKey)\n    if pttl == 0 then\n      return rcall("DEL", deduplicationKey)\n    end\n    if pttl == -1 then\n      local currentJobId = rcall(\'GET\', deduplicationKey)\n      if currentJobId and currentJobId == jobId then\n        return rcall("DEL", deduplicationKey)\n      end\n    end\n  end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to trim events, default 10000.\n]]\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal function trimEvents(metaKey, eventStreamKey)\n  local maxEvents = getOrSetMaxEvents(metaKey)\n  if maxEvents then\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", maxEvents)\n  else\n    rcall("XTRIM", eventStreamKey, "MAXLEN", "~", 10000)\n  end\nend\n--[[\n  Validate and move or add dependencies to parent.\n]]\n-- Includes\nlocal function updateParentDepsIfNeeded(parentKey, parentQueueKey, parentDependenciesKey,\n  parentId, jobIdKey, returnvalue, timestamp )\n  local processedSet = parentKey .. ":processed"\n  rcall("HSET", processedSet, jobIdKey, returnvalue)\n  moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey, parentId, timestamp)\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal jobIdKey = KEYS[12]\nif rcall("EXISTS", jobIdKey) == 1 then -- Make sure job exists\n    -- Make sure it does not have pending dependencies\n    -- It must happen before removing lock\n    if ARGV[5] == "completed" then\n        if rcall("SCARD", jobIdKey .. ":dependencies") ~= 0 then\n            return -4\n        end\n        if rcall("ZCARD", jobIdKey .. ":unsuccessful") ~= 0 then\n            return -9\n        end\n    end\n    local opts = cmsgpack.unpack(ARGV[8])\n    local token = opts[\'token\']\n    local errorCode = removeLock(jobIdKey, KEYS[5], token, ARGV[1])\n    if errorCode < 0 then\n        return errorCode\n    end\n    updateJobFields(jobIdKey, ARGV[9]);\n    local attempts = opts[\'attempts\']\n    local maxMetricsSize = opts[\'maxMetricsSize\']\n    local maxCount = opts[\'keepJobs\'][\'count\']\n    local maxAge = opts[\'keepJobs\'][\'age\']\n    local jobAttributes = rcall("HMGET", jobIdKey, "parentKey", "parent", "deid")\n    local parentKey = jobAttributes[1] or ""\n    local parentId = ""\n    local parentQueueKey = ""\n    if jobAttributes[2] then -- TODO: need to revisit this logic if it\'s still needed\n        local jsonDecodedParent = cjson.decode(jobAttributes[2])\n        parentId = jsonDecodedParent[\'id\']\n        parentQueueKey = jsonDecodedParent[\'queueKey\']\n    end\n    local jobId = ARGV[1]\n    local timestamp = ARGV[2]\n    -- Remove from active list (if not active we shall return error)\n    local numRemovedElements = rcall("LREM", KEYS[2], -1, jobId)\n    if (numRemovedElements < 1) then\n        return -3\n    end\n    local eventStreamKey = KEYS[4]\n    local metaKey = KEYS[9]\n    -- Trim events before emiting them to avoid trimming events emitted in this script\n    trimEvents(metaKey, eventStreamKey)\n    local prefix = ARGV[7]\n    removeDeduplicationKeyIfNeededOnFinalization(prefix, jobAttributes[3], jobId)\n    -- If job has a parent we need to\n    -- 1) remove this job id from parents dependencies\n    -- 2) move the job Id to parent "processed" set\n    -- 3) push the results into parent "results" list\n    -- 4) if parent\'s dependencies is empty, then move parent to "wait/paused". Note it may be a different queue!.\n    if parentId == "" and parentKey ~= "" then\n        parentId = getJobIdFromKey(parentKey)\n        parentQueueKey = getJobKeyPrefix(parentKey, ":" .. parentId)\n    end\n    if parentId ~= "" then\n        if ARGV[5] == "completed" then\n            local dependenciesSet = parentKey .. ":dependencies"\n            if rcall("SREM", dependenciesSet, jobIdKey) == 1 then\n                updateParentDepsIfNeeded(parentKey, parentQueueKey, dependenciesSet, parentId, jobIdKey, ARGV[4],\n                    timestamp)\n            end\n        else\n            moveChildFromDependenciesIfNeeded(jobAttributes[2], jobIdKey, ARGV[4], timestamp)\n        end\n    end\n    local attemptsMade = rcall("HINCRBY", jobIdKey, "atm", 1)\n    -- Remove job?\n    if maxCount ~= 0 then\n        local targetSet = KEYS[11]\n        -- Add to complete/failed set\n        rcall("ZADD", targetSet, timestamp, jobId)\n        rcall("HSET", jobIdKey, ARGV[3], ARGV[4], "finishedOn", timestamp)\n        -- "returnvalue" / "failedReason" and "finishedOn"\n        if ARGV[5] == "failed" then\n            rcall("HDEL", jobIdKey, "defa")\n        end\n        -- Remove old jobs?\n        if maxAge ~= nil then\n            removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix)\n        end\n        if maxCount ~= nil and maxCount > 0 then\n            removeJobsByMaxCount(maxCount, targetSet, prefix)\n        end\n    else\n        removeJobKeys(jobIdKey)\n        if parentKey ~= "" then\n            -- TODO: when a child is removed when finished, result or failure in parent\n            -- must not be deleted, those value references should be deleted when the parent\n            -- is deleted\n            removeParentDependencyKey(jobIdKey, false, parentKey, jobAttributes[3])\n        end\n    end\n    rcall("XADD", eventStreamKey, "*", "event", ARGV[5], "jobId", jobId, ARGV[3], ARGV[4], "prev", "active")\n    if ARGV[5] == "failed" then\n        if tonumber(attemptsMade) >= tonumber(attempts) then\n            rcall("XADD", eventStreamKey, "*", "event", "retries-exhausted", "jobId", jobId, "attemptsMade",\n                attemptsMade)\n        end\n    end\n    -- Collect metrics\n    if maxMetricsSize ~= "" then\n        collectMetrics(KEYS[13], KEYS[13] .. \':data\', maxMetricsSize, timestamp)\n    end\n    -- Try to get next job to avoid an extra roundtrip if the queue is not closing,\n    -- and not rate limited.\n    if (ARGV[6] == "1") then\n        local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[2], KEYS[1], KEYS[8])\n        local markerKey = KEYS[14]\n        -- Check if there are delayed jobs that can be promoted\n        promoteDelayedJobs(KEYS[7], markerKey, target, KEYS[3], eventStreamKey, prefix, timestamp, KEYS[10],\n            isPausedOrMaxed)\n        local maxJobs = tonumber(opts[\'limiter\'] and opts[\'limiter\'][\'max\'])\n        -- Check if we are rate limited first.\n        local expireTime = getRateLimitTTL(maxJobs, KEYS[6])\n        if expireTime > 0 then\n            return {0, 0, expireTime, 0}\n        end\n        -- paused or maxed queue\n        if isPausedOrMaxed then\n            return {0, 0, 0, 0}\n        end\n        jobId = rcall("RPOPLPUSH", KEYS[1], KEYS[2])\n        if jobId then\n            -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n            if string.sub(jobId, 1, 2) == "0:" then\n                rcall("LREM", KEYS[2], 1, jobId)\n                -- If jobId is special ID 0:delay (delay greater than 0), then there is no job to process\n                -- but if ID is 0:0, then there is at least 1 prioritized job to process\n                if jobId == "0:0" then\n                    jobId = moveJobFromPrioritizedToActive(KEYS[3], KEYS[2], KEYS[10])\n                    return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs,\n                        markerKey, opts)\n                end\n            else\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs, markerKey,\n                    opts)\n            end\n        else\n            jobId = moveJobFromPrioritizedToActive(KEYS[3], KEYS[2], KEYS[10])\n            if jobId then\n                return prepareJobForProcessing(prefix, KEYS[6], eventStreamKey, jobId, timestamp, maxJobs, markerKey,\n                    opts)\n            end\n        end\n        -- Return the timestamp for the next delayed job if any.\n        local nextTimestamp = getNextDelayedTimestamp(KEYS[7])\n        if nextTimestamp ~= nil then\n            -- The result is guaranteed to be positive, since the\n            -- ZRANGEBYSCORE command would have return a job otherwise.\n            return {0, 0, 0, nextTimestamp}\n        end\n    end\n    local waitLen = rcall("LLEN", KEYS[1])\n    if waitLen == 0 then\n        local activeLen = rcall("LLEN", KEYS[2])\n        if activeLen == 0 then\n            local prioritizedLen = rcall("ZCARD", KEYS[3])\n            if prioritizedLen == 0 then\n                rcall("XADD", eventStreamKey, "*", "event", "drained")\n            end\n        end\n    end\n    return 0\nelse\n    return -1\nend\n',keys:14},Ah={name:"moveToWaitingChildren",content:'--[[\n  Moves job from active to waiting children set.\n  Input:\n    KEYS[1] active key\n    KEYS[2] wait-children key\n    KEYS[3] job key\n    KEYS[4] job dependencies key\n    KEYS[5] job unsuccessful key\n    KEYS[6] stalled key\n    KEYS[7] failed key\n    KEYS[8] events key\n    ARGV[1] token\n    ARGV[2] child key\n    ARGV[3] timestamp\n    ARGV[4] jobId\n    ARGV[5] prefix\n  Output:\n    0 - OK\n    1 - There are not pending dependencies.\n   -1 - Missing job.\n   -2 - Missing lock\n   -3 - Job not in active set\n]]\nlocal rcall = redis.call\nlocal activeKey = KEYS[1]\nlocal waitingChildrenKey = KEYS[2]\nlocal jobKey = KEYS[3]\nlocal jobDependenciesKey = KEYS[4]\nlocal jobUnsuccessfulKey = KEYS[5]\nlocal stalledKey = KEYS[6]\nlocal failedKey = KEYS[7]\nlocal timestamp = ARGV[3]\nlocal jobId = ARGV[4]\n--- Includes\n--[[\n  Function to recursively move from waitingChildren to failed.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized)\n  if no pending dependencies.\n]]\n-- Includes\n--[[\n  Validate and move parent to a wait status (waiting, delayed or prioritized) if needed.\n]]\n-- Includes\n--[[\n  Move parent to a wait status (wait, prioritized or delayed)\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    local parentWaitKey = parentQueueKey .. ":wait"\n    local parentPausedKey = parentQueueKey .. ":paused"\n    local parentActiveKey = parentQueueKey .. ":active"\n    local parentMetaKey = parentQueueKey .. ":meta"\n    local parentMarkerKey = parentQueueKey .. ":marker"\n    local jobAttributes = rcall("HMGET", parentKey, "priority", "delay")\n    local priority = tonumber(jobAttributes[1]) or 0\n    local delay = tonumber(jobAttributes[2]) or 0\n    if delay > 0 then\n        local delayedTimestamp = tonumber(timestamp) + delay\n        local score = delayedTimestamp * 0x1000\n        local parentDelayedKey = parentQueueKey .. ":delayed"\n        rcall("ZADD", parentDelayedKey, score, parentId)\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "delayed", "jobId", parentId, "delay",\n            delayedTimestamp)\n        addDelayMarkerIfNeeded(parentMarkerKey, parentDelayedKey)\n    else\n        if priority == 0 then\n            local parentTarget, isParentPausedOrMaxed = getTargetQueueList(parentMetaKey, parentActiveKey,\n                parentWaitKey, parentPausedKey)\n            addJobInTargetList(parentTarget, parentMarkerKey, "RPUSH", isParentPausedOrMaxed, parentId)\n        else\n            local isPausedOrMaxed = isQueuePausedOrMaxed(parentMetaKey, parentActiveKey)\n            addJobWithPriority(parentMarkerKey, parentQueueKey .. ":prioritized", priority, parentId,\n                parentQueueKey .. ":pc", isPausedOrMaxed)\n        end\n        rcall("XADD", parentQueueKey .. ":events", "*", "event", "waiting", "jobId", parentId, "prev",\n            "waiting-children")\n    end\nend\nlocal function moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then    \n      rcall("ZREM", parentWaitingChildrenKey, parentId)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    end\n  end\nend\nlocal function moveParentToWaitIfNoPendingDependencies(parentQueueKey, parentDependenciesKey, parentKey,\n  parentId, timestamp)\n  local doNotHavePendingDependencies = rcall("SCARD", parentDependenciesKey) == 0\n  if doNotHavePendingDependencies then\n    moveParentToWaitIfNeeded(parentQueueKey, parentKey, parentId, timestamp)\n  end\nend\n--[[\n  Functions to remove jobs when removeOnFail option is provided.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\n--[[\n  Functions to remove jobs by max age.\n]]\n-- Includes\nlocal function removeJobsByMaxAge(timestamp, maxAge, targetSet, prefix,\n  shouldRemoveDebounceKey)\n  local start = timestamp - maxAge * 1000\n  local jobIds = rcall("ZREVRANGEBYSCORE", targetSet, start, "-inf")\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYSCORE", targetSet, "-inf", start)\nend\n--[[\n  Functions to remove jobs by max count.\n]]\n-- Includes\nlocal function removeJobsByMaxCount(maxCount, targetSet, prefix)\n  local start = maxCount\n  local jobIds = rcall("ZREVRANGE", targetSet, start, -1)\n  for i, jobId in ipairs(jobIds) do\n    removeJob(jobId, false, prefix, false --[[remove debounce key]])\n  end\n  rcall("ZREMRANGEBYRANK", targetSet, 0, -(maxCount + 1))\nend\nlocal function removeJobsOnFail(queueKeyPrefix, failedKey, jobId, opts, timestamp)\n  local removeOnFailType = type(opts["removeOnFail"])\n  if removeOnFailType == "number" then\n    removeJobsByMaxCount(opts["removeOnFail"],\n                        failedKey, queueKeyPrefix)\n  elseif removeOnFailType == "boolean" then\n    if opts["removeOnFail"] then\n      removeJob(jobId, false, queueKeyPrefix,\n                false --[[remove debounce key]])\n      rcall("ZREM", failedKey, jobId)\n    end\n  elseif removeOnFailType ~= "nil" then\n    local maxAge = opts["removeOnFail"]["age"]\n    local maxCount = opts["removeOnFail"]["count"]\n    if maxAge ~= nil then\n      removeJobsByMaxAge(timestamp, maxAge,\n                        failedKey, queueKeyPrefix)\n    end\n    if maxCount ~= nil and maxCount > 0 then\n      removeJobsByMaxCount(maxCount, failedKey,\n                            queueKeyPrefix)\n    end\n  end \nend\nlocal moveParentToFailedIfNeeded = function (parentQueueKey, parentKey, parentId, jobIdKey, timestamp)\n  if rcall("EXISTS", parentKey) == 1 then\n    local parentWaitingChildrenKey = parentQueueKey .. ":waiting-children"\n    local parentDelayedKey = parentQueueKey .. ":delayed"\n    local parentPrioritizedKey = parentQueueKey .. ":prioritized"\n    local parentWaitingChildrenOrDelayedKey\n    local prevState\n    if rcall("ZSCORE", parentWaitingChildrenKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentWaitingChildrenKey\n      prevState = "waiting-children"\n    elseif rcall("ZSCORE", parentDelayedKey, parentId) then\n      parentWaitingChildrenOrDelayedKey = parentDelayedKey\n      prevState = "delayed"\n      rcall("HSET", parentKey, "delay", 0)\n    end\n    if parentWaitingChildrenOrDelayedKey then\n      rcall("ZREM", parentWaitingChildrenOrDelayedKey, parentId)\n      local parentQueuePrefix = parentQueueKey .. ":"\n      local parentFailedKey = parentQueueKey .. ":failed"\n      local deferredFailure = "child " .. jobIdKey .. " failed"\n      rcall("HSET", parentKey, "defa", deferredFailure)\n      moveParentToWait(parentQueueKey, parentKey, parentId, timestamp)\n    else\n      if not rcall("ZSCORE", parentQueueKey .. ":failed", parentId) then\n        local deferredFailure = "child " .. jobIdKey .. " failed"\n        rcall("HSET", parentKey, "defa", deferredFailure)\n      end\n    end\n  end\nend\nlocal moveChildFromDependenciesIfNeeded = function (rawParentData, childKey, failedReason, timestamp)\n  if rawParentData then\n    local parentData = cjson.decode(rawParentData)\n    local parentKey = parentData[\'queueKey\'] .. \':\' .. parentData[\'id\']\n    local parentDependenciesChildrenKey = parentKey .. ":dependencies"\n    if parentData[\'fpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentUnsuccesssfulChildrenKey = parentKey .. ":unsuccessful"\n        rcall("ZADD", parentUnsuccesssfulChildrenKey, timestamp, childKey)\n        moveParentToFailedIfNeeded(\n          parentData[\'queueKey\'],\n          parentKey,\n          parentData[\'id\'],\n          childKey,\n          timestamp\n        )\n      end\n    elseif parentData[\'cpof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        local parentFailedChildrenKey = parentKey .. ":failed"\n        rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        moveParentToWaitIfNeeded(parentData[\'queueKey\'], parentKey, parentData[\'id\'], timestamp)\n      end\n    elseif parentData[\'idof\'] or parentData[\'rdof\'] then\n      if rcall("SREM", parentDependenciesChildrenKey, childKey) == 1 then\n        moveParentToWaitIfNoPendingDependencies(parentData[\'queueKey\'], parentDependenciesChildrenKey,\n          parentKey, parentData[\'id\'], timestamp)\n        if parentData[\'idof\'] then\n          local parentFailedChildrenKey = parentKey .. ":failed"\n          rcall("HSET", parentFailedChildrenKey, childKey, failedReason)\n        end\n      end\n    end\n  end\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is moved to completed or failed states.\n]]\nlocal function removeDeduplicationKeyIfNeededOnFinalization(prefixKey,\n  deduplicationId, jobId)\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local pttl = rcall("PTTL", deduplicationKey)\n    if pttl == 0 then\n      return rcall("DEL", deduplicationKey)\n    end\n    if pttl == -1 then\n      local currentJobId = rcall(\'GET\', deduplicationKey)\n      if currentJobId and currentJobId == jobId then\n        return rcall("DEL", deduplicationKey)\n      end\n    end\n  end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\nlocal function moveToWaitingChildren(activeKey, waitingChildrenKey, jobId,\n    timestamp)\n  local score = tonumber(timestamp)\n  local numRemovedElements = rcall("LREM", activeKey, -1, jobId)\n  if(numRemovedElements < 1) then\n    return -3\n  end\n  rcall("ZADD", waitingChildrenKey, score, jobId)\n  return 0\nend\nif rcall("EXISTS", jobKey) == 1 then\n  if rcall("ZCARD", jobUnsuccessfulKey) ~= 0 then\n    -- TODO: refactor this logic in an include later\n    local jobAttributes = rcall("HMGET", jobKey, "parent", "deid", "opts")\n    removeDeduplicationKeyIfNeededOnFinalization(ARGV[5], jobAttributes[2], jobId)\n    local failedReason = "children are failed"\n    rcall("ZADD", failedKey, timestamp, jobId)\n    rcall("HSET", jobKey, "finishedOn", timestamp)\n    rcall("XADD", KEYS[8], "*", "event", "failed", "jobId", jobId, "failedReason",\n      failedReason, "prev", "active")\n    local rawParentData = jobAttributes[1]\n    local rawOpts = jobAttributes[3]\n    local opts = cjson.decode(rawOpts)\n    moveChildFromDependenciesIfNeeded(rawParentData, jobKey, failedReason, timestamp)\n    removeJobsOnFail(ARGV[5], failedKey, jobId, opts, timestamp)\n    return 0\n  else\n    if ARGV[2] ~= "" then\n      if rcall("SISMEMBER", jobDependenciesKey, ARGV[2]) ~= 0 then\n        local errorCode = removeLock(jobKey, stalledKey, ARGV[1], jobId)\n        if errorCode < 0 then\n          return errorCode\n        end\n        return moveToWaitingChildren(activeKey, waitingChildrenKey, jobId, timestamp)\n      end\n      return 1\n    else\n      if rcall("SCARD", jobDependenciesKey) ~= 0 then \n        local errorCode = removeLock(jobKey, stalledKey, ARGV[1], jobId)\n        if errorCode < 0 then\n          return errorCode\n        end\n        return moveToWaitingChildren(activeKey, waitingChildrenKey, jobId, timestamp)\n      end\n      return 1\n    end    \n  end\nend\nreturn -1\n',keys:8},Ch={name:"obliterate",content:'--[[\n  Completely obliterates a queue and all of its contents\n  This command completely destroys a queue including all of its jobs, current or past \n  leaving no trace of its existence. Since this script needs to iterate to find all the job\n  keys, consider that this call may be slow for very large queues.\n  The queue needs to be "paused" or it will return an error\n  If the queue has currently active jobs then the script by default will return error,\n  however this behaviour can be overrided using the \'force\' option.\n  Input:\n    KEYS[1] meta\n    KEYS[2] base\n    ARGV[1] count\n    ARGV[2] force\n]]\nlocal maxCount = tonumber(ARGV[1])\nlocal baseKey = KEYS[2]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to remove job.\n]]\n-- Includes\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal function removeJob(jobId, hard, baseKey, shouldRemoveDeduplicationKey)\n  local jobKey = baseKey .. jobId\n  removeParentDependencyKey(jobKey, hard, nil, baseKey)\n  if shouldRemoveDeduplicationKey then\n    removeDeduplicationKeyIfNeededOnRemoval(baseKey, jobKey, jobId)\n  end\n  removeJobKeys(jobKey)\nend\nlocal function removeJobs(keys, hard, baseKey, max)\n  for i, key in ipairs(keys) do\n    removeJob(key, hard, baseKey, true --[[remove debounce key]])\n  end\n  return max - #keys\nend\n--[[\n  Functions to remove jobs.\n]]\n-- Includes\n--[[\n  Function to filter out jobs to ignore from a table.\n]]\nlocal function filterOutJobsToIgnore(jobs, jobsToIgnore)\n  local filteredJobs = {}\n  for i = 1, #jobs do\n    if not jobsToIgnore[jobs[i]] then\n      table.insert(filteredJobs, jobs[i])\n    end\n  end\n  return filteredJobs\nend\nlocal function getListItems(keyName, max)\n  return rcall(\'LRANGE\', keyName, 0, max - 1)\nend\nlocal function removeListJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getListItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  rcall("LTRIM", keyName, #jobs, -1)\n  return count\nend\n-- Includes\n--[[\n  Function to loop in batches.\n  Just a bit of warning, some commands as ZREM\n  could receive a maximum of 7000 parameters per call.\n]]\nlocal function batches(n, batchSize)\n  local i = 0\n  return function()\n    local from = i * batchSize + 1\n    i = i + 1\n    if (from <= n) then\n      local to = math.min(from + batchSize - 1, n)\n      return from, to\n    end\n  end\nend\n--[[\n  Function to get ZSet items.\n]]\nlocal function getZSetItems(keyName, max)\n  return rcall(\'ZRANGE\', keyName, 0, max - 1)\nend\nlocal function removeZSetJobs(keyName, hard, baseKey, max, jobsToIgnore)\n  local jobs = getZSetItems(keyName, max)\n  if jobsToIgnore then\n    jobs = filterOutJobsToIgnore(jobs, jobsToIgnore)\n  end\n  local count = removeJobs(jobs, hard, baseKey, max)\n  if(#jobs > 0) then\n    for from, to in batches(#jobs, 7000) do\n      rcall("ZREM", keyName, unpack(jobs, from, to))\n    end\n  end\n  return count\nend\nlocal function removeLockKeys(keys)\n  for i, key in ipairs(keys) do\n    rcall("DEL", baseKey .. key .. \':lock\')\n  end\nend\n-- 1) Check if paused, if not return with error.\nif rcall("HEXISTS", KEYS[1], "paused") ~= 1 then\n  return -1 -- Error, NotPaused\nend\n-- 2) Check if there are active jobs, if there are and not "force" return error.\nlocal activeKey = baseKey .. \'active\'\nlocal activeJobs = getListItems(activeKey, maxCount)\nif (#activeJobs > 0) then\n  if(ARGV[2] == "") then \n    return -2 -- Error, ExistActiveJobs\n  end\nend\nremoveLockKeys(activeJobs)\nmaxCount = removeJobs(activeJobs, true, baseKey, maxCount)\nrcall("LTRIM", activeKey, #activeJobs, -1)\nif(maxCount <= 0) then\n  return 1\nend\nlocal delayedKey = baseKey .. \'delayed\'\nmaxCount = removeZSetJobs(delayedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal repeatKey = baseKey .. \'repeat\'\nlocal repeatJobsIds = getZSetItems(repeatKey, maxCount)\nfor i, key in ipairs(repeatJobsIds) do\n  local jobKey = repeatKey .. ":" .. key\n  rcall("DEL", jobKey)\nend\nif(#repeatJobsIds > 0) then\n  for from, to in batches(#repeatJobsIds, 7000) do\n    rcall("ZREM", repeatKey, unpack(repeatJobsIds, from, to))\n  end\nend\nmaxCount = maxCount - #repeatJobsIds\nif(maxCount <= 0) then\n  return 1\nend\nlocal completedKey = baseKey .. \'completed\'\nmaxCount = removeZSetJobs(completedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal waitKey = baseKey .. \'paused\'\nmaxCount = removeListJobs(waitKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal prioritizedKey = baseKey .. \'prioritized\'\nmaxCount = removeZSetJobs(prioritizedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nlocal failedKey = baseKey .. \'failed\'\nmaxCount = removeZSetJobs(failedKey, true, baseKey, maxCount)\nif(maxCount <= 0) then\n  return 1\nend\nif(maxCount > 0) then\n  rcall("DEL",\n    baseKey .. \'events\',\n    baseKey .. \'delay\', \n    baseKey .. \'stalled-check\',\n    baseKey .. \'stalled\',\n    baseKey .. \'id\',\n    baseKey .. \'pc\',\n    baseKey .. \'meta\',\n    baseKey .. \'metrics:completed\',\n    baseKey .. \'metrics:completed:data\',\n    baseKey .. \'metrics:failed\',\n    baseKey .. \'metrics:failed:data\')\n  return 0\nelse\n  return 1\nend\n',keys:2},Dh={name:"paginate",content:'--[[\n    Paginate a set or hash\n    Input:\n      KEYS[1] key pointing to the set or hash to be paginated.\n      ARGV[1]  page start offset\n      ARGV[2]  page end offset (-1 for all the elements)\n      ARGV[3]  cursor\n      ARGV[4]  offset\n      ARGV[5]  max iterations\n      ARGV[6]  fetch jobs?\n    Output:\n      [cursor, offset, items, numItems]\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to achieve pagination for a set or hash.\n  This function simulates pagination in the most efficient way possible\n  for a set using sscan or hscan.\n  The main limitation is that sets are not order preserving, so the\n  pagination is not stable. This means that if the set is modified\n  between pages, the same element may appear in different pages.\n]] -- Maximum number of elements to be returned by sscan per iteration.\nlocal maxCount = 100\n-- Finds the cursor, and returns the first elements available for the requested page.\nlocal function findPage(key, command, pageStart, pageSize, cursor, offset,\n                        maxIterations, fetchJobs)\n    local items = {}\n    local jobs = {}\n    local iterations = 0\n    repeat\n        -- Iterate over the set using sscan/hscan.\n        local result = rcall(command, key, cursor, "COUNT", maxCount)\n        cursor = result[1]\n        local members = result[2]\n        local step = 1\n        if command == "HSCAN" then\n            step = 2\n        end\n        if #members == 0 then\n            -- If the result is empty, we can return the result.\n            return cursor, offset, items, jobs\n        end\n        local chunkStart = offset\n        local chunkEnd = offset + #members / step\n        local pageEnd = pageStart + pageSize\n        if chunkEnd < pageStart then\n            -- If the chunk is before the page, we can skip it.\n            offset = chunkEnd\n        elseif chunkStart > pageEnd then\n            -- If the chunk is after the page, we can return the result.\n            return cursor, offset, items, jobs\n        else\n            -- If the chunk is overlapping the page, we need to add the elements to the result.\n            for i = 1, #members, step do\n                if offset >= pageEnd then\n                    return cursor, offset, items, jobs\n                end\n                if offset >= pageStart then\n                    local index = #items + 1\n                    if fetchJobs ~= nil then\n                        jobs[#jobs+1] = rcall("HGETALL", members[i])\n                    end\n                    if step == 2 then\n                        items[index] = {members[i], members[i + 1]}\n                    else\n                        items[index] = members[i]\n                    end\n                end\n                offset = offset + 1\n            end\n        end\n        iterations = iterations + 1\n    until cursor == "0" or iterations >= maxIterations\n    return cursor, offset, items, jobs\nend\nlocal key = KEYS[1]\nlocal scanCommand = "SSCAN"\nlocal countCommand = "SCARD"\nlocal type = rcall("TYPE", key)["ok"]\nif type == "none" then\n    return {0, 0, {}, 0}\nelseif type == "hash" then\n    scanCommand = "HSCAN"\n    countCommand = "HLEN"\nelseif type ~= "set" then\n    return\n        redis.error_reply("Pagination is only supported for sets and hashes.")\nend\nlocal numItems = rcall(countCommand, key)\nlocal startOffset = tonumber(ARGV[1])\nlocal endOffset = tonumber(ARGV[2])\nif endOffset == -1 then \n  endOffset = numItems\nend\nlocal pageSize = (endOffset - startOffset) + 1\nlocal cursor, offset, items, jobs = findPage(key, scanCommand, startOffset,\n                                       pageSize, ARGV[3], tonumber(ARGV[4]),\n                                       tonumber(ARGV[5]), ARGV[6])\nreturn {cursor, offset, items, numItems, jobs}\n',keys:1},Ph={name:"pause",content:'--[[\n  Pauses or resumes a queue globably.\n  Input:\n    KEYS[1] \'wait\' or \'paused\'\'\n    KEYS[2] \'paused\' or \'wait\'\n    KEYS[3] \'meta\'\n    KEYS[4] \'prioritized\'\n    KEYS[5] events stream key\n    KEYS[6] \'delayed\'\n    KEYS|7] \'marker\'\n    ARGV[1] \'paused\' or \'resumed\'\n  Event:\n    publish paused or resumed event.\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\nlocal markerKey = KEYS[7]\nlocal hasJobs = rcall("EXISTS", KEYS[1]) == 1\n--TODO: check this logic to be reused when changing a delay\nif hasJobs then rcall("RENAME", KEYS[1], KEYS[2]) end\nif ARGV[1] == "paused" then\n    rcall("HSET", KEYS[3], "paused", 1)\n    rcall("DEL", markerKey)\nelse\n    rcall("HDEL", KEYS[3], "paused")\n    if hasJobs or rcall("ZCARD", KEYS[4]) > 0 then\n        -- Add marker if there are waiting or priority jobs\n        rcall("ZADD", markerKey, 0, "0")\n    else\n        addDelayMarkerIfNeeded(markerKey, KEYS[6])\n    end\nend\nrcall("XADD", KEYS[5], "*", "event", ARGV[1]);\n',keys:7},Nh={name:"promote",content:'--[[\n  Promotes a job that is currently "delayed" to the "waiting" state\n    Input:\n      KEYS[1] \'delayed\'\n      KEYS[2] \'wait\'\n      KEYS[3] \'paused\'\n      KEYS[4] \'meta\'\n      KEYS[5] \'prioritized\'\n      KEYS[6] \'active\'\n      KEYS[7] \'pc\' priority counter\n      KEYS[8] \'event stream\'\n      KEYS[9] \'marker\'\n      ARGV[1]  queue.toKey(\'\')\n      ARGV[2]  jobId\n    Output:\n       0 - OK\n      -3 - Job not in delayed zset.\n    Events:\n      \'waiting\'\n]]\nlocal rcall = redis.call\nlocal jobId = ARGV[2]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("ZREM", KEYS[1], jobId) == 1 then\n    local jobKey = ARGV[1] .. jobId\n    local priority = tonumber(rcall("HGET", jobKey, "priority")) or 0\n    local metaKey = KEYS[4]\n    local markerKey = KEYS[9]\n    -- Remove delayed "marker" from the wait list if there is any.\n    -- Since we are adding a job we do not need the marker anymore.\n    -- Markers in waitlist DEPRECATED in v5: Remove in v6.\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, KEYS[6], KEYS[2], KEYS[3])\n    local marker = rcall("LINDEX", target, 0)\n    if marker and string.sub(marker, 1, 2) == "0:" then rcall("LPOP", target) end\n    if priority == 0 then\n        -- LIFO or FIFO\n        addJobInTargetList(target, markerKey, "LPUSH", isPausedOrMaxed, jobId)\n    else\n        addJobWithPriority(markerKey, KEYS[5], priority, jobId, KEYS[7], isPausedOrMaxed)\n    end\n    -- Emit waiting event (wait..ing@token)\n    rcall("XADD", KEYS[8], "*", "event", "waiting", "jobId", jobId, "prev",\n          "delayed");\n    rcall("HSET", jobKey, "delay", 0)\n    return 0\nelse\n    return -3\nend\n',keys:9},Mh={name:"releaseLock",content:'--[[\n  Release lock\n    Input:\n      KEYS[1] \'lock\',\n      ARGV[1]  token\n      ARGV[2]  lock duration in milliseconds\n    Output:\n      "OK" if lock extented succesfully.\n]]\nlocal rcall = redis.call\nif rcall("GET", KEYS[1]) == ARGV[1] then\n  return rcall("DEL", KEYS[1])\nelse\n  return 0\nend\n',keys:1},Fh={name:"removeChildDependency",content:'--[[\n  Break parent-child dependency by removing\n  child reference from parent\n  Input:\n    KEYS[1] \'key\' prefix,\n    ARGV[1] job key\n    ARGV[2] parent key\n    Output:\n       0  - OK\n       1  - There is not relationship.\n      -1  - Missing job key\n      -5  - Missing parent key\n]]\nlocal rcall = redis.call\nlocal jobKey = ARGV[1]\nlocal parentKey = ARGV[2]\n-- Includes\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nif rcall("EXISTS", jobKey) ~= 1 then return -1 end\nif rcall("EXISTS", parentKey) ~= 1 then return -5 end\nif removeParentDependencyKey(jobKey, false, parentKey, KEYS[1], nil) then\n  rcall("HDEL", jobKey, "parentKey", "parent")\n  return 0\nelse\n  return 1\nend',keys:1},Lh={name:"removeJob",content:'--[[\n    Remove a job from all the statuses it may be in as well as all its data.\n    In order to be able to remove a job, it cannot be active.\n    Input:\n      KEYS[1] jobKey\n      KEYS[2] repeat key\n      ARGV[1] jobId\n      ARGV[2] remove children\n      ARGV[3] queue prefix\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to recursively check if there are no locks\n  on the jobs to be removed.\n  returns:\n    boolean\n]]\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\nlocal function isLocked( prefix, jobId, removeChildren)\n  local jobKey = prefix .. jobId;\n  -- Check if this job is locked\n  local lockKey = jobKey .. \':lock\'\n  local lock = rcall("GET", lockKey)\n  if not lock then\n    if removeChildren == "1" then\n      local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n      if (#dependencies > 0) then\n        for i, childJobKey in ipairs(dependencies) do\n          -- We need to get the jobId for this job.\n          local childJobId = getJobIdFromKey(childJobKey)\n          local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n          local result = isLocked( childJobPrefix, childJobId, removeChildren )\n          if result then\n            return true\n          end\n        end\n      end\n    end\n    return false\n  end\n  return true\nend\n--[[\n    Remove a job from all the statuses it may be in as well as all its data,\n    including its children. Active children can be ignored.\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove from any state.\n  returns:\n    prev state\n]]\nlocal function removeJobFromAnyState( prefix, jobId)\n  -- We start with the ZSCORE checks, since they have O(1) complexity\n  if rcall("ZSCORE", prefix .. "completed", jobId) then\n    rcall("ZREM", prefix .. "completed", jobId)\n    return "completed"\n  elseif rcall("ZSCORE", prefix .. "waiting-children", jobId) then\n    rcall("ZREM", prefix .. "waiting-children", jobId)\n    return "waiting-children"\n  elseif rcall("ZSCORE", prefix .. "delayed", jobId) then\n    rcall("ZREM", prefix .. "delayed", jobId)\n    return "delayed"\n  elseif rcall("ZSCORE", prefix .. "failed", jobId) then\n    rcall("ZREM", prefix .. "failed", jobId)\n    return "failed"\n  elseif rcall("ZSCORE", prefix .. "prioritized", jobId) then\n    rcall("ZREM", prefix .. "prioritized", jobId)\n    return "prioritized"\n  -- We remove only 1 element from the list, since we assume they are not added multiple times\n  elseif rcall("LREM", prefix .. "wait", 1, jobId) == 1 then\n    return "wait"\n  elseif rcall("LREM", prefix .. "paused", 1, jobId) == 1 then\n    return "paused"\n  elseif rcall("LREM", prefix .. "active", 1, jobId) == 1 then\n    return "active"\n  end\n  return "unknown"\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\nlocal removeJobChildren\nlocal removeJobWithChildren\nremoveJobChildren = function(prefix, jobKey, options)\n    -- Check if this job has children\n    -- If so, we are going to try to remove the children recursively in a depth-first way\n    -- because if some job is locked, we must exit with an error.\n    if not options.ignoreProcessed then\n        local processed = rcall("HGETALL", jobKey .. ":processed")\n        if #processed > 0 then\n            for i = 1, #processed, 2 do\n                local childJobId = getJobIdFromKey(processed[i])\n                local childJobPrefix = getJobKeyPrefix(processed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local failed = rcall("HGETALL", jobKey .. ":failed")\n        if #failed > 0 then\n            for i = 1, #failed, 2 do\n                local childJobId = getJobIdFromKey(failed[i])\n                local childJobPrefix = getJobKeyPrefix(failed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local unsuccessful = rcall("ZRANGE", jobKey .. ":unsuccessful", 0, -1)\n        if #unsuccessful > 0 then\n            for i = 1, #unsuccessful, 1 do\n                local childJobId = getJobIdFromKey(unsuccessful[i])\n                local childJobPrefix = getJobKeyPrefix(unsuccessful[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n    end\n    local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n    if #dependencies > 0 then\n        for i, childJobKey in ipairs(dependencies) do\n            local childJobId = getJobIdFromKey(childJobKey)\n            local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n            removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n        end\n    end\nend\nremoveJobWithChildren = function(prefix, jobId, parentKey, options)\n    local jobKey = prefix .. jobId\n    if options.ignoreLocked then\n        if isLocked(prefix, jobId) then\n            return\n        end\n    end\n    -- Check if job is in the failed zset\n    local failedSet = prefix .. "failed"\n    if not (options.ignoreProcessed and rcall("ZSCORE", failedSet, jobId)) then\n        removeParentDependencyKey(jobKey, false, parentKey, nil)\n        if options.removeChildren then\n            removeJobChildren(prefix, jobKey, options)\n        end\n        local prev = removeJobFromAnyState(prefix, jobId)\n        removeDeduplicationKeyIfNeededOnRemoval(prefix, jobKey, jobId)\n        if removeJobKeys(jobKey) > 0 then\n            local metaKey = prefix .. "meta"\n            local maxEvents = getOrSetMaxEvents(metaKey)\n            rcall("XADD", prefix .. "events", "MAXLEN", "~", maxEvents, "*", "event", "removed",\n                "jobId", jobId, "prev", prev)\n        end\n    end\nend\nlocal jobId = ARGV[1]\nlocal shouldRemoveChildren = ARGV[2]\nlocal prefix = ARGV[3]\nlocal jobKey = KEYS[1]\nlocal repeatKey = KEYS[2]\nif isJobSchedulerJob(jobId, jobKey, repeatKey) then\n    return -8\nend\nif not isLocked(prefix, jobId, shouldRemoveChildren) then\n    local options = {\n        removeChildren = shouldRemoveChildren == "1",\n        ignoreProcessed = false,\n        ignoreLocked = false\n    }\n    removeJobWithChildren(prefix, jobId, nil, options)\n    return 1\nend\nreturn 0\n',keys:2},Jh={name:"removeJobScheduler",content:'--[[\n  Removes a job scheduler and its next scheduled job.\n  Input:\n    KEYS[1] job schedulers key\n    KEYS[2] delayed jobs key\n    KEYS[3] events key\n    ARGV[1] job scheduler id\n    ARGV[2] prefix key\n  Output:\n    0 - OK\n    1 - Missing repeat job\n  Events:\n    \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\nlocal jobSchedulerId = ARGV[1]\nlocal prefix = ARGV[2]\nlocal millis = rcall("ZSCORE", KEYS[1], jobSchedulerId)\nif millis then\n  -- Delete next programmed job.\n  local delayedJobId = "repeat:" .. jobSchedulerId .. ":" .. millis\n  if(rcall("ZREM", KEYS[2], delayedJobId) == 1) then\n    removeJobKeys(prefix .. delayedJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", delayedJobId, "prev", "delayed")\n  end\nend\nif(rcall("ZREM", KEYS[1], jobSchedulerId) == 1) then\n  rcall("DEL", KEYS[1] .. ":" .. jobSchedulerId)\n  return 0\nend\nreturn 1\n',keys:3},Uh={name:"removeRepeatable",content:'--[[\n  Removes a repeatable job\n  Input:\n    KEYS[1] repeat jobs key\n    KEYS[2] delayed jobs key\n    KEYS[3] events key\n    ARGV[1] old repeat job id\n    ARGV[2] options concat\n    ARGV[3] repeat job key\n    ARGV[4] prefix key\n  Output:\n    0 - OK\n    1 - Missing repeat job\n  Events:\n    \'removed\'\n]]\nlocal rcall = redis.call\nlocal millis = rcall("ZSCORE", KEYS[1], ARGV[2])\n-- Includes\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n-- legacy removal TODO: remove in next breaking change\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = ARGV[1] .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed");\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[2]) == 1) then\n  return 0\nend\n-- new removal\nmillis = rcall("ZSCORE", KEYS[1], ARGV[3])\nif millis then\n  -- Delete next programmed job.\n  local repeatJobId = "repeat:" .. ARGV[3] .. ":" .. millis\n  if(rcall("ZREM", KEYS[2], repeatJobId) == 1) then\n    removeJobKeys(ARGV[4] .. repeatJobId)\n    rcall("XADD", KEYS[3], "*", "event", "removed", "jobId", repeatJobId, "prev", "delayed")\n  end\nend\nif(rcall("ZREM", KEYS[1], ARGV[3]) == 1) then\n  rcall("DEL", KEYS[1] .. ":" .. ARGV[3])\n  return 0\nend\nreturn 1\n',keys:3},qh={name:"removeUnprocessedChildren",content:'--[[\n    Remove a job from all the statuses it may be in as well as all its data.\n    In order to be able to remove a job, it cannot be active.\n    Input:\n      KEYS[1] jobKey\n      KEYS[2] meta key\n      ARGV[1] prefix\n      ARGV[2] jobId\n    Events:\n      \'removed\' for every children removed\n]]\n-- Includes\n--[[\n    Remove a job from all the statuses it may be in as well as all its data,\n    including its children. Active children can be ignored.\n    Events:\n      \'removed\'\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Functions to destructure job key.\n  Just a bit of warning, these functions may be a bit slow and affect performance significantly.\n]]\nlocal getJobIdFromKey = function (jobKey)\n  return string.match(jobKey, ".*:(.*)")\nend\nlocal getJobKeyPrefix = function (jobKey, jobId)\n  return string.sub(jobKey, 0, #jobKey - #jobId)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check if the job belongs to a job scheduler and\n  current delayed job matches with jobId\n]]\nlocal function isJobSchedulerJob(jobId, jobKey, jobSchedulersKey)\n  local repeatJobKey = rcall("HGET", jobKey, "rjk")\n  if repeatJobKey  then\n    local prevMillis = rcall("ZSCORE", jobSchedulersKey, repeatJobKey)\n    if prevMillis then\n      local currentDelayedJobId = "repeat:" .. repeatJobKey .. ":" .. prevMillis\n      return jobId == currentDelayedJobId\n    end\n  end\n  return false\nend\n--[[\n  Function to remove deduplication key if needed\n  when a job is being removed.\n]]\nlocal function removeDeduplicationKeyIfNeededOnRemoval(prefixKey,\n  jobKey, jobId)\n  local deduplicationId = rcall("HGET", jobKey, "deid")\n  if deduplicationId then\n    local deduplicationKey = prefixKey .. "de:" .. deduplicationId\n    local currentJobId = rcall(\'GET\', deduplicationKey)\n    if currentJobId and currentJobId == jobId then\n      return rcall("DEL", deduplicationKey)\n    end\n  end\nend\n--[[\n  Function to remove from any state.\n  returns:\n    prev state\n]]\nlocal function removeJobFromAnyState( prefix, jobId)\n  -- We start with the ZSCORE checks, since they have O(1) complexity\n  if rcall("ZSCORE", prefix .. "completed", jobId) then\n    rcall("ZREM", prefix .. "completed", jobId)\n    return "completed"\n  elseif rcall("ZSCORE", prefix .. "waiting-children", jobId) then\n    rcall("ZREM", prefix .. "waiting-children", jobId)\n    return "waiting-children"\n  elseif rcall("ZSCORE", prefix .. "delayed", jobId) then\n    rcall("ZREM", prefix .. "delayed", jobId)\n    return "delayed"\n  elseif rcall("ZSCORE", prefix .. "failed", jobId) then\n    rcall("ZREM", prefix .. "failed", jobId)\n    return "failed"\n  elseif rcall("ZSCORE", prefix .. "prioritized", jobId) then\n    rcall("ZREM", prefix .. "prioritized", jobId)\n    return "prioritized"\n  -- We remove only 1 element from the list, since we assume they are not added multiple times\n  elseif rcall("LREM", prefix .. "wait", 1, jobId) == 1 then\n    return "wait"\n  elseif rcall("LREM", prefix .. "paused", 1, jobId) == 1 then\n    return "paused"\n  elseif rcall("LREM", prefix .. "active", 1, jobId) == 1 then\n    return "active"\n  end\n  return "unknown"\nend\n--[[\n  Function to remove job keys.\n]]\nlocal function removeJobKeys(jobKey)\n  return rcall("DEL", jobKey, jobKey .. \':logs\', jobKey .. \':dependencies\',\n    jobKey .. \':processed\', jobKey .. \':failed\', jobKey .. \':unsuccessful\')\nend\n--[[\n  Check if this job has a parent. If so we will just remove it from\n  the parent child list, but if it is the last child we should move the parent to "wait/paused"\n  which requires code from "moveToFinished"\n]]\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nlocal function _moveParentToWait(parentPrefix, parentId, emitEvent)\n  local parentTarget, isPausedOrMaxed = getTargetQueueList(parentPrefix .. "meta", parentPrefix .. "active",\n    parentPrefix .. "wait", parentPrefix .. "paused")\n  addJobInTargetList(parentTarget, parentPrefix .. "marker", "RPUSH", isPausedOrMaxed, parentId)\n  if emitEvent then\n    local parentEventStream = parentPrefix .. "events"\n    rcall("XADD", parentEventStream, "*", "event", "waiting", "jobId", parentId, "prev", "waiting-children")\n  end\nend\nlocal function removeParentDependencyKey(jobKey, hard, parentKey, baseKey, debounceId)\n  if parentKey then\n    local parentDependenciesKey = parentKey .. ":dependencies"\n    local result = rcall("SREM", parentDependenciesKey, jobKey)\n    if result > 0 then\n      local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n      if pendingDependencies == 0 then\n        local parentId = getJobIdFromKey(parentKey)\n        local parentPrefix = getJobKeyPrefix(parentKey, parentId)\n        local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n        if numRemovedElements == 1 then\n          if hard then -- remove parent in same queue\n            if parentPrefix == baseKey then\n              removeParentDependencyKey(parentKey, hard, nil, baseKey, nil)\n              removeJobKeys(parentKey)\n              if debounceId then\n                rcall("DEL", parentPrefix .. "de:" .. debounceId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId)\n            end\n          else\n            _moveParentToWait(parentPrefix, parentId, true)\n          end\n        end\n      end\n      return true\n    end\n  else\n    local parentAttributes = rcall("HMGET", jobKey, "parentKey", "deid")\n    local missedParentKey = parentAttributes[1]\n    if( (type(missedParentKey) == "string") and missedParentKey ~= ""\n      and (rcall("EXISTS", missedParentKey) == 1)) then\n      local parentDependenciesKey = missedParentKey .. ":dependencies"\n      local result = rcall("SREM", parentDependenciesKey, jobKey)\n      if result > 0 then\n        local pendingDependencies = rcall("SCARD", parentDependenciesKey)\n        if pendingDependencies == 0 then\n          local parentId = getJobIdFromKey(missedParentKey)\n          local parentPrefix = getJobKeyPrefix(missedParentKey, parentId)\n          local numRemovedElements = rcall("ZREM", parentPrefix .. "waiting-children", parentId)\n          if numRemovedElements == 1 then\n            if hard then\n              if parentPrefix == baseKey then\n                removeParentDependencyKey(missedParentKey, hard, nil, baseKey, nil)\n                removeJobKeys(missedParentKey)\n                if parentAttributes[2] then\n                  rcall("DEL", parentPrefix .. "de:" .. parentAttributes[2])\n                end\n              else\n                _moveParentToWait(parentPrefix, parentId)\n              end\n            else\n              _moveParentToWait(parentPrefix, parentId, true)\n            end\n          end\n        end\n        return true\n      end\n    end\n  end\n  return false\nend\n--[[\n  Function to recursively check if there are no locks\n  on the jobs to be removed.\n  returns:\n    boolean\n]]\nlocal function isLocked( prefix, jobId, removeChildren)\n  local jobKey = prefix .. jobId;\n  -- Check if this job is locked\n  local lockKey = jobKey .. \':lock\'\n  local lock = rcall("GET", lockKey)\n  if not lock then\n    if removeChildren == "1" then\n      local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n      if (#dependencies > 0) then\n        for i, childJobKey in ipairs(dependencies) do\n          -- We need to get the jobId for this job.\n          local childJobId = getJobIdFromKey(childJobKey)\n          local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n          local result = isLocked( childJobPrefix, childJobId, removeChildren )\n          if result then\n            return true\n          end\n        end\n      end\n    end\n    return false\n  end\n  return true\nend\nlocal removeJobChildren\nlocal removeJobWithChildren\nremoveJobChildren = function(prefix, jobKey, options)\n    -- Check if this job has children\n    -- If so, we are going to try to remove the children recursively in a depth-first way\n    -- because if some job is locked, we must exit with an error.\n    if not options.ignoreProcessed then\n        local processed = rcall("HGETALL", jobKey .. ":processed")\n        if #processed > 0 then\n            for i = 1, #processed, 2 do\n                local childJobId = getJobIdFromKey(processed[i])\n                local childJobPrefix = getJobKeyPrefix(processed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local failed = rcall("HGETALL", jobKey .. ":failed")\n        if #failed > 0 then\n            for i = 1, #failed, 2 do\n                local childJobId = getJobIdFromKey(failed[i])\n                local childJobPrefix = getJobKeyPrefix(failed[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n        local unsuccessful = rcall("ZRANGE", jobKey .. ":unsuccessful", 0, -1)\n        if #unsuccessful > 0 then\n            for i = 1, #unsuccessful, 1 do\n                local childJobId = getJobIdFromKey(unsuccessful[i])\n                local childJobPrefix = getJobKeyPrefix(unsuccessful[i], childJobId)\n                removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n            end\n        end\n    end\n    local dependencies = rcall("SMEMBERS", jobKey .. ":dependencies")\n    if #dependencies > 0 then\n        for i, childJobKey in ipairs(dependencies) do\n            local childJobId = getJobIdFromKey(childJobKey)\n            local childJobPrefix = getJobKeyPrefix(childJobKey, childJobId)\n            removeJobWithChildren(childJobPrefix, childJobId, jobKey, options)\n        end\n    end\nend\nremoveJobWithChildren = function(prefix, jobId, parentKey, options)\n    local jobKey = prefix .. jobId\n    if options.ignoreLocked then\n        if isLocked(prefix, jobId) then\n            return\n        end\n    end\n    -- Check if job is in the failed zset\n    local failedSet = prefix .. "failed"\n    if not (options.ignoreProcessed and rcall("ZSCORE", failedSet, jobId)) then\n        removeParentDependencyKey(jobKey, false, parentKey, nil)\n        if options.removeChildren then\n            removeJobChildren(prefix, jobKey, options)\n        end\n        local prev = removeJobFromAnyState(prefix, jobId)\n        removeDeduplicationKeyIfNeededOnRemoval(prefix, jobKey, jobId)\n        if removeJobKeys(jobKey) > 0 then\n            local metaKey = prefix .. "meta"\n            local maxEvents = getOrSetMaxEvents(metaKey)\n            rcall("XADD", prefix .. "events", "MAXLEN", "~", maxEvents, "*", "event", "removed",\n                "jobId", jobId, "prev", prev)\n        end\n    end\nend\nlocal prefix = ARGV[1]\nlocal jobId = ARGV[2]\nlocal jobKey = KEYS[1]\nlocal metaKey = KEYS[2]\nlocal options = {\n  removeChildren = "1",\n  ignoreProcessed = true,\n  ignoreLocked = true\n}\nremoveJobChildren(prefix, jobKey, options) \n',keys:2},Vh={name:"reprocessJob",content:'--[[\n  Attempts to reprocess a job\n  Input:\n    KEYS[1] job key\n    KEYS[2] events stream\n    KEYS[3] job state\n    KEYS[4] wait key\n    KEYS[5] meta\n    KEYS[6] paused key\n    KEYS[7] active key\n    KEYS[8] marker key\n    ARGV[1] job.id\n    ARGV[2] (job.opts.lifo ? \'R\' : \'L\') + \'PUSH\'\n    ARGV[3] propVal - failedReason/returnvalue\n    ARGV[4] prev state - failed/completed\n  Output:\n     1 means the operation was a success\n    -1 means the job does not exist\n    -3 means the job was not found in the expected set.\n]]\nlocal rcall = redis.call;\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\nif rcall("EXISTS", KEYS[1]) == 1 then\n  local jobId = ARGV[1]\n  if (rcall("ZREM", KEYS[3], jobId) == 1) then\n    rcall("HDEL", KEYS[1], "finishedOn", "processedOn", ARGV[3])\n    local target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[7], KEYS[4], KEYS[6])\n    addJobInTargetList(target, KEYS[8], ARGV[2], isPausedOrMaxed, jobId)\n    local maxEvents = getOrSetMaxEvents(KEYS[5])\n    -- Emit waiting event\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n      "jobId", jobId, "prev", ARGV[4]);\n    return 1\n  else\n    return -3\n  end\nelse\n  return -1\nend\n',keys:8},Gh={name:"retryJob",content:'--[[\n  Retries a failed job by moving it back to the wait queue.\n    Input:\n      KEYS[1]  \'active\',\n      KEYS[2]  \'wait\'\n      KEYS[3]  \'paused\'\n      KEYS[4]  job key\n      KEYS[5]  \'meta\'\n      KEYS[6]  events stream\n      KEYS[7]  delayed key\n      KEYS[8]  prioritized key\n      KEYS[9]  \'pc\' priority counter\n      KEYS[10] \'marker\'\n      KEYS[11] \'stalled\'\n      ARGV[1]  key prefix\n      ARGV[2]  timestamp\n      ARGV[3]  pushCmd\n      ARGV[4]  jobId\n      ARGV[5]  token\n      ARGV[6]  optional job fields to update\n    Events:\n      \'waiting\'\n    Output:\n     0  - OK\n     -1 - Missing key\n     -2 - Missing lock\n     -3 - Job not in active set\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to check if queue is paused or maxed\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePausedOrMaxed(queueMetaKey, activeKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      return activeCount >= tonumber(queueAttributes[2])\n    end\n  end\n  return false\nend\n--[[\n  Updates the delay set, by moving delayed jobs that should\n  be processed now to "wait".\n     Events:\n      \'waiting\'\n]]\n-- Includes\n-- Try to get as much as 1000 jobs at once\nlocal function promoteDelayedJobs(delayedKey, markerKey, targetKey, prioritizedKey,\n                                  eventStreamKey, prefix, timestamp, priorityCounterKey, isPaused)\n    local jobs = rcall("ZRANGEBYSCORE", delayedKey, 0, (timestamp + 1) * 0x1000 - 1, "LIMIT", 0, 1000)\n    if (#jobs > 0) then\n        rcall("ZREM", delayedKey, unpack(jobs))\n        for _, jobId in ipairs(jobs) do\n            local jobKey = prefix .. jobId\n            local priority =\n                tonumber(rcall("HGET", jobKey, "priority")) or 0\n            if priority == 0 then\n                -- LIFO or FIFO\n                rcall("LPUSH", targetKey, jobId)\n            else\n                local score = getPriorityScore(priority, priorityCounterKey)\n                rcall("ZADD", prioritizedKey, score, jobId)\n            end\n            -- Emit waiting event\n            rcall("XADD", eventStreamKey, "*", "event", "waiting", "jobId",\n                  jobId, "prev", "delayed")\n            rcall("HSET", jobKey, "delay", 0)\n        end\n        addBaseMarkerIfNeeded(markerKey, isPaused)\n    end\nend\nlocal function removeLock(jobKey, stalledKey, token, jobId)\n  if token ~= "0" then\n    local lockKey = jobKey .. \':lock\'\n    local lockToken = rcall("GET", lockKey)\n    if lockToken == token then\n      rcall("DEL", lockKey)\n      rcall("SREM", stalledKey, jobId)\n    else\n      if lockToken then\n        -- Lock exists but token does not match\n        return -6\n      else\n        -- Lock is missing completely\n        return -2\n      end\n    end\n  end\n  return 0\nend\n--[[\n  Function to update a bunch of fields in a job.\n]]\nlocal function updateJobFields(jobKey, msgpackedFields)\n  if msgpackedFields and #msgpackedFields > 0 then\n    local fieldsToUpdate = cmsgpack.unpack(msgpackedFields)\n    if fieldsToUpdate then\n      rcall("HMSET", jobKey, unpack(fieldsToUpdate))\n    end\n  end\nend\nlocal target, isPausedOrMaxed = getTargetQueueList(KEYS[5], KEYS[1], KEYS[2], KEYS[3])\nlocal markerKey = KEYS[10]\n-- Check if there are delayed jobs that we can move to wait.\n-- test example: when there are delayed jobs between retries\npromoteDelayedJobs(KEYS[7], markerKey, target, KEYS[8], KEYS[6], ARGV[1], ARGV[2], KEYS[9], isPausedOrMaxed)\nlocal jobKey = KEYS[4]\nif rcall("EXISTS", jobKey) == 1 then\n  local errorCode = removeLock(jobKey, KEYS[11], ARGV[5], ARGV[4]) \n  if errorCode < 0 then\n    return errorCode\n  end\n  updateJobFields(jobKey, ARGV[6])\n  local numRemovedElements = rcall("LREM", KEYS[1], -1, ARGV[4])\n  if (numRemovedElements < 1) then return -3 end\n  local priority = tonumber(rcall("HGET", jobKey, "priority")) or 0\n  --need to re-evaluate after removing job from active\n  isPausedOrMaxed = isQueuePausedOrMaxed(KEYS[5], KEYS[1])\n  -- Standard or priority add\n  if priority == 0 then\n    addJobInTargetList(target, markerKey, ARGV[3], isPausedOrMaxed, ARGV[4])\n  else\n    addJobWithPriority(markerKey, KEYS[8], priority, ARGV[4], KEYS[9], isPausedOrMaxed)\n  end\n  rcall("HINCRBY", jobKey, "atm", 1)\n  local maxEvents = getOrSetMaxEvents(KEYS[5])\n  -- Emit waiting event\n  rcall("XADD", KEYS[6], "MAXLEN", "~", maxEvents, "*", "event", "waiting",\n    "jobId", ARGV[4], "prev", "failed")\n  return 0\nelse\n  return -1\nend\n',keys:11},Bh={name:"saveStacktrace",content:'--[[\n  Save stacktrace and failedReason.\n  Input:\n    KEYS[1] job key\n    ARGV[1]  stacktrace\n    ARGV[2]  failedReason\n  Output:\n     0 - OK\n    -1 - Missing key\n]]\nlocal rcall = redis.call\nif rcall("EXISTS", KEYS[1]) == 1 then\n  rcall("HMSET", KEYS[1], "stacktrace", ARGV[1], "failedReason", ARGV[2])\n  return 0\nelse\n  return -1\nend\n',keys:1},zh={name:"updateData",content:'--[[\n  Update job data\n  Input:\n    KEYS[1] Job id key\n    ARGV[1] data\n  Output:\n    0 - OK\n   -1 - Missing job.\n]]\nlocal rcall = redis.call\nif rcall("EXISTS",KEYS[1]) == 1 then -- // Make sure job exists\n  rcall("HSET", KEYS[1], "data", ARGV[1])\n  return 0\nelse\n  return -1\nend\n',keys:1},Yh={name:"updateJobScheduler",content:'--[[\n  Updates a job scheduler and adds next delayed job\n  Input:\n    KEYS[1]  \'repeat\' key\n    KEYS[2]  \'delayed\'\n    KEYS[3]  \'wait\' key\n    KEYS[4]  \'paused\' key\n    KEYS[5]  \'meta\'\n    KEYS[6]  \'prioritized\' key\n    KEYS[7]  \'marker\',\n    KEYS[8]  \'id\'\n    KEYS[9]  events stream key\n    KEYS[10] \'pc\' priority counter\n    KEYS[11] producer key\n    KEYS[12] \'active\' key\n    ARGV[1] next milliseconds\n    ARGV[2] jobs scheduler id\n    ARGV[3] Json stringified delayed data\n    ARGV[4] msgpacked delayed opts\n    ARGV[5] timestamp\n    ARGV[6] prefix key\n    ARGV[7] producer id\n    Output:\n      next delayed job id  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal delayedKey = KEYS[2]\nlocal waitKey = KEYS[3]\nlocal pausedKey = KEYS[4]\nlocal metaKey = KEYS[5]\nlocal prioritizedKey = KEYS[6]\nlocal nextMillis = ARGV[1]\nlocal jobSchedulerId = ARGV[2]\nlocal timestamp = ARGV[5]\nlocal prefixKey = ARGV[6]\nlocal producerId = ARGV[7]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Adds a delayed job to the queue by doing the following:\n    - Creates a new job key with the job data.\n    - adds to delayed zset.\n    - Emits a global event \'delayed\' if the job is delayed.\n]]\n-- Includes\n--[[\n  Add delay marker if needed.\n]]\n-- Includes\n--[[\n  Function to return the next delayed job timestamp.\n]]\nlocal function getNextDelayedTimestamp(delayedKey)\n  local result = rcall("ZRANGE", delayedKey, 0, 0, "WITHSCORES")\n  if #result then\n    local nextTimestamp = tonumber(result[2])\n    if nextTimestamp ~= nil then\n      return nextTimestamp / 0x1000\n    end\n  end\nend\nlocal function addDelayMarkerIfNeeded(markerKey, delayedKey)\n  local nextTimestamp = getNextDelayedTimestamp(delayedKey)\n  if nextTimestamp ~= nil then\n    -- Replace the score of the marker with the newest known\n    -- next timestamp.\n    rcall("ZADD", markerKey, nextTimestamp, "1")\n  end\nend\n--[[\n  Bake in the job id first 12 bits into the timestamp\n  to guarantee correct execution order of delayed jobs\n  (up to 4096 jobs per given timestamp or 4096 jobs apart per timestamp)\n  WARNING: Jobs that are so far apart that they wrap around will cause FIFO to fail\n]]\nlocal function getDelayedScore(delayedKey, timestamp, delay)\n  local delayedTimestamp = (delay > 0 and (tonumber(timestamp) + delay)) or tonumber(timestamp)\n  local minScore = delayedTimestamp * 0x1000\n  local maxScore = (delayedTimestamp + 1 ) * 0x1000 - 1\n  local result = rcall("ZREVRANGEBYSCORE", delayedKey, maxScore,\n    minScore, "WITHSCORES","LIMIT", 0, 1)\n  if #result then\n    local currentMaxScore = tonumber(result[2])\n    if currentMaxScore ~= nil then\n      if currentMaxScore >= maxScore then\n        return maxScore, delayedTimestamp\n      else\n        return currentMaxScore + 1, delayedTimestamp\n      end\n    end\n  end\n  return minScore, delayedTimestamp\nend\nlocal function addDelayedJob(jobId, delayedKey, eventsKey, timestamp,\n  maxEvents, markerKey, delay)\n  local score, delayedTimestamp = getDelayedScore(delayedKey, timestamp, tonumber(delay))\n  rcall("ZADD", delayedKey, score, jobId)\n  rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event", "delayed",\n    "jobId", jobId, "delay", delayedTimestamp)\n  -- mark that a delayed job is available\n  addDelayMarkerIfNeeded(markerKey, delayedKey)\nend\n--[[\n  Function to add job considering priority.\n]]\n-- Includes\n--[[\n  Add marker if needed when a job is available.\n]]\nlocal function addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\n  if not isPausedOrMaxed then\n    rcall("ZADD", markerKey, 0, "0")\n  end  \nend\n--[[\n  Function to get priority score.\n]]\nlocal function getPriorityScore(priority, priorityCounterKey)\n  local prioCounter = rcall("INCR", priorityCounterKey)\n  return priority * 0x100000000 + prioCounter % 0x100000000\nend\nlocal function addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounterKey,\n  isPausedOrMaxed)\n  local score = getPriorityScore(priority, priorityCounterKey)\n  rcall("ZADD", prioritizedKey, score, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function isQueuePaused(queueMetaKey)\n  return rcall("HEXISTS", queueMetaKey, "paused") == 1\nend\n--[[\n  Function to store a job\n]]\nlocal function storeJob(eventsKey, jobIdKey, jobId, name, data, opts, timestamp,\n                        parentKey, parentData, repeatJobKey)\n    local jsonOpts = cjson.encode(opts)\n    local delay = opts[\'delay\'] or 0\n    local priority = opts[\'priority\'] or 0\n    local debounceId = opts[\'de\'] and opts[\'de\'][\'id\']\n    local optionalValues = {}\n    if parentKey ~= nil then\n        table.insert(optionalValues, "parentKey")\n        table.insert(optionalValues, parentKey)\n        table.insert(optionalValues, "parent")\n        table.insert(optionalValues, parentData)\n    end\n    if repeatJobKey then\n        table.insert(optionalValues, "rjk")\n        table.insert(optionalValues, repeatJobKey)\n    end\n    if debounceId then\n        table.insert(optionalValues, "deid")\n        table.insert(optionalValues, debounceId)\n    end\n    rcall("HMSET", jobIdKey, "name", name, "data", data, "opts", jsonOpts,\n          "timestamp", timestamp, "delay", delay, "priority", priority,\n          unpack(optionalValues))\n    rcall("XADD", eventsKey, "*", "event", "added", "jobId", jobId, "name", name)\n    return delay, priority\nend\n--[[\n  Function to check for the meta.paused key to decide if we are paused or not\n  (since an empty list and !EXISTS are not really the same).\n]]\nlocal function getTargetQueueList(queueMetaKey, activeKey, waitKey, pausedKey)\n  local queueAttributes = rcall("HMGET", queueMetaKey, "paused", "concurrency")\n  if queueAttributes[1] then\n    return pausedKey, true\n  else\n    if queueAttributes[2] then\n      local activeCount = rcall("LLEN", activeKey)\n      if activeCount >= tonumber(queueAttributes[2]) then\n        return waitKey, true\n      else\n        return waitKey, false\n      end\n    end\n  end\n  return waitKey, false\nend\n--[[\n  Function to add job in target list and add marker if needed.\n]]\n-- Includes\nlocal function addJobInTargetList(targetKey, markerKey, pushCmd, isPausedOrMaxed, jobId)\n  rcall(pushCmd, targetKey, jobId)\n  addBaseMarkerIfNeeded(markerKey, isPausedOrMaxed)\nend\nlocal function addJobFromScheduler(jobKey, jobId, rawOpts, waitKey, pausedKey, activeKey, metaKey, \n  prioritizedKey, priorityCounter, delayedKey, markerKey, eventsKey, name, maxEvents, timestamp,\n  data, jobSchedulerId)\n  local opts = cmsgpack.unpack(rawOpts)\n  local delay, priority = storeJob(eventsKey, jobKey, jobId, name, data,\n    opts, timestamp, nil, nil, jobSchedulerId)\n  if delay ~= 0 then\n    addDelayedJob(jobId, delayedKey, eventsKey, timestamp, maxEvents, markerKey, delay)\n  else\n    local target, isPausedOrMaxed = getTargetQueueList(metaKey, activeKey, waitKey, pausedKey)\n    -- Standard or priority add\n    if priority == 0 then\n      local pushCmd = opts[\'lifo\'] and \'RPUSH\' or \'LPUSH\'\n      addJobInTargetList(target, markerKey, pushCmd, isPausedOrMaxed, jobId)\n    else\n      -- Priority add\n      addJobWithPriority(markerKey, prioritizedKey, priority, jobId, priorityCounter, isPausedOrMaxed)\n    end\n    -- Emit waiting event\n    rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents,  "*", "event", "waiting", "jobId", jobId)\n  end\nend\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nlocal schedulerKey = repeatKey .. ":" .. jobSchedulerId\nlocal nextDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. nextMillis\nlocal nextDelayedJobKey = schedulerKey .. ":" .. nextMillis\n-- Validate that scheduler exists.\nlocal prevMillis = rcall("ZSCORE", repeatKey, jobSchedulerId)\nif prevMillis then\n    local currentDelayedJobId = "repeat:" .. jobSchedulerId .. ":" .. prevMillis\n    if producerId == currentDelayedJobId then\n        local eventsKey = KEYS[9]\n        local maxEvents = getOrSetMaxEvents(metaKey)\n        if rcall("EXISTS", nextDelayedJobKey) ~= 1 then\n            local schedulerAttributes = rcall("HMGET", schedulerKey, "name", "data")\n            rcall("ZADD", repeatKey, nextMillis, jobSchedulerId)\n            rcall("HINCRBY", schedulerKey, "ic", 1)\n            rcall("INCR", KEYS[8])\n            -- TODO: remove this workaround in next breaking change,\n            -- all job-schedulers must save job data\n            local templateData = schedulerAttributes[2] or ARGV[3]\n            if templateData and templateData ~= \'{}\' then\n                rcall("HSET", schedulerKey, "data", templateData)\n            end\n            addJobFromScheduler(nextDelayedJobKey, nextDelayedJobId, ARGV[4], waitKey, pausedKey, \n                KEYS[12], metaKey, prioritizedKey, KEYS[10], delayedKey, KEYS[7], eventsKey, \n                schedulerAttributes[1], maxEvents, ARGV[5], templateData or \'{}\', jobSchedulerId)\n            -- TODO: remove this workaround in next breaking change\n            if KEYS[11] ~= "" then\n                rcall("HSET", KEYS[11], "nrjid", nextDelayedJobId)\n            end\n            return nextDelayedJobId .. "" -- convert to string\n        else\n            rcall("XADD", eventsKey, "MAXLEN", "~", maxEvents, "*", "event",\n                "duplicated", "jobId", nextDelayedJobId)\n        end\n    end\nend\n',keys:12},$h={name:"updateProgress",content:'--[[\n  Update job progress\n  Input:\n    KEYS[1] Job id key\n    KEYS[2] event stream key\n    KEYS[3] meta key\n    ARGV[1] id\n    ARGV[2] progress\n  Output:\n     0 - OK\n    -1 - Missing job.\n  Event:\n    progress(jobId, progress)\n]]\nlocal rcall = redis.call\n-- Includes\n--[[\n  Function to get max events value or set by default 10000.\n]]\nlocal function getOrSetMaxEvents(metaKey)\n  local maxEvents = rcall("HGET", metaKey, "opts.maxLenEvents")\n  if not maxEvents then\n    maxEvents = 10000\n    rcall("HSET", metaKey, "opts.maxLenEvents", maxEvents)\n  end\n  return maxEvents\nend\nif rcall("EXISTS", KEYS[1]) == 1 then -- // Make sure job exists\n    local maxEvents = getOrSetMaxEvents(KEYS[3])\n    rcall("HSET", KEYS[1], "progress", ARGV[2])\n    rcall("XADD", KEYS[2], "MAXLEN", "~", maxEvents, "*", "event", "progress",\n          "jobId", ARGV[1], "data", ARGV[2]);\n    return 0\nelse\n    return -1\nend\n',keys:3},Wh={name:"updateRepeatableJobMillis",content:'--[[\n  Adds a repeatable job\n    Input:\n      KEYS[1] \'repeat\' key\n      ARGV[1] next milliseconds\n      ARGV[2] custom key\n      ARGV[3] legacy custom key TODO: remove this logic in next breaking change\n      Output:\n        repeatableKey  - OK\n]]\nlocal rcall = redis.call\nlocal repeatKey = KEYS[1]\nlocal nextMillis = ARGV[1]\nlocal customKey = ARGV[2]\nlocal legacyCustomKey = ARGV[3]\nif rcall("ZSCORE", repeatKey, customKey) then\n    rcall("ZADD", repeatKey, nextMillis, customKey)\n    return customKey\nelseif rcall("ZSCORE", repeatKey, legacyCustomKey) ~= false then\n    rcall("ZADD", repeatKey, nextMillis, legacyCustomKey)\n    return legacyCustomKey\nend\nreturn \'\'\n',keys:1};var Hh=Object.freeze({__proto__:null,addDelayedJob:nh,addJobScheduler:ah,addLog:ih,addParentJob:rh,addPrioritizedJob:oh,addRepeatableJob:sh,addStandardJob:lh,changeDelay:ch,changePriority:dh,cleanJobsInSet:uh,drain:ph,extendLock:mh,extendLocks:hh,getCounts:yh,getCountsPerPriority:fh,getDependencyCounts:vh,getJobScheduler:bh,getRanges:gh,getRateLimitTtl:_h,getState:xh,getStateV2:kh,isFinished:Eh,isJobInList:Kh,isMaxed:wh,moveJobFromActiveToWait:Sh,moveJobsToWait:Ih,moveStalledJobsToWait:jh,moveToActive:Rh,moveToDelayed:Th,moveToFinished:Oh,moveToWaitingChildren:Ah,obliterate:Ch,paginate:Dh,pause:Ph,promote:Nh,releaseLock:Mh,removeChildDependency:Fh,removeJob:Lh,removeJobScheduler:Jh,removeRepeatable:Uh,removeUnprocessedChildren:qh,reprocessJob:Vh,retryJob:Gh,saveStacktrace:Bh,updateData:zh,updateJobScheduler:Yh,updateProgress:$h,updateRepeatableJobMillis:Wh});const Qh=["BullMQ: WARNING! Your redis options maxRetriesPerRequest must be null","and will be overridden by BullMQ."].join(" ");class Zh extends m.EventEmitter{constructor(e,t){if(super(),this.extraOptions=t,this.capabilities={canDoubleTimeout:!1,canBlockFor1Ms:!0},this.status="initializing",this.packageVersion=Wd,this.extraOptions=Object.assign({shared:!1,blocking:!0,skipVersionCheck:!1,skipWaitingForReady:!1},t),Rm(e)){if(this._client=e,this._client.options.keyPrefix)throw new Error("BullMQ: ioredis does not support ioredis prefixes, use the prefix option instead.");!function(e){return Rm(e)&&e.isCluster}(this._client)?this.opts=this._client.options:this.opts=this._client.options.redisOptions,this.checkBlockingOptions("BullMQ: Your redis options maxRetriesPerRequest must be null.",this.opts,!0)}else this.checkBlockingOptions(Qh,e),this.opts=Object.assign({port:6379,host:"127.0.0.1",retryStrategy:function(e){return Math.max(Math.min(Math.exp(e),2e4),1e3)}},e),this.extraOptions.blocking&&(this.opts.maxRetriesPerRequest=null);this.skipVersionCheck=(null==t?void 0:t.skipVersionCheck)||!(!this.opts||!this.opts.skipVersionCheck),this.handleClientError=e=>{this.emit("error",e)},this.handleClientClose=()=>{this.emit("close")},this.handleClientReady=()=>{this.emit("ready")},this.initializing=this.init(),this.initializing.catch(e=>this.emit("error",e))}checkBlockingOptions(e,t,n=!1){if(this.extraOptions.blocking&&t&&t.maxRetriesPerRequest){if(n)throw new Error(e);console.error(e)}}static async waitUntilReady(e){if("ready"===e.status)return;if("wait"===e.status)return e.connect();if("end"===e.status)throw new Error(oo.CONNECTION_CLOSED_ERROR_MSG);let t,n,a;try{await new Promise((i,r)=>{let o;a=e=>{o=e},t=()=>{i()},n=()=>{"end"!==e.status?r(o||new Error(oo.CONNECTION_CLOSED_ERROR_MSG)):o?r(o):i()},wm(e,3),e.once("ready",t),e.on("end",n),e.once("error",a)})}finally{e.removeListener("end",n),e.removeListener("error",a),e.removeListener("ready",t),Tm(e,3)}}get client(){return this.initializing}loadCommands(e,t){const n=t||Hh;for(const t in n){const a=`${n[t].name}:${e}`;this._client[a]||this._client.defineCommand(a,{numberOfKeys:n[t].keys,lua:n[t].content})}}async init(){if(!this._client){const e=this.opts,{url:t}=e,n=Hm(e,["url"]);this._client=t?new Rc(t,n):new Rc(n)}if(wm(this._client,3),this._client.on("error",this.handleClientError),this._client.on("close",this.handleClientClose),this._client.on("ready",this.handleClientReady),this.extraOptions.skipWaitingForReady||await Zh.waitUntilReady(this._client),this.loadCommands(this.packageVersion),"end"!==this._client.status){if(this.version=await this.getRedisVersion(),!0!==this.skipVersionCheck&&!this.closing){if(Pm(this.version,Zh.minimumVersion))throw new Error(`Redis version needs to be greater or equal than ${Zh.minimumVersion} Current: ${this.version}`);Pm(this.version,Zh.recommendedMinimumVersion)&&console.warn(`It is highly recommended to use a minimum Redis version of ${Zh.recommendedMinimumVersion}\n             Current: ${this.version}`)}this.capabilities={canDoubleTimeout:!Pm(this.version,"6.0.0"),canBlockFor1Ms:!Pm(this.version,"7.0.8")},this.status="ready"}return this._client}async disconnect(e=!0){const t=await this.client;if("end"!==t.status){let n,a;if(!e)return t.disconnect();const i=new Promise((e,i)=>{wm(t,2),t.once("end",e),t.once("error",i),n=e,a=i});t.disconnect();try{await i}finally{Tm(t,2),t.removeListener("end",n),t.removeListener("error",a)}}}async reconnect(){return(await this.client).connect()}async close(e=!1){if(!this.closing){const t=this.status;this.status="closing",this.closing=!0;try{"ready"===t&&await this.initializing,this.extraOptions.shared||("initializing"==t||e?this._client.disconnect():await this._client.quit(),this._client.status="end")}catch(e){if(Cm(e))throw e}finally{this._client.off("error",this.handleClientError),this._client.off("close",this.handleClientClose),this._client.off("ready",this.handleClientReady),Tm(this._client,3),this.removeAllListeners(),this.status="closed"}}}async getRedisVersion(){if(this.skipVersionCheck)return Zh.minimumVersion;const e="redis_version:",t="maxmemory_policy:",n=(await this._client.info()).split(/\r?\n/);let a;for(let i=0;i<n.length;i++){if(0===n[i].indexOf(t)){const e=n[i].substr(17);"noeviction"!==e&&console.warn(`IMPORTANT! Eviction policy is ${e}. It should be "noeviction"`)}0===n[i].indexOf(e)&&(a=n[i].substr(14))}return a}get redisVersion(){return this.version}}Zh.minimumVersion="5.0.0",Zh.recommendedMinimumVersion="6.2.0";var Xh={};Object.defineProperty(Xh,"__esModule",{value:!0});class ey extends Error{}class ty extends ey{constructor(e){super(`Invalid DateTime: ${e.toMessage()}`)}}class ny extends ey{constructor(e){super(`Invalid Interval: ${e.toMessage()}`)}}class ay extends ey{constructor(e){super(`Invalid Duration: ${e.toMessage()}`)}}class iy extends ey{}class ry extends ey{constructor(e){super(`Invalid unit ${e}`)}}class oy extends ey{}class sy extends ey{constructor(){super("Zone is an abstract class")}}const ly="numeric",cy="short",dy="long",uy={year:ly,month:ly,day:ly},py={year:ly,month:cy,day:ly},my={year:ly,month:cy,day:ly,weekday:cy},hy={year:ly,month:dy,day:ly},yy={year:ly,month:dy,day:ly,weekday:dy},fy={hour:ly,minute:ly},vy={hour:ly,minute:ly,second:ly},by={hour:ly,minute:ly,second:ly,timeZoneName:cy},gy={hour:ly,minute:ly,second:ly,timeZoneName:dy},_y={hour:ly,minute:ly,hourCycle:"h23"},xy={hour:ly,minute:ly,second:ly,hourCycle:"h23"},ky={hour:ly,minute:ly,second:ly,hourCycle:"h23",timeZoneName:cy},Ey={hour:ly,minute:ly,second:ly,hourCycle:"h23",timeZoneName:dy},Ky={year:ly,month:ly,day:ly,hour:ly,minute:ly},wy={year:ly,month:ly,day:ly,hour:ly,minute:ly,second:ly},Sy={year:ly,month:cy,day:ly,hour:ly,minute:ly},Iy={year:ly,month:cy,day:ly,hour:ly,minute:ly,second:ly},jy={year:ly,month:cy,day:ly,weekday:cy,hour:ly,minute:ly},Ry={year:ly,month:dy,day:ly,hour:ly,minute:ly,timeZoneName:cy},Ty={year:ly,month:dy,day:ly,hour:ly,minute:ly,second:ly,timeZoneName:cy},Oy={year:ly,month:dy,day:ly,weekday:dy,hour:ly,minute:ly,timeZoneName:dy},Ay={year:ly,month:dy,day:ly,weekday:dy,hour:ly,minute:ly,second:ly,timeZoneName:dy};class Cy{get type(){throw new sy}get name(){throw new sy}get ianaName(){return this.name}get isUniversal(){throw new sy}offsetName(e,t){throw new sy}formatOffset(e,t){throw new sy}offset(e){throw new sy}equals(e){throw new sy}get isValid(){throw new sy}}let Dy=null;class Py extends Cy{static get instance(){return null===Dy&&(Dy=new Py),Dy}get type(){return"system"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return nv(e,t,n)}formatOffset(e,t){return ov(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return"system"===e.type}get isValid(){return!0}}const Ny=new Map;const My={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};const Fy=new Map;class Ly extends Cy{static create(e){let t=Fy.get(e);return void 0===t&&Fy.set(e,t=new Ly(e)),t}static resetCache(){Fy.clear(),Ny.clear()}static isValidSpecifier(e){return this.isValidZone(e)}static isValidZone(e){if(!e)return!1;try{return new Intl.DateTimeFormat("en-US",{timeZone:e}).format(),!0}catch(e){return!1}}constructor(e){super(),this.zoneName=e,this.valid=Ly.isValidZone(e)}get type(){return"iana"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:n}){return nv(e,t,n,this.name)}formatOffset(e,t){return ov(this.offset(e),t)}offset(e){if(!this.valid)return NaN;const t=new Date(e);if(isNaN(t))return NaN;const n=function(e){let t=Ny.get(e);return void 0===t&&(t=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:e,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"}),Ny.set(e,t)),t}(this.name);let[a,i,r,o,s,l,c]=n.formatToParts?function(e,t){const n=e.formatToParts(t),a=[];for(let e=0;e<n.length;e++){const{type:t,value:i}=n[e],r=My[t];"era"===t?a[r]=i:Pf(r)||(a[r]=parseInt(i,10))}return a}(n,t):function(e,t){const n=e.format(t).replace(/\u200E/g,""),a=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(n),[,i,r,o,s,l,c,d]=a;return[o,i,r,s,l,c,d]}(n,t);"BC"===o&&(a=1-Math.abs(a));let d=+t;const u=d%1e3;return d-=u>=0?u:1e3+u,(Zf({year:a,month:i,day:r,hour:24===s?0:s,minute:l,second:c,millisecond:0})-d)/6e4}equals(e){return"iana"===e.type&&e.name===this.name}get isValid(){return this.valid}}let Jy={};const Uy=new Map;function qy(e,t={}){const n=JSON.stringify([e,t]);let a=Uy.get(n);return void 0===a&&(a=new Intl.DateTimeFormat(e,t),Uy.set(n,a)),a}const Vy=new Map;const Gy=new Map;let By=null;const zy=new Map;function Yy(e){let t=zy.get(e);return void 0===t&&(t=new Intl.DateTimeFormat(e).resolvedOptions(),zy.set(e,t)),t}const $y=new Map;function Wy(e,t,n,a){const i=e.listingMode();return"error"===i?null:"en"===i?n(t):a(t)}class Hy{constructor(e,t,n){this.padTo=n.padTo||0,this.floor=n.floor||!1;const{padTo:a,floor:i,...r}=n;if(!t||Object.keys(r).length>0){const t={useGrouping:!1,...n};n.padTo>0&&(t.minimumIntegerDigits=n.padTo),this.inf=function(e,t={}){const n=JSON.stringify([e,t]);let a=Vy.get(n);return void 0===a&&(a=new Intl.NumberFormat(e,t),Vy.set(n,a)),a}(e,t)}}format(e){if(this.inf){const t=this.floor?Math.floor(e):e;return this.inf.format(t)}return Gf(this.floor?Math.floor(e):$f(e,3),this.padTo)}}class Qy{constructor(e,t,n){let a;if(this.opts=n,this.originalZone=void 0,this.opts.timeZone)this.dt=e;else if("fixed"===e.zone.type){const t=e.offset/60*-1,n=t>=0?`Etc/GMT+${t}`:`Etc/GMT${t}`;0!==e.offset&&Ly.create(n).valid?(a=n,this.dt=e):(a="UTC",this.dt=0===e.offset?e:e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone)}else"system"===e.zone.type?this.dt=e:"iana"===e.zone.type?(this.dt=e,a=e.zone.name):(a="UTC",this.dt=e.setZone("UTC").plus({minutes:e.offset}),this.originalZone=e.zone);const i={...this.opts};i.timeZone=i.timeZone||a,this.dtf=qy(t,i)}format(){return this.originalZone?this.formatToParts().map(({value:e})=>e).join(""):this.dtf.format(this.dt.toJSDate())}formatToParts(){const e=this.dtf.formatToParts(this.dt.toJSDate());return this.originalZone?e.map(e=>{if("timeZoneName"===e.type){const t=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName});return{...e,value:t}}return e}):e}resolvedOptions(){return this.dtf.resolvedOptions()}}class Zy{constructor(e,t,n){this.opts={style:"long",...n},!t&&Ff()&&(this.rtf=function(e,t={}){const{base:n,...a}=t,i=JSON.stringify([e,a]);let r=Gy.get(i);return void 0===r&&(r=new Intl.RelativeTimeFormat(e,t),Gy.set(i,r)),r}(e,n))}format(e,t){return this.rtf?this.rtf.format(e,t):function(e,t,n="always",a=!1){const i={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]},r=-1===["hours","minutes","seconds"].indexOf(e);if("auto"===n&&r){const n="days"===e;switch(t){case 1:return n?"tomorrow":`next ${i[e][0]}`;case-1:return n?"yesterday":`last ${i[e][0]}`;case 0:return n?"today":`this ${i[e][0]}`}}const o=Object.is(t,-0)||t<0,s=Math.abs(t),l=1===s,c=i[e],d=a?l?c[1]:c[2]||c[1]:l?i[e][0]:e;return o?`${s} ${d} ago`:`in ${s} ${d}`}(t,e,this.opts.numeric,"long"!==this.opts.style)}formatToParts(e,t){return this.rtf?this.rtf.formatToParts(e,t):[]}}const Xy={firstDay:1,minimalDays:4,weekend:[6,7]};class ef{static fromOpts(e){return ef.create(e.locale,e.numberingSystem,e.outputCalendar,e.weekSettings,e.defaultToEN)}static create(e,t,n,a,i=!1){const r=e||gf.defaultLocale,o=r||(i?"en-US":By||(By=(new Intl.DateTimeFormat).resolvedOptions().locale,By)),s=t||gf.defaultNumberingSystem,l=n||gf.defaultOutputCalendar,c=qf(a)||gf.defaultWeekSettings;return new ef(o,s,l,c,r)}static resetCache(){By=null,Uy.clear(),Vy.clear(),Gy.clear(),zy.clear(),$y.clear()}static fromObject({locale:e,numberingSystem:t,outputCalendar:n,weekSettings:a}={}){return ef.create(e,t,n,a)}constructor(e,t,n,a,i){const[r,o,s]=function(e){const t=e.indexOf("-x-");-1!==t&&(e=e.substring(0,t));const n=e.indexOf("-u-");if(-1===n)return[e];{let t,a;try{t=qy(e).resolvedOptions(),a=e}catch(i){const r=e.substring(0,n);t=qy(r).resolvedOptions(),a=r}const{numberingSystem:i,calendar:r}=t;return[a,i,r]}}(e);this.locale=r,this.numberingSystem=t||o||null,this.outputCalendar=n||s||null,this.weekSettings=a,this.intl=function(e,t,n){return n||t?(e.includes("-u-")||(e+="-u"),n&&(e+=`-ca-${n}`),t&&(e+=`-nu-${t}`),e):e}(this.locale,this.numberingSystem,this.outputCalendar),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=i,this.fastNumbersCached=null}get fastNumbers(){var e;return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||"latn"===e.numberingSystem)&&("latn"===e.numberingSystem||!e.locale||e.locale.startsWith("en")||"latn"===Yy(e.locale).numberingSystem)),this.fastNumbersCached}listingMode(){const e=this.isEnglish(),t=!(null!==this.numberingSystem&&"latn"!==this.numberingSystem||null!==this.outputCalendar&&"gregory"!==this.outputCalendar);return e&&t?"en":"intl"}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?ef.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,qf(e.weekSettings)||this.weekSettings,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone({...e,defaultToEN:!0})}redefaultToSystem(e={}){return this.clone({...e,defaultToEN:!1})}months(e,t=!1){return Wy(this,e,uv,()=>{const n="ja"===this.intl||this.intl.startsWith("ja-"),a=(t&=!n)?{month:e,day:"numeric"}:{month:e},i=t?"format":"standalone";if(!this.monthsCache[i][e]){const t=n?e=>this.dtFormatter(e,a).format():e=>this.extract(e,a,"month");this.monthsCache[i][e]=function(e){const t=[];for(let n=1;n<=12;n++){const a=fg.utc(2009,n,1);t.push(e(a))}return t}(t)}return this.monthsCache[i][e]})}weekdays(e,t=!1){return Wy(this,e,yv,()=>{const n=t?{weekday:e,year:"numeric",month:"long",day:"numeric"}:{weekday:e},a=t?"format":"standalone";return this.weekdaysCache[a][e]||(this.weekdaysCache[a][e]=function(e){const t=[];for(let n=1;n<=7;n++){const a=fg.utc(2016,11,13+n);t.push(e(a))}return t}(e=>this.extract(e,n,"weekday"))),this.weekdaysCache[a][e]})}meridiems(){return Wy(this,void 0,()=>fv,()=>{if(!this.meridiemCache){const e={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[fg.utc(2016,11,13,9),fg.utc(2016,11,13,19)].map(t=>this.extract(t,e,"dayperiod"))}return this.meridiemCache})}eras(e){return Wy(this,e,_v,()=>{const t={era:e};return this.eraCache[e]||(this.eraCache[e]=[fg.utc(-40,1,1),fg.utc(2017,1,1)].map(e=>this.extract(e,t,"era"))),this.eraCache[e]})}extract(e,t,n){const a=this.dtFormatter(e,t).formatToParts().find(e=>e.type.toLowerCase()===n);return a?a.value:null}numberFormatter(e={}){return new Hy(this.intl,e.forceSimple||this.fastNumbers,e)}dtFormatter(e,t={}){return new Qy(e,this.intl,t)}relFormatter(e={}){return new Zy(this.intl,this.isEnglish(),e)}listFormatter(e={}){return function(e,t={}){const n=JSON.stringify([e,t]);let a=Jy[n];return a||(a=new Intl.ListFormat(e,t),Jy[n]=a),a}(this.intl,e)}isEnglish(){return"en"===this.locale||"en-us"===this.locale.toLowerCase()||Yy(this.intl).locale.startsWith("en-us")}getWeekSettings(){return this.weekSettings?this.weekSettings:Lf()?function(e){let t=$y.get(e);if(!t){const n=new Intl.Locale(e);t="getWeekInfo"in n?n.getWeekInfo():n.weekInfo,"minimalDays"in t||(t={...Xy,...t}),$y.set(e,t)}return t}(this.locale):Xy}getStartOfWeek(){return this.getWeekSettings().firstDay}getMinDaysInFirstWeek(){return this.getWeekSettings().minimalDays}getWeekendDays(){return this.getWeekSettings().weekend}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}toString(){return`Locale(${this.locale}, ${this.numberingSystem}, ${this.outputCalendar})`}}let tf=null;class nf extends Cy{static get utcInstance(){return null===tf&&(tf=new nf(0)),tf}static instance(e){return 0===e?nf.utcInstance:new nf(e)}static parseSpecifier(e){if(e){const t=e.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(t)return new nf(av(t[1],t[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return"fixed"}get name(){return 0===this.fixed?"UTC":`UTC${ov(this.fixed,"narrow")}`}get ianaName(){return 0===this.fixed?"Etc/UTC":`Etc/GMT${ov(-this.fixed,"narrow")}`}offsetName(){return this.name}formatOffset(e,t){return ov(this.fixed,t)}get isUniversal(){return!0}offset(){return this.fixed}equals(e){return"fixed"===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class af extends Cy{constructor(e){super(),this.zoneName=e}get type(){return"invalid"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return""}offset(){return NaN}equals(){return!1}get isValid(){return!1}}function rf(e,t){if(Pf(e)||null===e)return t;if(e instanceof Cy)return e;if("string"==typeof e){const n=e.toLowerCase();return"default"===n?t:"local"===n||"system"===n?Py.instance:"utc"===n||"gmt"===n?nf.utcInstance:nf.parseSpecifier(n)||Ly.create(e)}return Nf(e)?nf.instance(e):"object"==typeof e&&"offset"in e&&"function"==typeof e.offset?e:new af(e)}const of={arab:"[٠-٩]",arabext:"[۰-۹]",bali:"[᭐-᭙]",beng:"[০-৯]",deva:"[०-९]",fullwide:"[０-９]",gujr:"[૦-૯]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[០-៩]",knda:"[೦-೯]",laoo:"[໐-໙]",limb:"[᥆-᥏]",mlym:"[൦-൯]",mong:"[᠐-᠙]",mymr:"[၀-၉]",orya:"[୦-୯]",tamldec:"[௦-௯]",telu:"[౦-౯]",thai:"[๐-๙]",tibt:"[༠-༩]",latn:"\\d"},sf={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},lf=of.hanidec.replace(/[\[|\]]/g,"").split("");const cf=new Map;function df({numberingSystem:e},t=""){const n=e||"latn";let a=cf.get(n);void 0===a&&(a=new Map,cf.set(n,a));let i=a.get(t);return void 0===i&&(i=new RegExp(`${of[n]}${t}`),a.set(t,i)),i}let uf,pf=()=>Date.now(),mf="system",hf=null,yf=null,ff=null,vf=60,bf=null;class gf{static get now(){return pf}static set now(e){pf=e}static set defaultZone(e){mf=e}static get defaultZone(){return rf(mf,Py.instance)}static get defaultLocale(){return hf}static set defaultLocale(e){hf=e}static get defaultNumberingSystem(){return yf}static set defaultNumberingSystem(e){yf=e}static get defaultOutputCalendar(){return ff}static set defaultOutputCalendar(e){ff=e}static get defaultWeekSettings(){return bf}static set defaultWeekSettings(e){bf=qf(e)}static get twoDigitCutoffYear(){return vf}static set twoDigitCutoffYear(e){vf=e%100}static get throwOnInvalid(){return uf}static set throwOnInvalid(e){uf=e}static resetCaches(){ef.resetCache(),Ly.resetCache(),fg.resetCache(),cf.clear()}}class _f{constructor(e,t){this.reason=e,this.explanation=t}toMessage(){return this.explanation?`${this.reason}: ${this.explanation}`:this.reason}}const xf=[0,31,59,90,120,151,181,212,243,273,304,334],kf=[0,31,60,91,121,152,182,213,244,274,305,335];function Ef(e,t){return new _f("unit out of range",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function Kf(e,t,n){const a=new Date(Date.UTC(e,t-1,n));e<100&&e>=0&&a.setUTCFullYear(a.getUTCFullYear()-1900);const i=a.getUTCDay();return 0===i?7:i}function wf(e,t,n){return n+(Wf(e)?kf:xf)[t-1]}function Sf(e,t){const n=Wf(e)?kf:xf,a=n.findIndex(e=>e<t);return{month:a+1,day:t-n[a]}}function If(e,t){return(e-t+7)%7+1}function jf(e,t=4,n=1){const{year:a,month:i,day:r}=e,o=wf(a,i,r),s=If(Kf(a,i,r),n);let l,c=Math.floor((o-s+14-t)/7);return c<1?(l=a-1,c=ev(l,t,n)):c>ev(a,t,n)?(l=a+1,c=1):l=a,{weekYear:l,weekNumber:c,weekday:s,...sv(e)}}function Rf(e,t=4,n=1){const{weekYear:a,weekNumber:i,weekday:r}=e,o=If(Kf(a,1,t),n),s=Hf(a);let l,c=7*i+r-o-7+t;c<1?(l=a-1,c+=Hf(l)):c>s?(l=a+1,c-=Hf(a)):l=a;const{month:d,day:u}=Sf(l,c);return{year:l,month:d,day:u,...sv(e)}}function Tf(e){const{year:t,month:n,day:a}=e;return{year:t,ordinal:wf(t,n,a),...sv(e)}}function Of(e){const{year:t,ordinal:n}=e,{month:a,day:i}=Sf(t,n);return{year:t,month:a,day:i,...sv(e)}}function Af(e,t){if(!Pf(e.localWeekday)||!Pf(e.localWeekNumber)||!Pf(e.localWeekYear)){if(!Pf(e.weekday)||!Pf(e.weekNumber)||!Pf(e.weekYear))throw new iy("Cannot mix locale-based week fields with ISO-based week fields");return Pf(e.localWeekday)||(e.weekday=e.localWeekday),Pf(e.localWeekNumber)||(e.weekNumber=e.localWeekNumber),Pf(e.localWeekYear)||(e.weekYear=e.localWeekYear),delete e.localWeekday,delete e.localWeekNumber,delete e.localWeekYear,{minDaysInFirstWeek:t.getMinDaysInFirstWeek(),startOfWeek:t.getStartOfWeek()}}return{minDaysInFirstWeek:4,startOfWeek:1}}function Cf(e){const t=Mf(e.year),n=Vf(e.month,1,12),a=Vf(e.day,1,Qf(e.year,e.month));return t?n?!a&&Ef("day",e.day):Ef("month",e.month):Ef("year",e.year)}function Df(e){const{hour:t,minute:n,second:a,millisecond:i}=e,r=Vf(t,0,23)||24===t&&0===n&&0===a&&0===i,o=Vf(n,0,59),s=Vf(a,0,59),l=Vf(i,0,999);return r?o?s?!l&&Ef("millisecond",i):Ef("second",a):Ef("minute",n):Ef("hour",t)}function Pf(e){return void 0===e}function Nf(e){return"number"==typeof e}function Mf(e){return"number"==typeof e&&e%1==0}function Ff(){try{return"undefined"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function Lf(){try{return"undefined"!=typeof Intl&&!!Intl.Locale&&("weekInfo"in Intl.Locale.prototype||"getWeekInfo"in Intl.Locale.prototype)}catch(e){return!1}}function Jf(e,t,n){if(0!==e.length)return e.reduce((e,a)=>{const i=[t(a),a];return e&&n(e[0],i[0])===e[0]?e:i},null)[1]}function Uf(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function qf(e){if(null==e)return null;if("object"!=typeof e)throw new oy("Week settings must be an object");if(!Vf(e.firstDay,1,7)||!Vf(e.minimalDays,1,7)||!Array.isArray(e.weekend)||e.weekend.some(e=>!Vf(e,1,7)))throw new oy("Invalid week settings");return{firstDay:e.firstDay,minimalDays:e.minimalDays,weekend:Array.from(e.weekend)}}function Vf(e,t,n){return Mf(e)&&e>=t&&e<=n}function Gf(e,t=2){let n;return n=e<0?"-"+(""+-e).padStart(t,"0"):(""+e).padStart(t,"0"),n}function Bf(e){return Pf(e)||null===e||""===e?void 0:parseInt(e,10)}function zf(e){return Pf(e)||null===e||""===e?void 0:parseFloat(e)}function Yf(e){if(!Pf(e)&&null!==e&&""!==e){const t=1e3*parseFloat("0."+e);return Math.floor(t)}}function $f(e,t,n="round"){const a=10**t;switch(n){case"expand":return e>0?Math.ceil(e*a)/a:Math.floor(e*a)/a;case"trunc":return Math.trunc(e*a)/a;case"round":return Math.round(e*a)/a;case"floor":return Math.floor(e*a)/a;case"ceil":return Math.ceil(e*a)/a;default:throw new RangeError(`Value rounding ${n} is out of range`)}}function Wf(e){return e%4==0&&(e%100!=0||e%400==0)}function Hf(e){return Wf(e)?366:365}function Qf(e,t){const n=function(e,t){return e-t*Math.floor(e/t)}(t-1,12)+1;return 2===n?Wf(e+(t-n)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}function Zf(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&e.year>=0&&(t=new Date(t),t.setUTCFullYear(e.year,e.month-1,e.day)),+t}function Xf(e,t,n){return-If(Kf(e,1,t),n)+t-1}function ev(e,t=4,n=1){const a=Xf(e,t,n),i=Xf(e+1,t,n);return(Hf(e)-a+i)/7}function tv(e){return e>99?e:e>gf.twoDigitCutoffYear?1900+e:2e3+e}function nv(e,t,n,a=null){const i=new Date(e),r={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};a&&(r.timeZone=a);const o={timeZoneName:t,...r},s=new Intl.DateTimeFormat(n,o).formatToParts(i).find(e=>"timezonename"===e.type.toLowerCase());return s?s.value:null}function av(e,t){let n=parseInt(e,10);Number.isNaN(n)&&(n=0);const a=parseInt(t,10)||0;return 60*n+(n<0||Object.is(n,-0)?-a:a)}function iv(e){const t=Number(e);if("boolean"==typeof e||""===e||!Number.isFinite(t))throw new oy(`Invalid unit value ${e}`);return t}function rv(e,t){const n={};for(const a in e)if(Uf(e,a)){const i=e[a];if(null==i)continue;n[t(a)]=iv(i)}return n}function ov(e,t){const n=Math.trunc(Math.abs(e/60)),a=Math.trunc(Math.abs(e%60)),i=e>=0?"+":"-";switch(t){case"short":return`${i}${Gf(n,2)}:${Gf(a,2)}`;case"narrow":return`${i}${n}${a>0?`:${a}`:""}`;case"techie":return`${i}${Gf(n,2)}${Gf(a,2)}`;default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function sv(e){return function(e,t){return t.reduce((t,n)=>(t[n]=e[n],t),{})}(e,["hour","minute","second","millisecond"])}const lv=["January","February","March","April","May","June","July","August","September","October","November","December"],cv=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dv=["J","F","M","A","M","J","J","A","S","O","N","D"];function uv(e){switch(e){case"narrow":return[...dv];case"short":return[...cv];case"long":return[...lv];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null}}const pv=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],mv=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],hv=["M","T","W","T","F","S","S"];function yv(e){switch(e){case"narrow":return[...hv];case"short":return[...mv];case"long":return[...pv];case"numeric":return["1","2","3","4","5","6","7"];default:return null}}const fv=["AM","PM"],vv=["Before Christ","Anno Domini"],bv=["BC","AD"],gv=["B","A"];function _v(e){switch(e){case"narrow":return[...gv];case"short":return[...bv];case"long":return[...vv];default:return null}}function xv(e,t){let n="";for(const a of e)a.literal?n+=a.val:n+=t(a.val);return n}const kv={D:uy,DD:py,DDD:hy,DDDD:yy,t:fy,tt:vy,ttt:by,tttt:gy,T:_y,TT:xy,TTT:ky,TTTT:Ey,f:Ky,ff:Sy,fff:Ry,ffff:Oy,F:wy,FF:Iy,FFF:Ty,FFFF:Ay};class Ev{static create(e,t={}){return new Ev(e,t)}static parseFormat(e){let t=null,n="",a=!1;const i=[];for(let r=0;r<e.length;r++){const o=e.charAt(r);"'"===o?((n.length>0||a)&&i.push({literal:a||/^\s+$/.test(n),val:""===n?"'":n}),t=null,n="",a=!a):a||o===t?n+=o:(n.length>0&&i.push({literal:/^\s+$/.test(n),val:n}),n=o,t=o)}return n.length>0&&i.push({literal:a||/^\s+$/.test(n),val:n}),i}static macroTokenToFormatOpts(e){return kv[e]}constructor(e,t){this.opts=t,this.loc=e,this.systemLoc=null}formatWithSystemDefault(e,t){null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem());return this.systemLoc.dtFormatter(e,{...this.opts,...t}).format()}dtFormatter(e,t={}){return this.loc.dtFormatter(e,{...this.opts,...t})}formatDateTime(e,t){return this.dtFormatter(e,t).format()}formatDateTimeParts(e,t){return this.dtFormatter(e,t).formatToParts()}formatInterval(e,t){return this.dtFormatter(e.start,t).dtf.formatRange(e.start.toJSDate(),e.end.toJSDate())}resolvedOptions(e,t){return this.dtFormatter(e,t).resolvedOptions()}num(e,t=0,n=void 0){if(this.opts.forceSimple)return Gf(e,t);const a={...this.opts};return t>0&&(a.padTo=t),n&&(a.signDisplay=n),this.loc.numberFormatter(a).format(e)}formatDateTimeFromString(e,t){const n="en"===this.loc.listingMode(),a=this.loc.outputCalendar&&"gregory"!==this.loc.outputCalendar,i=(t,n)=>this.loc.extract(e,t,n),r=t=>e.isOffsetFixed&&0===e.offset&&t.allowZ?"Z":e.isValid?e.zone.formatOffset(e.ts,t.format):"",o=()=>n?function(e){return fv[e.hour<12?0:1]}(e):i({hour:"numeric",hourCycle:"h12"},"dayperiod"),s=(t,a)=>n?function(e,t){return uv(t)[e.month-1]}(e,t):i(a?{month:t}:{month:t,day:"numeric"},"month"),l=(t,a)=>n?function(e,t){return yv(t)[e.weekday-1]}(e,t):i(a?{weekday:t}:{weekday:t,month:"long",day:"numeric"},"weekday"),c=t=>{const n=Ev.macroTokenToFormatOpts(t);return n?this.formatWithSystemDefault(e,n):t},d=t=>n?function(e,t){return _v(t)[e.year<0?0:1]}(e,t):i({era:t},"era");return xv(Ev.parseFormat(t),t=>{switch(t){case"S":return this.num(e.millisecond);case"u":case"SSS":return this.num(e.millisecond,3);case"s":return this.num(e.second);case"ss":return this.num(e.second,2);case"uu":return this.num(Math.floor(e.millisecond/10),2);case"uuu":return this.num(Math.floor(e.millisecond/100));case"m":return this.num(e.minute);case"mm":return this.num(e.minute,2);case"h":return this.num(e.hour%12==0?12:e.hour%12);case"hh":return this.num(e.hour%12==0?12:e.hour%12,2);case"H":return this.num(e.hour);case"HH":return this.num(e.hour,2);case"Z":return r({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return r({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return r({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return e.zone.offsetName(e.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return e.zone.offsetName(e.ts,{format:"long",locale:this.loc.locale});case"z":return e.zoneName;case"a":return o();case"d":return a?i({day:"numeric"},"day"):this.num(e.day);case"dd":return a?i({day:"2-digit"},"day"):this.num(e.day,2);case"c":case"E":return this.num(e.weekday);case"ccc":return l("short",!0);case"cccc":return l("long",!0);case"ccccc":return l("narrow",!0);case"EEE":return l("short",!1);case"EEEE":return l("long",!1);case"EEEEE":return l("narrow",!1);case"L":return a?i({month:"numeric",day:"numeric"},"month"):this.num(e.month);case"LL":return a?i({month:"2-digit",day:"numeric"},"month"):this.num(e.month,2);case"LLL":return s("short",!0);case"LLLL":return s("long",!0);case"LLLLL":return s("narrow",!0);case"M":return a?i({month:"numeric"},"month"):this.num(e.month);case"MM":return a?i({month:"2-digit"},"month"):this.num(e.month,2);case"MMM":return s("short",!1);case"MMMM":return s("long",!1);case"MMMMM":return s("narrow",!1);case"y":return a?i({year:"numeric"},"year"):this.num(e.year);case"yy":return a?i({year:"2-digit"},"year"):this.num(e.year.toString().slice(-2),2);case"yyyy":return a?i({year:"numeric"},"year"):this.num(e.year,4);case"yyyyyy":return a?i({year:"numeric"},"year"):this.num(e.year,6);case"G":return d("short");case"GG":return d("long");case"GGGGG":return d("narrow");case"kk":return this.num(e.weekYear.toString().slice(-2),2);case"kkkk":return this.num(e.weekYear,4);case"W":return this.num(e.weekNumber);case"WW":return this.num(e.weekNumber,2);case"n":return this.num(e.localWeekNumber);case"nn":return this.num(e.localWeekNumber,2);case"ii":return this.num(e.localWeekYear.toString().slice(-2),2);case"iiii":return this.num(e.localWeekYear,4);case"o":return this.num(e.ordinal);case"ooo":return this.num(e.ordinal,3);case"q":return this.num(e.quarter);case"qq":return this.num(e.quarter,2);case"X":return this.num(Math.floor(e.ts/1e3));case"x":return this.num(e.ts);default:return c(t)}})}formatDurationFromString(e,t){const n="negativeLargestOnly"===this.opts.signMode?-1:1,a=e=>{switch(e[0]){case"S":return"milliseconds";case"s":return"seconds";case"m":return"minutes";case"h":return"hours";case"d":return"days";case"w":return"weeks";case"M":return"months";case"y":return"years";default:return null}},i=Ev.parseFormat(t),r=i.reduce((e,{literal:t,val:n})=>t?e:e.concat(n),[]),o=e.shiftTo(...r.map(a).filter(e=>e));return xv(i,((e,t)=>i=>{const r=a(i);if(r){const a=t.isNegativeDuration&&r!==t.largestUnit?n:1;let o;return o="negativeLargestOnly"===this.opts.signMode&&r!==t.largestUnit?"never":"all"===this.opts.signMode?"always":"auto",this.num(e.get(r)*a,i.length,o)}return i})(o,{isNegativeDuration:o<0,largestUnit:Object.keys(o.values)[0]}))}}const Kv=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function wv(...e){const t=e.reduce((e,t)=>e+t.source,"");return RegExp(`^${t}$`)}function Sv(...e){return t=>e.reduce(([e,n,a],i)=>{const[r,o,s]=i(t,a);return[{...e,...r},o||n,s]},[{},null,1]).slice(0,2)}function Iv(e,...t){if(null==e)return[null,null];for(const[n,a]of t){const t=n.exec(e);if(t)return a(t)}return[null,null]}function jv(...e){return(t,n)=>{const a={};let i;for(i=0;i<e.length;i++)a[e[i]]=Bf(t[n+i]);return[a,null,n+i]}}const Rv=/(?:([Zz])|([+-]\d\d)(?::?(\d\d))?)/,Tv=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,Ov=RegExp(`${Tv.source}${`(?:${Rv.source}?(?:\\[(${Kv.source})\\])?)?`}`),Av=RegExp(`(?:[Tt]${Ov.source})?`),Cv=jv("weekYear","weekNumber","weekDay"),Dv=jv("year","ordinal"),Pv=RegExp(`${Tv.source} ?(?:${Rv.source}|(${Kv.source}))?`),Nv=RegExp(`(?: ${Pv.source})?`);function Mv(e,t,n){const a=e[t];return Pf(a)?n:Bf(a)}function Fv(e,t){return[{hours:Mv(e,t,0),minutes:Mv(e,t+1,0),seconds:Mv(e,t+2,0),milliseconds:Yf(e[t+3])},null,t+4]}function Lv(e,t){const n=!e[t]&&!e[t+1],a=av(e[t+1],e[t+2]);return[{},n?null:nf.instance(a),t+3]}function Jv(e,t){return[{},e[t]?Ly.create(e[t]):null,t+1]}const Uv=RegExp(`^T?${Tv.source}$`),qv=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function Vv(e){const[t,n,a,i,r,o,s,l,c]=e,d="-"===t[0],u=l&&"-"===l[0],p=(e,t=!1)=>void 0!==e&&(t||e&&d)?-e:e;return[{years:p(zf(n)),months:p(zf(a)),weeks:p(zf(i)),days:p(zf(r)),hours:p(zf(o)),minutes:p(zf(s)),seconds:p(zf(l),"-0"===l),milliseconds:p(Yf(c),u)}]}const Gv={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Bv(e,t,n,a,i,r,o){const s={year:2===t.length?tv(Bf(t)):Bf(t),month:cv.indexOf(n)+1,day:Bf(a),hour:Bf(i),minute:Bf(r)};return o&&(s.second=Bf(o)),e&&(s.weekday=e.length>3?pv.indexOf(e)+1:mv.indexOf(e)+1),s}const zv=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function Yv(e){const[,t,n,a,i,r,o,s,l,c,d,u]=e,p=Bv(t,i,a,n,r,o,s);let m;return m=l?Gv[l]:c?0:av(d,u),[p,new nf(m)]}const $v=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,Wv=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,Hv=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function Qv(e){const[,t,n,a,i,r,o,s]=e;return[Bv(t,i,a,n,r,o,s),nf.utcInstance]}function Zv(e){const[,t,n,a,i,r,o,s]=e;return[Bv(t,s,n,a,i,r,o),nf.utcInstance]}const Xv=wv(/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,Av),eb=wv(/(\d{4})-?W(\d\d)(?:-?(\d))?/,Av),tb=wv(/(\d{4})-?(\d{3})/,Av),nb=wv(Ov),ab=Sv(function(e,t){return[{year:Mv(e,t),month:Mv(e,t+1,1),day:Mv(e,t+2,1)},null,t+3]},Fv,Lv,Jv),ib=Sv(Cv,Fv,Lv,Jv),rb=Sv(Dv,Fv,Lv,Jv),ob=Sv(Fv,Lv,Jv);const sb=Sv(Fv);const lb=wv(/(\d{4})-(\d\d)-(\d\d)/,Nv),cb=wv(Pv),db=Sv(Fv,Lv,Jv);const ub="Invalid Duration",pb={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},mb={years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6},...pb},hb=365.2425,yb=30.436875,fb={years:{quarters:4,months:12,weeks:52.1775,days:hb,hours:8765.82,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:13.044375,days:91.310625,hours:2191.455,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:4.3481250000000005,days:yb,hours:730.485,minutes:43829.1,seconds:2629746,milliseconds:2629746e3},...pb},vb=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"],bb=vb.slice(0).reverse();function gb(e,t,n=!1){const a={values:n?t.values:{...e.values,...t.values||{}},loc:e.loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy,matrix:t.matrix||e.matrix};return new Eb(a)}function _b(e,t){var n;let a=null!=(n=t.milliseconds)?n:0;for(const n of bb.slice(1))t[n]&&(a+=t[n]*e[n].milliseconds);return a}function xb(e,t){const n=_b(e,t)<0?-1:1;vb.reduceRight((a,i)=>{if(Pf(t[i]))return a;if(a){const r=t[a]*n,o=e[i][a],s=Math.floor(r/o);t[i]+=s*n,t[a]-=s*o*n}return i},null),vb.reduce((n,a)=>{if(Pf(t[a]))return n;if(n){const i=t[n]%1;t[n]-=i,t[a]+=i*e[n][a]}return a},null)}function kb(e){const t={};for(const[n,a]of Object.entries(e))0!==a&&(t[n]=a);return t}class Eb{constructor(e){const t="longterm"===e.conversionAccuracy||!1;let n=t?fb:mb;e.matrix&&(n=e.matrix),this.values=e.values,this.loc=e.loc||ef.create(),this.conversionAccuracy=t?"longterm":"casual",this.invalid=e.invalid||null,this.matrix=n,this.isLuxonDuration=!0}static fromMillis(e,t){return Eb.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||"object"!=typeof e)throw new oy("Duration.fromObject: argument expected to be an object, got "+(null===e?"null":typeof e));return new Eb({values:rv(e,Eb.normalizeUnit),loc:ef.fromObject(t),conversionAccuracy:t.conversionAccuracy,matrix:t.matrix})}static fromDurationLike(e){if(Nf(e))return Eb.fromMillis(e);if(Eb.isDuration(e))return e;if("object"==typeof e)return Eb.fromObject(e);throw new oy(`Unknown duration argument ${e} of type ${typeof e}`)}static fromISO(e,t){const[n]=function(e){return Iv(e,[qv,Vv])}(e);return n?Eb.fromObject(n,t):Eb.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static fromISOTime(e,t){const[n]=function(e){return Iv(e,[Uv,sb])}(e);return n?Eb.fromObject(n,t):Eb.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static invalid(e,t=null){if(!e)throw new oy("need to specify a reason the Duration is invalid");const n=e instanceof _f?e:new _f(e,t);if(gf.throwOnInvalid)throw new ay(n);return new Eb({invalid:n})}static normalizeUnit(e){const t={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[e?e.toLowerCase():e];if(!t)throw new ry(e);return t}static isDuration(e){return e&&e.isLuxonDuration||!1}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}toFormat(e,t={}){const n={...t,floor:!1!==t.round&&!1!==t.floor};return this.isValid?Ev.create(this.loc,n).formatDurationFromString(this,e):ub}toHuman(e={}){if(!this.isValid)return ub;const t=!1!==e.showZeros,n=vb.map(n=>{const a=this.values[n];return Pf(a)||0===a&&!t?null:this.loc.numberFormatter({style:"unit",unitDisplay:"long",...e,unit:n.slice(0,-1)}).format(a)}).filter(e=>e);return this.loc.listFormatter({type:"conjunction",style:e.listStyle||"narrow",...e}).format(n)}toObject(){return this.isValid?{...this.values}:{}}toISO(){if(!this.isValid)return null;let e="P";return 0!==this.years&&(e+=this.years+"Y"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+"M"),0!==this.weeks&&(e+=this.weeks+"W"),0!==this.days&&(e+=this.days+"D"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+="T"),0!==this.hours&&(e+=this.hours+"H"),0!==this.minutes&&(e+=this.minutes+"M"),0===this.seconds&&0===this.milliseconds||(e+=$f(this.seconds+this.milliseconds/1e3,3)+"S"),"P"===e&&(e+="T0S"),e}toISOTime(e={}){if(!this.isValid)return null;const t=this.toMillis();if(t<0||t>=864e5)return null;e={suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:"extended",...e,includeOffset:!1};return fg.fromMillis(t,{zone:"UTC"}).toISOTime(e)}toJSON(){return this.toISO()}toString(){return this.toISO()}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Duration { values: ${JSON.stringify(this.values)} }`:`Duration { Invalid, reason: ${this.invalidReason} }`}toMillis(){return this.isValid?_b(this.matrix,this.values):NaN}valueOf(){return this.toMillis()}plus(e){if(!this.isValid)return this;const t=Eb.fromDurationLike(e),n={};for(const e of vb)(Uf(t.values,e)||Uf(this.values,e))&&(n[e]=t.get(e)+this.get(e));return gb(this,{values:n},!0)}minus(e){if(!this.isValid)return this;const t=Eb.fromDurationLike(e);return this.plus(t.negate())}mapUnits(e){if(!this.isValid)return this;const t={};for(const n of Object.keys(this.values))t[n]=iv(e(this.values[n],n));return gb(this,{values:t},!0)}get(e){return this[Eb.normalizeUnit(e)]}set(e){if(!this.isValid)return this;return gb(this,{values:{...this.values,...rv(e,Eb.normalizeUnit)}})}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:n,matrix:a}={}){return gb(this,{loc:this.loc.clone({locale:e,numberingSystem:t}),matrix:a,conversionAccuracy:n})}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;const e=this.toObject();return xb(this.matrix,e),gb(this,{values:e},!0)}rescale(){if(!this.isValid)return this;return gb(this,{values:kb(this.normalize().shiftToAll().toObject())},!0)}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map(e=>Eb.normalizeUnit(e));const t={},n={},a=this.toObject();let i;for(const r of vb)if(e.indexOf(r)>=0){i=r;let e=0;for(const t in n)e+=this.matrix[t][r]*n[t],n[t]=0;Nf(a[r])&&(e+=a[r]);const o=Math.trunc(e);t[r]=o,n[r]=(1e3*e-1e3*o)/1e3}else Nf(a[r])&&(n[r]=a[r]);for(const e in n)0!==n[e]&&(t[i]+=e===i?n[e]:n[e]/this.matrix[i][e]);return xb(this.matrix,t),gb(this,{values:t},!0)}shiftToAll(){return this.isValid?this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds"):this}negate(){if(!this.isValid)return this;const e={};for(const t of Object.keys(this.values))e[t]=0===this.values[t]?0:-this.values[t];return gb(this,{values:e},!0)}removeZeros(){if(!this.isValid)return this;return gb(this,{values:kb(this.values)},!0)}get years(){return this.isValid?this.values.years||0:NaN}get quarters(){return this.isValid?this.values.quarters||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;function t(e,t){return void 0===e||0===e?void 0===t||0===t:e===t}for(const n of vb)if(!t(this.values[n],e.values[n]))return!1;return!0}}const Kb="Invalid Interval";class wb{constructor(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}static invalid(e,t=null){if(!e)throw new oy("need to specify a reason the Interval is invalid");const n=e instanceof _f?e:new _f(e,t);if(gf.throwOnInvalid)throw new ny(n);return new wb({invalid:n})}static fromDateTimes(e,t){const n=vg(e),a=vg(t),i=function(e,t){return e&&e.isValid?t&&t.isValid?t<e?wb.invalid("end before start",`The end of an interval must be after its start, but you had start=${e.toISO()} and end=${t.toISO()}`):null:wb.invalid("missing or invalid end"):wb.invalid("missing or invalid start")}(n,a);return null==i?new wb({start:n,end:a}):i}static after(e,t){const n=Eb.fromDurationLike(t),a=vg(e);return wb.fromDateTimes(a,a.plus(n))}static before(e,t){const n=Eb.fromDurationLike(t),a=vg(e);return wb.fromDateTimes(a.minus(n),a)}static fromISO(e,t){const[n,a]=(e||"").split("/",2);if(n&&a){let e,i,r,o;try{e=fg.fromISO(n,t),i=e.isValid}catch(a){i=!1}try{r=fg.fromISO(a,t),o=r.isValid}catch(a){o=!1}if(i&&o)return wb.fromDateTimes(e,r);if(i){const n=Eb.fromISO(a,t);if(n.isValid)return wb.after(e,n)}else if(o){const e=Eb.fromISO(n,t);if(e.isValid)return wb.before(r,e)}}return wb.invalid("unparsable",`the input "${e}" can't be parsed as ISO 8601`)}static isInterval(e){return e&&e.isLuxonInterval||!1}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get lastDateTime(){return this.isValid&&this.e?this.e.minus(1):null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}length(e="milliseconds"){return this.isValid?this.toDuration(e).get(e):NaN}count(e="milliseconds",t){if(!this.isValid)return NaN;const n=this.start.startOf(e,t);let a;return a=null!=t&&t.useLocaleWeeks?this.end.reconfigure({locale:n.locale}):this.end,a=a.startOf(e,t),Math.floor(a.diff(n,e).get(e))+(a.valueOf()!==this.end.valueOf())}hasSame(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e<=e}contains(e){return!!this.isValid&&(this.s<=e&&this.e>e)}set({start:e,end:t}={}){return this.isValid?wb.fromDateTimes(e||this.s,t||this.e):this}splitAt(...e){if(!this.isValid)return[];const t=e.map(vg).filter(e=>this.contains(e)).sort((e,t)=>e.toMillis()-t.toMillis()),n=[];let{s:a}=this,i=0;for(;a<this.e;){const e=t[i]||this.e,r=+e>+this.e?this.e:e;n.push(wb.fromDateTimes(a,r)),a=r,i+=1}return n}splitBy(e){const t=Eb.fromDurationLike(e);if(!this.isValid||!t.isValid||0===t.as("milliseconds"))return[];let n,{s:a}=this,i=1;const r=[];for(;a<this.e;){const e=this.start.plus(t.mapUnits(e=>e*i));n=+e>+this.e?this.e:e,r.push(wb.fromDateTimes(a,n)),a=n,i+=1}return r}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e===+e.s}abutsEnd(e){return!!this.isValid&&+e.e===+this.s}engulfs(e){return!!this.isValid&&(this.s<=e.s&&this.e>=e.e)}equals(e){return!(!this.isValid||!e.isValid)&&(this.s.equals(e.s)&&this.e.equals(e.e))}intersection(e){if(!this.isValid)return this;const t=this.s>e.s?this.s:e.s,n=this.e<e.e?this.e:e.e;return t>=n?null:wb.fromDateTimes(t,n)}union(e){if(!this.isValid)return this;const t=this.s<e.s?this.s:e.s,n=this.e>e.e?this.e:e.e;return wb.fromDateTimes(t,n)}static merge(e){const[t,n]=e.sort((e,t)=>e.s-t.s).reduce(([e,t],n)=>t?t.overlaps(n)||t.abutsStart(n)?[e,t.union(n)]:[e.concat([t]),n]:[e,n],[[],null]);return n&&t.push(n),t}static xor(e){let t=null,n=0;const a=[],i=e.map(e=>[{time:e.s,type:"s"},{time:e.e,type:"e"}]),r=Array.prototype.concat(...i).sort((e,t)=>e.time-t.time);for(const e of r)n+="s"===e.type?1:-1,1===n?t=e.time:(t&&+t!==+e.time&&a.push(wb.fromDateTimes(t,e.time)),t=null);return wb.merge(a)}difference(...e){return wb.xor([this].concat(e)).map(e=>this.intersection(e)).filter(e=>e&&!e.isEmpty())}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:Kb}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`Interval { start: ${this.s.toISO()}, end: ${this.e.toISO()} }`:`Interval { Invalid, reason: ${this.invalidReason} }`}toLocaleString(e=uy,t={}){return this.isValid?Ev.create(this.s.loc.clone(t),e).formatInterval(this):Kb}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:Kb}toISODate(){return this.isValid?`${this.s.toISODate()}/${this.e.toISODate()}`:Kb}toISOTime(e){return this.isValid?`${this.s.toISOTime(e)}/${this.e.toISOTime(e)}`:Kb}toFormat(e,{separator:t=" – "}={}){return this.isValid?`${this.s.toFormat(e)}${t}${this.e.toFormat(e)}`:Kb}toDuration(e,t){return this.isValid?this.e.diff(this.s,e,t):Eb.invalid(this.invalidReason)}mapEndpoints(e){return wb.fromDateTimes(e(this.s),e(this.e))}}class Sb{static hasDST(e=gf.defaultZone){const t=fg.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return Ly.isValidZone(e)}static normalizeZone(e){return rf(e,gf.defaultZone)}static getStartOfWeek({locale:e=null,locObj:t=null}={}){return(t||ef.create(e)).getStartOfWeek()}static getMinimumDaysInFirstWeek({locale:e=null,locObj:t=null}={}){return(t||ef.create(e)).getMinDaysInFirstWeek()}static getWeekendWeekdays({locale:e=null,locObj:t=null}={}){return(t||ef.create(e)).getWeekendDays().slice()}static months(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:i="gregory"}={}){return(a||ef.create(t,n,i)).months(e)}static monthsFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null,outputCalendar:i="gregory"}={}){return(a||ef.create(t,n,i)).months(e,!0)}static weekdays(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||ef.create(t,n,null)).weekdays(e)}static weekdaysFormat(e="long",{locale:t=null,numberingSystem:n=null,locObj:a=null}={}){return(a||ef.create(t,n,null)).weekdays(e,!0)}static meridiems({locale:e=null}={}){return ef.create(e).meridiems()}static eras(e="short",{locale:t=null}={}){return ef.create(t,null,"gregory").eras(e)}static features(){return{relative:Ff(),localeWeek:Lf()}}}function Ib(e,t){const n=e=>e.toUTC(0,{keepLocalTime:!0}).startOf("day").valueOf(),a=n(t)-n(e);return Math.floor(Eb.fromMillis(a).as("days"))}function jb(e,t,n,a){let[i,r,o,s]=function(e,t,n){const a=[["years",(e,t)=>t.year-e.year],["quarters",(e,t)=>t.quarter-e.quarter+4*(t.year-e.year)],["months",(e,t)=>t.month-e.month+12*(t.year-e.year)],["weeks",(e,t)=>{const n=Ib(e,t);return(n-n%7)/7}],["days",Ib]],i={},r=e;let o,s;for(const[l,c]of a)n.indexOf(l)>=0&&(o=l,i[l]=c(e,t),s=r.plus(i),s>t?(i[l]--,(e=r.plus(i))>t&&(s=e,i[l]--,e=r.plus(i))):e=s);return[e,i,s,o]}(e,t,n);const l=t-i,c=n.filter(e=>["hours","minutes","seconds","milliseconds"].indexOf(e)>=0);0===c.length&&(o<t&&(o=i.plus({[s]:1})),o!==i&&(r[s]=(r[s]||0)+l/(o-i)));const d=Eb.fromObject(r,a);return c.length>0?Eb.fromMillis(l,a).shiftTo(...c).plus(d):d}function Rb(e,t=e=>e){return{regex:e,deser:([e])=>t(function(e){let t=parseInt(e,10);if(isNaN(t)){t="";for(let n=0;n<e.length;n++){const a=e.charCodeAt(n);if(-1!==e[n].search(of.hanidec))t+=lf.indexOf(e[n]);else for(const e in sf){const[n,i]=sf[e];a>=n&&a<=i&&(t+=a-n)}}return parseInt(t,10)}return t}(e))}}const Tb=`[ ${String.fromCharCode(160)}]`,Ob=new RegExp(Tb,"g");function Ab(e){return e.replace(/\./g,"\\.?").replace(Ob,Tb)}function Cb(e){return e.replace(/\./g,"").replace(Ob," ").toLowerCase()}function Db(e,t){return null===e?null:{regex:RegExp(e.map(Ab).join("|")),deser:([n])=>e.findIndex(e=>Cb(n)===Cb(e))+t}}function Pb(e,t){return{regex:e,deser:([,e,t])=>av(e,t),groups:t}}function Nb(e){return{regex:e,deser:([e])=>e}}const Mb={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh"},hour24:{numeric:"H","2-digit":"HH"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};let Fb=null;function Lb(e,t){return Array.prototype.concat(...e.map(e=>function(e,t){if(e.literal)return e;const n=qb(Ev.macroTokenToFormatOpts(e.val),t);return null==n||n.includes(void 0)?e:n}(e,t)))}class Jb{constructor(e,t){if(this.locale=e,this.format=t,this.tokens=Lb(Ev.parseFormat(t),e),this.units=this.tokens.map(t=>function(e,t){const n=df(t),a=df(t,"{2}"),i=df(t,"{3}"),r=df(t,"{4}"),o=df(t,"{6}"),s=df(t,"{1,2}"),l=df(t,"{1,3}"),c=df(t,"{1,6}"),d=df(t,"{1,9}"),u=df(t,"{2,4}"),p=df(t,"{4,6}"),m=e=>{return{regex:RegExp((t=e.val,t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"))),deser:([e])=>e,literal:!0};var t},h=(h=>{if(e.literal)return m(h);switch(h.val){case"G":return Db(t.eras("short"),0);case"GG":return Db(t.eras("long"),0);case"y":return Rb(c);case"yy":case"kk":return Rb(u,tv);case"yyyy":case"kkkk":return Rb(r);case"yyyyy":return Rb(p);case"yyyyyy":return Rb(o);case"M":case"L":case"d":case"H":case"h":case"m":case"q":case"s":case"W":return Rb(s);case"MM":case"LL":case"dd":case"HH":case"hh":case"mm":case"qq":case"ss":case"WW":return Rb(a);case"MMM":return Db(t.months("short",!0),1);case"MMMM":return Db(t.months("long",!0),1);case"LLL":return Db(t.months("short",!1),1);case"LLLL":return Db(t.months("long",!1),1);case"o":case"S":return Rb(l);case"ooo":case"SSS":return Rb(i);case"u":return Nb(d);case"uu":return Nb(s);case"uuu":case"E":case"c":return Rb(n);case"a":return Db(t.meridiems(),0);case"EEE":return Db(t.weekdays("short",!1),1);case"EEEE":return Db(t.weekdays("long",!1),1);case"ccc":return Db(t.weekdays("short",!0),1);case"cccc":return Db(t.weekdays("long",!0),1);case"Z":case"ZZ":return Pb(new RegExp(`([+-]${s.source})(?::(${a.source}))?`),2);case"ZZZ":return Pb(new RegExp(`([+-]${s.source})(${a.source})?`),2);case"z":return Nb(/[a-z_+-/]{1,256}?/i);case" ":return Nb(/[^\S\n\r]/);default:return m(h)}})(e)||{invalidReason:"missing Intl.DateTimeFormat.formatToParts support"};return h.token=e,h}(t,e)),this.disqualifyingUnit=this.units.find(e=>e.invalidReason),!this.disqualifyingUnit){const[e,t]=[`^${(n=this.units).map(e=>e.regex).reduce((e,t)=>`${e}(${t.source})`,"")}$`,n];this.regex=RegExp(e,"i"),this.handlers=t}var n}explainFromTokens(e){if(this.isValid){const[t,n]=function(e,t,n){const a=e.match(t);if(a){const e={};let t=1;for(const i in n)if(Uf(n,i)){const r=n[i],o=r.groups?r.groups+1:1;!r.literal&&r.token&&(e[r.token.val[0]]=r.deser(a.slice(t,t+o))),t+=o}return[a,e]}return[a,{}]}(e,this.regex,this.handlers),[a,i,r]=n?function(e){let t,n=null;return Pf(e.z)||(n=Ly.create(e.z)),Pf(e.Z)||(n||(n=new nf(e.Z)),t=e.Z),Pf(e.q)||(e.M=3*(e.q-1)+1),Pf(e.h)||(e.h<12&&1===e.a?e.h+=12:12===e.h&&0===e.a&&(e.h=0)),0===e.G&&e.y&&(e.y=-e.y),Pf(e.u)||(e.S=Yf(e.u)),[Object.keys(e).reduce((t,n)=>{const a=(e=>{switch(e){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null}})(n);return a&&(t[a]=e[n]),t},{}),n,t]}(n):[null,null,void 0];if(Uf(n,"a")&&Uf(n,"H"))throw new iy("Can't include meridiem when specifying 24-hour format");return{input:e,tokens:this.tokens,regex:this.regex,rawMatches:t,matches:n,result:a,zone:i,specificOffset:r}}return{input:e,tokens:this.tokens,invalidReason:this.invalidReason}}get isValid(){return!this.disqualifyingUnit}get invalidReason(){return this.disqualifyingUnit?this.disqualifyingUnit.invalidReason:null}}function Ub(e,t,n){return new Jb(e,n).explainFromTokens(t)}function qb(e,t){if(!e)return null;const n=Ev.create(t,e).dtFormatter((Fb||(Fb=fg.fromMillis(1555555555555)),Fb)),a=n.formatToParts(),i=n.resolvedOptions();return a.map(t=>function(e,t,n){const{type:a,value:i}=e;if("literal"===a){const e=/^\s+$/.test(i);return{literal:!e,val:e?" ":i}}const r=t[a];let o=a;"hour"===a&&(o=null!=t.hour12?t.hour12?"hour12":"hour24":null!=t.hourCycle?"h11"===t.hourCycle||"h12"===t.hourCycle?"hour12":"hour24":n.hour12?"hour12":"hour24");let s=Mb[o];if("object"==typeof s&&(s=s[r]),s)return{literal:!1,val:s}}(t,e,i))}const Vb="Invalid DateTime",Gb=864e13;function Bb(e){return new _f("unsupported zone",`the zone "${e.name}" is not supported`)}function zb(e){return null===e.weekData&&(e.weekData=jf(e.c)),e.weekData}function Yb(e){return null===e.localWeekData&&(e.localWeekData=jf(e.c,e.loc.getMinDaysInFirstWeek(),e.loc.getStartOfWeek())),e.localWeekData}function $b(e,t){const n={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new fg({...n,...t,old:n})}function Wb(e,t,n){let a=e-60*t*1e3;const i=n.offset(a);if(t===i)return[a,t];a-=60*(i-t)*1e3;const r=n.offset(a);return i===r?[a,i]:[e-60*Math.min(i,r)*1e3,Math.max(i,r)]}function Hb(e,t){const n=new Date(e+=60*t*1e3);return{year:n.getUTCFullYear(),month:n.getUTCMonth()+1,day:n.getUTCDate(),hour:n.getUTCHours(),minute:n.getUTCMinutes(),second:n.getUTCSeconds(),millisecond:n.getUTCMilliseconds()}}function Qb(e,t,n){return Wb(Zf(e),t,n)}function Zb(e,t){const n=e.o,a=e.c.year+Math.trunc(t.years),i=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),r={...e.c,year:a,month:i,day:Math.min(e.c.day,Qf(a,i))+Math.trunc(t.days)+7*Math.trunc(t.weeks)},o=Eb.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as("milliseconds"),s=Zf(r);let[l,c]=Wb(s,n,e.zone);return 0!==o&&(l+=o,c=e.zone.offset(l)),{ts:l,o:c}}function Xb(e,t,n,a,i,r){const{setZone:o,zone:s}=n;if(e&&0!==Object.keys(e).length||t){const a=t||s,i=fg.fromObject(e,{...n,zone:a,specificOffset:r});return o?i:i.setZone(s)}return fg.invalid(new _f("unparsable",`the input "${i}" can't be parsed as ${a}`))}function eg(e,t,n=!0){return e.isValid?Ev.create(ef.create("en-US"),{allowZ:n,forceSimple:!0}).formatDateTimeFromString(e,t):null}function tg(e,t,n){const a=e.c.year>9999||e.c.year<0;let i="";if(a&&e.c.year>=0&&(i+="+"),i+=Gf(e.c.year,a?6:4),"year"===n)return i;if(t){if(i+="-",i+=Gf(e.c.month),"month"===n)return i;i+="-"}else if(i+=Gf(e.c.month),"month"===n)return i;return i+=Gf(e.c.day),i}function ng(e,t,n,a,i,r,o){let s=!n||0!==e.c.millisecond||0!==e.c.second,l="";switch(o){case"day":case"month":case"year":break;default:if(l+=Gf(e.c.hour),"hour"===o)break;if(t){if(l+=":",l+=Gf(e.c.minute),"minute"===o)break;s&&(l+=":",l+=Gf(e.c.second))}else{if(l+=Gf(e.c.minute),"minute"===o)break;s&&(l+=Gf(e.c.second))}if("second"===o)break;!s||a&&0===e.c.millisecond||(l+=".",l+=Gf(e.c.millisecond,3))}return i&&(e.isOffsetFixed&&0===e.offset&&!r?l+="Z":e.o<0?(l+="-",l+=Gf(Math.trunc(-e.o/60)),l+=":",l+=Gf(Math.trunc(-e.o%60))):(l+="+",l+=Gf(Math.trunc(e.o/60)),l+=":",l+=Gf(Math.trunc(e.o%60)))),r&&(l+="["+e.zone.ianaName+"]"),l}const ag={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},ig={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},rg={ordinal:1,hour:0,minute:0,second:0,millisecond:0},og=["year","month","day","hour","minute","second","millisecond"],sg=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],lg=["year","ordinal","hour","minute","second","millisecond"];function cg(e){const t={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[e.toLowerCase()];if(!t)throw new ry(e);return t}function dg(e){switch(e.toLowerCase()){case"localweekday":case"localweekdays":return"localWeekday";case"localweeknumber":case"localweeknumbers":return"localWeekNumber";case"localweekyear":case"localweekyears":return"localWeekYear";default:return cg(e)}}function ug(e,t){const n=rf(t.zone,gf.defaultZone);if(!n.isValid)return fg.invalid(Bb(n));const a=ef.fromObject(t);let i,r;if(Pf(e.year))i=gf.now();else{for(const t of og)Pf(e[t])&&(e[t]=ag[t]);const t=Cf(e)||Df(e);if(t)return fg.invalid(t);const a=function(e){if(void 0===hg&&(hg=gf.now()),"iana"!==e.type)return e.offset(hg);const t=e.name;let n=yg.get(t);return void 0===n&&(n=e.offset(hg),yg.set(t,n)),n}(n);[i,r]=Qb(e,a,n)}return new fg({ts:i,zone:n,loc:a,o:r})}function pg(e,t,n){const a=!!Pf(n.round)||n.round,i=Pf(n.rounding)?"trunc":n.rounding,r=(e,r)=>{e=$f(e,a||n.calendary?0:2,n.calendary?"round":i);return t.loc.clone(n).relFormatter(n).format(e,r)},o=a=>n.calendary?t.hasSame(e,a)?0:t.startOf(a).diff(e.startOf(a),a).get(a):t.diff(e,a).get(a);if(n.unit)return r(o(n.unit),n.unit);for(const e of n.units){const t=o(e);if(Math.abs(t)>=1)return r(t,e)}return r(e>t?-0:0,n.units[n.units.length-1])}function mg(e){let t,n={};return e.length>0&&"object"==typeof e[e.length-1]?(n=e[e.length-1],t=Array.from(e).slice(0,e.length-1)):t=Array.from(e),[n,t]}let hg;const yg=new Map;class fg{constructor(e){const t=e.zone||gf.defaultZone;let n=e.invalid||(Number.isNaN(e.ts)?new _f("invalid input"):null)||(t.isValid?null:Bb(t));this.ts=Pf(e.ts)?gf.now():e.ts;let a=null,i=null;if(!n){if(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t))[a,i]=[e.old.c,e.old.o];else{const r=Nf(e.o)&&!e.old?e.o:t.offset(this.ts);a=Hb(this.ts,r),n=Number.isNaN(a.year)?new _f("invalid input"):null,a=n?null:a,i=n?null:r}}this._zone=t,this.loc=e.loc||ef.create(),this.invalid=n,this.weekData=null,this.localWeekData=null,this.c=a,this.o=i,this.isLuxonDateTime=!0}static now(){return new fg({})}static local(){const[e,t]=mg(arguments),[n,a,i,r,o,s,l]=t;return ug({year:n,month:a,day:i,hour:r,minute:o,second:s,millisecond:l},e)}static utc(){const[e,t]=mg(arguments),[n,a,i,r,o,s,l]=t;return e.zone=nf.utcInstance,ug({year:n,month:a,day:i,hour:r,minute:o,second:s,millisecond:l},e)}static fromJSDate(e,t={}){const n=(a=e,"[object Date]"===Object.prototype.toString.call(a)?e.valueOf():NaN);var a;if(Number.isNaN(n))return fg.invalid("invalid input");const i=rf(t.zone,gf.defaultZone);return i.isValid?new fg({ts:n,zone:i,loc:ef.fromObject(t)}):fg.invalid(Bb(i))}static fromMillis(e,t={}){if(Nf(e))return e<-Gb||e>Gb?fg.invalid("Timestamp out of range"):new fg({ts:e,zone:rf(t.zone,gf.defaultZone),loc:ef.fromObject(t)});throw new oy(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(Nf(e))return new fg({ts:1e3*e,zone:rf(t.zone,gf.defaultZone),loc:ef.fromObject(t)});throw new oy("fromSeconds requires a numerical input")}static fromObject(e,t={}){e=e||{};const n=rf(t.zone,gf.defaultZone);if(!n.isValid)return fg.invalid(Bb(n));const a=ef.fromObject(t),i=rv(e,dg),{minDaysInFirstWeek:r,startOfWeek:o}=Af(i,a),s=gf.now(),l=Pf(t.specificOffset)?n.offset(s):t.specificOffset,c=!Pf(i.ordinal),d=!Pf(i.year),u=!Pf(i.month)||!Pf(i.day),p=d||u,m=i.weekYear||i.weekNumber;if((p||c)&&m)throw new iy("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(u&&c)throw new iy("Can't mix ordinal dates with month/day");const h=m||i.weekday&&!p;let y,f,v=Hb(s,l);h?(y=sg,f=ig,v=jf(v,r,o)):c?(y=lg,f=rg,v=Tf(v)):(y=og,f=ag);let b=!1;for(const e of y){Pf(i[e])?i[e]=b?f[e]:v[e]:b=!0}const g=h?function(e,t=4,n=1){const a=Mf(e.weekYear),i=Vf(e.weekNumber,1,ev(e.weekYear,t,n)),r=Vf(e.weekday,1,7);return a?i?!r&&Ef("weekday",e.weekday):Ef("week",e.weekNumber):Ef("weekYear",e.weekYear)}(i,r,o):c?function(e){const t=Mf(e.year),n=Vf(e.ordinal,1,Hf(e.year));return t?!n&&Ef("ordinal",e.ordinal):Ef("year",e.year)}(i):Cf(i),_=g||Df(i);if(_)return fg.invalid(_);const x=h?Rf(i,r,o):c?Of(i):i,[k,E]=Qb(x,l,n),K=new fg({ts:k,zone:n,o:E,loc:a});return i.weekday&&p&&e.weekday!==K.weekday?fg.invalid("mismatched weekday",`you can't specify both a weekday of ${i.weekday} and a date of ${K.toISO()}`):K.isValid?K:fg.invalid(K.invalid)}static fromISO(e,t={}){const[n,a]=function(e){return Iv(e,[Xv,ab],[eb,ib],[tb,rb],[nb,ob])}(e);return Xb(n,a,t,"ISO 8601",e)}static fromRFC2822(e,t={}){const[n,a]=function(e){return Iv(function(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim()}(e),[zv,Yv])}(e);return Xb(n,a,t,"RFC 2822",e)}static fromHTTP(e,t={}){const[n,a]=function(e){return Iv(e,[$v,Qv],[Wv,Qv],[Hv,Zv])}(e);return Xb(n,a,t,"HTTP",t)}static fromFormat(e,t,n={}){if(Pf(e)||Pf(t))throw new oy("fromFormat requires an input string and a format");const{locale:a=null,numberingSystem:i=null}=n,r=ef.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0}),[o,s,l,c]=function(e,t,n){const{result:a,zone:i,specificOffset:r,invalidReason:o}=Ub(e,t,n);return[a,i,r,o]}(r,e,t);return c?fg.invalid(c):Xb(o,s,n,`format ${t}`,e,l)}static fromString(e,t,n={}){return fg.fromFormat(e,t,n)}static fromSQL(e,t={}){const[n,a]=function(e){return Iv(e,[lb,ab],[cb,db])}(e);return Xb(n,a,t,"SQL",e)}static invalid(e,t=null){if(!e)throw new oy("need to specify a reason the DateTime is invalid");const n=e instanceof _f?e:new _f(e,t);if(gf.throwOnInvalid)throw new ty(n);return new fg({invalid:n})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}static parseFormatForOpts(e,t={}){const n=qb(e,ef.fromObject(t));return n?n.map(e=>e?e.val:null).join(""):null}static expandFormat(e,t={}){return Lb(Ev.parseFormat(e),ef.fromObject(t)).map(e=>e.val).join("")}static resetCache(){hg=void 0,yg.clear()}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?zb(this).weekYear:NaN}get weekNumber(){return this.isValid?zb(this).weekNumber:NaN}get weekday(){return this.isValid?zb(this).weekday:NaN}get isWeekend(){return this.isValid&&this.loc.getWeekendDays().includes(this.weekday)}get localWeekday(){return this.isValid?Yb(this).weekday:NaN}get localWeekNumber(){return this.isValid?Yb(this).weekNumber:NaN}get localWeekYear(){return this.isValid?Yb(this).weekYear:NaN}get ordinal(){return this.isValid?Tf(this.c).ordinal:NaN}get monthShort(){return this.isValid?Sb.months("short",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?Sb.months("long",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?Sb.weekdays("short",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Sb.weekdays("long",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:"short",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:"long",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset)}getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed)return[this];const e=864e5,t=6e4,n=Zf(this.c),a=this.zone.offset(n-e),i=this.zone.offset(n+e),r=this.zone.offset(n-a*t),o=this.zone.offset(n-i*t);if(r===o)return[this];const s=n-r*t,l=n-o*t,c=Hb(s,r),d=Hb(l,o);return c.hour===d.hour&&c.minute===d.minute&&c.second===d.second&&c.millisecond===d.millisecond?[$b(this,{ts:s}),$b(this,{ts:l})]:[this]}get isInLeapYear(){return Wf(this.year)}get daysInMonth(){return Qf(this.year,this.month)}get daysInYear(){return this.isValid?Hf(this.year):NaN}get weeksInWeekYear(){return this.isValid?ev(this.weekYear):NaN}get weeksInLocalWeekYear(){return this.isValid?ev(this.localWeekYear,this.loc.getMinDaysInFirstWeek(),this.loc.getStartOfWeek()):NaN}resolvedLocaleOptions(e={}){const{locale:t,numberingSystem:n,calendar:a}=Ev.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:n,outputCalendar:a}}toUTC(e=0,t={}){return this.setZone(nf.instance(e),t)}toLocal(){return this.setZone(gf.defaultZone)}setZone(e,{keepLocalTime:t=!1,keepCalendarTime:n=!1}={}){if((e=rf(e,gf.defaultZone)).equals(this.zone))return this;if(e.isValid){let a=this.ts;if(t||n){const t=e.offset(this.ts),n=this.toObject();[a]=Qb(n,t,e)}return $b(this,{ts:a,zone:e})}return fg.invalid(Bb(e))}reconfigure({locale:e,numberingSystem:t,outputCalendar:n}={}){return $b(this,{loc:this.loc.clone({locale:e,numberingSystem:t,outputCalendar:n})})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;const t=rv(e,dg),{minDaysInFirstWeek:n,startOfWeek:a}=Af(t,this.loc),i=!Pf(t.weekYear)||!Pf(t.weekNumber)||!Pf(t.weekday),r=!Pf(t.ordinal),o=!Pf(t.year),s=!Pf(t.month)||!Pf(t.day),l=o||s,c=t.weekYear||t.weekNumber;if((l||r)&&c)throw new iy("Can't mix weekYear/weekNumber units with year/month/day or ordinals");if(s&&r)throw new iy("Can't mix ordinal dates with month/day");let d;i?d=Rf({...jf(this.c,n,a),...t},n,a):Pf(t.ordinal)?(d={...this.toObject(),...t},Pf(t.day)&&(d.day=Math.min(Qf(d.year,d.month),d.day))):d=Of({...Tf(this.c),...t});const[u,p]=Qb(d,this.o,this.zone);return $b(this,{ts:u,o:p})}plus(e){if(!this.isValid)return this;return $b(this,Zb(this,Eb.fromDurationLike(e)))}minus(e){if(!this.isValid)return this;return $b(this,Zb(this,Eb.fromDurationLike(e).negate()))}startOf(e,{useLocaleWeeks:t=!1}={}){if(!this.isValid)return this;const n={},a=Eb.normalizeUnit(e);switch(a){case"years":n.month=1;case"quarters":case"months":n.day=1;case"weeks":case"days":n.hour=0;case"hours":n.minute=0;case"minutes":n.second=0;case"seconds":n.millisecond=0}if("weeks"===a)if(t){const e=this.loc.getStartOfWeek(),{weekday:t}=this;t<e&&(n.weekNumber=this.weekNumber-1),n.weekday=e}else n.weekday=1;if("quarters"===a){const e=Math.ceil(this.month/3);n.month=3*(e-1)+1}return this.set(n)}endOf(e,t){return this.isValid?this.plus({[e]:1}).startOf(e,t).minus(1):this}toFormat(e,t={}){return this.isValid?Ev.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):Vb}toLocaleString(e=uy,t={}){return this.isValid?Ev.create(this.loc.clone(t),e).formatDateTime(this):Vb}toLocaleParts(e={}){return this.isValid?Ev.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO({format:e="extended",suppressSeconds:t=!1,suppressMilliseconds:n=!1,includeOffset:a=!0,extendedZone:i=!1,precision:r="milliseconds"}={}){if(!this.isValid)return null;const o="extended"===e;let s=tg(this,o,r=cg(r));return og.indexOf(r)>=3&&(s+="T"),s+=ng(this,o,t,n,a,i,r),s}toISODate({format:e="extended",precision:t="day"}={}){return this.isValid?tg(this,"extended"===e,cg(t)):null}toISOWeekDate(){return eg(this,"kkkk-'W'WW-c")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:n=!0,includePrefix:a=!1,extendedZone:i=!1,format:r="extended",precision:o="milliseconds"}={}){if(!this.isValid)return null;return o=cg(o),(a&&og.indexOf(o)>=3?"T":"")+ng(this,"extended"===r,t,e,n,i,o)}toRFC2822(){return eg(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",!1)}toHTTP(){return eg(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'")}toSQLDate(){return this.isValid?tg(this,!0):null}toSQLTime({includeOffset:e=!0,includeZone:t=!1,includeOffsetSpace:n=!0}={}){let a="HH:mm:ss.SSS";return(t||e)&&(n&&(a+=" "),t?a+="z":e&&(a+="ZZ")),eg(this,a,!0)}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():Vb}[Symbol.for("nodejs.util.inspect.custom")](){return this.isValid?`DateTime { ts: ${this.toISO()}, zone: ${this.zone.name}, locale: ${this.locale} }`:`DateTime { Invalid, reason: ${this.invalidReason} }`}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toUnixInteger(){return this.isValid?Math.floor(this.ts/1e3):NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t={...this.c};return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t="milliseconds",n={}){if(!this.isValid||!e.isValid)return Eb.invalid("created by diffing an invalid DateTime");const a={locale:this.locale,numberingSystem:this.numberingSystem,...n},i=(s=t,Array.isArray(s)?s:[s]).map(Eb.normalizeUnit),r=e.valueOf()>this.valueOf(),o=jb(r?this:e,r?e:this,i,a);var s;return r?o.negate():o}diffNow(e="milliseconds",t={}){return this.diff(fg.now(),e,t)}until(e){return this.isValid?wb.fromDateTimes(this,e):this}hasSame(e,t,n){if(!this.isValid)return!1;const a=e.valueOf(),i=this.setZone(e.zone,{keepLocalTime:!0});return i.startOf(t,n)<=a&&a<=i.endOf(t,n)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;const t=e.base||fg.fromObject({},{zone:this.zone}),n=e.padding?this<t?-e.padding:e.padding:0;let a=["years","months","days","hours","minutes","seconds"],i=e.unit;return Array.isArray(e.unit)&&(a=e.unit,i=void 0),pg(t,this.plus(n),{...e,numeric:"always",units:a,unit:i})}toRelativeCalendar(e={}){return this.isValid?pg(e.base||fg.fromObject({},{zone:this.zone}),this,{...e,numeric:"auto",units:["years","months","days"],calendary:!0}):null}static min(...e){if(!e.every(fg.isDateTime))throw new oy("min requires all arguments be DateTimes");return Jf(e,e=>e.valueOf(),Math.min)}static max(...e){if(!e.every(fg.isDateTime))throw new oy("max requires all arguments be DateTimes");return Jf(e,e=>e.valueOf(),Math.max)}static fromFormatExplain(e,t,n={}){const{locale:a=null,numberingSystem:i=null}=n;return Ub(ef.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,n={}){return fg.fromFormatExplain(e,t,n)}static buildFormatParser(e,t={}){const{locale:n=null,numberingSystem:a=null}=t,i=ef.fromOpts({locale:n,numberingSystem:a,defaultToEN:!0});return new Jb(i,e)}static fromFormatParser(e,t,n={}){if(Pf(e)||Pf(t))throw new oy("fromFormatParser requires an input string and a format parser");const{locale:a=null,numberingSystem:i=null}=n,r=ef.fromOpts({locale:a,numberingSystem:i,defaultToEN:!0});if(!r.equals(t.locale))throw new oy(`fromFormatParser called with a locale of ${r}, but the format parser was created for ${t.locale}`);const{result:o,zone:s,specificOffset:l,invalidReason:c}=t.explainFromTokens(e);return c?fg.invalid(c):Xb(o,s,n,`format ${t.format}`,e,l)}static get DATE_SHORT(){return uy}static get DATE_MED(){return py}static get DATE_MED_WITH_WEEKDAY(){return my}static get DATE_FULL(){return hy}static get DATE_HUGE(){return yy}static get TIME_SIMPLE(){return fy}static get TIME_WITH_SECONDS(){return vy}static get TIME_WITH_SHORT_OFFSET(){return by}static get TIME_WITH_LONG_OFFSET(){return gy}static get TIME_24_SIMPLE(){return _y}static get TIME_24_WITH_SECONDS(){return xy}static get TIME_24_WITH_SHORT_OFFSET(){return ky}static get TIME_24_WITH_LONG_OFFSET(){return Ey}static get DATETIME_SHORT(){return Ky}static get DATETIME_SHORT_WITH_SECONDS(){return wy}static get DATETIME_MED(){return Sy}static get DATETIME_MED_WITH_SECONDS(){return Iy}static get DATETIME_MED_WITH_WEEKDAY(){return jy}static get DATETIME_FULL(){return Ry}static get DATETIME_FULL_WITH_SECONDS(){return Ty}static get DATETIME_HUGE(){return Oy}static get DATETIME_HUGE_WITH_SECONDS(){return Ay}}function vg(e){if(fg.isDateTime(e))return e;if(e&&e.valueOf&&Nf(e.valueOf()))return fg.fromJSDate(e);if(e&&"object"==typeof e)return fg.fromObject(e);throw new oy(`Unknown datetime argument: ${e}, of type ${typeof e}`)}Xh.DateTime=fg,Xh.Duration=Eb,Xh.FixedOffsetZone=nf,Xh.IANAZone=Ly,Xh.Info=Sb,Xh.Interval=wb,Xh.InvalidZone=af,Xh.Settings=gf,Xh.SystemZone=Py,Xh.VERSION="3.7.1",Xh.Zone=Cy;var bg=Xh;function gg(e,t){var n={zone:t};if(e?e instanceof gg?this._date=e._date:e instanceof Date?this._date=bg.DateTime.fromJSDate(e,n):"number"==typeof e?this._date=bg.DateTime.fromMillis(e,n):"string"==typeof e&&(this._date=bg.DateTime.fromISO(e,n),this._date.isValid||(this._date=bg.DateTime.fromRFC2822(e,n)),this._date.isValid||(this._date=bg.DateTime.fromSQL(e,n)),this._date.isValid||(this._date=bg.DateTime.fromFormat(e,"EEE, d MMM yyyy HH:mm:ss",n))):this._date=bg.DateTime.local(),!this._date||!this._date.isValid)throw new Error("CronDate: unhandled timestamp: "+JSON.stringify(e));t&&t!==this._date.zoneName&&(this._date=this._date.setZone(t))}function _g(e){return{start:e,count:1}}function xg(e,t){e.end=t,e.step=t-e.start,e.count=2}function kg(e,t,n){t&&(2===t.count?(e.push(_g(t.start)),e.push(_g(t.end))):e.push(t)),n&&e.push(n)}gg.prototype.addYear=function(){this._date=this._date.plus({years:1})},gg.prototype.addMonth=function(){this._date=this._date.plus({months:1}).startOf("month")},gg.prototype.addDay=function(){this._date=this._date.plus({days:1}).startOf("day")},gg.prototype.addHour=function(){var e=this._date;this._date=this._date.plus({hours:1}).startOf("hour"),this._date<=e&&(this._date=this._date.plus({hours:1}))},gg.prototype.addMinute=function(){var e=this._date;this._date=this._date.plus({minutes:1}).startOf("minute"),this._date<e&&(this._date=this._date.plus({hours:1}))},gg.prototype.addSecond=function(){var e=this._date;this._date=this._date.plus({seconds:1}).startOf("second"),this._date<e&&(this._date=this._date.plus({hours:1}))},gg.prototype.subtractYear=function(){this._date=this._date.minus({years:1})},gg.prototype.subtractMonth=function(){this._date=this._date.minus({months:1}).endOf("month").startOf("second")},gg.prototype.subtractDay=function(){this._date=this._date.minus({days:1}).endOf("day").startOf("second")},gg.prototype.subtractHour=function(){var e=this._date;this._date=this._date.minus({hours:1}).endOf("hour").startOf("second"),this._date>=e&&(this._date=this._date.minus({hours:1}))},gg.prototype.subtractMinute=function(){var e=this._date;this._date=this._date.minus({minutes:1}).endOf("minute").startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},gg.prototype.subtractSecond=function(){var e=this._date;this._date=this._date.minus({seconds:1}).startOf("second"),this._date>e&&(this._date=this._date.minus({hours:1}))},gg.prototype.getDate=function(){return this._date.day},gg.prototype.getFullYear=function(){return this._date.year},gg.prototype.getDay=function(){var e=this._date.weekday;return 7==e?0:e},gg.prototype.getMonth=function(){return this._date.month-1},gg.prototype.getHours=function(){return this._date.hour},gg.prototype.getMinutes=function(){return this._date.minute},gg.prototype.getSeconds=function(){return this._date.second},gg.prototype.getMilliseconds=function(){return this._date.millisecond},gg.prototype.getTime=function(){return this._date.valueOf()},gg.prototype.getUTCDate=function(){return this._getUTC().day},gg.prototype.getUTCFullYear=function(){return this._getUTC().year},gg.prototype.getUTCDay=function(){var e=this._getUTC().weekday;return 7==e?0:e},gg.prototype.getUTCMonth=function(){return this._getUTC().month-1},gg.prototype.getUTCHours=function(){return this._getUTC().hour},gg.prototype.getUTCMinutes=function(){return this._getUTC().minute},gg.prototype.getUTCSeconds=function(){return this._getUTC().second},gg.prototype.toISOString=function(){return this._date.toUTC().toISO()},gg.prototype.toJSON=function(){return this._date.toJSON()},gg.prototype.setDate=function(e){this._date=this._date.set({day:e})},gg.prototype.setFullYear=function(e){this._date=this._date.set({year:e})},gg.prototype.setDay=function(e){this._date=this._date.set({weekday:e})},gg.prototype.setMonth=function(e){this._date=this._date.set({month:e+1})},gg.prototype.setHours=function(e){this._date=this._date.set({hour:e})},gg.prototype.setMinutes=function(e){this._date=this._date.set({minute:e})},gg.prototype.setSeconds=function(e){this._date=this._date.set({second:e})},gg.prototype.setMilliseconds=function(e){this._date=this._date.set({millisecond:e})},gg.prototype._getUTC=function(){return this._date.toUTC()},gg.prototype.toString=function(){return this.toDate().toString()},gg.prototype.toDate=function(){return this._date.toJSDate()},gg.prototype.isLastDayOfMonth=function(){var e=this._date.plus({days:1}).startOf("day");return this._date.month!==e.month},gg.prototype.isLastWeekdayOfMonth=function(){var e=this._date.plus({days:7}).startOf("day");return this._date.month!==e.month};var Eg=function(e){for(var t=[],n=void 0,a=0;a<e.length;a++){var i=e[a];"number"!=typeof i?(kg(t,n,_g(i)),n=void 0):n?1===n.count?xg(n,i):n.step===i-n.end?(n.count++,n.end=i):2===n.count?(t.push(_g(n.start)),xg(n=_g(n.end),i)):(kg(t,n),n=_g(i)):n=_g(i)}return kg(t,n),t};var Kg=function(e,t,n){var a=Eg(e);if(1===a.length){var i=a[0];if(1===(c=i.step)&&i.start===t&&i.end===n)return"*";if(1!==c&&i.start===t&&i.end===n-c+1)return"*/"+c}for(var r=[],o=0,s=a.length;o<s;++o){var l=a[o];if(1!==l.count){var c=l.step;if(1!==l.step){var d=0==l.start?l.count-1:l.count;l.step*d>l.end?r=r.concat(Array.from({length:l.end-l.start+1}).map(function(e,t){var n=l.start+t;return(n-l.start)%l.step===0?n:null}).filter(function(e){return null!=e})):l.end===n-l.step+1?r.push(l.start+"/"+l.step):r.push(l.start+"-"+l.end+"/"+l.step)}else r.push(l.start+"-"+l.end)}else r.push(l.start)}return r.join(",")},wg=gg,Sg=Kg;function Ig(e,t){this._options=t,this._utc=t.utc||!1,this._tz=this._utc?"UTC":t.tz,this._currentDate=new wg(t.currentDate,this._tz),this._startDate=t.startDate?new wg(t.startDate,this._tz):null,this._endDate=t.endDate?new wg(t.endDate,this._tz):null,this._isIterator=t.iterator||!1,this._hasIterated=!1,this._nthDayOfWeek=t.nthDayOfWeek||0,this.fields=Ig._freezeFields(e)}Ig.map=["second","minute","hour","dayOfMonth","month","dayOfWeek"],Ig.predefined={"@yearly":"0 0 1 1 *","@monthly":"0 0 1 * *","@weekly":"0 0 * * 0","@daily":"0 0 * * *","@hourly":"0 * * * *"},Ig.constraints=[{min:0,max:59,chars:[]},{min:0,max:59,chars:[]},{min:0,max:23,chars:[]},{min:1,max:31,chars:["L"]},{min:1,max:12,chars:[]},{min:0,max:7,chars:["L"]}],Ig.daysInMonth=[31,29,31,30,31,30,31,31,30,31,30,31],Ig.aliases={month:{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12},dayOfWeek:{sun:0,mon:1,tue:2,wed:3,thu:4,fri:5,sat:6}},Ig.parseDefaults=["0","*","*","*","*","*"],Ig.standardValidCharacters=/^[,*\d/-]+$/,Ig.dayOfWeekValidCharacters=/^[?,*\dL#/-]+$/,Ig.dayOfMonthValidCharacters=/^[?,*\dL/-]+$/,Ig.validCharacters={second:Ig.standardValidCharacters,minute:Ig.standardValidCharacters,hour:Ig.standardValidCharacters,dayOfMonth:Ig.dayOfMonthValidCharacters,month:Ig.standardValidCharacters,dayOfWeek:Ig.dayOfWeekValidCharacters},Ig._isValidConstraintChar=function(e,t){return"string"==typeof t&&e.chars.some(function(e){return t.indexOf(e)>-1})},Ig._parseField=function(e,t,n){switch(e){case"month":case"dayOfWeek":var a=Ig.aliases[e];t=t.replace(/[a-z]{3}/gi,function(e){if(e=e.toLowerCase(),void 0!==a[e])return a[e];throw new Error('Validation error, cannot resolve alias "'+e+'"')})}if(!Ig.validCharacters[e].test(t))throw new Error("Invalid characters, got value: "+t);function i(e){var t=e.split("/");if(t.length>2)throw new Error("Invalid repeat: "+e);return t.length>1?(t[0]==+t[0]&&(t=[t[0]+"-"+n.max,t[1]]),r(t[0],t[t.length-1])):r(e,1)}function r(t,a){var i=[],r=t.split("-");if(r.length>1){if(r.length<2)return+t;if(!r[0].length){if(!r[1].length)throw new Error("Invalid range: "+t);return+t}var o=+r[0],s=+r[1];if(Number.isNaN(o)||Number.isNaN(s)||o<n.min||s>n.max)throw new Error("Constraint error, got range "+o+"-"+s+" expected range "+n.min+"-"+n.max);if(o>s)throw new Error("Invalid range: "+t);var l=+a;if(Number.isNaN(l)||l<=0)throw new Error("Constraint error, cannot repeat at every "+l+" time.");"dayOfWeek"===e&&s%7==0&&i.push(0);for(var c=o,d=s;c<=d;c++){!(-1!==i.indexOf(c))&&l>0&&l%a===0?(l=1,i.push(c)):l++}return i}return Number.isNaN(+t)?t:+t}return-1!==t.indexOf("*")?t=t.replace(/\*/g,n.min+"-"+n.max):-1!==t.indexOf("?")&&(t=t.replace(/\?/g,n.min+"-"+n.max)),function(t){var a=[];function r(t){if(t instanceof Array)for(var i=0,r=t.length;i<r;i++){var o=t[i];if(Ig._isValidConstraintChar(n,o))a.push(o);else{if("number"!=typeof o||Number.isNaN(o)||o<n.min||o>n.max)throw new Error("Constraint error, got value "+o+" expected range "+n.min+"-"+n.max);a.push(o)}}else{if(Ig._isValidConstraintChar(n,t))return void a.push(t);var s=+t;if(Number.isNaN(s)||s<n.min||s>n.max)throw new Error("Constraint error, got value "+t+" expected range "+n.min+"-"+n.max);"dayOfWeek"===e&&(s%=7),a.push(s)}}var o=t.split(",");if(!o.every(function(e){return e.length>0}))throw new Error("Invalid list value format");if(o.length>1)for(var s=0,l=o.length;s<l;s++)r(i(o[s]));else r(i(t));return a.sort(Ig._sortCompareFn),a}(t)},Ig._sortCompareFn=function(e,t){var n="number"==typeof e,a="number"==typeof t;return n&&a?e-t:!n&&a?1:n&&!a?-1:e.localeCompare(t)},Ig._handleMaxDaysInMonth=function(e){if(1===e.month.length){var t=Ig.daysInMonth[e.month[0]-1];if(e.dayOfMonth[0]>t)throw new Error("Invalid explicit day of month definition");return e.dayOfMonth.filter(function(e){return"L"===e||e<=t}).sort(Ig._sortCompareFn)}},Ig._freezeFields=function(e){for(var t=0,n=Ig.map.length;t<n;++t){var a=Ig.map[t],i=e[a];e[a]=Object.freeze(i)}return Object.freeze(e)},Ig.prototype._applyTimezoneShift=function(e,t,n){if("Month"===n||"Day"===n){var a=e.getTime();e[t+n](),a===e.getTime()&&(0===e.getMinutes()&&0===e.getSeconds()?e.addHour():59===e.getMinutes()&&59===e.getSeconds()&&e.subtractHour())}else{var i=e.getHours();e[t+n]();var r=e.getHours(),o=r-i;2===o?24!==this.fields.hour.length&&(this._dstStart=r):0===o&&0===e.getMinutes()&&0===e.getSeconds()&&24!==this.fields.hour.length&&(this._dstEnd=r)}},Ig.prototype._findSchedule=function(e){function t(e,t){for(var n=0,a=t.length;n<a;n++)if(t[n]>=e)return t[n]===e;return t[0]===e}function n(e,t){if(t<6){if(e.getDate()<8&&1===t)return!0;var n=e.getDate()%7?1:0,a=e.getDate()-e.getDate()%7;return Math.floor(a/7)+n===t}return!1}function a(e){return e.length>0&&e.some(function(e){return"string"==typeof e&&e.indexOf("L")>=0})}var i=(e=e||!1)?"subtract":"add",r=new wg(this._currentDate,this._tz),o=this._startDate,s=this._endDate,l=r.getTime(),c=0;function d(e){return e.some(function(e){if(!a([e]))return!1;var t=Number.parseInt(e[0])%7;if(Number.isNaN(t))throw new Error("Invalid last weekday of the month expression: "+e);return r.getDay()===t&&r.isLastWeekdayOfMonth()})}for(;c<1e4;){if(c++,e){if(o&&r.getTime()-o.getTime()<0)throw new Error("Out of the timespan range")}else if(s&&s.getTime()-r.getTime()<0)throw new Error("Out of the timespan range");var u=t(r.getDate(),this.fields.dayOfMonth);a(this.fields.dayOfMonth)&&(u=u||r.isLastDayOfMonth());var p=t(r.getDay(),this.fields.dayOfWeek);a(this.fields.dayOfWeek)&&(p=p||d(this.fields.dayOfWeek));var m=this.fields.dayOfMonth.length>=Ig.daysInMonth[r.getMonth()],h=this.fields.dayOfWeek.length===Ig.constraints[5].max-Ig.constraints[5].min+1,y=r.getHours();if(u||p&&!h)if(m||!h||u)if(!m||h||p)if(this._nthDayOfWeek>0&&!n(r,this._nthDayOfWeek))this._applyTimezoneShift(r,i,"Day");else if(t(r.getMonth()+1,this.fields.month)){if(t(y,this.fields.hour)){if(this._dstEnd===y&&!e){this._dstEnd=null,this._applyTimezoneShift(r,"add","Hour");continue}}else{if(this._dstStart!==y){this._dstStart=null,this._applyTimezoneShift(r,i,"Hour");continue}if(!t(y-1,this.fields.hour)){r[i+"Hour"]();continue}}if(t(r.getMinutes(),this.fields.minute))if(t(r.getSeconds(),this.fields.second)){if(l!==r.getTime())break;"add"===i||0===r.getMilliseconds()?this._applyTimezoneShift(r,i,"Second"):r.setMilliseconds(0)}else this._applyTimezoneShift(r,i,"Second");else this._applyTimezoneShift(r,i,"Minute")}else this._applyTimezoneShift(r,i,"Month");else this._applyTimezoneShift(r,i,"Day");else this._applyTimezoneShift(r,i,"Day");else this._applyTimezoneShift(r,i,"Day")}if(c>=1e4)throw new Error("Invalid expression, loop limit exceeded");return this._currentDate=new wg(r,this._tz),this._hasIterated=!0,r},Ig.prototype.next=function(){var e=this._findSchedule();return this._isIterator?{value:e,done:!this.hasNext()}:e},Ig.prototype.prev=function(){var e=this._findSchedule(!0);return this._isIterator?{value:e,done:!this.hasPrev()}:e},Ig.prototype.hasNext=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},Ig.prototype.hasPrev=function(){var e=this._currentDate,t=this._hasIterated;try{return this._findSchedule(!0),!0}catch(e){return!1}finally{this._currentDate=e,this._hasIterated=t}},Ig.prototype.iterate=function(e,t){var n=[];if(e>=0)for(var a=0,i=e;a<i;a++)try{var r=this.next();n.push(r),t&&t(r,a)}catch(e){break}else for(a=0,i=e;a>i;a--)try{r=this.prev();n.push(r),t&&t(r,a)}catch(e){break}return n},Ig.prototype.reset=function(e){this._currentDate=new wg(e||this._options.currentDate)},Ig.prototype.stringify=function(e){for(var t=[],n=e?0:1,a=Ig.map.length;n<a;++n){var i=Ig.map[n],r=this.fields[i],o=Ig.constraints[n];"dayOfMonth"===i&&1===this.fields.month.length?o={min:1,max:Ig.daysInMonth[this.fields.month[0]-1]}:"dayOfWeek"===i&&(o={min:0,max:6},r=7===r[r.length-1]?r.slice(0,-1):r),t.push(Sg(r,o.min,o.max))}return t.join(" ")},Ig.parse=function(e,t){var n=this;function a(e,t){t||(t={}),void 0===t.currentDate&&(t.currentDate=new wg(void 0,n._tz)),Ig.predefined[e]&&(e=Ig.predefined[e]);var a=[],i=(e+"").trim().split(/\s+/);if(i.length>6)throw new Error("Invalid cron expression");for(var r=Ig.map.length-i.length,o=0,s=Ig.map.length;o<s;++o){var l=Ig.map[o],c=i[i.length>s?o:o-r];if(o<r||!c)a.push(Ig._parseField(l,Ig.parseDefaults[o],Ig.constraints[o]));else{var d="dayOfWeek"===l?m(c):c;a.push(Ig._parseField(l,d,Ig.constraints[o]))}}var u={};for(o=0,s=Ig.map.length;o<s;o++){u[Ig.map[o]]=a[o]}var p=Ig._handleMaxDaysInMonth(u);return u.dayOfMonth=p||u.dayOfMonth,new Ig(u,t);function m(e){var n=e.split("#");if(n.length>1){var a=+n[n.length-1];if(/,/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `,` special characters are incompatible");if(/\//.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `/` special characters are incompatible");if(/-/.test(e))throw new Error("Constraint error, invalid dayOfWeek `#` and `-` special characters are incompatible");if(n.length>2||Number.isNaN(a)||a<1||a>5)throw new Error("Constraint error, invalid dayOfWeek occurrence number (#)");return t.nthDayOfWeek=a,n[0]}return e}}return"function"==typeof t&&(t={}),a(e,t)},Ig.fieldsToExpression=function(e,t){function n(e,t,n){if(!t)throw new Error("Validation error, Field "+e+" is missing");if(0===t.length)throw new Error("Validation error, Field "+e+" contains no values");for(var a=0,i=t.length;a<i;a++){var r=t[a];if(!Ig._isValidConstraintChar(n,r)&&("number"!=typeof r||Number.isNaN(r)||r<n.min||r>n.max))throw new Error("Constraint error, got value "+r+" expected range "+n.min+"-"+n.max)}}for(var a={},i=0,r=Ig.map.length;i<r;++i){var o=Ig.map[i],s=e[o];n(o,s,Ig.constraints[i]);for(var l=[],c=-1;++c<s.length;)l[c]=s[c];if((s=l.sort(Ig._sortCompareFn).filter(function(e,t,n){return!t||e!==n[t-1]})).length!==l.length)throw new Error("Validation error, Field "+o+" contains duplicate values");a[o]=s}var d=Ig._handleMaxDaysInMonth(a);return a.dayOfMonth=d||a.dayOfMonth,new Ig(a,t||{})};var jg=Ig;function Rg(){}Rg._parseEntry=function(e){var t=e.split(" ");if(6===t.length)return{interval:jg.parse(e)};if(t.length>6)return{interval:jg.parse(t.slice(0,6).join(" ")),command:t.slice(6,t.length)};throw new Error("Invalid entry: "+e)},Rg.parseExpression=function(e,t){return jg.parse(e,t)},Rg.fieldsToExpression=function(e,t){return jg.fieldsToExpression(e,t)},Rg.parseString=function(e){for(var t=e.split("\n"),n={variables:{},expressions:[],errors:{}},a=0,i=t.length;a<i;a++){var r=null,o=t[a].trim();if(o.length>0){if(o.match(/^#/))continue;if(r=o.match(/^(.*)=(.*)$/))n.variables[r[1]]=r[2];else{var s=null;try{s=Rg._parseEntry("0 "+o),n.expressions.push(s.interval)}catch(e){n.errors[o]=e}}}}return n},Rg.parseFile=function(e,t){s.readFile(e,function(e,n){if(!e)return t(null,Rg.parseString(n.toString()));t(e)})};var Tg=Rg;class Og extends m.EventEmitter{constructor(e,t={connection:{}},n=Zh,a=!1){if(super(),this.name=e,this.opts=t,this.closed=!1,this.hasBlockingConnection=!1,this.hasBlockingConnection=a,this.opts=Object.assign({prefix:"bull"},t),!e)throw new Error("Queue name must be provided");if(e.includes(":"))throw new Error("Queue name cannot contain :");this.connection=new n(t.connection,{shared:Rm(t.connection),blocking:a,skipVersionCheck:t.skipVersionCheck,skipWaitingForReady:t.skipWaitingForReady}),this.connection.on("error",e=>this.emit("error",e)),this.connection.on("close",()=>{this.closing||this.emit("ioredis:close")});const i=new th(t.prefix);this.qualifiedName=i.getQueueQualifiedName(e),this.keys=i.getKeys(e),this.toKey=t=>i.toKey(e,t),this.createScripts()}get client(){return this.connection.client}createScripts(){this.scripts=Dm(this)}get redisVersion(){return this.connection.redisVersion}get Job(){return Xm}emit(e,...t){try{return super.emit(e,...t)}catch(e){try{return super.emit("error",e)}catch(e){return console.error(e),!1}}}waitUntilReady(){return this.client}base64Name(){return Buffer.from(this.name).toString("base64")}clientName(e=""){const t=this.base64Name();return`${this.opts.prefix}:${t}${e}`}async close(){this.closing||(this.closing=this.connection.close()),await this.closing,this.closed=!0}disconnect(){return this.connection.disconnect()}async checkConnectionError(e,t=5e3){try{return await e()}catch(e){if(Cm(e)&&this.emit("error",e),this.closing||!t)return;await Km(t)}}trace(e,t,n,a,i){return async function(e,t,n,a,i,r,o){if(!e)return r();{const{tracer:s,contextManager:l}=e,c=l.active();let d;o&&(d=l.fromMetadata(c,o));const u=i?`${a} ${i}`:a,p=s.startSpan(u,{kind:t},d);try{let e,i;return p.setAttributes({[Dr.QueueName]:n,[Dr.QueueOperation]:a}),e=t===Pr.CONSUMER&&d?p.setSpanOnContext(d):p.setSpanOnContext(c),2==r.length&&(i=l.getMetadata(e)),await l.with(e,()=>r(p,i))}catch(e){throw p.recordException(e),e}finally{p.end()}}}(this.opts.telemetry,e,this.name,t,n,a,i)}}class Ag extends Og{constructor(e,t,n){super(e,t,n),this.repeatStrategy=t.settings&&t.settings.repeatStrategy||Cg}async upsertJobScheduler(e,t,n,a,i,{override:r,producerId:o}){const{every:s,limit:l,pattern:c,offset:d}=t;if(c&&s)throw new Error("Both .pattern and .every options are defined for this repeatable job");if(!c&&!s)throw new Error("Either .pattern or .every options must be defined for this repeatable job");if(t.immediately&&t.startDate)throw new Error("Both .immediately and .startDate options are defined for this repeatable job");t.immediately&&t.every&&console.warn("Using option immediately with every does not affect the job's schedule. Job will run immediately anyway.");const u=t.count?t.count+1:1;if(void 0!==t.limit&&u>t.limit)return;let p=Date.now();const{endDate:m}=t;if(m&&p>new Date(m).getTime())return;const h=i.prevMillis||0;p=h<p?p:h;const{startDate:y,immediately:f}=t,v=Hm(t,["startDate","immediately"]);let b,g=(p>h?p:h)+(d||0);y&&(g=new Date(y).getTime(),g=g>p?g:p);let _=null;if(s){const e=Math.floor((g-(d||0))/s)*s;_="number"==typeof d?d:g-e;b=h||d?e+s:e}else c&&(b=await this.repeatStrategy(p,t,n),b<p&&(b=p));return b?this.trace(Pr.PRODUCER,"add",`${this.name}.${n}`,async(d,p)=>{var h,y;let f=i.telemetry;if(p){const e=null===(h=i.telemetry)||void 0===h?void 0:h.omitContext,t=(null===(y=i.telemetry)||void 0===y?void 0:y.metadata)||!e&&p;(t||e)&&(f={metadata:t,omitContext:e})}const g=this.getNextJobOpts(b,e,Object.assign(Object.assign({},i),{repeat:v,telemetry:f}),u,_);if(r){const r=await this.scripts.addJobScheduler(e,b,JSON.stringify(void 0===a?{}:a),Xm.optsAsJSON(i),{name:n,endDate:m?new Date(m).getTime():void 0,tz:t.tz,pattern:c,every:s,limit:l,offset:_},Xm.optsAsJSON(g),o),u=new this.Job(this,n,a,g,r);return u.id=r,null==d||d.setAttributes({[Dr.JobSchedulerId]:e,[Dr.JobId]:u.id}),u}{const t=await this.scripts.updateJobSchedulerNextMillis(e,b,JSON.stringify(void 0===a?{}:a),Xm.optsAsJSON(g),o);if(t){const i=new this.Job(this,n,a,g,t);return i.id=t,null==d||d.setAttributes({[Dr.JobSchedulerId]:e,[Dr.JobId]:i.id}),i}}}):void 0}getNextJobOpts(e,t,n,a,i){var r;const o=this.getSchedulerNextJobId({jobSchedulerId:t,nextMillis:e}),s=Date.now(),l=e+i-s,c=Object.assign(Object.assign({},n),{jobId:o,delay:l<0?0:l,timestamp:s,prevMillis:e,repeatJobKey:t});return c.repeat=Object.assign(Object.assign({},n.repeat),{offset:i,count:a,endDate:(null===(r=n.repeat)||void 0===r?void 0:r.endDate)?new Date(n.repeat.endDate).getTime():void 0}),c}async removeJobScheduler(e){return this.scripts.removeJobScheduler(e)}async getSchedulerData(e,t,n){const a=await e.hgetall(this.toKey("repeat:"+t));return this.transformSchedulerData(t,a,n)}transformSchedulerData(e,t,n){if(t){const a={key:e,name:t.name,next:n};return t.ic&&(a.iterationCount=parseInt(t.ic)),t.limit&&(a.limit=parseInt(t.limit)),t.endDate&&(a.endDate=parseInt(t.endDate)),t.tz&&(a.tz=t.tz),t.pattern&&(a.pattern=t.pattern),t.every&&(a.every=parseInt(t.every)),t.offset&&(a.offset=parseInt(t.offset)),(t.data||t.opts)&&(a.template=this.getTemplateFromJSON(t.data,t.opts)),a}if(e.includes(":"))return this.keyToData(e,n)}keyToData(e,t){const n=e.split(":"),a=n.slice(4).join(":")||null;return{key:e,name:n[0],id:n[1]||null,endDate:parseInt(n[2])||null,tz:n[3]||null,pattern:a,next:t}}async getScheduler(e){const[t,n]=await this.scripts.getJobScheduler(e);return this.transformSchedulerData(e,t?km(t):null,n?parseInt(n):null)}getTemplateFromJSON(e,t){const n={};return e&&(n.data=JSON.parse(e)),t&&(n.opts=Xm.optsFromJSON(t)),n}async getJobSchedulers(e=0,t=-1,n=!1){const a=await this.client,i=this.keys.repeat,r=n?await a.zrange(i,e,t,"WITHSCORES"):await a.zrevrange(i,e,t,"WITHSCORES"),o=[];for(let e=0;e<r.length;e+=2)o.push(this.getSchedulerData(a,r[e],parseInt(r[e+1])));return Promise.all(o)}async getSchedulersCount(){const e=this.keys.repeat;return(await this.client).zcard(e)}getSchedulerNextJobId({nextMillis:e,jobSchedulerId:t}){return`repeat:${t}:${e}`}}const Cg=(e,t)=>{const{pattern:n}=t,a=new Date(e),i=Tg.parseExpression(n,Object.assign(Object.assign({},t),{currentDate:a}));try{return t.immediately?(new Date).getTime():i.next().getTime()}catch(e){}};class Dg extends Og{constructor(e,t={connection:{}},n){var{connection:a,autorun:i=!0}=t,r=Hm(t,["connection","autorun"]);super(e,Object.assign(Object.assign({},r),{connection:Rm(a)?a.duplicate():a}),n,!0),this.running=!1,this.opts=Object.assign({blockingTimeout:1e4},this.opts),i&&this.run().catch(e=>this.emit("error",e))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}async run(){if(this.running)throw new Error("Queue Events is already running.");try{this.running=!0;const e=await this.client;try{await e.client("SETNAME",this.clientName(":qe"))}catch(e){if(!Am.test(e.message))throw e}await this.consumeEvents(e)}catch(e){throw this.running=!1,e}}async consumeEvents(e){const t=this.opts,n=this.keys.events;let a=t.lastEventId||"$";for(;!this.closing;){const i=await this.checkConnectionError(()=>e.xread("BLOCK",t.blockingTimeout,"STREAMS",n,a));if(i){const e=i[0][1];for(let t=0;t<e.length;t++){a=e[t][0];const n=km(e[t][1]);switch(n.event){case"progress":n.data=JSON.parse(n.data);break;case"completed":n.returnvalue=JSON.parse(n.returnvalue)}const{event:i}=n,r=Hm(n,["event"]);"drained"===i?this.emit(i,a):(this.emit(i,r,a),r.jobId&&this.emit(`${i}:${r.jobId}`,r,a))}}}}close(){return this.closing||(this.closing=this.disconnect()),this.closing}}class Pg extends Og{getJob(e){return this.Job.fromId(this,e)}commandByType(e,t,n){return e.map(e=>{e="waiting"===e?"wait":e;const a=this.toKey(e);switch(e){case"completed":case"failed":case"delayed":case"prioritized":case"repeat":case"waiting-children":return n(a,t?"zcard":"zrange");case"active":case"wait":case"paused":return n(a,t?"llen":"lrange")}})}sanitizeJobTypes(e){const t="string"==typeof e?[e]:e;if(Array.isArray(t)&&t.length>0){const e=[...t];return-1!==e.indexOf("waiting")&&e.push("paused"),[...new Set(e)]}return["active","completed","delayed","failed","paused","prioritized","waiting","waiting-children"]}async count(){return await this.getJobCountByTypes("waiting","paused","delayed","prioritized","waiting-children")}async getRateLimitTtl(e){return this.scripts.getRateLimitTtl(e)}async getDebounceJobId(e){return(await this.client).get(`${this.keys.de}:${e}`)}async getDeduplicationJobId(e){return(await this.client).get(`${this.keys.de}:${e}`)}async getJobCountByTypes(...e){const t=await this.getJobCounts(...e);return Object.values(t).reduce((e,t)=>e+t,0)}async getJobCounts(...e){const t=this.sanitizeJobTypes(e),n=await this.scripts.getCounts(t),a={};return n.forEach((e,n)=>{a[t[n]]=e||0}),a}getJobState(e){return this.scripts.getState(e)}getCompletedCount(){return this.getJobCountByTypes("completed")}getFailedCount(){return this.getJobCountByTypes("failed")}getDelayedCount(){return this.getJobCountByTypes("delayed")}getActiveCount(){return this.getJobCountByTypes("active")}getPrioritizedCount(){return this.getJobCountByTypes("prioritized")}async getCountsPerPriority(e){const t=[...new Set(e)],n=await this.scripts.getCountsPerPriority(t),a={};return n.forEach((e,n)=>{a[`${t[n]}`]=e||0}),a}getWaitingCount(){return this.getJobCountByTypes("waiting")}getWaitingChildrenCount(){return this.getJobCountByTypes("waiting-children")}getWaiting(e=0,t=-1){return this.getJobs(["waiting"],e,t,!0)}getWaitingChildren(e=0,t=-1){return this.getJobs(["waiting-children"],e,t,!0)}getActive(e=0,t=-1){return this.getJobs(["active"],e,t,!0)}getDelayed(e=0,t=-1){return this.getJobs(["delayed"],e,t,!0)}getPrioritized(e=0,t=-1){return this.getJobs(["prioritized"],e,t,!0)}getCompleted(e=0,t=-1){return this.getJobs(["completed"],e,t,!1)}getFailed(e=0,t=-1){return this.getJobs(["failed"],e,t,!1)}async getDependencies(e,t,n,a){const i=this.toKey("processed"==t?`${e}:processed`:`${e}:dependencies`),{items:r,total:o,jobs:s}=await this.scripts.paginate(i,{start:n,end:a,fetchJobs:!0});return{items:r,jobs:s,total:o}}async getRanges(e,t=0,n=1,a=!1){const i=[];this.commandByType(e,!1,(e,t)=>{switch(t){case"lrange":i.push("lrange");break;case"zrange":i.push("zrange")}});const r=await this.scripts.getRanges(e,t,n,a);let o=[];return r.forEach((e,t)=>{const n=e||[];o=a&&"lrange"===i[t]?o.concat(n.reverse()):o.concat(n)}),[...new Set(o)]}async getJobs(e,t=0,n=-1,a=!1){const i=this.sanitizeJobTypes(e),r=await this.getRanges(i,t,n,a);return Promise.all(r.map(e=>this.Job.fromId(this,e)))}async getJobLogs(e,t=0,n=-1,a=!0){const i=(await this.client).multi(),r=this.toKey(e+":logs");a?i.lrange(r,t,n):i.lrange(r,-(n+1),-(t+1)),i.llen(r);const o=await i.exec();return a||o[0][1].reverse(),{logs:o[0][1],count:o[1][1]}}async baseGetClients(e){const t=await this.client;try{const n=await t.client("LIST");return this.parseClientList(n,e)}catch(e){if(!Am.test(e.message))throw e;return[{name:"GCP does not support client list"}]}}getWorkers(){const e=`${this.clientName()}`,t=`${this.clientName()}:w:`;return this.baseGetClients(n=>n&&(n===e||n.startsWith(t)))}async getWorkersCount(){return(await this.getWorkers()).length}async getQueueEvents(){const e=`${this.clientName()}:qe`;return this.baseGetClients(t=>t===e)}async getMetrics(e,t=0,n=-1){const a=await this.client,i=this.toKey(`metrics:${e}`),r=`${i}:data`,o=a.multi();o.hmget(i,"count","prevTS","prevCount"),o.lrange(r,t,n),o.llen(r);const[s,l,c]=await o.exec(),[d,[u,p,m]]=s,[h,y]=l,[f,v]=c;if(d||h)throw d||h||f;return{meta:{count:parseInt(u||"0",10),prevTS:parseInt(p||"0",10),prevCount:parseInt(m||"0",10)},data:y,count:v}}parseClientList(e,t){const n=e.split(/\r?\n/),a=[];return n.forEach(e=>{const n={};e.split(" ").forEach(function(e){const t=e.indexOf("="),a=e.substring(0,t),i=e.substring(t+1);n[a]=i});const i=n.name;t(i)&&(n.name=this.name,n.rawname=i,a.push(n))}),a}async exportPrometheusMetrics(e){const t=await this.getJobCounts(),n=[];n.push("# HELP bullmq_job_count Number of jobs in the queue by state"),n.push("# TYPE bullmq_job_count gauge");const a=e?Object.keys(e).reduce((t,n)=>`${t}, ${n}="${e[n]}"`,""):"";for(const[e,i]of Object.entries(t))n.push(`bullmq_job_count{queue="${this.name}", state="${e}"${a}} ${i}`);return n.join("\n")}}class Ng extends Og{constructor(e,t,n){super(e,t,n),this.repeatStrategy=t.settings&&t.settings.repeatStrategy||Fg,this.repeatKeyHashAlgorithm=t.settings&&t.settings.repeatKeyHashAlgorithm||"md5"}async updateRepeatableJob(e,t,n,{override:a}){var i,r;const o=Object.assign({},n.repeat);null!==(i=o.pattern)&&void 0!==i||(o.pattern=o.cron),delete o.cron;const s=o.count?o.count+1:1;if(void 0!==o.limit&&s>o.limit)return;let l=Date.now();const{endDate:c}=o;if(c&&l>new Date(c).getTime())return;const d=n.prevMillis||0;l=d<l?l:d;const u=await this.repeatStrategy(l,o,e),{every:p,pattern:m}=o,h=Boolean((p||m)&&o.immediately),y=h&&p?l-u:void 0;if(u){!d&&n.jobId&&(o.jobId=n.jobId);const i=Mg(e,o),l=null!==(r=n.repeat.key)&&void 0!==r?r:this.hash(i);let f;if(a)f=await this.scripts.addRepeatableJob(l,u,{name:e,endDate:c?new Date(c).getTime():void 0,tz:o.tz,pattern:m,every:p},i);else{const e=await this.client;f=await this.scripts.updateRepeatableJobMillis(e,l,u,i)}const v=Hm(o,["immediately"]);return this.createNextJob(e,u,f,Object.assign(Object.assign({},n),{repeat:Object.assign({offset:y},v)}),t,s,h)}}async createNextJob(e,t,n,a,i,r,o){const s=this.getRepeatJobKey(e,t,n,i),l=Date.now(),c=t+(a.repeat.offset?a.repeat.offset:0)-l,d=Object.assign(Object.assign({},a),{jobId:s,delay:c<0||o?0:c,timestamp:l,prevMillis:t,repeatJobKey:n});return d.repeat=Object.assign(Object.assign({},a.repeat),{count:r}),this.Job.create(this,e,i,d)}getRepeatJobKey(e,t,n,a){return n.split(":").length>2?this.getRepeatJobId({name:e,nextMillis:t,namespace:this.hash(n),jobId:null==a?void 0:a.id}):this.getRepeatDelayedJobId({customKey:n,nextMillis:t})}async removeRepeatable(e,t,n){var a;const i=Mg(e,Object.assign(Object.assign({},t),{jobId:n})),r=null!==(a=t.key)&&void 0!==a?a:this.hash(i),o=this.getRepeatJobId({name:e,nextMillis:"",namespace:this.hash(i),jobId:null!=n?n:t.jobId,key:t.key});return this.scripts.removeRepeatable(o,i,r)}async removeRepeatableByKey(e){const t=this.keyToData(e),n=this.getRepeatJobId({name:t.name,nextMillis:"",namespace:this.hash(e),jobId:t.id});return this.scripts.removeRepeatable(n,"",e)}async getRepeatableData(e,t,n){const a=await e.hgetall(this.toKey("repeat:"+t));return a?{key:t,name:a.name,endDate:parseInt(a.endDate)||null,tz:a.tz||null,pattern:a.pattern||null,every:a.every||null,next:n}:this.keyToData(t,n)}keyToData(e,t){const n=e.split(":"),a=n.slice(4).join(":")||null;return{key:e,name:n[0],id:n[1]||null,endDate:parseInt(n[2])||null,tz:n[3]||null,pattern:a,next:t}}async getRepeatableJobs(e=0,t=-1,n=!1){const a=await this.client,i=this.keys.repeat,r=n?await a.zrange(i,e,t,"WITHSCORES"):await a.zrevrange(i,e,t,"WITHSCORES"),o=[];for(let e=0;e<r.length;e+=2)o.push(this.getRepeatableData(a,r[e],parseInt(r[e+1])));return Promise.all(o)}async getRepeatableCount(){return(await this.client).zcard(this.toKey("repeat"))}hash(e){return l.createHash(this.repeatKeyHashAlgorithm).update(e).digest("hex")}getRepeatDelayedJobId({nextMillis:e,customKey:t}){return`repeat:${t}:${e}`}getRepeatJobId({name:e,nextMillis:t,namespace:n,jobId:a,key:i}){return`repeat:${null!=i?i:this.hash(`${e}${a||""}${n}`)}:${t}`}}function Mg(e,t){const n=t.endDate?new Date(t.endDate).getTime():"",a=t.tz||"",i=t.pattern,r=i||String(t.every)||"";return`${e}:${t.jobId?t.jobId:""}:${n}:${a}:${r}`}const Fg=(e,t)=>{const n=t.pattern;if(n&&t.every)throw new Error("Both .pattern and .every options are defined for this repeatable job");if(t.every)return Math.floor(e/t.every)*t.every+(t.immediately?0:t.every);const a=t.startDate&&new Date(t.startDate)>new Date(e)?new Date(t.startDate):new Date(e),i=Tg.parseExpression(n,Object.assign(Object.assign({},t),{currentDate:a}));try{return t.immediately?(new Date).getTime():i.next().getTime()}catch(e){}};class Lg extends Pg{constructor(e,t,n){var a;super(e,Object.assign({},t),n),this.token=Wm(),this.libName="bullmq",this.jobsOpts=null!==(a=null==t?void 0:t.defaultJobOptions)&&void 0!==a?a:{},this.waitUntilReady().then(e=>{if(!this.closing&&!(null==t?void 0:t.skipMetasUpdate))return e.hmset(this.keys.meta,this.metaValues)}).catch(e=>{})}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}get defaultJobOptions(){return Object.assign({},this.jobsOpts)}get metaValues(){var e,t,n,a;return{"opts.maxLenEvents":null!==(a=null===(n=null===(t=null===(e=this.opts)||void 0===e?void 0:e.streams)||void 0===t?void 0:t.events)||void 0===n?void 0:n.maxLen)&&void 0!==a?a:1e4,version:`${this.libName}:${Wd}`}}async getVersion(){const e=await this.client;return await e.hget(this.keys.meta,"version")}get repeat(){return new Promise(async e=>{this._repeat||(this._repeat=new Ng(this.name,Object.assign(Object.assign({},this.opts),{connection:await this.client})),this._repeat.on("error",e=>this.emit.bind(this,e))),e(this._repeat)})}get jobScheduler(){return new Promise(async e=>{this._jobScheduler||(this._jobScheduler=new Ag(this.name,Object.assign(Object.assign({},this.opts),{connection:await this.client})),this._jobScheduler.on("error",e=>this.emit.bind(this,e))),e(this._jobScheduler)})}async getGlobalConcurrency(){const e=await this.client,t=await e.hget(this.keys.meta,"concurrency");return t?Number(t):null}async setGlobalConcurrency(e){return(await this.client).hset(this.keys.meta,"concurrency",e)}async removeGlobalConcurrency(){return(await this.client).hdel(this.keys.meta,"concurrency")}async add(e,t,n){return this.trace(Pr.PRODUCER,"add",`${this.name}.${e}`,async(a,i)=>{var r;if(i&&!(null===(r=null==n?void 0:n.telemetry)||void 0===r?void 0:r.omitContext)){const e={metadata:i};n=Object.assign(Object.assign({},n),{telemetry:e})}const o=await this.addJob(e,t,n);return null==a||a.setAttributes({[Dr.JobName]:e,[Dr.JobId]:o.id}),o})}async addJob(e,t,n){if(n&&n.repeat){if(n.repeat.endDate&&+new Date(n.repeat.endDate)<Date.now())throw new Error("End date must be greater than current timestamp");return(await this.repeat).updateRepeatableJob(e,t,Object.assign(Object.assign({},this.jobsOpts),n),{override:!0})}{const a=null==n?void 0:n.jobId;if("0"==a||(null==a?void 0:a.startsWith("0:")))throw new Error("JobId cannot be '0' or start with 0:");const i=await this.Job.create(this,e,t,Object.assign(Object.assign(Object.assign({},this.jobsOpts),n),{jobId:a}));return this.emit("waiting",i),i}}async addBulk(e){return this.trace(Pr.PRODUCER,"addBulk",this.name,async(t,n)=>(t&&t.setAttributes({[Dr.BulkNames]:e.map(e=>e.name),[Dr.BulkCount]:e.length}),await this.Job.createBulk(this,e.map(e=>{var t,a,i,r,o,s;let l=null===(t=e.opts)||void 0===t?void 0:t.telemetry;if(n){const t=null===(i=null===(a=e.opts)||void 0===a?void 0:a.telemetry)||void 0===i?void 0:i.omitContext,s=(null===(o=null===(r=e.opts)||void 0===r?void 0:r.telemetry)||void 0===o?void 0:o.metadata)||!t&&n;(s||t)&&(l={metadata:s,omitContext:t})}return{name:e.name,data:e.data,opts:Object.assign(Object.assign(Object.assign({},this.jobsOpts),e.opts),{jobId:null===(s=e.opts)||void 0===s?void 0:s.jobId,telemetry:l})}}))))}async upsertJobScheduler(e,t,n){var a,i;if(t.endDate&&+new Date(t.endDate)<Date.now())throw new Error("End date must be greater than current timestamp");return(await this.jobScheduler).upsertJobScheduler(e,t,null!==(a=null==n?void 0:n.name)&&void 0!==a?a:e,null!==(i=null==n?void 0:n.data)&&void 0!==i?i:{},Object.assign(Object.assign({},this.jobsOpts),null==n?void 0:n.opts),{override:!0})}async pause(){await this.trace(Pr.INTERNAL,"pause",this.name,async()=>{await this.scripts.pause(!0),this.emit("paused")})}async close(){await this.trace(Pr.INTERNAL,"close",this.name,async()=>{this.closing||this._repeat&&await this._repeat.close(),await super.close()})}async rateLimit(e){await this.trace(Pr.INTERNAL,"rateLimit",this.name,async t=>{null==t||t.setAttributes({[Dr.QueueRateLimit]:e}),await this.client.then(t=>t.set(this.keys.limiter,Number.MAX_SAFE_INTEGER,"PX",e))})}async resume(){await this.trace(Pr.INTERNAL,"resume",this.name,async()=>{await this.scripts.pause(!1),this.emit("resumed")})}async isPaused(){const e=await this.client;return 1===await e.hexists(this.keys.meta,"paused")}isMaxed(){return this.scripts.isMaxed()}async getRepeatableJobs(e,t,n){return(await this.repeat).getRepeatableJobs(e,t,n)}async getJobScheduler(e){return(await this.jobScheduler).getScheduler(e)}async getJobSchedulers(e,t,n){return(await this.jobScheduler).getJobSchedulers(e,t,n)}async getJobSchedulersCount(){return(await this.jobScheduler).getSchedulersCount()}async removeRepeatable(e,t,n){return this.trace(Pr.INTERNAL,"removeRepeatable",`${this.name}.${e}`,async a=>{null==a||a.setAttributes({[Dr.JobName]:e,[Dr.JobId]:n});const i=await this.repeat;return!await i.removeRepeatable(e,t,n)})}async removeJobScheduler(e){const t=await this.jobScheduler;return!await t.removeJobScheduler(e)}async removeDebounceKey(e){return this.trace(Pr.INTERNAL,"removeDebounceKey",`${this.name}`,async t=>{null==t||t.setAttributes({[Dr.JobKey]:e});const n=await this.client;return await n.del(`${this.keys.de}:${e}`)})}async removeDeduplicationKey(e){return this.trace(Pr.INTERNAL,"removeDeduplicationKey",`${this.name}`,async t=>{null==t||t.setAttributes({[Dr.DeduplicationKey]:e});return(await this.client).del(`${this.keys.de}:${e}`)})}async removeRateLimitKey(){return(await this.client).del(this.keys.limiter)}async removeRepeatableByKey(e){return this.trace(Pr.INTERNAL,"removeRepeatableByKey",`${this.name}`,async t=>{null==t||t.setAttributes({[Dr.JobKey]:e});const n=await this.repeat;return!await n.removeRepeatableByKey(e)})}async remove(e,{removeChildren:t=!0}={}){return this.trace(Pr.INTERNAL,"remove",this.name,async n=>(null==n||n.setAttributes({[Dr.JobId]:e,[Dr.JobOptions]:JSON.stringify({removeChildren:t})}),await this.scripts.remove(e,t)))}async updateJobProgress(e,t){await this.trace(Pr.INTERNAL,"updateJobProgress",this.name,async n=>{null==n||n.setAttributes({[Dr.JobId]:e,[Dr.JobProgress]:JSON.stringify(t)}),await this.scripts.updateProgress(e,t)})}async addJobLog(e,t,n){return Xm.addJobLog(this,e,t,n)}async drain(e=!1){await this.trace(Pr.INTERNAL,"drain",this.name,async t=>{null==t||t.setAttributes({[Dr.QueueDrainDelay]:e}),await this.scripts.drain(e)})}async clean(e,t,n="completed"){return this.trace(Pr.INTERNAL,"clean",this.name,async a=>{const i=t||1/0,r=Math.min(1e4,i),o=Date.now()-e;let s=0;const l=[];for(;s<i;){const e=await this.scripts.cleanJobsInSet(n,o,r);if(this.emit("cleaned",e,n),s+=e.length,l.push(...e),e.length<r)break}return null==a||a.setAttributes({[Dr.QueueGrace]:e,[Dr.JobType]:n,[Dr.QueueCleanLimit]:i,[Dr.JobIds]:l}),l})}async obliterate(e){await this.trace(Pr.INTERNAL,"obliterate",this.name,async()=>{await this.pause();let t=0;do{t=await this.scripts.obliterate(Object.assign({force:!1,count:1e3},e))}while(t)})}async retryJobs(e={}){await this.trace(Pr.PRODUCER,"retryJobs",this.name,async t=>{null==t||t.setAttributes({[Dr.QueueOptions]:JSON.stringify(e)});let n=0;do{n=await this.scripts.retryJobs(e.state,e.count,e.timestamp)}while(n)})}async promoteJobs(e={}){await this.trace(Pr.INTERNAL,"promoteJobs",this.name,async t=>{null==t||t.setAttributes({[Dr.QueueOptions]:JSON.stringify(e)});let n=0;do{n=await this.scripts.promoteJobs(e.count)}while(n)})}async trimEvents(e){return this.trace(Pr.INTERNAL,"trimEvents",this.name,async t=>{null==t||t.setAttributes({[Dr.QueueEventMaxLength]:e});const n=await this.client;return await n.xtrim(this.keys.events,"MAXLEN","~",e)})}async removeDeprecatedPriorityKey(){return(await this.client).del(this.toKey("priority"))}}const{EventEmitter:Jg}=m;class Ug{constructor(){this.eventEmitter=new Jg,this.onabort=null,this.aborted=!1,this.reason=void 0}toString(){return"[object AbortSignal]"}get[Symbol.toStringTag](){return"AbortSignal"}removeEventListener(e,t){this.eventEmitter.removeListener(e,t)}addEventListener(e,t){this.eventEmitter.on(e,t)}dispatchEvent(e){const t={type:e,target:this},n=`on${e}`;"function"==typeof this[n]&&this[n](t),this.eventEmitter.emit(e,t)}throwIfAborted(){if(this.aborted)throw this.reason}static abort(e){const t=new qg;return t.abort(),t.signal}static timeout(e){const t=new qg;return setTimeout(()=>t.abort(new Error("TimeoutError")),e),t.signal}}class qg{constructor(){this.signal=new Ug}abort(e){this.signal.aborted||(this.signal.aborted=!0,this.signal.reason=e||new Error("AbortError"),this.signal.dispatchEvent("abort"))}toString(){return"[object AbortController]"}get[Symbol.toStringTag](){return"AbortController"}}var Vg={AbortController:qg,AbortSignal:Ug};class Gg extends Og{static RateLimitError(){return new Jm}constructor(e,t,n,a){if(super(e,Object.assign(Object.assign({drainDelay:5,concurrency:1,lockDuration:3e4,maxStalledCount:1,stalledInterval:3e4,autorun:!0,runRetryDelay:15e3},n),{blockingConnection:!0}),a),this.abortDelayController=null,this.blockUntil=0,this.drained=!1,this.extendLocksTimer=null,this.limitUntil=0,this.waiting=null,this.running=!1,this.mainLoopRunning=null,!n||!n.connection)throw new Error("Worker requires a connection");if("number"!=typeof this.opts.maxStalledCount||this.opts.maxStalledCount<0)throw new Error("maxStalledCount must be greater or equal than 0");if("number"!=typeof this.opts.stalledInterval||this.opts.stalledInterval<=0)throw new Error("stalledInterval must be greater than 0");if("number"!=typeof this.opts.drainDelay||this.opts.drainDelay<=0)throw new Error("drainDelay must be greater than 0");if(this.concurrency=this.opts.concurrency,this.opts.lockRenewTime=this.opts.lockRenewTime||this.opts.lockDuration/2,this.id=Wm(),t){if("function"==typeof t)this.processFn=t;else{if(t instanceof o.URL){if(!E.existsSync(t))throw new Error(`URL ${t} does not exist in the local file system`);t=t.href}else{const e=t+([".js",".ts",".flow",".cjs"].includes(k.extname(t))?"":".js");if(!E.existsSync(e))throw new Error(`File ${e} does not exist`)}const e=k.dirname(module.filename||__filename),n=k.join(e,"main-worker.js"),a=k.join(e,"main.js");let s=this.opts.useWorkerThreads?n:a;try{E.statSync(s)}catch(e){const t=this.opts.useWorkerThreads?"main-worker.js":"main.js";s=k.join(process.cwd(),`dist/cjs/classes/${t}`),E.statSync(s)}this.childPool=new Jr({mainFile:s,useWorkerThreads:this.opts.useWorkerThreads,workerForkOptions:this.opts.workerForkOptions,workerThreadsOptions:this.opts.workerThreadsOptions}),this.processFn=(i=t,r=this.childPool,async function(e,t){let n,a,o;try{const s=new Promise((s,l)=>{(async()=>{try{o=(e,t)=>{l(new Error("Unexpected exit code: "+e+" signal: "+t))},n=await r.retain(i),n.on("exit",o),a=async t=>{var a,i,r;try{switch(t.cmd){case Ar.Completed:s(t.value);break;case Ar.Failed:case Ar.Error:{const e=new Error;Object.assign(e,t.value),l(e);break}case Ar.Progress:await e.updateProgress(t.value);break;case Ar.Log:await e.log(t.value);break;case Ar.MoveToDelayed:await e.moveToDelayed(null===(a=t.value)||void 0===a?void 0:a.timestamp,null===(i=t.value)||void 0===i?void 0:i.token);break;case Ar.MoveToWait:await e.moveToWait(null===(r=t.value)||void 0===r?void 0:r.token);break;case Ar.Update:await e.updateData(t.value);break;case Ar.GetChildrenValues:{const a=await e.getChildrenValues();n.send({requestId:t.requestId,cmd:Tr.GetChildrenValuesResponse,value:a})}break;case Ar.GetIgnoredChildrenFailures:{const a=await e.getIgnoredChildrenFailures();n.send({requestId:t.requestId,cmd:Tr.GetIgnoredChildrenFailuresResponse,value:a})}}}catch(e){l(e)}},n.on("message",a),n.send({cmd:Tr.Start,job:e.asJSONSandbox(),token:t})}catch(e){l(e)}})()});return await s,s}finally{n&&(n.off("message",a),n.off("exit",o),null===n.exitCode&&null===n.signalCode&&r.release(n))}}).bind(this)}this.opts.autorun&&this.run().catch(e=>this.emit("error",e))}var i,r;const s=this.clientName()+(this.opts.name?`:w:${this.opts.name}`:"");this.blockingConnection=new Zh(Rm(n.connection)?n.connection.duplicate({connectionName:s}):Object.assign(Object.assign({},n.connection),{connectionName:s}),{shared:!1,blocking:!0,skipVersionCheck:n.skipVersionCheck}),this.blockingConnection.on("error",e=>this.emit("error",e)),this.blockingConnection.on("ready",()=>setTimeout(()=>this.emit("ready"),0))}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t),this}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}callProcessJob(e,t){return this.processFn(e,t)}createJob(e,t){return this.Job.fromJSON(this,e,t)}async waitUntilReady(){return await super.waitUntilReady(),this.blockingConnection.client}set concurrency(e){if("number"!=typeof e||e<1||!isFinite(e))throw new Error("concurrency must be a finite number greater than 0");this._concurrency=e}get concurrency(){return this._concurrency}get repeat(){return new Promise(async e=>{if(!this._repeat){const e=await this.client;this._repeat=new Ng(this.name,Object.assign(Object.assign({},this.opts),{connection:e})),this._repeat.on("error",e=>this.emit.bind(this,e))}e(this._repeat)})}get jobScheduler(){return new Promise(async e=>{if(!this._jobScheduler){const e=await this.client;this._jobScheduler=new Ag(this.name,Object.assign(Object.assign({},this.opts),{connection:e})),this._jobScheduler.on("error",e=>this.emit.bind(this,e))}e(this._jobScheduler)})}async run(){if(!this.processFn)throw new Error("No process function is defined.");if(this.running)throw new Error("Worker is already running.");try{if(this.running=!0,this.closing||this.paused)return;await this.startStalledCheckTimer();const e=await this.client,t=await this.blockingConnection.client;this.mainLoopRunning=this.mainLoop(e,t),await this.mainLoopRunning}finally{this.running=!1}}async waitForRateLimit(){var e;const t=this.limitUntil;if(t>Date.now()){null===(e=this.abortDelayController)||void 0===e||e.abort(),this.abortDelayController=new Vg.AbortController;const n=this.getRateLimitDelay(t-Date.now());await this.delay(n,this.abortDelayController)}}async mainLoop(e,t){const n=new jr,a=new Set;this.startLockExtenderTimer(a);let i=0;for(;!this.closing&&!this.paused;){let r,o=n.numTotal();for(;!this.closing&&!this.paused&&!this.waiting&&o<this._concurrency&&!this.isRateLimited();){const a=`${this.id}:${i++}`,r=this.retryIfFailed(()=>this._getNextJob(e,t,a,{block:!0}),this.opts.runRetryDelay);if(n.add(r),o=n.numTotal(),this.waiting&&o>1)break;if(!await r&&o>1)break;if(this.blockUntil)break}do{r=await n.fetch()}while(!r&&n.numQueued()>0);if(r){const e=r.token;n.add(this.retryIfFailed(()=>this.processJob(r,e,()=>n.numTotal()<=this._concurrency,a),this.opts.runRetryDelay))}else 0===n.numQueued()&&await this.waitForRateLimit()}return n.waitAll()}async getNextJob(e,{block:t=!0}={}){var n,a;const i=await this._getNextJob(await this.client,await this.blockingConnection.client,e,{block:t});return this.trace(Pr.INTERNAL,"getNextJob",this.name,async e=>(null==e||e.setAttributes({[Dr.WorkerId]:this.id,[Dr.QueueName]:this.name,[Dr.WorkerName]:this.opts.name,[Dr.WorkerOptions]:JSON.stringify({block:t}),[Dr.JobId]:null==i?void 0:i.id}),i),null===(a=null===(n=null==i?void 0:i.opts)||void 0===n?void 0:n.telemetry)||void 0===a?void 0:a.metadata)}async _getNextJob(e,t,n,{block:a=!0}={}){if(!this.paused&&!this.closing)if(this.drained&&a&&!this.limitUntil&&!this.waiting){this.waiting=this.waitForJob(t,this.blockUntil);try{if(this.blockUntil=await this.waiting,this.blockUntil<=0||this.blockUntil-Date.now()<1)return await this.moveToActive(e,n,this.opts.name)}catch(e){if(!this.paused&&!this.closing&&Cm(e))throw e}finally{this.waiting=null}}else if(!this.isRateLimited())return this.moveToActive(e,n,this.opts.name)}async rateLimit(e){await this.trace(Pr.INTERNAL,"rateLimit",this.name,async t=>{null==t||t.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerRateLimit]:e}),await this.client.then(t=>t.set(this.keys.limiter,Number.MAX_SAFE_INTEGER,"PX",e))})}get minimumBlockTimeout(){return this.blockingConnection.capabilities.canBlockFor1Ms?.001:.002}isRateLimited(){return this.limitUntil>Date.now()}async moveToActive(e,t,n){const[a,i,r,o]=await this.scripts.moveToActive(e,t,n);return this.updateDelays(r,o),this.nextJobFromJobData(a,i,t)}async waitForJob(e,t){if(this.paused)return 1/0;let n;try{if(!this.closing&&!this.isRateLimited()){let a=this.getBlockTimeout(t);if(a>0){a=this.blockingConnection.capabilities.canDoubleTimeout?a:Math.ceil(a),n=setTimeout(async()=>{e.disconnect(!this.closing)},1e3*a+1e3),this.updateDelays();const i=await e.bzpopmin(this.keys.marker,a);if(i){const[e,n,a]=i;if(n){const e=parseInt(a);return t&&e>t?t:e}}}return 0}}catch(e){Cm(e)&&this.emit("error",e),this.closing||await this.delay()}finally{clearTimeout(n)}return 1/0}getBlockTimeout(e){const t=this.opts;if(e){const t=e-Date.now();return t<=0?t:t<1e3*this.minimumBlockTimeout?this.minimumBlockTimeout:Math.min(t/1e3,10)}return Math.max(t.drainDelay,this.minimumBlockTimeout)}getRateLimitDelay(e){return Math.min(e,3e4)}async delay(e,t){await Km(e||100,t)}updateDelays(e=0,t=0){const n=Math.max(e,0);this.limitUntil=n>0?Date.now()+n:0,this.blockUntil=Math.max(t,0)||0}async nextJobFromJobData(e,t,n){if(e){this.drained=!1;const a=this.createJob(e,t);if(a.token=n,a.opts.repeat&&!a.nextRepeatableJobId)if(a.repeatJobKey){const e=await this.jobScheduler;await e.upsertJobScheduler(a.repeatJobKey,a.opts.repeat,a.name,a.data,a.opts,{override:!1,producerId:a.id})}else{const e=await this.repeat;await e.updateRepeatableJob(a.name,a.data,a.opts,{override:!1})}return a}this.drained||(this.emit("drained"),this.drained=!0)}async processJob(e,t,n=()=>!0,a){var i,r;const o=null===(r=null===(i=e.opts)||void 0===i?void 0:i.telemetry)||void 0===r?void 0:r.metadata;return this.trace(Pr.CONSUMER,"process",this.name,async i=>{null==i||i.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name,[Dr.JobId]:e.id}),this.emit("active",e,"waiting");const r=Date.now(),o={job:e,ts:r};try{if(e.deferredFailure){return await this.handleFailed(new Um(e.deferredFailure),e,t,n,a,o,i)}a.add(o);const r=await this.callProcessJob(e,t);return await this.handleCompleted(r,e,t,n,a,o,i)}catch(r){return await this.handleFailed(r,e,t,n,a,o,i)}finally{null==i||i.setAttributes({[Dr.JobFinishedTimestamp]:Date.now(),[Dr.JobProcessedTimestamp]:r})}},o)}async handleCompleted(e,t,n,a=()=>!0,i,r,o){if(i.delete(r),!this.connection.closing){const i=await t.moveToCompleted(e,n,a()&&!(this.closing||this.paused));this.emit("completed",t,e,"active"),null==o||o.addEvent("job completed",{[Dr.JobResult]:JSON.stringify(e)});const[r,s,l,c]=i||[];return this.updateDelays(l,c),this.nextJobFromJobData(r,s,n)}}async handleFailed(e,t,n,a=()=>!0,i,r,o){if(i.delete(r),!this.connection.closing)try{if(e.message==Lm){const e=await this.moveLimitedBackToWait(t,n);return void(this.limitUntil=e>0?Date.now()+e:0)}if(e instanceof Fm||"DelayedError"==e.name||e instanceof Vm||"WaitingError"==e.name||e instanceof qm||"WaitingChildrenError"==e.name)return;const i=await t.moveToFailed(e,n,a()&&!(this.closing||this.paused));if(this.emit("failed",t,e,"active"),null==o||o.addEvent("job failed",{[Dr.JobFailedReason]:e.message}),i){const[e,t,a,r]=i;return this.updateDelays(a,r),this.nextJobFromJobData(e,t,n)}}catch(e){this.emit("error",e),null==o||o.recordException(e.message)}}async pause(e){await this.trace(Pr.INTERNAL,"pause",this.name,async t=>{var n;null==t||t.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name,[Dr.WorkerDoNotWaitActive]:e}),this.paused||(this.paused=!0,await(!e&&this.whenCurrentJobsFinished()),null===(n=this.stalledCheckStopper)||void 0===n||n.call(this),this.emit("paused"))})}resume(){this.running||this.trace(Pr.INTERNAL,"resume",this.name,e=>{null==e||e.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name}),this.paused=!1,this.processFn&&this.run(),this.emit("resumed")})}isPaused(){return!!this.paused}isRunning(){return this.running}async close(e=!1){return this.closing?this.closing:(this.closing=(async()=>{await this.trace(Pr.INTERNAL,"close",this.name,async t=>{var n,a;null==t||t.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name,[Dr.WorkerForceClose]:e}),this.emit("closing","closing queue"),null===(n=this.abortDelayController)||void 0===n||n.abort();const i=[()=>e||this.whenCurrentJobsFinished(!1),()=>{var e;return null===(e=this.childPool)||void 0===e?void 0:e.clean()},()=>this.blockingConnection.close(e),()=>this.connection.close(e)];for(const e of i)try{await e()}catch(e){this.emit("error",e)}clearTimeout(this.extendLocksTimer),null===(a=this.stalledCheckStopper)||void 0===a||a.call(this),this.closed=!0,this.emit("closed")})})(),await this.closing)}async startStalledCheckTimer(){this.opts.skipStalledCheck||this.closing||await this.trace(Pr.INTERNAL,"startStalledCheckTimer",this.name,async e=>{null==e||e.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name}),this.stalledChecker().catch(e=>{this.emit("error",e)})})}async stalledChecker(){for(;!this.closing&&!this.paused;){try{await this.checkConnectionError(()=>this.moveStalledJobsToWait())}catch(e){this.emit("error",e)}await new Promise(e=>{const t=setTimeout(e,this.opts.stalledInterval);this.stalledCheckStopper=()=>{clearTimeout(t),e()}})}}startLockExtenderTimer(e){this.opts.skipLockRenewal||(clearTimeout(this.extendLocksTimer),this.closed||(this.extendLocksTimer=setTimeout(async()=>{const t=Date.now(),n=[];for(const a of e){const{job:e,ts:i}=a;i?i+this.opts.lockRenewTime/2<t&&(a.ts=t,n.push(e)):a.ts=t}try{n.length&&await this.extendLocks(n)}catch(e){this.emit("error",e)}this.startLockExtenderTimer(e)},this.opts.lockRenewTime/2)))}async whenCurrentJobsFinished(e=!0){this.waiting?await this.blockingConnection.disconnect(e):e=!1,this.mainLoopRunning&&await this.mainLoopRunning,e&&await this.blockingConnection.reconnect()}async retryIfFailed(e,t){for(;;)try{return await e()}catch(e){if(this.emit("error",e),!t)return;await this.delay(t)}}async extendLocks(e){await this.trace(Pr.INTERNAL,"extendLocks",this.name,async t=>{null==t||t.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name,[Dr.WorkerJobsToExtendLocks]:e.map(e=>e.id)});try{const t=await this.scripts.extendLocks(e.map(e=>e.id),e.map(e=>e.token),this.opts.lockDuration);for(const e of t)this.emit("error",new Error(`could not renew lock for job ${e}`))}catch(e){this.emit("error",e)}})}async moveStalledJobsToWait(){await this.trace(Pr.INTERNAL,"moveStalledJobsToWait",this.name,async e=>{const t=await this.scripts.moveStalledJobsToWait();null==e||e.setAttributes({[Dr.WorkerId]:this.id,[Dr.WorkerName]:this.opts.name,[Dr.WorkerStalledJobs]:t}),t.forEach(t=>{null==e||e.addEvent("job stalled",{[Dr.JobId]:t}),this.emit("stalled",t,"active")})})}moveLimitedBackToWait(e,t){return e.moveToWait(t)}}var Bg;!function(e){e.blocking="blocking",e.normal="normal"}(Bg||(Bg={}));const zg=new Ur.exports.Redis({host:e.env.CACHE_REDIS_HOST,port:e.env.CACHE_REDIS_PORT,password:e.env.CACHE_PASSWORD,maxRetriesPerRequest:null});if(!global.crypto){const e=require("crypto");global.crypto={getRandomValues:t=>e.randomFillSync(t)}}const Yg={},$g={},Wg=e=>((e=>{$g[e]||($g[e]=new Dg(`client_${e}`,{connection:zg}),$g[e].on("progress",async(e,t)=>{console.log(e,"progress")}),$g[e].on("waiting",e=>{console.log(e,"waiting")}),$g[e].on("active",e=>{console.log(e,"active")}),$g[e].on("completed",e=>{console.log(e,"completed")}),$g[e].on("failed",(e,t)=>{console.log(e,"failed")}))})(e),new Lg(`client_${e}`,{connection:zg})),Hg=async(e,t)=>{const n=Wg(e);((e,t)=>{Yg[e]||(Yg[e]=new Gg(`client_${e}`,async e=>{try{const n=e.data;return await Qg(n,t,n.schema,{admin:!0})}catch(e){return{error:e}}},{connection:zg,concurrency:1,removeOnComplete:{count:0},removeOnFail:{count:0}})),Yg[e]})(e,t.services);const a=await n.add("orders",t,{removeOnComplete:{count:0},removeOnFail:{count:0}});if((await n.getJobCounts()).active,a){return await a.waitUntilFinished($g[e])}},Qg=async(e,t,n,a)=>{var i,r,o,s,l,c;try{if("update"==e.item){const a="performing_invoice"==e.collection?await wr(t,{id:{_eq:e.id}},["id","original_value","total_value","total_value_cashback","cashback","date_updated","client","user_created","commerical","poc"],n,"performing_invoice"):"shakepe_orders"==e.collection?await wr(t,{id:{_eq:e.id}},["id","original_value","total_value","commerical","total_value_cashback","cashback","date_updated","date_created","user_created","client","calculation","status","payment","cashback","type","campiagn","payment_terms","remaining_amount","payment_received","poc","*"],n,"shakepe_orders"):"client_product_mapping"==e.collection?await wr(t,{id:{_eq:e.data.id}},["id","credit_limt","date_updated","user_updated","client_id","user_created"],n,"client_product_mapping"):"corporate_load"==e.collection?await wr(t,{id:{_eq:e.id}},["id","amount","transaction_type","date_updated","user_created","payment_terms","client_name","poc"],n,"corporate_load"):"payment_verify"==e.collection?await wr(t,{id:{_eq:e.id}},["id","corporate_load.amount","corporate_load.transaction_type","corporate_load.id","corporate_load.payment_terms","corporate_load.poc","date_updated","user_created","amount","corporate_load.client_name"],n,"payment_verify"):"client"==e.collection?await wr(t,{id:{_eq:e.id}},["id","credit_limit","previous_credit_limit","credit_wallet","user_created","requested_credit_limit"],n,"client"):"poc_fund_transfer"==e.collection?await wr(t,{id:{_eq:e.id}},["client","sender_poc.*","receiver_poc.*","amount","status"],n,"poc_fund_transfer"):null;if(!a)return!0;{const r={...a[0],collection:e.collection};if("performing_invoice"===r.collection){const e=await wr(t,{id:{_eq:r.client}},["wallet","outstanding_wallet"],n,"client"),a=await wr(t,{id:{_eq:r.poc}},["id","wallet"],n,"client_point_of_contact"),i=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet),o=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),s=parseFloat("Cashback"===r.commerical?r.total_value_cashback:r.total_value?r.total_value:r.original_value).toFixed(2);await Zg(r.client,r.id,n,t,"credit","perform_invoice","wallet",s,o,r.user_created,null),await Xg(t,n,r.poc,s,i,"credit",r.user_created,"perform_invoice","cpp",r.id,r.client)}else if("shakepe_orders"===r.collection){const a=await wr(t,{id:{_eq:r.client}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),o=await wr(t,{id:{_eq:r.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),s=parseFloat(r.total_value_cashback?r.total_value_cashback:r.total_order_value),l=o[0].product_type.product_types,c=(o[0].id,await wr(t,{id:{_eq:r.poc}},["id","wallet"],n,"client_point_of_contact")),d=parseFloat(isNaN(c[0].wallet)?0:c[0].wallet),u=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet),p=parseFloat("Cashback"===r.commerical?r.total_value_cashback:r.total_value?r.total_value:r.original_value).toFixed(2),m=o[0].product_type.coin,h=await wr(t,{id:{_eq:r.poc}},["id",m],n,"client_point_of_contact"),y=o[0].coins?parseFloat(isNaN(h[0][m])?0:h[0][m]):0;if("Advance"==r.payment_terms&&"draft"==r.status){const a=parseFloat(e.data.total_value_cashback?e.data.total_value_cashback:e.data.total_order_value),i=parseFloat("Cashback"===r.commerical?e.data.total_value_cashback:e.data.total_value_cashback?e.data.total_value:e.data.original_value).toFixed(2);if(i<=d){if("true"==e.data.order_confirm){await Zg(r.client,r.id,n,t,"debit","shakepe_orders","wallet",i,u,r.user_created,r.calculation.includes("Previous")?"reserved":null);await Xg(t,n,r.poc,i,d,"debit",r.user_created,"shakepe_orders","cpp",r.id,r.client);await e_(t,n,"credit",y,a,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m);return{payment:"Payment Received",status:r.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:r.calculation.includes("Previous")?"Pending":null}}return{status:"draft"}}return{error:K.ERROR.INSUFFIENT}}if("Credit"==r.payment_terms&&"Payment Received"===e.data.payment){const e=await wr(t,{id:{_eq:r.client}},["wallet","credit_wallet","credit_used"],n,"client"),a=parseFloat(e[0].credit_wallet),i=parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used),o="partial_payment_recevied"==r.payment?parseFloat(r.remaining_amount).toFixed(2):parseFloat("Cashback"===r.commerical?r.total_value_cashback:r.total_value?r.total_value:r.original_value).toFixed(2),s=await wr(t,{_and:[{id:{_eq:r.poc}}]},["credit_used"],n,"client_point_of_contact"),l=parseFloat(isNaN(s[0].credit_used)?0:s[0].credit_used);await j({credit_used:l-o},"client_point_of_contact",t,r.poc,n,{admin:!0,user:r.user_created}),await j({credit_used:i-o},"client",t,r.client,n,{admin:!0,user:r.user_created}),await Zg(r.client,r.id,n,t,"credit","shakepe_orders","credit_wallet",o,a,r.user_created,null)}else if("Order Cancelled"==e.data.status){if("Advance"==r.payment_terms){const e=await wr(t,{id:{_eq:r.client}},["wallet","credit_wallet"],n,"client"),a=parseFloat(e[0].wallet);await Zg(r.client,r.id,n,t,"credit","shakepe_orders","wallet",p,a,r.user_created,"reverse"),await Xg(t,n,r.poc,p,d,"credit",r.user_created,"shakepe_orders","cpp",r.id,r.client),await e_(t,n,"debit",y,s,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m)}else if("Credit"==r.payment_terms&&"Payment Pending"==r.payment){const e=await wr(t,{id:{_eq:r.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await wr(t,{_and:[{id:{_eq:r.poc}}]},["credit_used"],n,"client_point_of_contact"),i=parseFloat(isNaN(a[0].credit_used)?0:a[0].credit_used);await j({credit_used:i-p},"client_point_of_contact",t,r.poc,n,{admin:!0,user:r.user_created});const o=parseFloat(e[0].credit_wallet),c=parseFloat(e[0].credit_used);await j({credit_used:c-p},"client",t,r.client,n,{admin:!0,user:r.user_created}),await Zg(r.client,r.id,n,t,"credit","shakepe_orders","credit_wallet",p,o,r.user_created,"reverse"),await e_(t,n,"debit",y,s,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m)}else if("Credit"==r.payment_terms&&"partial_payment_recevied"==r.payment){const e=await wr(t,{id:{_eq:r.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(e[0].wallet),i=parseFloat(e[0].credit_wallet),o=parseFloat(e[0].credit_used),c=await wr(t,{_and:[{id:{_eq:r.poc}}]},["credit_used"],n,"client_point_of_contact"),d=parseFloat(isNaN(c[0].credit_used)?0:c[0].credit_used);await j({credit_used:d-parseFloat(r.remaining_amount)},"client_point_of_contact",t,r.poc,n,{admin:!0,user:r.user_created}),await Zg(r.client,r.id,n,t,"credit","shakepe_orders","wallet",parseFloat(r.payment_received),a,r.user_created,"reverse"),await j({credit_used:o-parseFloat(r.remaining_amount)},"client",t,r.client,n,{admin:!0,user:r.user_created}),await Zg(r.client,r.id,n,t,"credit","shakepe_orders","credit_wallet",parseFloat(r.remaining_amount),i,r.user_created,"reverse"),await e_(t,n,"debit",y,s,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m)}}else if("Order Completed"==r.status&&"Cashback"==r.commerical&&(null==r?void 0:r.cashback)){const e=await wr(t,{id:{_eq:r.client}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(e[0].wallet);await Zg(r.client,r.id,n,t,"credit","shakepe_orders","wallet",null==r?void 0:r.cashback,a,r.user_created,"cashback"),await Xg(t,n,r.poc,parseFloat(null==r?void 0:r.cashback),d,"credit",r.user_created,"shakepe_orders","cpp","reverse",r.client)}else if("Order Processed"==e.data.status){if("ShakePe Points"==l){await j({consume_status:"not_consumed"},"shakepe_orders",t,r.id,n,{admin:!0,user:r.user_created}),await e_(t,n,"credit",y,s,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m),await fetch(process.env.SANTA_API+"?dispatch=add_products_from_zeus.ledger_credit",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+process.env.SANTA_TOKEN},body:JSON.stringify({user_id:0,user_email:null,user_name:0,firstname:0,lastname:0,request_id:0,company_id:0,entity_id:null,siteadmin_id:0,points_type:"A",amount:s,campaign_id:0,created_at:r.date_created,expire_date:"",action:"A",reason:"SP "+r.id+"/"+(null!=(i=null==r?void 0:r.po_number)?i:""),reward_point_change_id:0,timestamp:0,emp_id:0,is_code:0,zeus_company_id:r.poc})});return!0}await e_(t,n,"debit",y,s,r.user_created,r.poc,"cpp",r.client,"shakepe_orders",r.id,l,m)}}else if("client_product_mapping"==r.collection){const e=await wr(t,{id:{_eq:r.client_id}},["credit_wallet","credit_limit"],n,"client"),a=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),i=parseFloat(isNaN(e[0].credit_limit)?0:e[0].credit_limit),o=parseFloat(r.credit_limt).toFixed(2);await Zg(r.client_id,null,n,t,"credit",null,"credit_wallet",o,a,r.user_created,null),await j({credit_limit:i+o},"client",t,r.client_id,n,{admin:!0,user:r.user_created})}else if("payment_verify"==r.collection){if("reload"==r.corporate_load.transaction_type&&"advance"==r.corporate_load.payment_terms){const e=await wr(t,{id:{_eq:r.corporate_load.client_name}},["wallet"],n,"client"),a=parseFloat(e[0].wallet),i=parseFloat(r.amount).toFixed(2),o=await wr(t,{id:{_eq:r.corporate_load.poc}},["id","wallet"],n,"client_point_of_contact"),s=parseFloat(isNaN(o[0].wallet)?0:o[0].wallet);await Xg(t,n,r.corporate_load.poc,i,s,"credit",r.user_created,"corporate_load","cpp",r.corporate_load.id,r.corporate_load.client_name);await Zg(r.corporate_load.client_name,r.corporate_load.id,n,t,"credit","corporate_load","wallet",i,a,r.user_created,null)}else if("reload"==r.corporate_load.transaction_type&&"credit"==r.corporate_load.payment_terms){const e=await wr(t,{id:{_eq:r.corporate_load.client_name}},["wallet","credit_wallet","credit_used"],n,"client"),a=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,i=parseFloat(r.amount).toFixed(2),o=parseFloat(e[0].credit_wallet);await j({credit_used:a-i},"client",t,r.client,n,{admin:!0,user:r.user_created}),await Zg(r.corporate_load.client_name,r.corporate_load.id,n,t,"credit","corporate_load","credit_wallet",i,o,r.user_created,null)}}else if("corporate_load"==r.collection&&"approved"==e.data.status){if("cashback"==r.transaction_type){const e=await wr(t,{id:{_eq:r.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await wr(t,{id:{_eq:r.poc}},["id","wallet"],n,"client_point_of_contact"),i=parseFloat(r.amount).toFixed(2),o=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await Zg(r.client_name,r.id,n,t,"credit","corporate_load","wallet",i,o,r.user_created,null,"Corporate Load"),await Xg(t,n,r.poc,i,s,"credit",r.user_created,"corporate_load","cpp",null,r.client_name);return!0}if("debit"==r.transaction_type){const e=await wr(t,{id:{_eq:r.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await wr(t,{id:{_eq:r.poc}},["id","wallet"],n,"client_point_of_contact"),i=parseFloat(r.amount).toFixed(2),o=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await Zg(r.client_name,r.id,n,t,"debit","corporate_load","wallet",i,o,r.user_created,null,"Corporate Load"),await Xg(t,n,r.poc,i,s,"debit",r.user_created,"corporate_load","cpp",null,r.client_name);return!0}if("reload"==r.transaction_type&&"credit"==r.payment_terms){const e=await wr(t,{id:{_eq:r.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=await wr(t,{id:{_eq:r.poc}},["id","wallet"],n,"client_point_of_contact"),i=parseFloat(r.amount).toFixed(2),o=parseFloat(e[0].wallet),s=parseFloat(isNaN(a[0].wallet)?0:a[0].wallet);await Zg(r.client_name,r.id,n,t,"credit","corporate_load","wallet",i,o,r.user_created,null,"Corporate Load"),await Xg(t,n,r.poc,i,s,"credit",r.user_created,"corporate_load","cpp",null,r.client_name);return!0}}else if("corporate_load"==r.collection&&"cancelled"==e.data.status){if("reload"==r.transaction_type&&"credit"==r.payment_terms){const e=await wr(t,{id:{_eq:r.client_name}},["wallet","credit_wallet","credit_used","outstanding_wallet"],n,"client"),a=parseFloat(r.amount).toFixed(2),i=parseFloat(e[0].credit_wallet),o=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0;await j({credit_used:o-a},"client",t,r.client_name,n,{admin:!0,user:r.user_created}),await Zg(r.client_name,r.id,n,t,"credit","corporate_load","credit_wallet",a,i,r.user_created,null)}}else{if("client"==r.collection&&"approved"==e.data.credit_limit_status){const e=parseFloat((null==r?void 0:r.requested_credit_limit)-(null==r?void 0:r.credit_limit)).toFixed(2);parseFloat(isNaN(r.credit_wallet)?0:r.credit_wallet),parseFloat(isNaN(r.credit_limit)?0:r.credit_limit);return await Zg(r.id,null,n,t,"credit",null,"credit_wallet",e,null==r?void 0:r.credit_wallet,r.user_created,null),{credit_limit:null==r?void 0:r.requested_credit_limit}}if("poc_fund_transfer"==r.collection){const e=r.amount.toFixed(2);if(e>r.sender_poc.wallet)return{error:K.ERROR.INSUFFIENT};{const a=await wr(t,{id:{_eq:r.sender_poc.id}},["id","wallet"],n,"client_point_of_contact"),i=await wr(t,{id:{_eq:r.receiver_poc.id}},["id","wallet"],n,"client_point_of_contact");return await Xg(t,n,r.sender_poc.id,e,a[0].wallet,"debit",r.user_created,"poc_fund_transfer","cpp",null,r.client),await Xg(t,n,r.receiver_poc.id,e,i[0].wallet,"credit",r.user_created,"poc_fund_transfer","cpp",null,r.client),!0}}}}}else if("create"==e.item){const a=e.data;if(a&&"shakepe_orders"==e.collection&&"enterprise"!=e.data.type&&"DIY"!=e.data.type){const e=await wr(t,{id:{_eq:a.client}},["wallet","credit_wallet","credit_used"],n,"client"),i=await wr(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),r=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.*"],n,"client_product_mapping"),o=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),s=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),l=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,c=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),d=parseFloat("Cashback"==a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2),u=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),p=r[0].product_type.product_types,m=r[0].product_type.coin,h=await wr(t,{id:{_eq:a.poc}},["id",m],n,"client_point_of_contact"),y=r[0].coins?parseFloat(isNaN(h[0][m])?0:h[0][m]):0;if("Advance"==a.payment_terms){if(d<=s&&d<=o){const e=await Zg(a.client,a.id,n,t,"debit","shakepe_orders","wallet",d,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),i=await Xg(t,n,a.poc,d,o,"debit",a.user_created,"shakepe_orders","cpp",null,a.client);if("ShakePe Points"!=p){return{transaction_create:[e,i,await e_(t,n,"credit",y,u,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,p,m)],payment:"Payment Received",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null}}return{transaction_create:[e,i],payment:"Payment Received",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null,consume_status:"not_consumed"}}return{error:K.ERROR.INSUFFIENT}}if("Credit"==a.payment_terms){const e=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),r=e[0].product_type.product_types,u=e[0].product_type.coin,p=await wr(t,{id:{_eq:a.poc}},["id",u],n,"client_point_of_contact"),m=e[0].coins?parseFloat(isNaN(p[0][u])?0:p[0][u]):0;if(c<0)return{error:K.ERROR.NEGATIVE_VALUE};if(d<=o){const e=await Zg(a.client,a.id,n,t,"debit",null,"wallet",d,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),l=await Xg(t,n,a.poc,d,o,"debit",a.user_created,"shakepe_orders","shakepe_orders",null,a.client);return{transaction_create:[e,l,"ShakePe Points"!=r?await e_(t,n,"credit",m,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,r,u):null].filter(e=>null!=e),payment:"Payment Received",payment_terms:"Advance",status:a.calculation.includes("Previous")?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")?"Pending":null,consume_status:"not_consumed"}}if(0==o){const e=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),r=e[0].product_type.product_types,o=e[0].product_type.coin,s=await wr(t,{id:{_eq:a.poc}},["id",o],n,"client_point_of_contact"),u=e[0].coins?parseFloat(isNaN(s[0][o])?0:s[0][o]):0,p="ShakePe Points"!=r?await e_(t,n,"credit",u,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,r,o):null;await j({credit_used:l+d},"client",t,a.client,n,{admin:!0,user:a.user_created});const m=await Zg(a.client,a.id,n,t,"debit","shakepe_orders","credit_wallet",d,c,a.user_created,a.calculation.includes("Previous")||d>c?"reserved":null),h=await wr(t,{_and:[{id:{_eq:a.poc}}]},["credit_used"],n,"client_point_of_contact"),y=parseFloat(isNaN(h[0].credit_used)?0:h[0].credit_used);return await j({credit_used:y+d},"client_point_of_contact",t,a.poc,n,{admin:!0,user:a.user_created}),{transaction_create:[m,p].filter(e=>null!=e),payment:"Payment Pending",status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||d>c?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||d>c?"Pending":null,changes:d>c?"exceceed_limit":null,consume_status:"not_consumed"}}{const e=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),i=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),r=e[0].product_type.product_types,u=e[0].product_type.coin,p=await wr(t,{id:{_eq:a.poc}},["id",u],n,"client_point_of_contact"),m=e[0].coins?parseFloat(isNaN(p[0][u])?0:p[0][u]):0,h="ShakePe Points"!=r?await e_(t,n,"credit",m,i,a.user_created,a.poc,"cpp",a.client,"shakepe_orders",null,r,u):null,y=await Xg(t,n,a.poc,o,o,"debit",a.user_created,"shakepe_orders","cpp",null,a.client),f=await Zg(a.client,a.id,n,t,"debit",null,"wallet",o,s,a.user_created,a.calculation.includes("Previous")?"reserved":null),v=d-o;await j({credit_used:l+v},"client",t,a.client,n,{admin:!0,user:a.user_created});const b=await Zg(a.client,a.id,n,t,"debit",null,"credit_wallet",v,c,a.user_created,a.calculation.includes("Previous")||v>c?"reserved":null,"cpp"),g=await wr(t,{_and:[{id:{_eq:a.poc}}]},["credit_used"],n,"client_point_of_contact"),_=parseFloat(isNaN(g[0].credit_used)?0:g[0].credit_used);return await j({credit_used:_+c},"client_point_of_contact",t,a.poc,n,{admin:!0,user:a.user_created}),{transaction_create:[y,b,h,f].filter(e=>null!=e),payment:"partial_payment_recevied",status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||v>c?"Approval Pending":"Order Open",approval_status:a.calculation.includes("Previous")||a.modified_credit_days&&a.actual_credit_days<a.credit_days||v>c?"Pending":null,remaining_amount:v,payment_received:o,changes:v>c?"exceceed_limit":null,consume_status:"not_consumed"}}}}else{if(a&&"shakepe_orders"==e.collection&&"DIY"==e.data.type){const i=await wr(t,{id:{_eq:a.client}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),r=await wr(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),o=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin"],n,"client_product_mapping"),s=parseFloat(a.total_value_cashback?a.total_value_cashback:a.total_order_value),l=o[0].product_type.product_types,c=o[0].product_type.coin,d=await wr(t,{id:{_eq:a.poc}},["id",c],n,"client_point_of_contact"),u=o[0].coins?parseFloat(isNaN(d[0][c])?0:d[0][c]):0,p=parseFloat(isNaN(r[0].wallet)?0:r[0].wallet),m=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),h=parseFloat("Cashback"===a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2);if(h<=m&&h<=p){const i=await Zg(a.client,a.id,n,t,"debit","shakepe_orders","wallet",h,m,a.user_created,null,e.data.type),r=await Xg(t,n,a.poc,h,p,"debit",a.user_created,"shakepe_orders","diy",null,a.client),o=await e_(t,n,"credit",u,s,a.user_created,a.poc,"diy",a.client,"shakepe_orders",null,l,c);let d;let y;return"DIY"===e.data.type&&"Order Open"===a.status||(d=await e_(t,n,"debit",u+s,s,a.user_created,a.poc,"diy",a.client,"shakepe_orders",null,l,c)),y=0===d||null==d||null==d?[i,o,r]:[i,d,o,r],{transaction_create:y,payment:"Payment Received"}}return{error:K.ERROR.INSUFFIENT}}if(a&&"shakepe_orders"==e.collection&&"enterprise"==e.data.type){const e=await wr(t,{id:{_eq:a.product_type}},["id","coins","product_type.product_types","product_type.coin","discount"],n,"client_product_mapping"),i=parseFloat("Cashback"===a.commerical?a.total_value_cashback:a.total_value?a.total_value:a.original_value).toFixed(2),r=e[0].product_type.product_types,o=e[0].product_type.coin,s=e[0].discount,l=await wr(t,{id:{_eq:a.poc}},["id",o],n,"client_point_of_contact"),c=l[0][o]?parseFloat(isNaN(l[0][o])?0:l[0][o]):0;if(i<=c){const e=await e_(t,n,"debit",c,i,a.user_created,a.poc,"enterprise",a.client,"shakepe_orders",null,r,o),l=await wr(t,{_and:[{client:{_eq:a.client}},{poc:{_eq:a.poc}},{status:{_in:["Order Completed","Order Processed"]}},{product_type:{product_type:{_eq:7}}},{campiagn:{_null:!0}},{consume_status:{_in:["not_consumed","partially_consumed"]}}]},["id","total_order_value","consume_status","consumed_amount","date_created"],n,"shakepe_orders"),d={create:[],update:[],delete:[]};if(0!=l.length){const e=t_(l,i,s);await Promise.all(e.updatedRecords.map(async e=>{if("not_consumed"==e.consume_status)return null;await j({consume_status:e.consume_status,consumed_amount:e.consumed_amount},"shakepe_orders",t,e.id,n,{admin:!0,user:a.user_created}),d.create.push({shakepe_orders_id:"+",related_shakepe_orders_id:{id:e.id},amount_debit_coins:null==e?void 0:e.consumeNow})}))}return{consumer:d,transaction_create:[e],payment:"Payment Received"}}return{error:K.ERROR.INSUFFIENT}}if(a&&"corporate_load"==e.collection&&"credit"==e.data.payment_terms){const e=await wr(t,{id:{_eq:a.client_name}},["wallet","outstanding_wallet","credit_wallet","credit_used"],n,"client"),i=parseFloat(isNaN(e[0].credit_wallet)?0:e[0].credit_wallet),r=e[0].credit_used?parseFloat(isNaN(e[0].credit_used)?0:e[0].credit_used):0,o=parseFloat(a.amount).toFixed(2);await j({credit_used:r+o},"client",t,a.client_name,n,{admin:!0,user:a.user_created});return{transaction_create:[await Zg(a.client_name,a.id,n,t,"debit","corporate_load","credit_wallet",o,i,a.user_created,"reserved","Corporate Load")],payment:"Payment Pending"}}if(a&&"corporate_load"==e.collection&&"payment_gateway"==e.data.payment_mode){const e=await wr(t,{id:{_eq:a.client_name}},["wallet"],n,"client"),i=await wr(t,{id:{_eq:a.poc}},["id","wallet"],n,"client_point_of_contact"),r=parseFloat(isNaN(e[0].wallet)?0:e[0].wallet),o=parseFloat(a.amount).toFixed(2),s=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),l=await Xg(t,n,a.poc,o,s,"credit",a.user_created,"corporate_load","cpp",null,a.client_name);return{transaction_create:[await Zg(a.client_name,a.id,n,t,"credit",null,"wallet",o,r,a.user_created,null,"diy"),l]}}if(a&&"poc_wallet_transfer"==e.collection){const e=await wr(t,{id:{_eq:a.poc}},["id","wallet","links_coins","shakepe_codes_coins","shakepe_points_coins"],n,"client_point_of_contact"),i=await wr(t,{_and:[{id:{_eq:a.client}},{product_type_mapping:{product_type:{_eq:a.type_of_transfer}}},{poc:{_in:[a.poc]}}]},["wallet","product_type_mapping.product_type.product_types","product_type_mapping.discount","product_type_mapping.product_type.id","product_type_mapping.product_type.coin"],n,"client");if(Number.isInteger(a.amount)&&Number(a.amount)>0){if(i.length>0){const d=parseFloat(isNaN(i[0].wallet)?0:i[0].wallet),u=i[0].product_type_mapping.find(e=>e.product_type.id==a.type_of_transfer),p=u.discount,m=u.product_type.product_types,h=u.product_type.coin,y=parseFloat(isNaN(null==(r=e[0])?void 0:r.wallet)?0:null==(o=e[0])?void 0:o.wallet),f=await wr(t,{_and:[{client:{_eq:a.client}},{poc:{_eq:a.poc}},{status:{_in:["Order Completed","Order Processed"]}},{product_type:{product_type:{_eq:a.type_of_transfer}}},{campiagn:{_null:!0}},{consume_status:{_in:["not_consumed","partially_consumed"]}}]},["id","total_order_value","consume_status","consumed_amount","date_created","discount","add_or_reduce_discount","order_level_discount"],n,"shakepe_orders"),v={create:[],update:[],delete:[]},b={create:[],update:[],delete:[]},g=7==a.type_of_transfer?parseFloat(null==(s=e[0])?void 0:s.shakepe_points_coins):8==a.type_of_transfer?parseFloat(null==(l=e[0])?void 0:l.shakepe_codes_coins):parseFloat(null==(c=e[0])?void 0:c.links_coins);if(g>=a.amount){if(0!=f.length){const e=t_(f,a.amount,p),i=0!=e.remainingBalance?await e_(t,n,"debit",g,e.remainingBalance,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h):null;i&&b.update.push({transfer_poc:"+",id:i});await Promise.all(e.updatedRecords.map(async e=>{var i;if("not_consumed"!=e.consume_status){const r=await wr(t,{id:{_eq:a.poc}},["id","wallet","links_coins","shakepe_codes_coins","shakepe_points_coins"],n,"client_point_of_contact"),o=parseFloat(null==(i=r[0])?void 0:i.shakepe_points_coins);await j({consume_status:e.consume_status,consumed_amount:e.consumed_amount},"shakepe_orders",t,e.id,n,{admin:!0,user:a.user_created}),console.log(h);const s=await e_(t,n,"debit",o,e.consumeNow,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h);return v.create.push({poc_wallet_transfer_id:"+",shakepe_orders_id:{id:e.id},amount_debit_coins:e.consumeNow,amount_credit_poc:e.return_amount}),b.update.push({transfer_poc:"+",id:s}),s}return null}));const r=await Xg(t,n,a.poc,e.totalValue,y,"credit",a.user_created,null,"cpp",null,a.client),o=await Zg(a.client,a.id,n,t,"credit","shakepe_orders","wallet",e.totalValue,d,a.user_created,null,"cpp");return b.update.push({transfer_poc:"+",id:r}),b.update.push({transfer_poc:"+",id:o}),{cpp_ledger:b,amount_utilized:v}}{const e=a.amount-a.amount*p/100,i=await e_(t,n,"debit",g,a.amount,a.user_created,a.poc,"cpp",a.client,"poc_wallet_transfer",null,m,h),r=await Xg(t,n,a.poc,e,y,"credit",a.user_created,null,"cpp",null,a.client),o=await Zg(a.client,a.id,n,t,"credit","shakepe_orders","wallet",e,d,a.user_created,null,"cpp");return{cpp_ledger:{create:[],update:[{transfer_poc:"+",id:r},{transfer_poc:"+",id:i},{transfer_poc:"+",id:o}],delete:[]}}}}return{error:K.ERROR.INSUFFIENT}}return{error:K.ERROR.PRODUCT_TYPE}}return{error:K.ERROR.IS_NAN}}}}}catch(e){return{error:K.ERROR.INSUFFIENT}}},Zg=async(e,t,n,a,i,r,o,s,l,c,d,u)=>{const p="credit"==i?parseFloat(l)+parseFloat(s):parseFloat(l)-parseFloat(s);return await j("outstanding_wallet"==o?{outstanding_wallet:p}:"credit_wallet"==o?{credit_wallet:p}:{wallet:p},"client",a,e,n,{admin:!0,user:c}),await S(a,"cpp_ledger",{opening_balance:l,closing_balance:p,client_id:e,amount:"credit"==i?s:null,wallet_type:o,status:i,tag:d||("perform_invoice"==r?"perform_invoice":null),debit_amount:"debit"==i?s:null,order_id:"shakepe_orders"==r?t:null,load_id:"corporate_load"==r?t:null,pi_id:"perform_invoice"==r?t:null,pi:"perform_invoice"==r?t:null,order:"shakepe_orders"==r?t:null,load:"corporate_load"==r?t:null,order_source:u||"cpp"},n,{admin:!0,user:c})},Xg=async(e,t,n,a,i,r,o,s,l,c,d)=>{const u="credit"==r?parseFloat(i)+parseFloat(a):parseFloat(i)-parseFloat(a);return await j({wallet:u},"client_point_of_contact",e,n,t,{admin:!0,user:o}),await S(e,"cpp_ledger",{opening_balance:i,closing_balance:u,amount:"credit"==r?a:null,wallet_type:"poc_wallet",status:r,tag:null,debit_amount:"debit"==r?a:null,load_id:"corporate_load"==s?c:null,pi_id:"perform_invoice"==s?c:null,pi:"perform_invoice"==s?c:null,order:"shakepe_orders"==s?c:null,order_id:"shakepe_orders"==s?c:null,load:"corporate_load"==s?c:null,order_source:l||"cpp",poc_id:n,client_id:d},t,{admin:!0,user:o})},e_=async(e,t,n,a,i,r,o,s,l,c,d,u,p)=>{const m="credit"==n?parseFloat(a)+parseFloat(i):parseFloat(a)-parseFloat(i);return await j({[p]:m},"client_point_of_contact",e,o,t,{admin:!0,user:r}),await S(e,"cpp_ledger",{opening_balance:a,closing_balance:m,amount:"credit"==n?i:null,wallet_type:u,status:n,tag:null,debit_amount:"debit"==n?i:null,order:"shakepe_orders"==c?d:null,order_id:"shakepe_orders"==c?d:null,order_source:s||"cpp",client_id:l,poc_id:o},t,{admin:!0,user:r})};function t_(e,t,n){const a=e.reduce((e,t)=>e+(t.total_order_value-parseFloat(t.consumed_amount)),0);let i=Math.min(a,t);const r=t-a>0?t-a:0;let o=0;for(const t of e){if(i<=0)break;const n=t.total_order_value-parseFloat(t.consumed_amount),a=Math.min(n,i);t.consumed_amount=(parseFloat(t.consumed_amount)+a).toFixed(2),t.consumeNow=a,t.return_amount=a-((null==t?void 0:t.order_level_discount)?a*(null==t?void 0:t.order_level_discount)/100:a*(null==t?void 0:t.discount)/100),o+=t.return_amount,t.consume_status=t.total_order_value===parseFloat(t.consumed_amount)?"consumed":"partially_consumed",delete e.total_order_value,delete t.date_created,i-=a}return{updatedRecords:e,remainingBalance:r,totalValue:o+r-r*n/100}}const n_=13,a_=14,i_=15,r_=16,o_=17,s_=18,l_=19,c_=20,d_=21,u_=22,p_=23,m_=24,h_=25,y_=26,f_=28,v_=45,b_=2,g_=3,__=4,x_=5,k_=6,E_=7,K_=8,w_=9,S_=10,I_=11,j_=12,R_=13,T_=14,O_=15,A_=16,C_=17,D_=18,P_=19,N_=20,M_=21,F_=22,L_=23,J_=26;var U_=async({filter:t,action:n},{services:a,exceptions:i,database:r,getSchema:o})=>{const{ItemsService:s,MailService:l}=a,{InvalidPayloadException:c}=i,d=await o();async function u(e,t){try{const n={},a=new s("error_log_zeus",{schema:await o(),accountability:{admin:!0}});n.collection_name=t,n.error=String(e),await a.createOne({error:JSON.stringify(n)})}catch(e){return e}}t("shakepe_orders.items.create",e=>{if(""==e.discount)return{...e,discount:0}}),t("shakepe_orders.items.create",async(e,t,n)=>{var i,r,o,s,l,u,p,m,h;if("enterprise"==(null==e?void 0:e.type)||"DIY"==(null==e?void 0:e.type)){const t=await Hg(null==e?void 0:e.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:e});if(null==t?void 0:t.error)throw new c(null==t?void 0:t.error);return null==e||delete e.csv_file,e.consumer=(null==t?void 0:t.consumer)?null==t?void 0:t.consumer:null,null==t||delete t.consumer,{...e,...t}}{const t=parseFloat((null==e?void 0:e.service_amount)&&(null==e?void 0:e.service_fee)?e.service_amount:0),n=parseFloat(e.discount?e.discount:0),y=parseFloat((null==e?void 0:e.order_level_discount)?e.order_level_discount:0),f=(null==e?void 0:e.filtering_with_product_type)===K.GPR,v=(null==e?void 0:e.filtering_with_product_type)==K.GIFT_CARD,b=(null==e?void 0:e.filtering_with_product_type)==K.VOUCHERS,g=(null==e?void 0:e.filtering_with_product_type)==K.LINKS,_=(null==e?void 0:e.filtering_with_product_type)==K.SHAKEPEPOINT,x=(null==e?void 0:e.filtering_with_product_type)==K.SHAKEPECODE,k=e.commerical;switch(await wr(a,{id:{_eq:e.client}},K.FIELDSDATA.CLIENT,d,"client"),!0){case f:const E=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),w=E-E*n/100+t;if(y!=n&&(null==e?void 0:e.add_or_reduce_discount)){const i=E-E*y/100+t,r={...e,total_value:k==K.UPFRONT&&e.add_or_reduce_discount?i:null,original_value:k==K.UPFRONT?w:null,cashback:k!=K.UPFRONT?E*y/100:null,total_value_cashback:k!=K.UPFRONT?E+t:null,previous_cashback:k!=K.UPFRONT?E*n/100:null,total_order_value:k==K.UPFRONT?E:null},o=await Hg(null==r?void 0:r.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:r});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...r,...o}}{const i={...e,original_value:k==K.UPFRONT?w:null,cashback:k!=K.UPFRONT?E*n/100:null,total_value_cashback:k!=K.UPFRONT?E+t:null,total_order_value:k==K.UPFRONT?E:null},r=await Hg(null==i?void 0:i.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:i});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...i,...r}}case v:let S=0,I=0,j=0;null==(i=e.brand_sku_mapping)||i.create.forEach(e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:r}=e.gift_card_order_details_id;if(j+=n*a,S+=(n-n*i/100)*a,i<r||i>r&&t){I+=(n-n*r/100)*a}else{I+=(n-n*i/100)*a}});const R=S+t,T={...e,total_value:k==K.UPFRONT&&S!=I?I+t:null,original_value:k==K.UPFRONT?R:null,cashback:k!=K.UPFRONT&&S!=I?j-I:k!=K.UPFRONT?j-S:null,previous_cashback:k!=K.UPFRONT&&S!=I?j-S:null,total_value_cashback:k!=K.UPFRONT?j+t:null,total_order_value:k==K.UPFRONT?j:null},O=await Hg(null==T?void 0:T.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:T});if(null==O?void 0:O.error)throw new c(null==O?void 0:O.error);return{...T,...O};case b:let A=0,C=0,D=0;(null==(r=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:r.create)&&(null==(o=null==e?void 0:e.brand_sku_mapping_voucher)||o.create.forEach(e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:r}=e;if(D+=n*a,A+=(n-n*i/100)*a,i<r||i>r&&t){C+=(n-n*r/100)*a}else{C+=(n-n*i/100)*a}}));const P=A+t,N={...e,total_value:k==K.UPFRONT&&A!=C?C+t:null,original_value:k==K.UPFRONT?P:null,cashback:k!=K.UPFRONT&&A!=C?D-C:k!=K.UPFRONT?D-A:null,previous_cashback:k!=K.UPFRONT&&A!=C?D-A:null,total_value_cashback:k!=K.UPFRONT?D+t:null,total_order_value:k==K.UPFRONT?D:null},M=await Hg(null==N?void 0:N.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:N});if(null==M?void 0:M.error)throw new c(null==M?void 0:M.error);return{...N,...M};case g:if((null==(l=null==(s=null==e?void 0:e.generic_links_details)?void 0:s.create)?void 0:l.length)>0){let i=0,r=0,o=0;null==(u=null==e?void 0:e.generic_links_details)||u.create.map(t=>{const{denomination:a,quantity:s}=t;i+=a*s,r+=a*s*(n/100),o+=e.add_or_reduce_discount?a*s*(e.order_level_discount/100):a*s*(n/100)});const s={...e,total_value:k==K.UPFRONT&&e.add_or_reduce_discount?i-o+t:null,original_value:k==K.UPFRONT?i-r+t:null,cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?o:k!=K.UPFRONT?r:null,previous_cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?r:null,total_value_cashback:k!=K.UPFRONT?i+t:null,total_order_value:k==K.UPFRONT?i:null},l=await Hg(null==s?void 0:s.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:s});if(null==l?void 0:l.error)throw new c(null==l?void 0:l.error);return{...s,...l}}if((null==(m=null==(p=null==e?void 0:e.catalog_links_orders)?void 0:p.create)?void 0:m.length)>0){let n=0,i=0,r=0;null==(h=null==e?void 0:e.catalog_links_orders)||h.create.map(t=>{const{denomination:a,total_no_links:o}=t;n+=a*o,i+=a*o*(e.discount/100),r+=e.order_level_discount&&(null==e?void 0:e.add_or_reduce_discount)?a*o*(e.order_level_discount/100):a*o*(e.discount/100)});const o={...e,total_value:k==K.UPFRONT&&e.add_or_reduce_discount?n-r+t:null,original_value:k==K.UPFRONT?n-i+t:null,cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?r:k!=K.UPFRONT?i:null,previous_cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?i:null,total_value_cashback:k!=K.UPFRONT?n+t:null,total_order_value:k==K.UPFRONT?n:null},s=await Hg(null==o?void 0:o.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:o});if(null==s?void 0:s.error)throw new c(null==s?void 0:s.error);return{...o,...s}}break;case _:const F=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),L=F-F*n/100;if(y>n&&(null==e?void 0:e.add_or_reduce_discount)||y<n){const i=F-F*y/100+t,r={...e,total_value:k==K.UPFRONT&&e.add_or_reduce_discount?i:null,original_value:k==K.UPFRONT?L+t:null,cashback:k!=K.UPFRONT&&(null==e?void 0:e.add_or_reduce_discount)?F*y/100:null,total_value_cashback:k!=K.UPFRONT?F+t:null,previous_cashback:k!=K.UPFRONT&&(null==e?void 0:e.add_or_reduce_discount)?F*n/100:null,total_order_value:k==K.UPFRONT?F:null},o=await Hg(null==r?void 0:r.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:r});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...r,...o}}{const i={...e,original_value:k==K.UPFRONT?L+t:null,cashback:k!=K.UPFRONT?F*n/100:null,total_value_cashback:k!=K.UPFRONT?F+t:null,total_order_value:k==K.UPFRONT?F:null},r=await Hg(null==i?void 0:i.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:i});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...i,...r}}case x:let J=0,U=0,q=0;e.shakepe_codes_orders.create.map(t=>{const{value_of_code:a,total_no_of_codes:i}=t;J+=a*i,U+=a*i*(n/100),q+=y&&(null==e?void 0:e.add_or_reduce_discount)?a*i*(y/100):a*i*(n/100)});const V={...e,total_value:k==K.UPFRONT&&e.add_or_reduce_discount?J-q+t:null,original_value:k==K.UPFRONT?J-U+t:null,cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?q:k!=K.UPFRONT?U:null,previous_cashback:k!=K.UPFRONT&&e.add_or_reduce_discount?U:null,total_value_cashback:k!=K.UPFRONT?J+t:null,total_order_value:k==K.UPFRONT?J:null},G=await Hg(null==V?void 0:V.client,{collection:"shakepe_orders",item:"create",schema:d,services:a,data:V});if(null==G?void 0:G.error)throw new c(null==G?void 0:G.error);return{...V,...G}}}}),t("shakepe_orders.items.update",async(e,t)=>{var n,a,i;try{const r=new s("shakepe_orders",{schema:await o(),accountability:{admin:!0}}),l=await r.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["filtering_with_product_type","status","brand_sku_mapping_voucher.id","brand_sku_mapping_voucher.quantity","brand_sku_mapping_voucher.denomination","brand_sku_mapping_voucher.vendor_detail.*"]});if(e.status==K.ORDERPROCESSED&&e.status==K.ORDEROPEN||!e.brand_sku_mapping_voucher||(null==(n=l[0])?void 0:n.status)!=K.ORDERPROCESSED&&(null==(a=l[0])?void 0:a.status)!=K.ORDEROPEN||(null==(i=l[0])?void 0:i.filtering_with_product_type)!=K.VOUCHERS||0==l.length)return e;return l.map(t=>{var n,a;if(0!=t.brand_sku_mapping_voucher.length&&0!=(null==(a=null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update)?void 0:a.length))return t.brand_sku_mapping_voucher.map(t=>{if(t.vendor_detail.reduce((e,t)=>e+t.quantity?parseInt(t.quantity):0,0)+e.brand_sku_mapping_voucher.update.filter(e=>e.id==t.id).reduce((e,n)=>e+n.vendor_detail.create.reduce((e,n)=>e+(null==n?void 0:n.quantity)?parseInt(n.quantity):t.quantity,0),0)<=t.quantity)return e;throw{error:K.VENDORQTYEXCEDDED}})}).flat(1)[0]}catch(e){if((null==e?void 0:e.error)==K.VENDORQTYEXCEDDED)throw new c(K.VENDORQTYEXCEDDED);u(e,"shakepe_order")}}),t("shakepe_orders.items.create",e=>{var t;try{if(null==(t=null==e?void 0:e.calculation)?void 0:t.includes(K.PREVIOUS))return e.credit_addional_discount=K.APPROVEPENDIND,e.approval_status=K.PENDING,e.status=K.APPROVALPENDING,e}catch(e){u(e,"shakepe_order")}}),t("client.items.create",async e=>{var t;try{if((null==e?void 0:e.client_type)==K.CORPORATE){if(!(null==(t=null==e?void 0:e.client_address_details)?void 0:t.create)||e.client_address_details.create.every(e=>e.client_address_id.gstin))return e;throw{error:K.GSTINMANDATORY}}}catch(e){if((null==e?void 0:e.error)==K.GSTINMANDATORY)throw new c(K.GSTINMANDATORY);u(e,"client")}}),t("client.items.update",async(e,t)=>{var n,i,r,l,p,m;try{const c=new s("client",{schema:await o(),accountability:{admin:!0}}),u=await c.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["poc.client_address.client_address_id.gstin","id","client_limit"]});if("approved"==(null==e?void 0:e.credit_limit_status)){return await Hg(t.keys[0],{collection:"client",item:"update",schema:d,services:a,data:e,id:t.keys[0]})}if((null==e?void 0:e.client_type)==K.CORPORATE){let t=null==(i=null==(n=u[0])?void 0:n.poc)?void 0:i.map(e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.every(e=>e.client_address_id.gstin))}).every(e=>1==e);if(t=t=(null==(r=null==e?void 0:e.poc)?void 0:r.update)?e.poc.update.map(e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.update.every(e=>e.client_address_id.gstin))}).every(e=>1==e):0==(null==(p=null==(l=null==e?void 0:e.poc)?void 0:l.update)?void 0:p.length),t&&(t=null==(m=null==e?void 0:e.poc)?void 0:m.create.map(e=>{var t;return!!(null==(t=null==e?void 0:e.client_address)?void 0:t.create.every(e=>e.client_address_id.gstin))}).every(e=>1==e)),t)return e;throw{error:K.GSTINMANDATORY}}}catch(e){if((null==e?void 0:e.error)==K.GSTINMANDATORY)throw new c(K.GSTINMANDATORY);u(e,"client")}}),t("client.items.create",async e=>{var t,n;try{if(null==(t=e.product_type_mapping)?void 0:t.create){const t=(null==(n=null==e?void 0:e.product_type_mapping)?void 0:n.create)?e.product_type_mapping.create:[];if([...new Set(t.map(e=>e.product_type))].length!=t.length)throw{error:K.DUPLICATEPRODUCT};return e}}catch(e){if((null==e?void 0:e.error)==K.DUPLICATEPRODUCT)throw new c(K.DUPLICATEPRODUCT);u(e,"client")}}),t("client.items.update",async(e,t)=>{var n,a;try{const i=new s("client",{schema:await o(),accountability:{admin:!0}}),r=await i.readByQuery({filter:{id:{_eq:t.keys[0]}},fields:["product_type_mapping.product_type"]});if(r.length>0&&(null==(n=r[0])?void 0:n.product_type_mapping)&&(null==(a=null==e?void 0:e.product_type_mapping)?void 0:a.create.length)>0){r[0].product_type_mapping.push(...e.product_type_mapping.create);const t=r[0].product_type_mapping;if([...new Set(t.map(e=>e.product_type))].length!=t.length)throw{error:K.DUPLICATEPRODUCT};return e}}catch(e){if((null==e?void 0:e.error)==K.DUPLICATEPRODUCT)throw new c(K.DUPLICATEPRODUCT);u(e,"client")}}),t("client.items.create",async e=>{var t;try{if((null==(t=null==e?void 0:e.client_address_details)?void 0:t.create.length)>0){const t=e.client_address_details.create;let n=e;return t.forEach(t=>{var a,i;const r=null==(i=null==(a=null==t?void 0:t.client_address_id)?void 0:a.point_of_contact)?void 0:i.create;let o=0;r?r.forEach(e=>{if(e.primary&&(o++,o>1))throw{error:K.PRIMARYCONTACT}}):n=e}),e}}catch(e){if((null==e?void 0:e.error)==K.PRIMARYCONTACT)throw new c(K.PRIMARYCONTACT);u(e,"client")}}),t("client.items.create",async e=>{const t=e;return t.product_type_mapping.update=[],t.previous_discount=t.discount,t}),t("client_product_mapping.items.update",async(t,n,i)=>{var o,s,p,m,h,y,f,v,b,g,_,x,k,E,w,S,T,O,A,C,D,P,N,M,F,L,J,U,q,V,G,B,z,Y,$,W,H,Q,Z,X,ee,te,ne,ae,ie,re,oe,se,le,ce,de,ue,pe,me,he,ye,fe,ve,be,ge,_e,xe,ke,Ee,Ke,we,Se,Ie,je,Re,Te,Oe,Ae,Ce,De,Pe,Ne,Me,Fe,Le,Je,Ue,qe,Ve,Ge,Be,ze,Ye,$e,We,He,Qe,Ze,Xe,et,tt,nt,at,it,rt,ot,st,lt,ct,dt,ut,pt,mt,ht,yt,ft,vt,bt,gt,_t,xt,kt,Et,Kt,wt,St,It,jt,Rt,Tt,Ot,At,Ct,Dt,Pt,Nt,Mt,Ft,Lt,Jt,Ut,qt,Vt,Gt,Bt,zt,Yt,$t,Wt,Ht,Qt,Zt,Xt,en,tn,nn,an,rn,on,sn,ln,cn,dn,un,pn,mn,hn,yn,fn,vn,bn,gn,_n,xn,kn,En,Kn,wn,Sn,In,jn,Rn,Tn,On,An,Cn,Dn,Pn,Nn,Mn,Fn,Ln,Jn,Un,qn,Vn,Gn,Bn,zn,Yn,$n,Wn,Hn,Qn,Zn,Xn,ea,ta,na,aa,ia,ra,oa,sa,la,ca,da,ua,pa,ma,ha,ya,fa,va,ba,ga,_a,xa,ka,Ea,Ka,wa,Sa,Ia,ja,Ra,Ta,Oa,Aa,Ca,Da,Pa,Na,Ma,Fa,La,Ja,Ua,qa,Va,Ga,Ba,za,Ya,$a,Wa,Ha,Qa,Za,Xa,ei,ti,ni,ai,ii,ri,oi,si,li,ci,di,ui,pi,mi,hi,yi,fi,vi,bi,gi,_i,xi,ki,Ei,Ki,wi,Si,Ii,ji,Ri,Ti,Oi,Ai,Ci,Di,Pi,Ni,Mi,Fi,Li,Ji,Ui,qi,Vi,Gi,Bi,zi,Yi,$i,Wi,Hi,Qi,Zi,Xi,er,tr,nr,ar,ir,rr,or,sr,lr,cr,dr,ur,pr,mr,hr,yr,fr,vr,br,gr,_r,xr,kr,Er,Sr,Ir,jr,Rr,Tr,Or,Ar,Cr,Dr,Pr,Nr,Mr,Fr,Lr,Jr,Ur,qr,Vr,Gr,Br,zr,Yr,$r,Wr,Hr,Qr,Zr,Xr,eo,to,no,ao,io,ro,oo,so,lo,co,uo,po,mo,ho,yo,fo,vo,bo,go,_o,xo,ko,Eo,Ko,wo,So,Io,jo,Ro,To,Oo,Ao,Co,Do,Po,No,Mo,Fo,Lo,Jo,Uo,qo,Vo,Go,Bo,zo,Yo,$o,Wo,Ho,Qo,Zo,Xo,es,ts,ns,as,is,rs,os,ss,ls,cs,ds,us,ps,ms,hs,ys,fs,vs,bs,gs,_s,xs,ks,Es,Ks,ws,Ss,Is,js,Rs,Ts,Os,As,Cs,Ds,Ps,Ns,Ms,Fs,Ls,Js,Us,qs,Vs,Gs,Bs,zs,Ys,$s,Ws,Hs,Qs,Zs,Xs,el,tl,nl,al,il,rl,ol,sl,ll,cl,dl,ul,pl,ml,hl,yl,fl,vl,bl,gl,_l,xl,kl,El,Kl,wl,Sl,Il,jl,Rl,Tl,Ol,Al,Cl,Dl,Pl,Nl,Ml,Fl,Ll,Jl,Ul,ql,Vl,Gl,Bl,zl,Yl,$l,Wl,Hl,Ql,Zl,Xl,ec,tc,nc,ac,ic,rc,oc,sc,lc,cc,dc,uc,pc,mc,hc,yc,fc,vc,bc,gc,_c,xc,kc,Ec,Kc,wc,Sc,Ic,jc,Rc,Tc,Oc,Ac,Cc,Dc,Pc,Nc,Mc,Fc;const Lc={id:{_eq:null==n?void 0:n.keys[0]}},Jc={id:{_eq:null==(o=null==i?void 0:i.accountability)?void 0:o.user}},Uc={id:{_eq:e.env.ACCOUNT_ROLE}},qc=null==(p=null==(s=(await wr(a,Uc,["users.email"],d,"directus_roles"))[0])?void 0:s.users)?void 0:p.map(e=>e.email),Vc=await wr(a,Jc,["first_name"],d,"directus_users"),Gc=K.FIELDSDATA.CLIENT_UPDATE,Bc=await wr(a,Lc,Gc,d,n.collection);new l({schema:d,knex:r});const zc={id:{_eq:e.env.MANAGAMENT_ROLE}},Yc=await wr(a,zc,["users.email","users.id"],d,"directus_roles"),$c=null==(h=null==(m=Yc[0])?void 0:m.users)?void 0:h.map(e=>e.email),Wc=null==(f=null==(y=Yc[0])?void 0:y.users)?void 0:f.map(e=>e.id);if(Bc.length>0&&!(null==(b=null==(v=t[0])?void 0:v.client_product_mapping)?void 0:b.update))if("Credit"==Bc[0].payment_terms&&(null==(g=Bc[0])?void 0:g.credit_limt)&&"N"==Bc[0].action&&(null==t?void 0:t.approval_status)==K.APPROVED&&(await Hg(null==(_=Bc[0])?void 0:_.id,{collection:"client_product_mapping",item:"update",schema:d,services:a,data:{id:Bc[0].id}}),t.action="Y"),(null==(x=Bc[0])?void 0:x.approval_status)!=K.PENDING)try{if((null==t?void 0:t.approval_status)==K.APPROVED){if((null==(k=Bc[0])?void 0:k.changes)==K.COMMERICAL){const a={to:[null==(w=null==(E=Bc[0])?void 0:E.user_updated)?void 0:w.email],users:[null==(T=null==(S=Bc[0])?void 0:S.user_updated)?void 0:T.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(A=null==(O=Bc[0])?void 0:O.client_id)?void 0:A.client_name,client_email:null==(D=null==(C=Bc[0])?void 0:C.client_id)?void 0:D.client_email,client_pan:null==(N=null==(P=Bc[0])?void 0:P.client_id)?void 0:N.pan_number,product_type:null==(M=Bc[0])?void 0:M.product,payment_terms:null==(F=Bc[0])?void 0:F.payment_terms,previous_commercials:(null==(L=Bc[0])?void 0:L.commerical)==K.UPFRONT?K.Cashback:K.UPFRONT,new_commercials:null==(J=Bc[0])?void 0:J.commerical,approved:null==(U=Vc[0])?void 0:U.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"approved",client_name:null==(V=null==(q=Bc[0])?void 0:q.client_id)?void 0:V.client_name,client_email:null==(B=null==(G=Bc[0])?void 0:G.client_id)?void 0:B.client_email,client_pan:null==(Y=null==(z=Bc[0])?void 0:z.client_id)?void 0:Y.pan_number,product_type:null==($=Bc[0])?void 0:$.product,payment_terms:null==(W=Bc[0])?void 0:W.payment_terms,previous_commercials:(null==(H=Bc[0])?void 0:H.commerical)==K.UPFRONT?K.Cashback:K.UPFRONT,new_commercials:null==(Q=Bc[0])?void 0:Q.commerical,approved:null==(Z=Vc[0])?void 0:Z.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${i_}`,a).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${w_}`,a).then(e=>e).catch(e=>e),t.changes=null,t}if((null==(X=Bc[0])?void 0:X.changes)==K.CREDITDAYS){const a={to:[null==(te=null==(ee=Bc[0])?void 0:ee.user_updated)?void 0:te.email],users:[null==(ae=null==(ne=Bc[0])?void 0:ne.user_updated)?void 0:ae.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(re=null==(ie=Bc[0])?void 0:ie.client_id)?void 0:re.client_name,client_email:null==(se=null==(oe=Bc[0])?void 0:oe.client_id)?void 0:se.client_email,client_pan:null==(ce=null==(le=Bc[0])?void 0:le.client_id)?void 0:ce.pan_number,product_type:null==(de=Bc[0])?void 0:de.product,payment_terms:null==(ue=Bc[0])?void 0:ue.payment_terms,previous_credit:null==(pe=Bc[0])?void 0:pe.previous_credit,modify_credit:null==(me=Bc[0])?void 0:me.credit_days,approved:null==(he=Vc[0])?void 0:he.first_name},body_data:{filter:"approved",client_name:null==(fe=null==(ye=Bc[0])?void 0:ye.client_id)?void 0:fe.client_name,client_email:null==(be=null==(ve=Bc[0])?void 0:ve.client_id)?void 0:be.client_email,client_pan:null==(_e=null==(ge=Bc[0])?void 0:ge.client_id)?void 0:_e.pan_number,product_type:null==(xe=Bc[0])?void 0:xe.product,payment_terms:null==(ke=Bc[0])?void 0:ke.payment_terms,previous_credit:null==(Ee=Bc[0])?void 0:Ee.previous_credit,modify_credit:null==(Ke=Bc[0])?void 0:Ke.credit_days,approved:null==(we=Vc[0])?void 0:we.first_name},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${r_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${j_}`,a).then(e=>e).catch(e=>e),t.changes=null,t.previous_credit=null,t}if((null==(Se=Bc[0])?void 0:Se.changes)==K.PAYMENTTERMS){const a={to:[null==(je=null==(Ie=Bc[0])?void 0:Ie.user_updated)?void 0:je.email],users:[null==(Te=null==(Re=Bc[0])?void 0:Re.user_updated)?void 0:Te.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(Ae=null==(Oe=Bc[0])?void 0:Oe.client_id)?void 0:Ae.client_name,client_email:null==(De=null==(Ce=Bc[0])?void 0:Ce.client_id)?void 0:De.client_email,client_pan:null==(Ne=null==(Pe=Bc[0])?void 0:Pe.client_id)?void 0:Ne.pan_number,product_type:null==(Me=Bc[0])?void 0:Me.product,payment_terms:null==(Fe=Bc[0])?void 0:Fe.payment_terms,previous_credit:null==(Le=Bc[0])?void 0:Le.previous_credit,modify_credit:null==(Je=Bc[0])?void 0:Je.credit_days,approved:null==(Ue=Vc[0])?void 0:Ue.first_name},body_data:{filter:"approved",client_name:null==(Ve=null==(qe=Bc[0])?void 0:qe.client_id)?void 0:Ve.client_name,client_email:null==(Be=null==(Ge=Bc[0])?void 0:Ge.client_id)?void 0:Be.client_email,client_pan:null==(Ye=null==(ze=Bc[0])?void 0:ze.client_id)?void 0:Ye.pan_number,product_type:null==($e=Bc[0])?void 0:$e.product,payment_terms:null==(We=Bc[0])?void 0:We.payment_terms,previous_credit:null==(He=Bc[0])?void 0:He.previous_credit,modify_credit:null==(Qe=Bc[0])?void 0:Qe.credit_days,approved:null==(Ze=Vc[0])?void 0:Ze.first_name},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${o_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${O_}`,a).then(e=>e).catch(e=>e),t.changes=null,t}if((null==(Xe=Bc[0])?void 0:Xe.changes)==K.DISCOUNT){const a={to:[null==(tt=null==(et=Bc[0])?void 0:et.user_updated)?void 0:tt.email],users:[null==(at=null==(nt=Bc[0])?void 0:nt.user_updated)?void 0:at.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(rt=null==(it=Bc[0])?void 0:it.client_id)?void 0:rt.client_name,client_email:null==(st=null==(ot=Bc[0])?void 0:ot.client_id)?void 0:st.client_email,client_pan:null==(ct=null==(lt=Bc[0])?void 0:lt.client_id)?void 0:ct.pan_number,product_type:null==(dt=Bc[0])?void 0:dt.product,payment_terms:null==(ut=Bc[0])?void 0:ut.payment_terms,previous_discount:null==(pt=Bc[0])?void 0:pt.previous_discount,modify_discount:null==(mt=Bc[0])?void 0:mt.discount,approved:null==(ht=Vc[0])?void 0:ht.first_name},body_data:{filter:"approved",client_name:null==(ft=null==(yt=Bc[0])?void 0:yt.client_id)?void 0:ft.client_name,client_email:null==(bt=null==(vt=Bc[0])?void 0:vt.client_id)?void 0:bt.client_email,client_pan:null==(_t=null==(gt=Bc[0])?void 0:gt.client_id)?void 0:_t.pan_number,product_type:null==(xt=Bc[0])?void 0:xt.product,payment_terms:null==(kt=Bc[0])?void 0:kt.payment_terms,previous_discount:null==(Et=Bc[0])?void 0:Et.previous_discount,modify_discount:null==(Kt=Bc[0])?void 0:Kt.discount,approved:null==(wt=Vc[0])?void 0:wt.first_name},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${s_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${D_}`,a).then(e=>e).catch(e=>e),t.previous_discount=null,t.changes=null,t}if((null==(St=Bc[0])?void 0:St.changes)==K.BRANDDISCOUNT){const i={to:[null==(jt=null==(It=Bc[0])?void 0:It.user_created)?void 0:jt.email],users:[null==(Tt=null==(Rt=Bc[0])?void 0:Rt.user_created)?void 0:Tt.id],cc:qc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==(At=null==(Ot=Bc[0])?void 0:Ot.client_id)?void 0:At.client_name,client_email:null==(Dt=null==(Ct=Bc[0])?void 0:Ct.client_id)?void 0:Dt.client_email,client_pan:null==(Nt=null==(Pt=Bc[0])?void 0:Pt.client_id)?void 0:Nt.pan_number,product_type:null==(Mt=Bc[0])?void 0:Mt.product,noofbrands:null==(Ft=Bc[0])?void 0:Ft.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(Lt=Vc[0])?void 0:Lt.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,i).then(e=>i).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${N_}`,i).then(e=>e).catch(e=>e);const r=Bc[0].client_product_mapping.map(e=>e.id);return R({previous_discount:0},"client_brand_commercial",a,r,d,null),t.changes=null,t}if((null==(Jt=Bc[0])?void 0:Jt.changes)==K.NEW&&(null==(qt=null==(Ut=Bc[0])?void 0:Ut.client_product_mapping)?void 0:qt.length)>0){const a={to:[null==(Gt=null==(Vt=Bc[0])?void 0:Vt.user_created)?void 0:Gt.email],users:[null==(zt=null==(Bt=Bc[0])?void 0:Bt.user_created)?void 0:zt.id],cc:qc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==($t=null==(Yt=Bc[0])?void 0:Yt.client_id)?void 0:$t.client_name,client_email:null==(Ht=null==(Wt=Bc[0])?void 0:Wt.client_id)?void 0:Ht.client_email,client_pan:null==(Zt=null==(Qt=Bc[0])?void 0:Qt.client_id)?void 0:Zt.pan_number,product_type:null==(Xt=Bc[0])?void 0:Xt.product,noofbrands:null==(en=Bc[0])?void 0:en.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(tn=Vc[0])?void 0:tn.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${N_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands}}else{if((null==(nn=Bc[0])?void 0:nn.approval_status)==K.DECLINED){t.approval_status=K.PENDING,t.status=K.INACTIVE,t.changes=(null==(an=Bc[0])?void 0:an.changes)?null==(rn=Bc[0])?void 0:rn.changes:(null==(on=Bc[0])?void 0:on.discount)<(null==t?void 0:t.discount)?K.DISCOUNT:(null==t?void 0:t.credit_days)>(null==(sn=Bc[0])?void 0:sn.previous_credit)?K.CREDITDAYS:null;null==(dn=null==(cn=null==(ln=Bc[0])?void 0:ln.client_product_mapping)?void 0:cn.filter(e=>e.status==K.DECLINED))||dn.map(async e=>{await j({status:K.PENDING},"client_brand_commercial",a,e.id,d,i.accountability)});return t}if(null==t?void 0:t.commerical){const a={to:$c,users:Wc,cc:qc,subject_data:{sub:"request",data:t,client_name:null==(pn=null==(un=Bc[0])?void 0:un.client_id)?void 0:pn.client_name,client_email:null==(hn=null==(mn=Bc[0])?void 0:mn.client_id)?void 0:hn.client_email,client_pan:null==(fn=null==(yn=Bc[0])?void 0:yn.client_id)?void 0:fn.pan_number,product_type:null==(vn=Bc[0])?void 0:vn.product,payment_terms:null==(bn=Bc[0])?void 0:bn.payment_terms,previous_commercials:null==(gn=Bc[0])?void 0:gn.commerical,new_commercials:null==t?void 0:t.commerical,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(xn=null==(_n=Bc[0])?void 0:_n.client_id)?void 0:xn.client_name,client_email:null==(En=null==(kn=Bc[0])?void 0:kn.client_id)?void 0:En.client_email,client_pan:null==(wn=null==(Kn=Bc[0])?void 0:Kn.client_id)?void 0:wn.pan_number,product_type:null==(Sn=Bc[0])?void 0:Sn.product,payment_terms:null==(In=Bc[0])?void 0:In.payment_terms,previous_commercials:null==(jn=Bc[0])?void 0:jn.commerical,new_commercials:null==t?void 0:t.commerical,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${i_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${K_}`,a).then(e=>e).catch(e=>e),t.approval_status=K.PENDING,t.status=K.INACTIVE,t.changes=K.COMMERICAL,t}if((null==(Rn=Bc[0])?void 0:Rn.discount)<(null==t?void 0:t.discount)){const a={to:$c,users:Wc,cc:qc,subject_data:{sub:"request",data:t,client_name:null==(On=null==(Tn=Bc[0])?void 0:Tn.client_id)?void 0:On.client_name,client_email:null==(Cn=null==(An=Bc[0])?void 0:An.client_id)?void 0:Cn.client_email,client_pan:null==(Pn=null==(Dn=Bc[0])?void 0:Dn.client_id)?void 0:Pn.pan_number,product_type:null==(Nn=Bc[0])?void 0:Nn.product,payment_terms:null==(Mn=Bc[0])?void 0:Mn.payment_terms,previous_discount:null==(Fn=Bc[0])?void 0:Fn.discount,modify_discount:null==t?void 0:t.discount,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(Jn=null==(Ln=Bc[0])?void 0:Ln.client_id)?void 0:Jn.client_name,client_email:null==(qn=null==(Un=Bc[0])?void 0:Un.client_id)?void 0:qn.client_email,client_pan:null==(Gn=null==(Vn=Bc[0])?void 0:Vn.client_id)?void 0:Gn.pan_number,product_type:null==(Bn=Bc[0])?void 0:Bn.product,payment_terms:null==(zn=Bc[0])?void 0:zn.payment_terms,previous_discount:null==(Yn=Bc[0])?void 0:Yn.discount,modify_discount:null==t?void 0:t.discount,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${s_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${C_}`,a).then(e=>e).catch(e=>e),t.approval_status=K.PENDING,t.status=K.INACTIVE,t.changes=K.DISCOUNT,t.previous_discount=(null==($n=Bc[0])?void 0:$n.previous_discount)?null==(Wn=Bc[0])?void 0:Wn.previous_discount:null==(Hn=Bc[0])?void 0:Hn.discount,t}if(null==(Qn=null==t?void 0:t.client_product_mapping)?void 0:Qn.update){const a=null==(Zn=Bc[0])?void 0:Zn.client_product_mapping,i=null==(Xn=null==t?void 0:t.client_product_mapping)?void 0:Xn.update;if(a.some(e=>{const t=i.find(t=>t.id===e.id);return t&&(null==t?void 0:t.discount)>(null==e?void 0:e.discount)||(null==e?void 0:e.previous_discount)<(null==t?void 0:t.discount)})){const a=t.client_product_mapping.update.map(e=>{const t=Bc[0].client_product_mapping.find(t=>t.id===e.id);return t?t.id:null}).filter(e=>null!==e),i=e.env.CURRENT_URL+"admin/content/client_brand_commercial/",r=a.map(e=>`${i}${e}`),o=t.client_product_mapping.update.map(e=>{var t;const n=null==(t=Bc[0])?void 0:t.client_product_mapping.find(t=>t.id==e.id);return n&&!(null==e?void 0:e.previous_discount)?{...e,status:K.PENDING,previous_discount:n.discount,brand_name:n.brand_name}:e}),s={to:$c,users:Wc,body_data:{client_name:null==(ta=null==(ea=Bc[0])?void 0:ea.client_id)?void 0:ta.client_name,client_email:null==(aa=null==(na=Bc[0])?void 0:na.client_id)?void 0:aa.client_email,client_pan:null==(ra=null==(ia=Bc[0])?void 0:ia.client_id)?void 0:ra.pan_number,commercials:null==(oa=Bc[0])?void 0:oa.commerical,product_type:null==(sa=Bc[0])?void 0:sa.product,payment_terms:null==(la=Bc[0])?void 0:la.payment_terms,link:r,brand_detail:o},subject_data:{client_name:null==(da=null==(ca=Bc[0])?void 0:ca.client_id)?void 0:da.client_name,client_email:null==(pa=null==(ua=Bc[0])?void 0:ua.client_id)?void 0:pa.client_email,client_pan:null==(ha=null==(ma=Bc[0])?void 0:ma.client_id)?void 0:ha.pan_number,commercials:null==(ya=Bc[0])?void 0:ya.commerical,product_type:null==(fa=Bc[0])?void 0:fa.product,payment_terms:null==(va=Bc[0])?void 0:va.payment_terms,link:r,brand_detail:o},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${v_}`,s).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${J_}`,s).then(e=>e).catch(e=>e),t.client_product_mapping.update=o,t}if((null==(ba=Bc[0])?void 0:ba.approval_status)==K.DECLINED){if((null==(ga=Bc[0])?void 0:ga.payment_terms)==K.ADVANCE){const t={to:$c,users:Wc,cc:qc,body_data:{client_name:null==(_a=Bc[0])?void 0:_a.client_id.client_name,client_email:null==(xa=Bc[0])?void 0:xa.client_id.client_email,client_pan:null==(ka=Bc[0])?void 0:ka.client_id.pan_number,commercials:Bc[0].commerical,product_type:Bc[0].product,payment_terms:Bc[0].payment_terms,url_link:e.env.CURRENT_URL}};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${u_}`,t).then(e=>t).catch(e=>e)}return t.approval_status=K.PENDING,t.status=K.INACTIVE,t}}if(u({log:"Credit"},"client_product_mapping"),(null==t?void 0:t.payment_terms)==K.CREDIT){u({log:"Credit Days"},"client_product_mapping");const a={to:$c,users:Wc,cc:qc,subject_data:{sub:"request",data:t,client_name:null==(Ka=null==(Ea=Bc[0])?void 0:Ea.client_id)?void 0:Ka.client_name,client_email:null==(Sa=null==(wa=Bc[0])?void 0:wa.client_id)?void 0:Sa.client_email,client_pan:null==(ja=null==(Ia=Bc[0])?void 0:Ia.client_id)?void 0:ja.pan_number,product_type:null==(Ra=Bc[0])?void 0:Ra.product,payment_terms:null==(Ta=Bc[0])?void 0:Ta.payment_terms,credit_day:null==(Oa=Bc[0])?void 0:Oa.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(Ca=null==(Aa=Bc[0])?void 0:Aa.client_id)?void 0:Ca.client_name,client_email:null==(Pa=null==(Da=Bc[0])?void 0:Da.client_id)?void 0:Pa.client_email,client_pan:null==(Ma=null==(Na=Bc[0])?void 0:Na.client_id)?void 0:Ma.pan_number,product_type:null==(Fa=Bc[0])?void 0:Fa.product,payment_terms:null==(La=Bc[0])?void 0:La.payment_terms,credit_day:null==(Ja=Bc[0])?void 0:Ja.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${o_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${T_}`,a).then(e=>e).catch(e=>e),t.approval_status=K.PENDING,t.status=K.INACTIVE,t.changes=K.PAYMENTTERMS,t}if((null==(Ua=Bc[0])?void 0:Ua.credit_days)<(null==t?void 0:t.credit_days)||(null==(qa=Bc[0])?void 0:qa.previous_credit)){const a={to:$c,users:Wc,cc:qc,subject_data:{sub:"request",data:t,client_name:null==(Ga=null==(Va=Bc[0])?void 0:Va.client_id)?void 0:Ga.client_name,client_email:null==(za=null==(Ba=Bc[0])?void 0:Ba.client_id)?void 0:za.client_email,client_pan:null==($a=null==(Ya=Bc[0])?void 0:Ya.client_id)?void 0:$a.pan_number,product_type:null==(Wa=Bc[0])?void 0:Wa.product,payment_terms:null==(Ha=Bc[0])?void 0:Ha.payment_terms,credit_days:null==(Qa=Bc[0])?void 0:Qa.credit_days,modify_days:null==t?void 0:t.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"request",client_name:null==(Xa=null==(Za=Bc[0])?void 0:Za.client_id)?void 0:Xa.client_name,client_email:null==(ti=null==(ei=Bc[0])?void 0:ei.client_id)?void 0:ti.client_email,client_pan:null==(ai=null==(ni=Bc[0])?void 0:ni.client_id)?void 0:ai.pan_number,product_type:null==(ii=Bc[0])?void 0:ii.product,payment_terms:null==(ri=Bc[0])?void 0:ri.payment_terms,credit_days:null==(oi=Bc[0])?void 0:oi.credit_days,modify_days:null==t?void 0:t.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${r_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${I_}`,a).then(e=>e).catch(e=>e),t.approval_status=K.PENDING,t.status=K.INACTIVE,t.previous_credit=(null==(si=Bc[0])?void 0:si.previous_credit)?null==(li=Bc[0])?void 0:li.previous_credit:null==(ci=Bc[0])?void 0:ci.credit_days,t.changes=K.CREDITDAYS,t}if((null==t?void 0:t.requestBrands)&&(null==t?void 0:t.approval_status)==K.DECLINED)return delete t.requestBrands,t}}catch(e){throw new c(K.PENDING_MESSAGE)}else if((null==t?void 0:t.approval_status)==K.DECLINED){const r={id:{_eq:null==(di=null==i?void 0:i.accountability)?void 0:di.user}},o=await wr(a,r,["first_name"],d,"directus_users");if((null==(ui=Bc[0])?void 0:ui.changes)==K.COMMERICAL){const a={to:[null==(mi=null==(pi=Bc[0])?void 0:pi.user_updated)?void 0:mi.email],users:[null==(yi=null==(hi=Bc[0])?void 0:hi.user_updated)?void 0:yi.id],cc:qc,subject_data:{sub:"declined",data:t,client_name:null==(vi=null==(fi=Bc[0])?void 0:fi.client_id)?void 0:vi.client_name,client_email:null==(gi=null==(bi=Bc[0])?void 0:bi.client_id)?void 0:gi.client_email,client_pan:null==(xi=null==(_i=Bc[0])?void 0:_i.client_id)?void 0:xi.pan_number,product_type:null==(ki=Bc[0])?void 0:ki.product,payment_terms:null==(Ei=Bc[0])?void 0:Ei.payment_terms,previous_commercials:null==(Ki=Bc[0])?void 0:Ki.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(wi=o[0])?void 0:wi.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"declined",client_name:null==(Ii=null==(Si=Bc[0])?void 0:Si.client_id)?void 0:Ii.client_name,client_email:null==(Ri=null==(ji=Bc[0])?void 0:ji.client_id)?void 0:Ri.client_email,client_pan:null==(Oi=null==(Ti=Bc[0])?void 0:Ti.client_id)?void 0:Oi.pan_number,product_type:null==(Ai=Bc[0])?void 0:Ai.product,payment_terms:null==(Ci=Bc[0])?void 0:Ci.payment_terms,previous_commercials:null==(Di=Bc[0])?void 0:Di.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Pi=o[0])?void 0:Pi.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${i_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${S_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Ni=Bc[0])?void 0:Ni.changes)==K.CREDITDAYS){const a={to:[null==(Fi=null==(Mi=Bc[0])?void 0:Mi.user_updated)?void 0:Fi.email],users:[null==(Ji=null==(Li=Bc[0])?void 0:Li.user_updated)?void 0:Ji.id],cc:qc,subject_data:{sub:"declined",data:t,client_name:null==(qi=null==(Ui=Bc[0])?void 0:Ui.client_id)?void 0:qi.client_name,client_email:null==(Gi=null==(Vi=Bc[0])?void 0:Vi.client_id)?void 0:Gi.client_email,client_pan:null==(zi=null==(Bi=Bc[0])?void 0:Bi.client_id)?void 0:zi.pan_number,product_type:null==(Yi=Bc[0])?void 0:Yi.product,payment_terms:null==($i=Bc[0])?void 0:$i.payment_terms,previous_credit:null==(Wi=Bc[0])?void 0:Wi.previous_credit,modify_credit:null==(Hi=Bc[0])?void 0:Hi.credit_days,declined:null==(Qi=Vc[0])?void 0:Qi.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"declined",client_name:null==(Xi=null==(Zi=Bc[0])?void 0:Zi.client_id)?void 0:Xi.client_name,client_email:null==(tr=null==(er=Bc[0])?void 0:er.client_id)?void 0:tr.client_email,client_pan:null==(ar=null==(nr=Bc[0])?void 0:nr.client_id)?void 0:ar.pan_number,product_type:null==(ir=Bc[0])?void 0:ir.product,payment_terms:null==(rr=Bc[0])?void 0:rr.payment_terms,previous_credit:null==(or=Bc[0])?void 0:or.previous_credit,modify_credit:null==(sr=Bc[0])?void 0:sr.credit_days,declined:null==(lr=Vc[0])?void 0:lr.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${r_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${R_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(cr=Bc[0])?void 0:cr.changes)==K.PAYMENTTERMS){const a={to:[null==(ur=null==(dr=Bc[0])?void 0:dr.user_updated)?void 0:ur.email],users:[null==(mr=null==(pr=Bc[0])?void 0:pr.user_updated)?void 0:mr.id],cc:qc,subject_data:{sub:"declined",data:t,client_name:null==(yr=null==(hr=Bc[0])?void 0:hr.client_id)?void 0:yr.client_name,client_email:null==(vr=null==(fr=Bc[0])?void 0:fr.client_id)?void 0:vr.client_email,client_pan:null==(gr=null==(br=Bc[0])?void 0:br.client_id)?void 0:gr.pan_number,product_type:null==(_r=Bc[0])?void 0:_r.product,payment_terms:null==(xr=Bc[0])?void 0:xr.payment_terms,credit_day:null==(kr=Bc[0])?void 0:kr.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0])},body_data:{filter:"declined",client_name:null==(Sr=null==(Er=Bc[0])?void 0:Er.client_id)?void 0:Sr.client_name,client_email:null==(jr=null==(Ir=Bc[0])?void 0:Ir.client_id)?void 0:jr.client_email,client_pan:null==(Tr=null==(Rr=Bc[0])?void 0:Rr.client_id)?void 0:Tr.pan_number,product_type:null==(Or=Bc[0])?void 0:Or.product,payment_terms:null==(Ar=Bc[0])?void 0:Ar.payment_terms,previous_credit:null==(Cr=Bc[0])?void 0:Cr.previous_credit,modify_credit:null==(Dr=Bc[0])?void 0:Dr.credit_days,declined:null==(Pr=Vc[0])?void 0:Pr.first_name,credit_day:null==(Nr=Bc[0])?void 0:Nr.credit_days},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${o_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${A_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Mr=Bc[0])?void 0:Mr.changes)==K.DISCOUNT){const a={to:[null==(Lr=null==(Fr=Bc[0])?void 0:Fr.user_updated)?void 0:Lr.email],users:[null==(Ur=null==(Jr=Bc[0])?void 0:Jr.user_updated)?void 0:Ur.id],cc:qc,subject_data:{sub:"declined",data:t,client_name:null==(Vr=null==(qr=Bc[0])?void 0:qr.client_id)?void 0:Vr.client_name,client_email:null==(Br=null==(Gr=Bc[0])?void 0:Gr.client_id)?void 0:Br.client_email,client_pan:null==(Yr=null==(zr=Bc[0])?void 0:zr.client_id)?void 0:Yr.pan_number,product_type:null==($r=Bc[0])?void 0:$r.product,payment_terms:null==(Wr=Bc[0])?void 0:Wr.payment_terms,previous_discount:null==(Hr=Bc[0])?void 0:Hr.previous_discount,modify_discount:null==(Qr=Bc[0])?void 0:Qr.discount,declined:null==(Zr=Vc[0])?void 0:Zr.first_name,comment:null==t?void 0:t.comment},body_data:{filter:"declined",client_name:null==(eo=null==(Xr=Bc[0])?void 0:Xr.client_id)?void 0:eo.client_name,client_email:null==(no=null==(to=Bc[0])?void 0:to.client_id)?void 0:no.client_email,client_pan:null==(io=null==(ao=Bc[0])?void 0:ao.client_id)?void 0:io.pan_number,product_type:null==(ro=Bc[0])?void 0:ro.product,payment_terms:null==(oo=Bc[0])?void 0:oo.payment_terms,previous_discount:null==(so=Bc[0])?void 0:so.previous_discount,modify_discount:null==(lo=Bc[0])?void 0:lo.discount,declined:null==(co=Vc[0])?void 0:co.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${s_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${P_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(uo=Bc[0])?void 0:uo.changes)==K.NEW&&(null==(mo=null==(po=Bc[0])?void 0:po.client_product_mapping)?void 0:mo.length)>0){const r={to:[null==(yo=null==(ho=Bc[0])?void 0:ho.user_created)?void 0:yo.email],users:[null==(vo=null==(fo=Bc[0])?void 0:fo.user_created)?void 0:vo.id],cc:qc,subject_data:{sub:"declined",data:t},body_data:{filter:"declined",client_name:null==(go=null==(bo=Bc[0])?void 0:bo.client_id)?void 0:go.client_name,client_email:null==(xo=null==(_o=Bc[0])?void 0:_o.client_id)?void 0:xo.client_email,client_pan:null==(Eo=null==(ko=Bc[0])?void 0:ko.client_id)?void 0:Eo.pan_number,product_type:null==(Ko=Bc[0])?void 0:Ko.product,noofbrands:(null==(wo=null==t?void 0:t.requestBrands)?void 0:wo.length)?t.requestBrands.length:null==(So=Bc[0])?void 0:So.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(Io=Vc[0])?void 0:Io.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,r).then(e=>r).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${M_}`,r).then(e=>e).catch(e=>e);const o=(null==(jo=null==t?void 0:t.requestBrands)?void 0:jo.length)>0?null==t?void 0:t.requestBrands:Bc[0].client_product_mapping.map(e=>e.id);if(R({status:K.DECLINED},"client_brand_commercial",a,o,d,i.accountability),null==t?void 0:t.requestBrands)return delete t.requestBrands,t}if((null==(Ro=Bc[0])?void 0:Ro.changes)==K.BRANDDISCOUNT){const a={to:[null==(Oo=null==(To=Bc[0])?void 0:To.user_updated)?void 0:Oo.email],users:[null==(Co=null==(Ao=Bc[0])?void 0:Ao.user_updated)?void 0:Co.id],cc:qc,subject_data:{sub:"declined",data:t,client_name:null==(Po=null==(Do=Bc[0])?void 0:Do.client_id)?void 0:Po.client_name,client_email:null==(Mo=null==(No=Bc[0])?void 0:No.client_id)?void 0:Mo.client_email,client_pan:null==(Lo=null==(Fo=Bc[0])?void 0:Fo.client_id)?void 0:Lo.pan_number,product_type:null==(Jo=Bc[0])?void 0:Jo.product,payment_terms:null==(Uo=Bc[0])?void 0:Uo.payment_terms,previous_commercials:null==(qo=Bc[0])?void 0:qo.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Vo=o[0])?void 0:Vo.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),url_link:e.env.CURRENT_URL},body_data:{filter:"declined",client_name:null==(Bo=null==(Go=Bc[0])?void 0:Go.client_id)?void 0:Bo.client_name,client_email:null==(Yo=null==(zo=Bc[0])?void 0:zo.client_id)?void 0:Yo.client_email,client_pan:null==(Wo=null==($o=Bc[0])?void 0:$o.client_id)?void 0:Wo.pan_number,product_type:null==(Ho=Bc[0])?void 0:Ho.product,payment_terms:null==(Qo=Bc[0])?void 0:Qo.payment_terms,previous_commercials:null==(Zo=Bc[0])?void 0:Zo.commerical,new_commercials:null==t?void 0:t.commerical,declined:null==(Xo=o[0])?void 0:Xo.first_name,comment:null==t?void 0:t.comment,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),url_link:e.env.CURRENT_URL},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${i_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${S_}`,a).then(e=>e).catch(e=>e),(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}}else{if((null==t?void 0:t.approval_status)!=K.APPROVED)throw new c(K.PENDING_MESSAGE);if((null==(es=Bc[0])?void 0:es.changes)==K.COMMERICAL){const a={to:[null==(ns=null==(ts=Bc[0])?void 0:ts.user_updated)?void 0:ns.email],users:[null==(is=null==(as=Bc[0])?void 0:as.user_updated)?void 0:is.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(os=null==(rs=Bc[0])?void 0:rs.client_id)?void 0:os.client_name,client_email:null==(ls=null==(ss=Bc[0])?void 0:ss.client_id)?void 0:ls.client_email,client_pan:null==(ds=null==(cs=Bc[0])?void 0:cs.client_id)?void 0:ds.pan_number,product_type:null==(us=Bc[0])?void 0:us.product,payment_terms:null==(ps=Bc[0])?void 0:ps.payment_terms,previous_commercials:(null==(ms=Bc[0])?void 0:ms.commerical)==K.UPFRONT?K.Cashback:K.UPFRONT,new_commercials:null==(hs=Bc[0])?void 0:hs.commerical,approved:null==(ys=Vc[0])?void 0:ys.first_name,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0],body_data:{filter:"approved",client_name:null==(vs=null==(fs=Bc[0])?void 0:fs.client_id)?void 0:vs.client_name,client_email:null==(gs=null==(bs=Bc[0])?void 0:bs.client_id)?void 0:gs.client_email,client_pan:null==(xs=null==(_s=Bc[0])?void 0:_s.client_id)?void 0:xs.pan_number,product_type:null==(ks=Bc[0])?void 0:ks.product,payment_terms:null==(Es=Bc[0])?void 0:Es.payment_terms,previous_commercials:(null==(Ks=Bc[0])?void 0:Ks.commerical)==K.UPFRONT?K.Cashback:K.UPFRONT,new_commercials:null==(ws=Bc[0])?void 0:ws.commerical,approved:null==(Ss=Vc[0])?void 0:Ss.first_name,comment:null==t?void 0:t.comment}};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${i_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${w_}`,a).then(e=>e).catch(e=>e),t.changes=null,t}if((null==(Is=Bc[0])?void 0:Is.changes)==K.CREDITDAYS){const a={to:[null==(Rs=null==(js=Bc[0])?void 0:js.user_updated)?void 0:Rs.email],users:[null==(Os=null==(Ts=Bc[0])?void 0:Ts.user_updated)?void 0:Os.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(Cs=null==(As=Bc[0])?void 0:As.client_id)?void 0:Cs.client_name,client_email:null==(Ps=null==(Ds=Bc[0])?void 0:Ds.client_id)?void 0:Ps.client_email,client_pan:null==(Ms=null==(Ns=Bc[0])?void 0:Ns.client_id)?void 0:Ms.pan_number,product_type:null==(Fs=Bc[0])?void 0:Fs.product,payment_terms:null==(Ls=Bc[0])?void 0:Ls.payment_terms,previous_credit:null==(Js=Bc[0])?void 0:Js.previous_credit,modify_credit:null==(Us=Bc[0])?void 0:Us.credit_days,approved:null==(qs=Vc[0])?void 0:qs.first_name},body_data:{filter:"approved",client_name:null==(Gs=null==(Vs=Bc[0])?void 0:Vs.client_id)?void 0:Gs.client_name,client_email:null==(zs=null==(Bs=Bc[0])?void 0:Bs.client_id)?void 0:zs.client_email,client_pan:null==($s=null==(Ys=Bc[0])?void 0:Ys.client_id)?void 0:$s.pan_number,product_type:null==(Ws=Bc[0])?void 0:Ws.product,payment_terms:null==(Hs=Bc[0])?void 0:Hs.payment_terms,previous_credit:null==(Qs=Bc[0])?void 0:Qs.previous_credit,modify_credit:null==(Zs=Bc[0])?void 0:Zs.credit_days,approved:null==(Xs=Vc[0])?void 0:Xs.first_name},item:null==n?void 0:n.keys[0]};return(null==t?void 0:t.requestBrands)&&delete t.requestBrands,Kr.post(`${e.env.CURRENT_URL}email/sendemail/${r_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${j_}`,a).then(e=>e).catch(e=>e),t.changes=null,t.previous_credit=null,t}if((null==(el=Bc[0])?void 0:el.changes)==K.PAYMENTTERMS){const a={to:[null==(nl=null==(tl=Bc[0])?void 0:tl.user_updated)?void 0:nl.email],users:[null==(il=null==(al=Bc[0])?void 0:al.user_updated)?void 0:il.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(ol=null==(rl=Bc[0])?void 0:rl.client_id)?void 0:ol.client_name,client_email:null==(ll=null==(sl=Bc[0])?void 0:sl.client_id)?void 0:ll.client_email,client_pan:null==(dl=null==(cl=Bc[0])?void 0:cl.client_id)?void 0:dl.pan_number,product_type:null==(ul=Bc[0])?void 0:ul.product,payment_terms:null==(pl=Bc[0])?void 0:pl.payment_terms,credit_day:null==(ml=Bc[0])?void 0:ml.credit_days,link:e.env.CURRENT_URL+"admin/content/client_product_mapping/"+(null==n?void 0:n.keys[0]),approved:null==(hl=Vc[0])?void 0:hl.first_name},body_data:{filter:"approved",client_name:null==(fl=null==(yl=Bc[0])?void 0:yl.client_id)?void 0:fl.client_name,client_email:null==(bl=null==(vl=Bc[0])?void 0:vl.client_id)?void 0:bl.client_email,client_pan:null==(_l=null==(gl=Bc[0])?void 0:gl.client_id)?void 0:_l.pan_number,product_type:null==(xl=Bc[0])?void 0:xl.product,payment_terms:null==(kl=Bc[0])?void 0:kl.payment_terms,previous_credit:null==(El=Bc[0])?void 0:El.previous_credit,modify_credit:null==(Kl=Bc[0])?void 0:Kl.credit_days,approved:null==(wl=Vc[0])?void 0:wl.first_name},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${o_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${O_}`,a).then(e=>e).catch(e=>e),t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Sl=Bc[0])?void 0:Sl.changes)==K.DISCOUNT){const a={to:[null==(jl=null==(Il=Bc[0])?void 0:Il.user_updated)?void 0:jl.email],users:[null==(Tl=null==(Rl=Bc[0])?void 0:Rl.user_updated)?void 0:Tl.id],cc:qc,subject_data:{sub:"approved",data:t,client_name:null==(Al=null==(Ol=Bc[0])?void 0:Ol.client_id)?void 0:Al.client_name,client_email:null==(Dl=null==(Cl=Bc[0])?void 0:Cl.client_id)?void 0:Dl.client_email,client_pan:null==(Nl=null==(Pl=Bc[0])?void 0:Pl.client_id)?void 0:Nl.pan_number,product_type:null==(Ml=Bc[0])?void 0:Ml.product,payment_terms:null==(Fl=Bc[0])?void 0:Fl.payment_terms,previous_discount:null==(Ll=Bc[0])?void 0:Ll.previous_discount,modify_discount:null==(Jl=Bc[0])?void 0:Jl.discount,approved:null==(Ul=Vc[0])?void 0:Ul.first_name},body_data:{filter:"approved",client_name:null==(Vl=null==(ql=Bc[0])?void 0:ql.client_id)?void 0:Vl.client_name,client_email:null==(Bl=null==(Gl=Bc[0])?void 0:Gl.client_id)?void 0:Bl.client_email,client_pan:null==(Yl=null==(zl=Bc[0])?void 0:zl.client_id)?void 0:Yl.pan_number,product_type:null==($l=Bc[0])?void 0:$l.product,payment_terms:null==(Wl=Bc[0])?void 0:Wl.payment_terms,previous_discount:null==(Hl=Bc[0])?void 0:Hl.previous_discount,modify_discount:null==(Ql=Bc[0])?void 0:Ql.discount,approved:null==(Zl=Vc[0])?void 0:Zl.first_name},item:null==n?void 0:n.keys[0]};return Kr.post(`${e.env.CURRENT_URL}email/sendemail/${s_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${D_}`,a).then(e=>e).catch(e=>e),t.previous_discount=null,t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(Xl=Bc[0])?void 0:Xl.changes)==K.BRANDDISCOUNT){const n={to:[null==(tc=null==(ec=Bc[0])?void 0:ec.user_updated)?void 0:tc.email],users:[null==(ac=null==(nc=Bc[0])?void 0:nc.user_updated)?void 0:ac.id],cc:qc,body_data:{client_name:null==(rc=null==(ic=Bc[0])?void 0:ic.client_id)?void 0:rc.client_name,client_email:null==(sc=null==(oc=Bc[0])?void 0:oc.client_id)?void 0:sc.client_email,client_pan:null==(cc=null==(lc=Bc[0])?void 0:lc.client_id)?void 0:cc.pan_number,product_type:null==(dc=Bc[0])?void 0:dc.product,payment_terms:null==(uc=Bc[0])?void 0:uc.payment_terms,previous_credit:null==(pc=Bc[0])?void 0:pc.previous_credit,modify_credit:null==(mc=Bc[0])?void 0:mc.credit_days,approved:null==(hc=Vc[0])?void 0:hc.first_name}};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${c_}`,n).then(e=>n).catch(e=>e);const i=Bc[0].client_product_mapping.map(e=>e.id);return R({previous_discount:0},"client_brand_commercial",a,i,d,null),t.changes=null,(null==t?void 0:t.requestBrands)&&delete t.requestBrands,t}if((null==(yc=Bc[0])?void 0:yc.changes)==K.NEW&&(null==(vc=null==(fc=Bc[0])?void 0:fc.client_product_mapping)?void 0:vc.length)>0){const a={to:[null==(gc=null==(bc=Bc[0])?void 0:bc.user_created)?void 0:gc.email],users:[null==(xc=null==(_c=Bc[0])?void 0:_c.user_created)?void 0:xc.id],cc:qc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==(Ec=null==(kc=Bc[0])?void 0:kc.client_id)?void 0:Ec.client_name,client_email:null==(wc=null==(Kc=Bc[0])?void 0:Kc.client_id)?void 0:wc.client_email,client_pan:null==(Ic=null==(Sc=Bc[0])?void 0:Sc.client_id)?void 0:Ic.pan_number,product_type:null==(jc=Bc[0])?void 0:jc.product,noofbrands:null==(Rc=Bc[0])?void 0:Rc.client_product_mapping.length,url_link:e.env.CURRENT_URL,approved:null==(Tc=Vc[0])?void 0:Tc.first_name,credit_limit:null==(Oc=Bc[0])?void 0:Oc.credit_limt,comment:null==t?void 0:t.comment},item:null==n?void 0:n.keys[0]};(null==t?void 0:t.requestBrands)&&delete t.requestBrands,Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,a).then(e=>a).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${N_}`,a).then(e=>e).catch(e=>e)}}if((null==(Cc=null==(Ac=null==t?void 0:t.client_product_mapping)?void 0:Ac.create)?void 0:Cc.length)>0){const e=(null==(Dc=null==t?void 0:t.client_product_mapping)?void 0:Dc.create)||[],n=(null==(Pc=Bc[0])?void 0:Pc.client_product_mapping)||[];if((()=>n.some(t=>e.some(e=>{var n,a;return((null==(n=null==t?void 0:t.brand)?void 0:n.id)||(null==t?void 0:t.brand))===((null==(a=null==e?void 0:e.brand)?void 0:a.id)||(null==e?void 0:e.brand))})))())throw new c(K.BRANDALREADYEXIST)}if((null==(Fc=null==(Mc=null==(Nc=t[0])?void 0:Nc.client_product_mapping)?void 0:Mc.update)?void 0:Fc.length)>0){const r={id:{_in:null==n?void 0:n.keys}},o=await wr(a,r,Gc,d,n.collection),s=t.map(e=>{var n,a,i,r,s,l;const c=o.find(t=>t.id===e.id).client_product_mapping.filter(t=>e.client_product_mapping.update.some(e=>e.id===t.id)).map(t=>({id:t.id,status:e.client_product_mapping.update.find(e=>e.id===t.id).status,update_email:null==t?void 0:t.user_updated})),d=o.find(t=>t.id===e.id);return{id:e.id,client_name:null==(n=null==d?void 0:d.client_id)?void 0:n.client_name,client_email:null==(a=null==d?void 0:d.client_id)?void 0:a.client_email,pan_number:null==(i=null==d?void 0:d.client_id)?void 0:i.pan_number,product_type:null==d?void 0:d.product,noofbrands:null==(l=null==(s=null==(r=t[0])?void 0:r.client_product_mapping)?void 0:s.update)?void 0:l.length,emails:c}}),l=o.filter(e=>{var n;if((null==e?void 0:e.status)==K.INACTIVE&&(null==(n=t.find(t=>(null==t?void 0:t.id)==(null==e?void 0:e.id)))?void 0:n.id))return!0});return u(l,"client_product_mapping"),l.map(e=>{var n,r,o,s,l,c;if((null==(o=null==(r=null==(n=t[0])?void 0:n.client_product_mapping)?void 0:r.update[0])?void 0:o.status)==K.APPROVED){const n={approval_status:K.APPROVED,status:K.ACTIVE,requestBrands:t[0].client_product_mapping.update.map(e=>e.id)};I(n,"client_product_mapping",a,null==e?void 0:e.id,d,null==i?void 0:i.accountability)}else{const n={approval_status:K.DECLINED,status:K.INACTIVE,comment:null==(c=null==(l=null==(s=t[0])?void 0:s.client_product_mapping)?void 0:l.update[0])?void 0:c.comment,requestBrands:t[0].client_product_mapping.update.map(e=>e.id)};I(n,"client_product_mapping",a,null==e?void 0:e.id,d,null==i?void 0:i.accountability)}}),0==l.length&&s.map(a=>{const i=a.emails.map(e=>e.update_email);[...new Set(i.map(e=>null==e?void 0:e.email))].filter(e=>null!=e).map(i=>{var r,o,s,l,c,d,u,p,m,h,y,f,v,b;if(a.emails[0].status===K.APPROVED){const p={to:[i],cc:qc,subject_data:{sub:"approved",data:t},body_data:{filter:"approved",client_name:null==a?void 0:a.client_name,client_email:null==a?void 0:a.client_email,client_pan:null==a?void 0:a.pan_number,product_type:null==a?void 0:a.product_type,noofbrands:null==(s=null==(o=null==(r=t[0])?void 0:r.client_product_mapping)?void 0:o.update)?void 0:s.length,url_link:e.env.CURRENT_URL,approved:null==(l=Vc[0])?void 0:l.first_name,comment:null==(u=null==(d=null==(c=t[0])?void 0:c.client_product_mapping)?void 0:d.update[0])?void 0:u.comment},item:null==n?void 0:n.keys[0]};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,p).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${N_}`,p).then(e=>e).catch(e=>e)}else{const r={to:[i],cc:qc,subject_data:{sub:"declined",data:t},body_data:{filter:"declined",client_name:null==a?void 0:a.client_name,client_email:null==a?void 0:a.client_email,client_pan:null==a?void 0:a.pan_number,product_type:null==a?void 0:a.product_type,noofbrands:null==(h=null==(m=null==(p=t[0])?void 0:p.client_product_mapping)?void 0:m.update)?void 0:h.length,url_link:e.env.CURRENT_URL,approved:null==(y=Vc[0])?void 0:y.first_name,comment:null==(b=null==(v=null==(f=t[0])?void 0:f.client_product_mapping)?void 0:v.update[0])?void 0:b.comment},item:null==n?void 0:n.keys[0]};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${l_}`,r).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${M_}`,r).then(e=>e).catch(e=>e)}})}),[]}}),n("client_product_mapping.items.update",async(t,n)=>{var i,r,o,s,l,c,u,p,m;try{const n={id:{_eq:null==(i=null==t?void 0:t.payload)?void 0:i.client_id}},h={id:{_eq:e.env.MANAGAMENT_ROLE}},y={id:{_eq:e.env.ACCOUNT_ROLE}},f={id:{_eq:t.keys[0]}},v=K.FIELDSDATA.CLIENT,b=K.BRANDS,g=await wr(a,n,v,d,"client");await wr(a,f,b,d,"client_product_mapping");if(g.length>0){const n=await wr(a,h,["users.email","users.id"],d,"directus_roles"),i=await wr(a,y,["users.email","users.id"],d,"directus_roles"),f=null==(r=n[0])?void 0:r.users.map(e=>e.email),v=null==(o=n[0])?void 0:o.users.map(e=>e.id),b=null==(s=i[0])?void 0:s.users.map(e=>e.email);null!=(l=t.payload.commerical)||K.UPFRONT,K.PRODUCTS.find(e=>e==(null==t?void 0:t.product));if((null==(p=null==(u=null==(c=null==t?void 0:t.payload)?void 0:c.client_product_mapping)?void 0:u.create)?void 0:p.length)>0){const n=t.payload.client_product_mapping.create;(null==(m=g[0])?void 0:m.product_type_mapping.filter(e=>3==e.product_type||4==e.product_type).map(e=>{const t=e.client_product_mapping.filter(e=>"Pending"===e.status).filter(e=>n.some(t=>t.brand===e.brand));return{brands:t,product_type:e.product,length:t.length}})).map(n=>{var a,i,r;const o=n.brands.map(e=>e.id),s=n.brands.map(e=>e.brand_name),l=n.brands.map(e=>e.discount),c=e.env.CURRENT_URL+"admin/content/client_brand_commercial/",d=(u=c,o.map(e=>`${u}${e}`));var u;const p={to:f,users:v,cc:b,subject_data:{data:t},body_data:{client_name:null==(a=g[0])?void 0:a.client_name,client_email:null==(i=g[0])?void 0:i.client_email,client_pan:null==(r=g[0])?void 0:r.pan_number,product_type:n.product_type,noofbrands:n.length,brand_ids:o,brand_name:s,url_link:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),brand_url:d,brand_discount:l},item:null==t?void 0:t.client_id};0!=n.length&&(Kr.post(`${e.env.CURRENT_URL}email/sendemail/${d_}`,p).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${F_}`,p).then(e=>e).catch(e=>e))})}}}catch(e){}}),t("client_brand_commercial.items.create",async(e,t,n)=>(e.status=K.PENDING,e)),t("client_brand_commercial.items.update",async(e,t,n)=>{const i=K.FIELDSDATA.CLIENT_BRAND_COMMERICAL,r={id:{_eq:null==t?void 0:t.keys[0]}};if((await wr(a,r,i,d,t.collection))[0].status==K.DECLINED)return e.status=K.PENDING,e}),t("client_product_mapping.items.create",async(e,t)=>{var n;const i={id:{_eq:null==e?void 0:e.client_id}},r=K.FIELDSDATA.CLIENT;if(null==(n=(await wr(a,i,r,d,"client"))[0])?void 0:n.product_type_mapping.find(t=>(null==t?void 0:t.product)==(null==e?void 0:e.product)))throw new c(K.DUPLICATEPRODUCT);e.approval_status=K.PENDING,e.status=K.INACTIVE}),n("client_product_mapping.items.create",async(t,n)=>{var i,r,o,s,l,c,u,p,m,h,y,f,v,b,g,_,x,k,E,w,S,I,j,R,T,O;const A={id:{_eq:null==(i=null==t?void 0:t.payload)?void 0:i.client_id}},C={id:{_eq:e.env.MANAGAMENT_ROLE}},D={id:{_eq:e.env.ACCOUNT_ROLE}},P=K.FIELDSDATA.CLIENT,N=await wr(a,A,P,d,"client");if(N.length>0){const n=await wr(a,C,["users.email","users.id"],d,"directus_roles"),i=await wr(a,D,["users.email","users.id"],d,"directus_roles"),A=null==(r=n[0])?void 0:r.users.map(e=>e.email),P=null==(o=n[0])?void 0:o.users.map(e=>e.id),M=null==(s=i[0])?void 0:s.users.map(e=>e.email);null==(l=i[0])||l.users.map(e=>e.id);const F=null!=(c=t.payload.commerical)?c:K.UPFRONT;K.PRODUCTS.find(e=>e==(null==t?void 0:t.product));const L=`${e.env.CURRENT_URL}email/sendemail/${a_}`;if((null==t?void 0:t.payment_terms)==K.ADVANCE){const n={to:A,users:P,cc:M,body_data:{data:t,brand:null==(p=null==(u=null==t?void 0:t.payload)?void 0:u.client_product_mapping)?void 0:p.create,client_name:null==(m=N[0])?void 0:m.client_name,client_email:null==(h=N[0])?void 0:h.client_email,client_pan:null==(y=N[0])?void 0:y.pan_number,commercials:F,product_type:null==(f=null==t?void 0:t.payload)?void 0:f.product,payment_terms:null==(v=null==t?void 0:t.payload)?void 0:v.payment_terms,credit_day:null==(b=null==t?void 0:t.payload)?void 0:b.credit_days,credit_limit:null==(g=null==t?void 0:t.payload)?void 0:g.credit_limt,discount:null==(_=null==t?void 0:t.payload)?void 0:_.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),url_link:e.env.CURRENT_URL,product_id:null==t?void 0:t.key},subject_data:{data:t,client:N[0]},item:null==t?void 0:t.key};Kr.post(L,n).catch(e=>{if(!e.response)return e}),Kr.post(`${e.env.CURRENT_URL}email/notifications/${g_}`,n).then(e=>e).catch(e=>e)}else{const n={to:A,users:P,cc:M,body_data:{data:t,brand:null==(k=null==(x=null==t?void 0:t.payload)?void 0:x.client_product_mapping)?void 0:k.create,client_name:null==(E=N[0])?void 0:E.client_name,client_email:null==(w=N[0])?void 0:w.client_email,client_pan:null==(S=N[0])?void 0:S.pan_number,commercials:F,product_type:null==(I=null==t?void 0:t.payload)?void 0:I.product,payment_terms:null==(j=null==t?void 0:t.payload)?void 0:j.payment_terms,credit_day:null==(R=null==t?void 0:t.payload)?void 0:R.credit_days,credit_limit:null==(T=null==t?void 0:t.payload)?void 0:T.credit_limt,discount:null==(O=null==t?void 0:t.payload)?void 0:O.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.client_id),url_link:e.env.CURRENT_URL,product_id:null==t?void 0:t.key},subject_data:{data:t},item:null==t?void 0:t.key};Kr.post(L,n).catch(e=>{if(!e.response)return e}),Kr.post(`${e.env.CURRENT_URL}email/notifications/${g_}`,n).then(e=>e).catch(e=>e)}}}),t("one_time_commerical.items.create",async e=>{try{if(e.amount<0)throw{error:K.ONETIMECOMMERICAL};return e}catch(e){if((null==e?void 0:e.error)==K.ONETIMECOMMERICAL)throw new c(K.ONETIMECOMMERICAL);u(e,"one_time_commerical")}}),t("one_time_commerical.items.update",async e=>{try{if(e.amount>-1)throw{error:K.ONETIMECOMMERICAL};return e}catch(e){if((null==e?void 0:e.error)==K.ONETIMECOMMERICAL)throw new c(K.ONETIMECOMMERICAL);u(e,"one_time_commerical")}}),t("vendor_shakepe_order_details.items.create",async e=>{const t=new s("voucher_order_details",{schema:await o(),accountability:{admin:!0}}),n=await t.readByQuery({filter:{id:{_eq:null==e?void 0:e.voucher_order_id}},fields:["denomination","quantity"]});if(n[0].denomination){const t=(null==e?void 0:e.quantity)&&(null==e?void 0:e.same_as_order)?e.quantity:n[0].quantity,a=t*n[0].denomination*(parseFloat(e.vendor_discount)/100),i=n[0].denomination*t-a;return{...e,quantity:t,po_value:i}}return{...e}}),n("vendor_shakepe_order_details.items.create",async e=>{var t,n,a,i,r,l,c,d,p,m;try{const u=new s("voucher_order_details",{schema:await o(),accountability:{admin:!0}}),h=new s("sd_vendor_details",{schema:await o(),accountability:{admin:!0}}),y=new s("vendor_payment",{schema:await o(),accountability:{admin:!0}}),f=await u.readByQuery({filter:{id:{_eq:null==(t=null==e?void 0:e.payload)?void 0:t.voucher_order_id}},fields:["shakepe_order_id","quantity","denomination"]}),v=(null==(n=null==e?void 0:e.payload)?void 0:n.quantity)?e.payload.quantity:f[0].quantity,b=v*f[0].denomination*(parseFloat(e.payload.vendor_discount)/100),g=f[0].denomination*v-b;if(f.length>0&&(null==(a=f[0])?void 0:a.shakepe_order_id)&&(null==(i=e.payload)?void 0:i.vendor)){const t=await y.readByQuery({filter:{shake_pe_order_id:{_eq:parseInt(null==(r=f[0])?void 0:r.shakepe_order_id)},vendor:{_eq:parseInt(null==(l=null==e?void 0:e.payload)?void 0:l.vendor)}},fields:["id","po_value","vendor","po_details"]});if(0==t.length){const t=await h.readByQuery({filter:{id:{_eq:parseInt(null==(c=null==e?void 0:e.payload)?void 0:c.vendor)}},fields:["primary_contact","fulfillment","gstin","account_number","ifsc_code","bank_name"]}),n={vendor:null==(d=null==e?void 0:e.payload)?void 0:d.vendor,shake_pe_order_id:null==(p=f[0])?void 0:p.shakepe_order_id,vendor_point_of_contact:t[0].primary_contact,vendor_fullfillment:t[0].fulfillment,vendor_bank:t[0].bank_name,vendor_bank_account_number:t[0].account_number,vendor_ifsc_code:t[0].ifsc_code,vendor_gstin:t[0].gstin,po_details:[e.key],payment_status:K.PAYEMENTPENDING,po_value:g};return await y.createOne(n)}{const n=g+parseInt(null==(m=t[0])?void 0:m.po_value);return await y.updateOne(t[0].id,{po_value:n||0,po_details:[...t[0].po_details,e.key]})}}}catch(e){u(e,"vendor_shakepe_order_details")}}),n("client.items.create",async t=>{var n,i;const r={id:{_eq:e.env.MANAGAMENT_ROLE}},o=await wr(a,r,["users.email","users.id"],d,"directus_roles"),s=o[0].users.map(e=>e.email),l=o[0].users.map(e=>e.id),c={id:{_eq:e.env.ACCOUNT_ROLE}},u=await wr(a,c,["users.email","users.id"],d,"directus_roles"),p=null==(n=u[0])?void 0:n.users.map(e=>e.email);null==(i=u[0])||i.users.map(e=>e.id);const m=`${e.env.CURRENT_URL}email/sendemail/${n_}`;t.payload.product_type_mapping.create.map(n=>{var a,i,r,o,c,d,u;const h=null!=(a=n.commerical)?a:K.UPFRONT;if(K.PRODUCTS.find(e=>e==n.product),(null==n?void 0:n.payment_terms)==K.ADVANCE){const a={to:s,users:l,cc:p,body_data:{client_name:null==(i=null==t?void 0:t.payload)?void 0:i.client_name,client_email:null==(r=null==t?void 0:t.payload)?void 0:r.client_email,client_pan:null==(o=null==t?void 0:t.payload)?void 0:o.pan_number,commercials:h,product_type:null==n?void 0:n.product,payment_terms:null==n?void 0:n.payment_terms,discount:null==n?void 0:n.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.key),url_link:e.env.CURRENT_URL,data:t},subject_data:{data:t},item:null==t?void 0:t.key};Kr.post(m,a).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${b_}`,a).then(e=>e).catch(e=>e)}else{const a={to:s,users:l,cc:p,body_data:{client_name:null==(c=null==t?void 0:t.payload)?void 0:c.client_name,client_email:null==(d=null==t?void 0:t.payload)?void 0:d.client_email,client_pan:null==(u=null==t?void 0:t.payload)?void 0:u.pan_number,commercials:h,product_type:null==n?void 0:n.product,payment_terms:null==n?void 0:n.payment_terms,credit_day:null==n?void 0:n.credit_days,credit_limit:null==n?void 0:n.credit_limt,discount:null==n?void 0:n.discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==t?void 0:t.key),url_link:e.env.CURRENT_URL,data:t},subject_data:{data:t},item:null==t?void 0:t.key};Kr.post(m,a).then(e=>a).catch(e=>{if(e.response)return a}),Kr.post(`${e.env.CURRENT_URL}email/notifications/${b_}`,a).then(e=>e).catch(e=>e)}})}),n("client_product_mapping.items.update",async({payload:t,keys:n,collection:i},{database:r,schema:o,accountability:s})=>{var c,d,u,p,m,h,y,f,v,b,g,_,x,k,E,w,S,I,R,T,O,A,C,D,P,N,M,F,L,J,U,q,V,G,B,z,Y,$,W,H,Q,Z,X,ee,te,ne,ae,ie,re,oe,se,le,ce;const de=t;try{new l({schema:o,knex:r});const t={id:{_eq:n[0]}},i=K.FIELDSDATA.CLIENT_CREATE,ue={role:{_eq:e.env.MANAGAMENT_ROLE}},pe=await wr(a,t,i,o,"client_product_mapping"),me=await wr(a,ue,["first_name","email","id"],o,"directus_users"),he={id:{_eq:null==s?void 0:s.user}},ye=await wr(a,he,["first_name"],o,"directus_users");if((null==de?void 0:de.approval_status)==K.APPROVED&&(null==(c=pe[0])?void 0:c.changes)==K.NEW){if(pe[0].client_id.status==K.INACTIVE){j({status:K.ACTIVE},"client",a,pe[0].client_id.id,o,s);const t={to:[pe[0].user_created.email],users:[pe[0].user_created.id],body_data:{client_name:null==(u=null==(d=pe[0])?void 0:d.client_id)?void 0:u.client_name,client_email:null==(m=null==(p=pe[0])?void 0:p.client_id)?void 0:m.client_email,client_pan:null==(y=null==(h=pe[0])?void 0:h.client_id)?void 0:y.pan_number,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(v=null==(f=pe[0])?void 0:f.client_id)?void 0:v.id),approved:null==(b=ye[0])?void 0:b.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,client:pe[0],approver:null==(g=ye[0])?void 0:g.first_name},item:null==(x=null==(_=pe[0])?void 0:_.client_id)?void 0:x.id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${p_}`,t).then(e=>e).catch(e=>{}),Kr.post(`${e.env.CURRENT_URL}email/notifications/${__}`,t).then(e=>{}).catch(e=>{})}const t={to:[pe[0].user_created.email],users:[pe[0].user_created.id],body_data:{client_name:null==(E=null==(k=pe[0])?void 0:k.client_id)?void 0:E.client_name,client_email:null==(S=null==(w=pe[0])?void 0:w.client_id)?void 0:S.client_email,client_pan:null==(R=null==(I=pe[0])?void 0:I.client_id)?void 0:R.pan_number,product_type:null==(T=pe[0])?void 0:T.product,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(O=pe[0])?void 0:O.client_id.id),approved:null==(A=ye[0])?void 0:A.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,client:pe[0],approver:null==(C=ye[0])?void 0:C.first_name},item:null==(D=pe[0])?void 0:D.id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${m_}`,t).then(e=>{}).catch(e=>{}),Kr.post(`${e.env.CURRENT_URL}email/notifications/${k_}`,t).then(e=>{}).catch(e=>{})}else if((null==de?void 0:de.approval_status)==K.DECLINED&&(null==(P=pe[0])?void 0:P.changes)==K.NEW){if(pe[0].client_id.status==K.INACTIVE){const t={to:[pe[0].user_created.email],users:[null==(N=pe[0])?void 0:N.user_created.id],body_data:{client_name:null==(F=null==(M=pe[0])?void 0:M.client_id)?void 0:F.client_name,client_email:null==(J=null==(L=pe[0])?void 0:L.client_id)?void 0:J.client_email,client_pan:null==(q=null==(U=pe[0])?void 0:U.client_id)?void 0:q.pan_number,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(G=null==(V=pe[0])?void 0:V.client_id)?void 0:G.id),declined:null==(B=ye[0])?void 0:B.first_name,url_link:e.env.CURRENT_URL},subject_data:{data:de,decline:null==(z=ye[0])?void 0:z.first_name,client:pe[0]},item:null==($=null==(Y=pe[0])?void 0:Y.client_id)?void 0:$.id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${h_}`,t).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${x_}`,t).then(e=>e).catch(e=>e)}const t={to:[pe[0].user_created.email],users:[null==(W=pe[0])?void 0:W.user_created.id],body_data:{client_name:null==(Q=null==(H=pe[0])?void 0:H.client_id)?void 0:Q.client_name,client_email:null==(X=null==(Z=pe[0])?void 0:Z.client_id)?void 0:X.client_email,client_pan:null==(te=null==(ee=pe[0])?void 0:ee.client_id)?void 0:te.pan_number,product_type:null==(ne=pe[0])?void 0:ne.product,url:e.env.CURRENT_URL+"admin/content/client/"+(null==(ie=null==(ae=pe[0])?void 0:ae.client_id)?void 0:ie.id),declined:null==(re=ye[0])?void 0:re.first_name,comments:null==de?void 0:de.comment,url_link:e.env.CURRENT_URL},subject_data:{data:de,decline:null==(oe=me[0])?void 0:oe.first_name,client:pe[0]},item:null==(se=pe[0])?void 0:se.id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${y_}`,t).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${E_}`,t).then(e=>e).catch(e=>e)}else if((null==de?void 0:de.approval_status)==K.PENDING&&(null==(le=pe[0])?void 0:le.changes)==K.NEW)if((null==(ce=pe[0])?void 0:ce.payment_terms)==K.ADVANCE){const t={to:me.map(e=>e.email),users:me.map(e=>e.id),body_data:{client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,new_commericals:de.commerical,new_discount:de.discount},subject_data:{data:de,client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL},item:null==de?void 0:de.client_id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${n_}`,t).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${b_}`,t).then(e=>e).catch(e=>e)}else{const t={to:me.map(e=>e.email),users:me.map(e=>e.id),body_data:{client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,credit_day:null==de?void 0:de.credit_days,credit_limit:null==de?void 0:de.credit_limt,new_commericals:de.commerical,new_discount:de.discount},subject_data:{data:de,client_name:pe[0].client_id.client_name,client_email:pe[0].client_id.client_email,client_pan:pe[0].client_id.pan_number,commercials:pe[0].commerical,product_type:pe[0].product,payment_terms:pe[0].payment_terms,discount:pe[0].discount,url:e.env.CURRENT_URL+"admin/content/client/"+(null==de?void 0:de.key),url_link:e.env.CURRENT_URL,credit_day:null==de?void 0:de.credit_days,credit_limit:null==de?void 0:de.credit_limt},item:null==de?void 0:de.client_id};Kr.post(`${e.env.CURRENT_URL}email/sendemail/${n_}`,t).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${b_}`,t).then(e=>e).catch(e=>e)}}catch(e){}}),t("client_product_mapping.items.delete",async(e,t)=>{const n={id:{_in:e}},i=K.FIELDSDATA.CLIENT_DELETE,r=await wr(a,n,i,d,"client_product_mapping"),o=q_(e,r);R({status:K.INACTIVE},"client",a,o,d,null)}),t("performing_invoice.items.create",async e=>{var t,n,a,i,r,o,s;const l=parseFloat((null==e?void 0:e.service_amount)&&(null==e?void 0:e.service_fee)?e.service_amount:0),c=parseFloat(e.discount?e.discount:0),d=parseFloat((null==e?void 0:e.order_level_discount)?e.order_level_discount:0);try{const u=(null==e?void 0:e.filtering_with_product_type)===K.GPR,p=(null==e?void 0:e.filtering_with_product_type)==K.GIFT_CARD,m=(null==e?void 0:e.filtering_with_product_type)==K.VOUCHERS,h=(null==e?void 0:e.filtering_with_product_type)==K.LINKS,y=(null==e?void 0:e.filtering_with_product_type)==K.SHAKEPEPOINT,f=(null==e?void 0:e.filtering_with_product_type)==K.SHAKEPECODE,v=e.commerical;switch(!0){case u||y:const b=parseFloat((null==e?void 0:e.load_amount)?e.load_amount:0),g=b-b*c/100+l;if(d!=c&&(null==e?void 0:e.add_or_reduce_discount)){const t=b-b*d/100+l;return{...e,total_value:v==K.UPFRONT&&e.add_or_reduce_discount?t:null,original_value:v==K.UPFRONT?g:null,cashback:v!=K.UPFRONT?b*d/100:null,total_value_cashback:v!=K.UPFRONT?b+l:null,previous_cashback:v!=K.UPFRONT?b*c/100:null,total_order_value:v==K.UPFRONT?b:null}}return{...e,original_value:v==K.UPFRONT?g:null,cashback:v!=K.UPFRONT?b*c/100:null,total_value_cashback:v!=K.UPFRONT?b+l:null,total_order_value:v==K.UPFRONT?b:null};case p:let _=0,x=0,k=0;null==(t=e.brand_sku_mapping)||t.create.forEach(e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:r}=e.gift_card_order_details_id;if(k+=n*a,_+=(n-n*i/100)*a,(i<r||i>r)&&t){x+=(n-n*r/100)*a}else{x+=(n-n*i/100)*a}});const E=_+l;return{...e,total_value:v==K.UPFRONT&&_!=x?x+l:null,original_value:v==K.UPFRONT?E:null,cashback:v!=K.UPFRONT&&_!=x?k-x:v!=K.UPFRONT?k-_:null,previous_cashback:v!=K.UPFRONT&&_!=x?k-_:null,total_value_cashback:v!=K.UPFRONT?k+l:null,total_order_value:v==K.UPFRONT?k:null};case m:let w=0,S=0,I=0;(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.create)&&(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)||a.create.forEach(e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:r}=e;if(I+=n*a,w+=(n-n*i/100)*a,(i<r||i>r)&&t){S+=(n-n*r/100)*a}else{S+=(n-n*i/100)*a}}));const j=w+l;return{...e,total_value:v==K.UPFRONT&&w!=S?S+l:null,original_value:v==K.UPFRONT?j:null,cashback:v!=K.UPFRONT&&w!=S?I-S:v!=K.UPFRONT?I-w:null,previous_cashback:v!=K.UPFRONT&&w!=S?I-w:null,total_value_cashback:v!=K.UPFRONT?I+l:null,total_order_value:v==K.UPFRONT?I:null};case h:if(null==(i=null==e?void 0:e.generic_links_details)?void 0:i.create){let t=0,n=0,a=0;return null==(r=null==e?void 0:e.generic_links_details)||r.create.map(i=>{const{denomination:r,quantity:o}=i;t+=r*o,n+=r*o*(c/100),a+=e.add_or_reduce_discount?r*o*(e.order_level_discount/100):r*o*(c/100)}),{...e,total_value:v==K.UPFRONT&&e.add_or_reduce_discount?t-a+l:null,original_value:v==K.UPFRONT?t-n+l:null,cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?a:v!=K.UPFRONT?n:null,previous_cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?n:null,total_value_cashback:v!=K.UPFRONT?t+l:null,total_order_value:v==K.UPFRONT?t:null}}if(null==(o=null==e?void 0:e.catalog_links_orders)?void 0:o.create){let t=0,n=0,a=0;return null==(s=null==e?void 0:e.catalog_links_orders)||s.create.map(i=>{const{denomination:r,total_no_links:o}=i;t+=r*o,n+=r*o*(e.discount/100),a+=e.order_level_discount&&(null==e?void 0:e.add_or_reduce_discount)?r*o*(e.order_level_discount/100):r*o*(e.discount/100)}),{...e,total_value:v==K.UPFRONT&&e.add_or_reduce_discount?t-a+l:null,original_value:v==K.UPFRONT?t-n+l:null,cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?a:v!=K.UPFRONT?n:null,previous_cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?n:null,total_value_cashback:v!=K.UPFRONT?t+l:null,total_order_value:v==K.UPFRONT?t:null}}break;case y:const R=parseFloat((null==e?void 0:e.loadAmount)?e.loadAmount:0),T=R-R*c/100;if(d>c&&(null==e?void 0:e.add_or_reduce_discount)||d<c){const t=R-R*d/100+l;return{...e,total_value:v==K.UPFRONT&&e.add_or_reduce_discount?t:null,original_value:v==K.UPFRONT?T+l:null,cashback:v!=K.UPFRONT?R*d/100:null,total_value_cashback:v!=K.UPFRONT?R+l:null,previous_cashback:v!=K.UPFRONT?R*c/100:null,total_order_value:v==K.UPFRONT?R:null}}return{...e,original_value:v==K.UPFRONT?T+l:null,cashback:v!=K.UPFRONT?R*c/100:null,total_value_cashback:v!=K.UPFRONT?R+l:null,total_order_value:v==K.UPFRONT?R:null};case f:let O=0,A=0,C=0;return e.shakepe_codes_orders.create.map(t=>{const{value_of_code:n,total_no_of_codes:a}=t;O+=n*a,A+=n*a*(c/100),C+=d&&(null==e?void 0:e.add_or_reduce_discount)?n*a*(d/100):n*a*(c/100)}),{...e,total_value:v==K.UPFRONT&&e.add_or_reduce_discount?O-C+l:null,original_value:v==K.UPFRONT?O-A+l:null,cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?C:A,previous_cashback:v!=K.UPFRONT&&e.add_or_reduce_discount?A:null,total_value_cashback:v!=K.UPFRONT?O+l:null,total_order_value:v==K.UPFRONT?O:null}}}catch(e){u(e,"performing_invoice")}}),t("performing_invoice.items.create",e=>({...e,status:K.PENDING,changes:null})),t("performing_invoice.items.create",e=>{if((null==e?void 0:e.filtering_with_product_type)==K.shakepe_orders.shakepe_codes){if(!(null==e?void 0:e.form_factor)||(null==e?void 0:e.form_factor)==K.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code;if(e.shakepe_codes_orders.create.reduce((e,t)=>e+t.total_no_of_codes,0)>5e3)throw new c(K.error.virual_codes);const n=e.shakepe_codes_orders.create.map(n=>({...n,validity:G_(n.activation?n.activation:null==e?void 0:e.activation_date,t)}));return e.shakepe_codes_orders.create=n,e}if(e.form_factor!=K.shakepe_orders.virtual&&(null==e?void 0:e.checkbox.length)>0&&"TRUE"==(null==e?void 0:e.checkbox[0])){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map(n=>({...n,activation:e.activation_date,validity:G_(e.activation_date,t)}));return e.shakepe_codes_orders.create=n,e}if(0==(null==e?void 0:e.checkbox)&&e.form_factor!=K.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map(e=>({...e,validity:G_(null==e?void 0:e.activation,t)}));return e.shakepe_codes_orders.create=n,e}}}),t("performing_invoice.items.update",async(e,t,n)=>{var i,r,o,s,l,c,u,p,m,h,y,f,v,b,g;const _={id:{_eq:null==t?void 0:t.keys[0]}},x=await wr(a,_,K.FIELDSDATA.PROFOMA_INVOICE,d,"performing_invoice");let k={};if(!(e.status||e.approval_status||e.payment_status||e.send_to_client||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)))switch(x[0].filtering_with_product_type){case K.GPR:k={...x[0],...e};const t=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),n=parseFloat((null==k?void 0:k.discount)?k.discount:0),a=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0);let d=null==k?void 0:k.commerical;const _=parseFloat((null==k?void 0:k.load_amount)?k.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),E=_-_*n/100+t;if(a!=n&&k.add_or_reduce_discount){const i=_-_*a/100+t,r=!!k.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount);return{...e,total_value:d==K.UPFRONT&&r?i:null,original_value:d==K.UPFRONT?E:null,cashback:d!=K.UPFRONT&&(null==k?void 0:k.order_level_discount)?_*a/100:_*n/100,total_value_cashback:d!=K.UPFRONT?_+t:null,previous_cashback:d!=K.UPFRONT&&(null==k?void 0:k.order_level_discount)?_*n/100:null,total_order_value:d==K.UPFRONT?_:null}}return{...e,original_value:d==K.UPFRONT?E:null,total_value:null,cashback:d!=K.UPFRONT?_*n/100:null,total_value_cashback:d!=K.UPFRONT?_+t:null,total_order_value:d==K.UPFRONT?_:null};case K.GIFT_CARD:k={...x[0],...e};const w=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let S=0,I=0,j=0;const R=null==k?void 0:k.commerical,T=null==(i=x[0])?void 0:i.brand_sku_mapping.map(t=>{var n,a,i,r;const o=null==(a=null==(n=null==e?void 0:e.brand_sku_mapping)?void 0:n.update)?void 0:a.find(e=>e.id===t.id);return(null==(r=null==(i=null==e?void 0:e.brand_sku_mapping)?void 0:i.delete)?void 0:r.find(e=>e===t.id))?null:o?{...t,gift_card_order_details_id:{...t.gift_card_order_details_id,...o.gift_card_order_details_id}}:t});(null==(o=null==(r=null==e?void 0:e.brand_sku_mapping)?void 0:r.create)?void 0:o.length)>0&&e.brand_sku_mapping.create.forEach(e=>{T.push(e)}),T.forEach(e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:r}=e.gift_card_order_details_id;if(j+=n*a,S+=(n-n*i/100)*a,(i<r||i>r)&&t){I+=(n-n*r/100)*a}else{I+=(n-n*i/100)*a}});const O=S+w;return{...e,total_value:R==K.UPFRONT&&S!=I?I+w:null,original_value:R==K.UPFRONT?O:null,cashback:R!=K.UPFRONT&&S!=I?j-I:R!=K.UPFRONT?j-S:null,previous_cashback:R!=K.UPFRONT&&S!=I?j-S:null,total_value_cashback:R!=K.UPFRONT?j+w:null,total_order_value:R==K.UPFRONT?j:null};case K.VOUCHERS:k={...x[0],...e};let A=0,C=0,D=0;const P=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),N=null==k?void 0:k.commerical,M=null==(s=x[0])?void 0:s.brand_sku_mapping_voucher.map(t=>{var n,a;const i=(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update.length)>0?e.brand_sku_mapping_voucher.update.find(e=>e.id===t.id):null,r=(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:a.delete.length)>0?e.brand_sku_mapping_voucher.delete.find(e=>e===t.id):null;return i?{...t,...i}:r?null:t});(null==(c=null==(l=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:l.create)?void 0:c.length)>0&&e.brand_sku_mapping_voucher.create.forEach(e=>{M.push(e)});M.filter(e=>null!=e).forEach(e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:r}=e;if(D+=n*a,A+=(n-n*i/100)*a,(i<r||i>r)&&t){C+=(n-n*r/100)*a}else{C+=(n-n*i/100)*a}});const F=A+P;return{...e,total_value:N==K.UPFRONT&&A!=C?C+P:null,original_value:N==K.UPFRONT?F:null,cashback:N!=K.UPFRONT&&A!=C?D-C:N!=K.UPFRONT?D-A:null,previous_cashback:N!=K.UPFRONT&&A!=C?D-A:null,total_value_cashback:N!=K.UPFRONT?D+P:null,total_order_value:N==K.UPFRONT?D:null};case K.SHAKEPECODE:k={...x[0],...e};const L=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let J=0,U=0,q=0;const V=null==k?void 0:k.commerical,G=parseFloat((null==k?void 0:k.discount)?k.discount:0),B=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0),z=null==(u=x[0])?void 0:u.shakepe_codes_orders.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.shakepe_codes_orders)?void 0:n.update)?void 0:a.length)>0?e.shakepe_codes_orders.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.shakepe_codes_orders)?void 0:i.delete)?void 0:r.length)>0?e.shakepe_codes_orders.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});return(null==(m=null==(p=null==e?void 0:e.shakepe_codes_orders)?void 0:p.create)?void 0:m.length)>0&&e.shakepe_codes_orders.create.forEach(e=>{z.push(e)}),null==z||z.map(e=>{const{value_of_code:t,total_no_of_codes:n}=e;J+=t*n,U+=t*n*(G/100),q+=(B||0==B)&&k.add_or_reduce_discount?t*n*(B/100):t*n*(G/100)}),{...e,total_value:V==K.UPFRONT&&k.add_or_reduce_discount?J-q+L:null,original_value:V==K.UPFRONT?J-U+L:null,cashback:V==K.UPFRONT||k.add_or_reduce_discount?q:U,previous_cashback:V!=K.UPFRONT&&k.add_or_reduce_discount?U:null,total_value_cashback:V!=K.UPFRONT?J+L:null,total_order_value:V==K.UPFRONT?J:null};case K.LINKS:k={...x[0],...e};const Y=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0);let $=0,W=0,H=0;const Q=null==k?void 0:k.commerical,Z=parseFloat((null==k?void 0:k.discount)?k.discount:0),X=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0);if((null==k?void 0:k.link_type)==K.GENERIC){const t=null==(h=x[0])?void 0:h.generic_links_details.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.generic_links_details)?void 0:n.update)?void 0:a.length)>0?e.generic_links_details.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.generic_links_details)?void 0:i.delete)?void 0:r.length)>0?e.generic_links_details.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});(null==(f=null==(y=null==e?void 0:e.generic_links_details)?void 0:y.create)?void 0:f.length)>0&&e.generic_links_details.create.forEach(e=>{t.push(e)});return t.filter(e=>null!=e).map(e=>{const{denomination:t,quantity:n}=e;$+=t*n,W+=t*n*(Z/100),H+=k.add_or_reduce_discount?t*n*(X/100):t*n*(Z/100)}),{...e,total_value:Q==K.UPFRONT&&k.add_or_reduce_discount?$-H+Y:null,original_value:Q==K.UPFRONT?$-W+Y:null,cashback:Q!=K.UPFRONT&&k.add_or_reduce_discount?H:Q!=K.UPFRONT?W:null,previous_cashback:Q!=K.UPFRONT&&e.add_or_reduce_discount?W:null,total_value_cashback:Q!=K.UPFRONT?$+Y:null,total_order_value:Q==K.UPFRONT?$:null}}if((null==k?void 0:k.link_type)==K.CATALOGUE){let t=0,n=0,a=0;const i=null==(v=x[0])?void 0:v.catalog_links_orders.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.catalog_links_orders)?void 0:n.update)?void 0:a.length)>0?e.catalog_links_orders.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.catalog_links_orders)?void 0:i.delete)?void 0:r.length)>0?e.catalog_links_orders.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});(null==(g=null==(b=null==e?void 0:e.catalog_links_orders)?void 0:b.create)?void 0:g.length)>0&&e.catalog_links_orders.create.forEach(e=>{i.push(e)});return i.filter(e=>null!=e).map(e=>{const{denomination:i,total_no_links:r}=e;t+=i*r,n+=i*r*(k.discount/100),a+=(k.order_level_discount||0==k.order_level_discount)&&(null==k?void 0:k.add_or_reduce_discount)?i*r*(k.order_level_discount/100):i*r*(k.discount/100)}),{...e,total_value:Q==K.UPFRONT&&k.add_or_reduce_discount?t-a+Y:null,original_value:Q==K.UPFRONT?t-n+Y:null,cashback:Q!=K.UPFRONT&&k.add_or_reduce_discount?a:Q!=K.UPFRONT?n:null,previous_cashback:Q!=K.UPFRONT&&k.add_or_reduce_discount?n:null,total_value_cashback:Q!=K.UPFRONT?t+Y:null,total_order_value:Q==K.UPFRONT?t:null}}return e;case K.SHAKEPEPOINT:k={...x[0],...e};const ee=parseFloat((null==k?void 0:k.service_amount)&&(null==k?void 0:k.service_fee)?k.service_amount:0),te=parseFloat((null==k?void 0:k.discount)?k.discount:0),ne=parseFloat((null==k?void 0:k.order_level_discount)?null==k?void 0:k.order_level_discount:0),ae=null==k?void 0:k.commerical,ie=parseFloat((null==k?void 0:k.load_amount)?k.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),re=ie-ie*te/100+ee;if(ne!=te&&k.add_or_reduce_discount){const t=ie-ie*ne/100+ee,n=!!k.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount);return{...e,total_value:ae==K.UPFRONT&&n?t:null,original_value:ae==K.UPFRONT?re:null,cashback:ae!=K.UPFRONT&&k.add_or_reduce_discoun?ie*ne/100:ie*te/100,total_value_cashback:ae!=K.UPFRONT?ie+ee:null,previous_cashback:ae!=K.UPFRONT&&k.add_or_reduce_discoun?ie*te/100:null,total_order_value:Q==K.UPFRONT?ie:null}}return{...e,original_value:ae==K.UPFRONT?re:null,total_value:null,cashback:ae!=K.UPFRONT?ie*te/100:null,total_value_cashback:ae!=K.UPFRONT?ie+ee:null,total_order_value:Q==K.UPFRONT?ie:null}}}),t("performing_invoice.items.update",async(e,t,n)=>"Convert to Order"==(null==e?void 0:e.status)?e:e.status||e.approval_status||e.payment_status||e.send_to_client||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)?void 0:{...e,status:K.PENDING,changes:null,approval_status:null}),t("performing_invoice.items.update",async(e,t,n)=>{var i,r,o,s,l,c,u;if("Convert to Order"==(null==e?void 0:e.status)){const n={id:{_eq:null==t?void 0:t.keys[0]}},p=(await wr(a,n,K.FIELDSDATA.PROFOMA_INVOICE_ORDER_CREATION,d,"performing_invoice"))[0],m={service_fee:null==p?void 0:p.service_fee,add_or_reduce_discount:null==p?void 0:p.add_or_reduce_discount,modified_credit_days:null==p?void 0:p.modified_credit_days,credit_days:null==p?void 0:p.credit_days,actual_credit_days:null==p?void 0:p.actual_credit_days,product_type:null==p?void 0:p.product_type,shipping_address:null==p?void 0:p.shipping_address,select_address:null==p?void 0:p.select_address,validity_of_code:null==p?void 0:p.validity_of_code,client:null==p?void 0:p.client,printer:null==p?void 0:p.printer,pi_id:null==t?void 0:t.keys[0],per_card_cost_client:null==p?void 0:p.per_card_cost_client,load_amount:null==p?void 0:p.load_amount,previous_cashback:null==p?void 0:p.previous_cashback,cashback:null==p?void 0:p.cashback,total_value_cashback:null==p?void 0:p.total_value_cashback,total_value:null==p?void 0:p.total_value,original_value:null==p?void 0:p.original_value,order_level_discount:null!=(i=null==p?void 0:p.order_level_discount)?i:0,service_amount:null==p?void 0:p.service_amount,discount:null==p?void 0:p.discount,file_upload_data:null==p?void 0:p.file_upload_data,per_card_cost_for_printer:null==p?void 0:p.per_card_cost_for_printer,form_factor:null!=(r=null==p?void 0:p.form_factor)?r:"Virtual",po_number:null==p?void 0:p.po_number,link_type:null==p?void 0:p.link_type,total_order_value:null==p?void 0:p.total_order_value,action:"flow",filtering_with_product_type:null==p?void 0:p.filtering_with_product_type,calculation:null==p?void 0:p.calculation,payment:"Payment Received",fullfillment:null==p?void 0:p.fullfillment,commerical:null==p?void 0:p.commerical,UTR_Number:null==p?void 0:p.utr_number,payment_terms:null==p?void 0:p.payment_terms,code_type:null==p?void 0:p.code_type,form_factor_copy:null==p?void 0:p.form_factor_copy,card_type:null==p?void 0:p.card_type,checkbox:null==p?void 0:p.checkbox,activation_date:null==p?void 0:p.activation_date,credit_period:null==p?void 0:p.credit_period,load_date:null==p?void 0:p.load_date,upload_codes:null==p?void 0:p.upload_codes,poc:null==p?void 0:p.poc,billing_address:null==p?void 0:p.billing_address,shipping_address_1:null==p?void 0:p.shipping_address_1,generic_links_details:{create:null==(o=null==p?void 0:p.generic_links_details)?void 0:o.map(e=>({brand:null==e?void 0:e.brand,denomination:null==e?void 0:e.denomination,quantity:null==e?void 0:e.quantity,brand_name:null==e?void 0:e.brand_name})),update:[],delete:[]},brand_sku_mapping_voucher:{create:null==(s=null==p?void 0:p.brand_sku_mapping_voucher)?void 0:s.map(e=>({brand:null==e?void 0:e.brand,sku_code:null==e?void 0:e.sku_code,denomination:null==e?void 0:e.denomination,actual_discount:parseFloat(null==e?void 0:e.actual_discount),quantity:null==e?void 0:e.quantity,add_or_reduce_discount:null==e?void 0:e.add_or_reduce_discount,order_level_discount:(null==e?void 0:e.order_level_discount)?parseFloat(null==e?void 0:e.order_level_discount):null,brand_name:null==e?void 0:e.brand_name})),update:[],delete:[]},catalog_links_orders:{create:null==(l=null==p?void 0:p.catalog_links_orders)?void 0:l.map(e=>({denomination:null==e?void 0:e.denomination,total_no_links:null==e?void 0:e.total_no_links,brands:null==e?void 0:e.brands})),update:[],delete:[]},brand_sku_mapping:{create:null==(c=null==p?void 0:p.brand_sku_mapping)?void 0:c.map(e=>{var t,n,a,i,r,o,s,l,c;return{shakepe_orders_id:"+",gift_card_order_details_id:{denomination:null==(t=null==e?void 0:e.gift_card_order_details_id)?void 0:t.denomination,quantity:null==(n=null==e?void 0:e.gift_card_order_details_id)?void 0:n.quantity,actual_discoubt:parseFloat(null==(a=null==e?void 0:e.gift_card_order_details_id)?void 0:a.actual_discoubt),add_or_reduce:null==(i=null==e?void 0:e.gift_card_order_details_id)?void 0:i.add_or_reduce,order_level_discount:(null==(r=null==e?void 0:e.gift_card_order_details_id)?void 0:r.order_level_discount)?parseFloat(null==(o=null==e?void 0:e.gift_card_order_details_id)?void 0:o.order_level_discount):null,vendor_product_mapping:null==(s=null==e?void 0:e.gift_card_order_details_id)?void 0:s.vendor_product_mapping,brand_name:null==(l=null==e?void 0:e.gift_card_order_details_id)?void 0:l.brand_name,brand:null==(c=null==e?void 0:e.gift_card_order_details_id)?void 0:c.brand}}}),update:[],delete:[]},shakepe_codes_orders:{create:null==(u=null==p?void 0:p.shakepe_codes_orders)?void 0:u.map(e=>({total_no_of_codes:null==e?void 0:e.total_no_of_codes,value_of_code:null==e?void 0:e.value_of_code,validity:null==e?void 0:e.validity,activation:null==e?void 0:e.activation})),update:[],delete:[]},buyer_ref_number:null==p?void 0:p.buyer_ref_number};await Hg(null==p?void 0:p.client,{collection:"performing_invoice",item:"update",schema:d,services:a,id:null==t?void 0:t.keys[0]});const h=await S(a,"shakepe_orders",m,d,{admin:!0,user:p.user_created});return e.shakepe_order=h,e}}),t("shakepe_orders.items.update",async(e,t,n)=>{const i={id:{_eq:null==t?void 0:t.keys[0]}},r=await wr(a,i,["client"],d,"shakepe_orders");"Payment Received"==e.payment&&await Hg(null==r?void 0:r.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})}),n("performing_invoice.items.update",async({payload:e,keys:t,collection:n},{database:i,schema:r,accountability:o})=>{try{const n=new l({schema:r,knex:i}),s={id:{_eq:t[0]}};(null==e?void 0:e.approval_status)||(null==e?void 0:e.approval_status)||(null==e?void 0:e.payment_status)||(null==e?void 0:e.send_to_client)||"Convert to Order"==(null==e?void 0:e.status)||(null==e?void 0:e.po_number)||(null==e?void 0:e.others_documents)||V_(s,a,r,n,o)}catch(e){u(e,"performing_invoice")}}),t("performing_invoice.items.create",async(e,t,n)=>{if((null==e?void 0:e.filtering_with_product_type)==K.shakepe_orders.shakepe_codes){if(!(null==e?void 0:e.form_factor)||(null==e?void 0:e.form_factor)==K.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code;if(e.shakepe_codes_orders.create.reduce((e,t)=>e+t.total_no_of_codes,0)>5e3)throw new c(K.error.virual_codes);const n=e.shakepe_codes_orders.create.map(n=>({...n,validity:G_(n.activation?n.activation:null==e?void 0:e.activation_date,t)}));return e.shakepe_codes_orders.create=n,e}if(e.form_factor!=K.shakepe_orders.virtual&&(null==e?void 0:e.checkbox.length)>0&&"TRUE"==(null==e?void 0:e.checkbox[0])){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map(n=>({...n,activation:e.activation_date,validity:G_(e.activation_date,t)}));return e.shakepe_codes_orders.create=n,e}if(0==(null==e?void 0:e.checkbox)&&e.form_factor!=K.shakepe_orders.virtual){const t=null==e?void 0:e.validity_of_code,n=e.shakepe_codes_orders.create.map(e=>({...e,validity:G_(null==e?void 0:e.activation,t)}));return e.shakepe_codes_orders.create=n,e}}}),t("shakepe_orders.items.update",async(e,t,n)=>{var i,r,o,s,l,u,p,m,h,y,f,v,b,g,_,x;const k=await wr(a,{status:{_eq:"draft"},id:{_eq:null==t?void 0:t.keys[0]}},K.FIELDSDATA.SHAKEPE_ORDERS,d,"shakepe_orders");let E={};if(k.length>0&&"draft"==k[0].status)switch(k[0].filtering_with_product_type){case K.GPR:E={...k[0],...e};const n=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0),x=parseFloat((null==E?void 0:E.discount)?E.discount:0),w=parseFloat((null==E?void 0:E.order_level_discount)?null==E?void 0:E.order_level_discount:0);let S=null==E?void 0:E.commerical;const I=parseFloat((null==E?void 0:E.load_amount)?E.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),j=I-I*x/100+n;if(w!=x&&E.add_or_reduce_discount){const i=I-I*w/100+n,r=!!E.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount),o={...e,total_value:S==K.UPFRONT&&r?i:null,original_value:S==K.UPFRONT?j:null,cashback:S!=K.UPFRONT?I*w/100:null,total_value_cashback:S!=K.UPFRONT?I+n:null,previous_cashback:S!=K.UPFRONT?I*x/100:null,total_order_value:S==K.UPFRONT?I:null},s=await Hg(null==o?void 0:o.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:o,id:null==t?void 0:t.keys[0]});if(null==s?void 0:s.error)throw new c(null==s?void 0:s.error);return{...o,...s}}{const i={...e,original_value:S==K.UPFRONT?j:null,total_value:null,cashback:S!=K.UPFRONT?I*x/100:null,total_value_cashback:S!=K.UPFRONT?I+n:null,total_order_value:S==K.UPFRONT?I:null},r=await Hg(null==i?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:i,id:null==t?void 0:t.keys[0]});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...i,...r}}case K.GIFT_CARD:E={...k[0],...e};const R=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0);let T=0,O=0,A=0;const C=null==E?void 0:E.commerical,D=null==(i=k[0])?void 0:i.brand_sku_mapping.map(t=>{var n,a,i,r;const o=null==(a=null==(n=null==e?void 0:e.brand_sku_mapping)?void 0:n.update)?void 0:a.find(e=>e.id===t.id);return(null==(r=null==(i=null==e?void 0:e.brand_sku_mapping)?void 0:i.delete)?void 0:r.find(e=>e===t.id))?null:o?{...t,gift_card_order_details_id:{...t.gift_card_order_details_id,...o.gift_card_order_details_id}}:t});(null==(o=null==(r=null==e?void 0:e.brand_sku_mapping)?void 0:r.create)?void 0:o.length)>0&&e.brand_sku_mapping.create.forEach(e=>{D.push(e)}),D.forEach(e=>{const{add_or_reduce:t,denomination:n,quantity:a,actual_discoubt:i,order_level_discount:r}=e.gift_card_order_details_id;if(A+=n*a,T+=(n-n*i/100)*a,(i<r||i>r)&&t){O+=(n-n*r/100)*a}else{O+=(n-n*i/100)*a}});const P=T+R,N={...e,total_value:C==K.UPFRONT&&T!=O?O+R:null,original_value:C==K.UPFRONT?P:null,cashback:C!=K.UPFRONT&&T!=O?A-O:C!=K.UPFRONT?A-T:null,previous_cashback:C!=K.UPFRONT&&T!=O?A-T:null,total_value_cashback:C!=K.UPFRONT?A+R:null,total_order_value:C==K.UPFRONT?A:null},M=await Hg(null==N?void 0:N.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,id:null==t?void 0:t.keys[0],data:N});if(null==M?void 0:M.error)throw new c(null==M?void 0:M.error);return{...N,...M};case K.VOUCHERS:E={...k[0],...e};let F=0,L=0,J=0;const U=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0),q=null==E?void 0:E.commerical,V=null==(s=k[0])?void 0:s.brand_sku_mapping_voucher.map(t=>{var n,a;const i=(null==(n=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:n.update.length)>0?e.brand_sku_mapping_voucher.update.find(e=>e.id===t.id):null,r=(null==(a=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:a.delete.length)>0?e.brand_sku_mapping_voucher.delete.find(e=>e===t.id):null;return i?{...t,...i}:r?null:t});(null==(u=null==(l=null==e?void 0:e.brand_sku_mapping_voucher)?void 0:l.create)?void 0:u.length)>0&&e.brand_sku_mapping_voucher.create.forEach(e=>{V.push(e)});V.filter(e=>null!=e).forEach(e=>{const{add_or_reduce_discount:t,denomination:n,quantity:a,actual_discount:i,order_level_discount:r}=e;if(J+=n*a,F+=(n-n*i/100)*a,(i<r||i>r)&&t){L+=(n-n*r/100)*a}else{L+=(n-n*i/100)*a}});const G=F+U,B={...e,total_value:q==K.UPFRONT&&F!=L?L+U:null,original_value:q==K.UPFRONT?G:null,cashback:q!=K.UPFRONT&&F!=L?J-L:q!=K.UPFRONT?J-F:null,previous_cashback:q!=K.UPFRONT&&F!=L?J-F:null,total_value_cashback:q!=K.UPFRONT?J+U:null,total_order_value:q==K.UPFRONT?J:null},z=await Hg(null==B?void 0:B.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:B,id:null==t?void 0:t.keys[0]});if(null==z?void 0:z.error)throw new c(null==z?void 0:z.error);return{...B,...z};case K.SHAKEPECODE:E={...k[0],...e};const Y=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0);let $=0,W=0,H=0;const Q=null==E?void 0:E.commerical,Z=parseFloat((null==E?void 0:E.discount)?E.discount:0),X=parseFloat((null==E?void 0:E.order_level_discount)?null==E?void 0:E.order_level_discount:0),ee=null==(p=k[0])?void 0:p.shakepe_codes_orders.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.shakepe_codes_orders)?void 0:n.update)?void 0:a.length)>0?e.shakepe_codes_orders.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.shakepe_codes_orders)?void 0:i.delete)?void 0:r.length)>0?e.shakepe_codes_orders.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});(null==(h=null==(m=null==e?void 0:e.shakepe_codes_orders)?void 0:m.create)?void 0:h.length)>0&&e.shakepe_codes_orders.create.forEach(e=>{ee.push(e)}),null==ee||ee.map(e=>{const{value_of_code:t,total_no_of_codes:n}=e;$+=t*n,W+=t*n*(Z/100),H+=(X||0==X)&&E.add_or_reduce_discount?t*n*(X/100):t*n*(Z/100)});const te={...e,total_value:Q==K.UPFRONT&&E.add_or_reduce_discount?$-H+Y:null,original_value:Q==K.UPFRONT?$-W+Y:null,cashback:Q!=K.UPFRONT&&E.add_or_reduce_discount?H:W,previous_cashback:Q!=K.UPFRONT&&E.add_or_reduce_discount?W:null,total_value_cashback:Q!=K.UPFRONT?$+Y:null,total_order_value:Q==K.UPFRONT?$:null,payment:"Payment Received"},ne=await Hg(null==te?void 0:te.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:te});if(null==ne?void 0:ne.error)throw new c(null==ne?void 0:ne.error);return{...te,...ne};case K.LINKS:E={...k[0],...e};const ae=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0);let ie=0,re=0,oe=0;const se=null==E?void 0:E.commerical,le=parseFloat((null==E?void 0:E.discount)?E.discount:0),ce=parseFloat((null==E?void 0:E.order_level_discount)?null==E?void 0:E.order_level_discount:0);if((null==E?void 0:E.link_type)==K.GENERIC){const n=null==(y=k[0])?void 0:y.generic_links_details.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.generic_links_details)?void 0:n.update)?void 0:a.length)>0?e.generic_links_details.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.generic_links_details)?void 0:i.delete)?void 0:r.length)>0?e.generic_links_details.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});(null==(v=null==(f=null==e?void 0:e.generic_links_details)?void 0:f.create)?void 0:v.length)>0&&e.generic_links_details.create.forEach(e=>{n.push(e)});n.filter(e=>null!=e).map(e=>{const{denomination:t,quantity:n}=e;ie+=t*n,re+=t*n*(le/100),oe+=E.add_or_reduce_discount?t*n*(ce/100):t*n*(le/100)});const i={...e,total_value:se==K.UPFRONT&&E.add_or_reduce_discount?ie-oe+ae:null,original_value:se==K.UPFRONT?ie-re+ae:null,cashback:se!=K.UPFRONT&&E.add_or_reduce_discount?oe:se!=K.UPFRONT?re:null,previous_cashback:se!=K.UPFRONT&&e.add_or_reduce_discount?re:null,total_value_cashback:se!=K.UPFRONT?ie+ae:null,total_order_value:se==K.UPFRONT?ie:null,payment:"Payment Received"},r=await Hg(null==i?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:i,id:null==t?void 0:t.keys[0]});if(null==r?void 0:r.error)throw new c(null==r?void 0:r.error);return{...i,...r}}if((null==E?void 0:E.link_type)==K.CATALOGUE){let n=0,i=0,r=0;const o=null==(b=k[0])?void 0:b.catalog_links_orders.map(t=>{var n,a,i,r;const o=(null==(a=null==(n=null==e?void 0:e.catalog_links_orders)?void 0:n.update)?void 0:a.length)>0?e.catalog_links_orders.update.find(e=>e.id===t.id):null,s=(null==(r=null==(i=null==e?void 0:e.catalog_links_orders)?void 0:i.delete)?void 0:r.length)>0?e.catalog_links_orders.delete.find(e=>e===t.id):null;return o?{...t,...o}:s?null:t});(null==(_=null==(g=null==e?void 0:e.catalog_links_orders)?void 0:g.create)?void 0:_.length)>0&&e.catalog_links_orders.create.forEach(e=>{o.push(e)});o.filter(e=>null!=e).map(e=>{const{denomination:t,total_no_links:a}=e;n+=t*a,i+=t*a*(E.discount/100),r+=(E.order_level_discount||0==E.order_level_discount)&&(null==E?void 0:E.add_or_reduce_discount)?t*a*(E.order_level_discount/100):t*a*(E.discount/100)});const s={...e,total_value:se==K.UPFRONT&&E.add_or_reduce_discount?n-r+ae:null,original_value:se==K.UPFRONT?n-i+ae:null,cashback:se!=K.UPFRONT&&E.add_or_reduce_discount?r:se!=K.UPFRONT?i:null,previous_cashback:se!=K.UPFRONT&&E.add_or_reduce_discount?i:null,total_value_cashback:se!=K.UPFRONT?n+ae:null,total_order_value:se==K.UPFRONT?n:null},l=await Hg(null==s?void 0:s.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:s,id:null==t?void 0:t.keys[0]});if(null==l?void 0:l.error)throw new c(null==l?void 0:l.error);return{...s,...l}}return e;case K.SHAKEPEPOINT:E={...k[0],...e};const de=parseFloat((null==E?void 0:E.service_amount)&&(null==E?void 0:E.service_fee)?E.service_amount:0),ue=parseFloat((null==E?void 0:E.discount)?E.discount:0),pe=parseFloat((null==E?void 0:E.order_level_discount)?null==E?void 0:E.order_level_discount:0),me=null==E?void 0:E.commerical,he=parseFloat((null==E?void 0:E.load_amount)?E.load_amount:(null==e?void 0:e.load_amount)?null==e?void 0:e.load_amount:0),ye=he-he*ue/100+de;if(pe!=ue&&E.add_or_reduce_discount){const n=he-he*pe/100+de,i=!!E.add_or_reduce_discount||!!(null==e?void 0:e.add_or_reduce_discount),r={...e,total_value:me==K.UPFRONT&&i?n:null,original_value:me==K.UPFRONT?ye:null,cashback:me!=K.UPFRONT&&E.add_or_reduce_discount?he*pe/100:he*ue/100,total_value_cashback:me!=K.UPFRONT?he+de:null,previous_cashback:me!=K.UPFRONT&&E.add_or_reduce_discount?he*ue/100:null,total_order_value:me==K.UPFRONT?he:null,payment:"Payment Received"},o=await Hg(null==r?void 0:r.client,{id:null==t?void 0:t.keys[0],collection:"shakepe_orders",item:"update",schema:d,services:a,data:r});if(null==o?void 0:o.error)throw new c(null==o?void 0:o.error);return{...r,...o}}{const n={...e,original_value:me==K.UPFRONT?ye:null,total_value:null,cashback:me!=K.UPFRONT?he*ue/100:null,total_value_cashback:me!=K.UPFRONT?he+de:null,total_order_value:me==K.UPFRONT?he:null},i=await Hg(null==n?void 0:n.client,{collection:"shakepe_orders",id:null==t?void 0:t.keys[0],item:"update",schema:d,services:a,data:n});if(null==i?void 0:i.error)throw new c(null==i?void 0:i.error);return{...n,...i}}}const w=await wr(a,{id:{_eq:null==t?void 0:t.keys[0]}},K.FIELDSDATA.SHAKEPE_ORDERS,d,"shakepe_orders");"Order Processed"==e.status&&await Hg(null==(x=w[0])?void 0:x.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:{status:e.status},id:null==t?void 0:t.keys[0]})}),t("payment_verify.items.update",async(e,t,n)=>{var i,r;const o={id:{_eq:null==t?void 0:t.keys[0]}},s=await wr(a,o,["corporate_load.client_name"],d,"payment_verify");"verified"==(null==e?void 0:e.status)&&await Hg(null==(r=null==(i=s[0])?void 0:i.corporate_load)?void 0:r.client_name,{collection:"payment_verify",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})}),t("corporate_load.items.update",async(e,t,n)=>{var i,r;const o={id:{_eq:null==t?void 0:t.keys[0]}},s=await wr(a,o,["client_name"],d,"corporate_load");"approved"==e.status?await Hg(null==(i=s[0])?void 0:i.client_name,{collection:"corporate_load",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]}):"cancelled"==e.status&&await Hg(null==(r=s[0])?void 0:r.client_name,{collection:"corporate_load",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})}),t("corporate_load.items.create",async(e,t,n)=>{if("credit"==e.payment_terms){const t=await Hg(null==e?void 0:e.client_name,{collection:"corporate_load",item:"create",schema:d,services:a,data:e});return{...e,...t}}if("payment_gateway"==e.payment_mode){const t=await Hg(null==e?void 0:e.client_name,{collection:"corporate_load",item:"create",schema:d,services:a,data:e});return{...e,...t}}return e}),n("shakepe_orders.items.create",async(e,t,n)=>{var i,r;const o=await wr(a,{id:{_eq:e.key}},["transaction_create"],d,"shakepe_orders");(null==o?void 0:o.length)>0&&(null==(r=null==(i=o[0])?void 0:i.transaction_create)?void 0:r.length)>0&&o[0].transaction_create.map(async n=>{await j({order_id:e.key,order:e.key},"cpp_ledger",a,n,d,null==t?void 0:t.accountability)})}),n("corporate_load.items.create",async(e,t,n)=>{var i,r;const o=await wr(a,{id:{_eq:e.key}},["transaction_create"],d,"corporate_load");(null==o?void 0:o.length)>0&&(null==(r=null==(i=o[0])?void 0:i.transaction_create)?void 0:r.length)>0&&o[0].transaction_create.map(async n=>{await j({load_id:e.key},"cpp_ledger",a,n,d,null==t?void 0:t.accountability)})}),t("shakepe_orders.items.update",async(e,t,n)=>{var i;const r={id:{_eq:null==t?void 0:t.keys[0]}},o=await wr(a,r,["client"],d,"shakepe_orders");"Order Cancelled"==(null==e?void 0:e.status)&&await Hg(null==(i=o[0])?void 0:i.client,{collection:"shakepe_orders",item:"update",schema:d,services:a,data:e,id:null==t?void 0:t.keys[0]})}),t("poc_wallet_transfer.items.create",async e=>{const t=await Hg(null==e?void 0:e.client,{collection:"poc_wallet_transfer",item:"create",schema:d,services:a,data:e});if(null==t?void 0:t.error)throw new c(t.error);return e.amount_utilized=null==t?void 0:t.amount_utilized,e.cpp_ledger=null==t?void 0:t.cpp_ledger,e})};const q_=(e,t)=>{const n=e.map(e=>null==e?void 0:e.toString());return t.filter(e=>{var t;return null==(t=null==e?void 0:e.client_id)?void 0:t.product_type_mapping.every(e=>n.includes(null==e?void 0:e.id.toString()))}).map(e=>{var t;return null==(t=null==e?void 0:e.client_id)?void 0:t.id})},V_=async(t,n,a,i,r)=>{var o,s,l,c,d,u,p,m,h,y,f,v,b,g,_,x,k,E,w,S,I,j,R,T,O,A,C,D,P,N;const M=await wr(n,t,K.FIELDSDATA.PROFOMA_INVOICE_EMAIL,a,"performing_invoice"),F={id:{_eq:e.env.MANAGAMENT_ROLE}},L={id:{_eq:e.env.ACCOUNT_ROLE}},J={id:{_eq:null==r?void 0:r.user}},U={id:{_eq:M[0].poc}},q=await wr(n,J,["first_name"],a,"directus_users"),V=await wr(n,U,["name","wallet"],a,"client_point_of_contact"),G=await wr(n,F,["users.email","users.id"],a,"directus_roles"),B=await wr(n,L,["users.email","users.id"],a,"directus_roles"),z={to:null==(o=G[0])?void 0:o.users.map(e=>e.email),users:null==(s=G[0])?void 0:s.users.map(e=>e.id),cc:null==(l=B[0])?void 0:l.users.map(e=>e.email),subject_data:{poc:V[0],id:null==(c=M[0])?void 0:c.id,sales:q[0].first_name,company:null==(u=null==(d=M[0])?void 0:d.client)?void 0:u.client_name,product_type:null==(p=M[0])?void 0:p.filtering_with_product_type,pi_id:null==(m=M[0])?void 0:m.id,previous_order_value:null==(h=M[0])?void 0:h.original_value,new_order_value:null==(y=M[0])?void 0:y.total_value,order_value:null==(f=M[0])?void 0:f.total_value_cashback,previous_cashback:null==(v=M[0])?void 0:v.previous_cashback,cashback:null==(b=M[0])?void 0:b.cashback,commerical:null==(g=M[0])?void 0:g.commerical,link:e.env.CURRENT_URL+"admin/content/performing_invoice"+(null==(_=M[0])?void 0:_.id)},body_data:{poc:V[0],sales:q[0].first_name,company:null==(k=null==(x=M[0])?void 0:x.client)?void 0:k.client_name,product_type:null==(E=M[0])?void 0:E.filtering_with_product_type,pi_id:null==(w=M[0])?void 0:w.id,previous_order_value:null==(S=M[0])?void 0:S.original_value,new_order_value:null==(I=M[0])?void 0:I.total_value,order_value:null==(j=M[0])?void 0:j.total_value_cashback,previous_cashback:null==(R=M[0])?void 0:R.previous_cashback,cashback:null==(T=M[0])?void 0:T.cashback,commerical:null==(O=M[0])?void 0:O.commerical,link:e.env.CURRENT_URL+"admin/content/performing_invoice"+(null==(A=M[0])?void 0:A.id),previous_discount:null==(C=M[0])?void 0:C.discount,new_discount:null==(D=M[0])?void 0:D.order_level_discount},item:null==(P=M[0])?void 0:P.id};if((null==M?void 0:M.length)>0&&(null==(N=M[0])?void 0:N.changes)&&M[0].changes===K.PIINCREASEDISCOUNT)K.PRODUCTS.find(e=>{var t;return e==(null==(t=M[0])?void 0:t.filtering_with_product_type)}),M[0].commerical,K.CASHBACK,Kr.post(`${e.env.CURRENT_URL}email/sendemail/${f_}`,z).then(e=>e).catch(e=>e),Kr.post(`${e.env.CURRENT_URL}email/notifications/${L_}`,z).then(e=>e).catch(e=>e)};function G_(e,t){const n=new Date(e),a=n.getMonth();n.setMonth(a+t);const i=n.getDate(),r=new Date(n.getFullYear(),n.getMonth()+1,0).getDate();return n.setDate(Math.min(i,r)),n}module.exports=U_;
